
/home/lars/projects/tracking-final/armMeanshiftExec:     file format elf32-littlearm


Disassembly of section .init:

00009c38 <_init>:
    9c38:	push	{lr}		; (str lr, [sp, #-4]!)
    9c3c:	sub	sp, sp, #4
    9c40:	bl	a118 <call_gmon_start>
    9c44:	add	sp, sp, #4
    9c48:	ldmfd	sp!, {pc}

Disassembly of section .plt:

00009c4c <asprintf@plt-0x14>:
    9c4c:	push	{lr}		; (str lr, [sp, #-4]!)
    9c50:	ldr	lr, [pc, #4]	; 9c5c <_init+0x24>
    9c54:	add	lr, pc, lr
    9c58:	ldr	pc, [lr, #8]!
    9c5c:	.word	0x00022eac

00009c60 <asprintf@plt>:
    9c60:	add	ip, pc, #0, 12
    9c64:	add	ip, ip, #139264	; 0x22000
    9c68:	ldr	pc, [ip, #3756]!	; 0xeac

00009c6c <cv::Mat::copySize(cv::Mat const&)@plt>:
    9c6c:	add	ip, pc, #0, 12
    9c70:	add	ip, ip, #139264	; 0x22000
    9c74:	ldr	pc, [ip, #3748]!	; 0xea4

00009c78 <operator new[](unsigned int)@plt>:
    9c78:	add	ip, pc, #0, 12
    9c7c:	add	ip, ip, #139264	; 0x22000
    9c80:	ldr	pc, [ip, #3740]!	; 0xe9c

00009c84 <std::basic_ios<char, std::char_traits<char> >::setstate(std::_Ios_Iostate)@plt>:
    9c84:	add	ip, pc, #0, 12
    9c88:	add	ip, ip, #139264	; 0x22000
    9c8c:	ldr	pc, [ip, #3732]!	; 0xe94

00009c90 <cv::VideoCapture::read(cv::Mat&)@plt>:
    9c90:	add	ip, pc, #0, 12
    9c94:	add	ip, ip, #139264	; 0x22000
    9c98:	ldr	pc, [ip, #3724]!	; 0xe8c

00009c9c <printf@plt>:
    9c9c:	add	ip, pc, #0, 12
    9ca0:	add	ip, ip, #139264	; 0x22000
    9ca4:	ldr	pc, [ip, #3716]!	; 0xe84

00009ca8 <sigaction@plt>:
    9ca8:	add	ip, pc, #0, 12
    9cac:	add	ip, ip, #139264	; 0x22000
    9cb0:	ldr	pc, [ip, #3708]!	; 0xe7c

00009cb4 <std::basic_filebuf<char, std::char_traits<char> >::close()@plt>:
    9cb4:	add	ip, pc, #0, 12
    9cb8:	add	ip, ip, #139264	; 0x22000
    9cbc:	ldr	pc, [ip, #3700]!	; 0xe74

00009cc0 <strncmp@plt>:
    9cc0:	add	ip, pc, #0, 12
    9cc4:	add	ip, ip, #139264	; 0x22000
    9cc8:	ldr	pc, [ip, #3692]!	; 0xe6c

00009ccc <fcntl@plt>:
    9ccc:	add	ip, pc, #0, 12
    9cd0:	add	ip, ip, #139264	; 0x22000
    9cd4:	ldr	pc, [ip, #3684]!	; 0xe64

00009cd8 <std::ostream::operator<<(int)@plt>:
    9cd8:	add	ip, pc, #0, 12
    9cdc:	add	ip, ip, #139264	; 0x22000
    9ce0:	ldr	pc, [ip, #3676]!	; 0xe5c

00009ce4 <std::__throw_bad_cast()@plt>:
    9ce4:	add	ip, pc, #0, 12
    9ce8:	add	ip, ip, #139264	; 0x22000
    9cec:	ldr	pc, [ip, #3668]!	; 0xe54

00009cf0 <std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)@plt>:
    9cf0:	add	ip, pc, #0, 12
    9cf4:	add	ip, ip, #139264	; 0x22000
    9cf8:	ldr	pc, [ip, #3660]!	; 0xe4c

00009cfc <puts@plt>:
    9cfc:	add	ip, pc, #0, 12
    9d00:	add	ip, ip, #139264	; 0x22000
    9d04:	ldr	pc, [ip, #3652]!	; 0xe44

00009d08 <semop@plt>:
    9d08:	add	ip, pc, #0, 12
    9d0c:	add	ip, ip, #139264	; 0x22000
    9d10:	ldr	pc, [ip, #3644]!	; 0xe3c

00009d14 <__libc_start_main@plt>:
    9d14:	add	ip, pc, #0, 12
    9d18:	add	ip, ip, #139264	; 0x22000
    9d1c:	ldr	pc, [ip, #3636]!	; 0xe34

00009d20 <__gmon_start__@plt>:
    9d20:	add	ip, pc, #0, 12
    9d24:	add	ip, ip, #139264	; 0x22000
    9d28:	ldr	pc, [ip, #3628]!	; 0xe2c

00009d2c <cv::VideoWriter::operator<<(cv::Mat const&)@plt>:
    9d2c:	add	ip, pc, #0, 12
    9d30:	add	ip, ip, #139264	; 0x22000
    9d34:	ldr	pc, [ip, #3620]!	; 0xe24

00009d38 <__errno_location@plt>:
    9d38:	add	ip, pc, #0, 12
    9d3c:	add	ip, ip, #139264	; 0x22000
    9d40:	ldr	pc, [ip, #3612]!	; 0xe1c

00009d44 <sigfillset@plt>:
    9d44:	add	ip, pc, #0, 12
    9d48:	add	ip, ip, #139264	; 0x22000
    9d4c:	ldr	pc, [ip, #3604]!	; 0xe14

00009d50 <sigemptyset@plt>:
    9d50:	add	ip, pc, #0, 12
    9d54:	add	ip, ip, #139264	; 0x22000
    9d58:	ldr	pc, [ip, #3596]!	; 0xe0c

00009d5c <getpagesize@plt>:
    9d5c:	add	ip, pc, #0, 12
    9d60:	add	ip, ip, #139264	; 0x22000
    9d64:	ldr	pc, [ip, #3588]!	; 0xe04

00009d68 <clock_gettime@plt>:
    9d68:	add	ip, pc, #0, 12
    9d6c:	add	ip, ip, #139264	; 0x22000
    9d70:	ldr	pc, [ip, #3580]!	; 0xdfc

00009d74 <semctl@plt>:
    9d74:	add	ip, pc, #0, 12
    9d78:	add	ip, ip, #139264	; 0x22000
    9d7c:	ldr	pc, [ip, #3572]!	; 0xdf4

00009d80 <std::ostream::flush()@plt>:
    9d80:	add	ip, pc, #0, 12
    9d84:	add	ip, ip, #139264	; 0x22000
    9d88:	ldr	pc, [ip, #3564]!	; 0xdec

00009d8c <cv::Mat::deallocate()@plt>:
    9d8c:	add	ip, pc, #0, 12
    9d90:	add	ip, ip, #139264	; 0x22000
    9d94:	ldr	pc, [ip, #3556]!	; 0xde4

00009d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>:
    9d98:	add	ip, pc, #0, 12
    9d9c:	add	ip, ip, #139264	; 0x22000
    9da0:	ldr	pc, [ip, #3548]!	; 0xddc

00009da4 <std::__basic_file<char>::~__basic_file()@plt>:
    9da4:	add	ip, pc, #0, 12
    9da8:	add	ip, ip, #139264	; 0x22000
    9dac:	ldr	pc, [ip, #3540]!	; 0xdd4

00009db0 <std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()@plt>:
    9db0:	add	ip, pc, #0, 12
    9db4:	add	ip, ip, #139264	; 0x22000
    9db8:	ldr	pc, [ip, #3532]!	; 0xdcc

00009dbc <sem_post@plt>:
    9dbc:	add	ip, pc, #0, 12
    9dc0:	add	ip, ip, #139264	; 0x22000
    9dc4:	ldr	pc, [ip, #3524]!	; 0xdc4

00009dc8 <free@plt>:
    9dc8:	add	ip, pc, #0, 12
    9dcc:	add	ip, ip, #139264	; 0x22000
    9dd0:	ldr	pc, [ip, #3516]!	; 0xdbc

00009dd4 <std::ostream::put(char)@plt>:
    9dd4:	add	ip, pc, #0, 12
    9dd8:	add	ip, ip, #139264	; 0x22000
    9ddc:	ldr	pc, [ip, #3508]!	; 0xdb4

00009de0 <close@plt>:
    9de0:	add	ip, pc, #0, 12
    9de4:	add	ip, ip, #139264	; 0x22000
    9de8:	ldr	pc, [ip, #3500]!	; 0xdac

00009dec <memcpy@plt>:
    9dec:	add	ip, pc, #0, 12
    9df0:	add	ip, ip, #139264	; 0x22000
    9df4:	ldr	pc, [ip, #3492]!	; 0xda4

00009df8 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>:
    9df8:	add	ip, pc, #0, 12
    9dfc:	add	ip, ip, #139264	; 0x22000
    9e00:	ldr	pc, [ip, #3484]!	; 0xd9c

00009e04 <strncpy@plt>:
    9e04:	add	ip, pc, #0, 12
    9e08:	add	ip, ip, #139264	; 0x22000
    9e0c:	ldr	pc, [ip, #3476]!	; 0xd94

00009e10 <__gxx_personality_v0@plt>:
    9e10:	add	ip, pc, #0, 12
    9e14:	add	ip, ip, #139264	; 0x22000
    9e18:	ldr	pc, [ip, #3468]!	; 0xd8c

00009e1c <open@plt>:
    9e1c:	add	ip, pc, #0, 12
    9e20:	add	ip, ip, #139264	; 0x22000
    9e24:	ldr	pc, [ip, #3460]!	; 0xd84

00009e28 <std::ios_base::Init::~Init()@plt>:
    9e28:	add	ip, pc, #0, 12
    9e2c:	add	ip, ip, #139264	; 0x22000
    9e30:	ldr	pc, [ip, #3452]!	; 0xd7c

00009e34 <cv::VideoCapture::VideoCapture(std::string const&)@plt>:
    9e34:	add	ip, pc, #0, 12
    9e38:	add	ip, ip, #139264	; 0x22000
    9e3c:	ldr	pc, [ip, #3444]!	; 0xd74

00009e40 <sem_wait@plt>:
    9e40:	add	ip, pc, #0, 12
    9e44:	add	ip, ip, #139264	; 0x22000
    9e48:	ldr	pc, [ip, #3436]!	; 0xd6c

00009e4c <gettimeofday@plt>:
    9e4c:	add	ip, pc, #0, 12
    9e50:	add	ip, ip, #139264	; 0x22000
    9e54:	ldr	pc, [ip, #3428]!	; 0xd64

00009e58 <pthread_join@plt>:
    9e58:	add	ip, pc, #0, 12
    9e5c:	add	ip, ip, #139264	; 0x22000
    9e60:	ldr	pc, [ip, #3420]!	; 0xd5c

00009e64 <sched_yield@plt>:
    9e64:	add	ip, pc, #0, 12
    9e68:	add	ip, ip, #139264	; 0x22000
    9e6c:	ldr	pc, [ip, #3412]!	; 0xd54

00009e70 <std::ios_base::~ios_base()@plt>:
    9e70:	add	ip, pc, #0, 12
    9e74:	add	ip, ip, #139264	; 0x22000
    9e78:	ldr	pc, [ip, #3404]!	; 0xd4c

00009e7c <malloc@plt>:
    9e7c:	add	ip, pc, #0, 12
    9e80:	add	ip, ip, #139264	; 0x22000
    9e84:	ldr	pc, [ip, #3396]!	; 0xd44

00009e88 <mmap@plt>:
    9e88:	add	ip, pc, #0, 12
    9e8c:	add	ip, ip, #139264	; 0x22000
    9e90:	ldr	pc, [ip, #3388]!	; 0xd3c

00009e94 <cv::rectangle(cv::Mat&, cv::Rect_<int>, cv::Scalar_<double> const&, int, int, int)@plt>:
    9e94:	add	ip, pc, #0, 12
    9e98:	add	ip, ip, #139264	; 0x22000
    9e9c:	ldr	pc, [ip, #3380]!	; 0xd34

00009ea0 <cv::VideoWriter::~VideoWriter()@plt>:
    9ea0:	add	ip, pc, #0, 12
    9ea4:	add	ip, ip, #139264	; 0x22000
    9ea8:	ldr	pc, [ip, #3372]!	; 0xd2c

00009eac <cv::VideoCapture::~VideoCapture()@plt>:
    9eac:	add	ip, pc, #0, 12
    9eb0:	add	ip, ip, #139264	; 0x22000
    9eb4:	ldr	pc, [ip, #3364]!	; 0xd24

00009eb8 <pthread_sigmask@plt>:
    9eb8:	add	ip, pc, #0, 12
    9ebc:	add	ip, ip, #139264	; 0x22000
    9ec0:	ldr	pc, [ip, #3356]!	; 0xd1c

00009ec4 <strlen@plt>:
    9ec4:	add	ip, pc, #0, 12
    9ec8:	add	ip, ip, #139264	; 0x22000
    9ecc:	ldr	pc, [ip, #3348]!	; 0xd14

00009ed0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>:
    9ed0:	add	ip, pc, #0, 12
    9ed4:	add	ip, ip, #139264	; 0x22000
    9ed8:	ldr	pc, [ip, #3340]!	; 0xd0c

00009edc <std::basic_ofstream<char, std::char_traits<char> >::~basic_ofstream()@plt>:
    9edc:	add	ip, pc, #0, 12
    9ee0:	add	ip, ip, #139264	; 0x22000
    9ee4:	ldr	pc, [ip, #3332]!	; 0xd04

00009ee8 <getpid@plt>:
    9ee8:	add	ip, pc, #0, 12
    9eec:	add	ip, ip, #139264	; 0x22000
    9ef0:	ldr	pc, [ip, #3324]!	; 0xcfc

00009ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>:
    9ef4:	add	ip, pc, #0, 12
    9ef8:	add	ip, ip, #139264	; 0x22000
    9efc:	ldr	pc, [ip, #3316]!	; 0xcf4

00009f00 <std::basic_filebuf<char, std::char_traits<char> >::basic_filebuf()@plt>:
    9f00:	add	ip, pc, #0, 12
    9f04:	add	ip, ip, #139264	; 0x22000
    9f08:	ldr	pc, [ip, #3308]!	; 0xcec

00009f0c <munmap@plt>:
    9f0c:	add	ip, pc, #0, 12
    9f10:	add	ip, ip, #139264	; 0x22000
    9f14:	ldr	pc, [ip, #3300]!	; 0xce4

00009f18 <perror@plt>:
    9f18:	add	ip, pc, #0, 12
    9f1c:	add	ip, ip, #139264	; 0x22000
    9f20:	ldr	pc, [ip, #3292]!	; 0xcdc

00009f24 <std::basic_filebuf<char, std::char_traits<char> >::~basic_filebuf()@plt>:
    9f24:	add	ip, pc, #0, 12
    9f28:	add	ip, ip, #139264	; 0x22000
    9f2c:	ldr	pc, [ip, #3284]!	; 0xcd4

00009f30 <cv::VideoWriter::VideoWriter(std::string const&, int, double, cv::Size_<int>, bool)@plt>:
    9f30:	add	ip, pc, #0, 12
    9f34:	add	ip, ip, #139264	; 0x22000
    9f38:	ldr	pc, [ip, #3276]!	; 0xccc

00009f3c <strcmp@plt>:
    9f3c:	add	ip, pc, #0, 12
    9f40:	add	ip, ip, #139264	; 0x22000
    9f44:	ldr	pc, [ip, #3268]!	; 0xcc4

00009f48 <memcmp@plt>:
    9f48:	add	ip, pc, #0, 12
    9f4c:	add	ip, ip, #139264	; 0x22000
    9f50:	ldr	pc, [ip, #3260]!	; 0xcbc

00009f54 <pthread_cancel@plt>:
    9f54:	add	ip, pc, #0, 12
    9f58:	add	ip, ip, #139264	; 0x22000
    9f5c:	ldr	pc, [ip, #3252]!	; 0xcb4

00009f60 <cv::fastFree(void*)@plt>:
    9f60:	add	ip, pc, #0, 12
    9f64:	add	ip, ip, #139264	; 0x22000
    9f68:	ldr	pc, [ip, #3244]!	; 0xcac

00009f6c <memset@plt>:
    9f6c:	add	ip, pc, #0, 12
    9f70:	add	ip, ip, #139264	; 0x22000
    9f74:	ldr	pc, [ip, #3236]!	; 0xca4

00009f78 <std::basic_filebuf<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode)@plt>:
    9f78:	add	ip, pc, #0, 12
    9f7c:	add	ip, ip, #139264	; 0x22000
    9f80:	ldr	pc, [ip, #3228]!	; 0xc9c

00009f84 <__cxa_end_cleanup@plt>:
    9f84:	add	ip, pc, #0, 12
    9f88:	add	ip, ip, #139264	; 0x22000
    9f8c:	ldr	pc, [ip, #3220]!	; 0xc94

00009f90 <std::string::_Rep::_M_destroy(std::allocator<char> const&)@plt>:
    9f90:	add	ip, pc, #0, 12
    9f94:	add	ip, ip, #139264	; 0x22000
    9f98:	ldr	pc, [ip, #3212]!	; 0xc8c

00009f9c <std::ios_base::ios_base()@plt>:
    9f9c:	add	ip, pc, #0, 12
    9fa0:	add	ip, ip, #139264	; 0x22000
    9fa4:	ldr	pc, [ip, #3204]!	; 0xc84

00009fa8 <std::locale::~locale()@plt>:
    9fa8:	add	ip, pc, #0, 12
    9fac:	add	ip, ip, #139264	; 0x22000
    9fb0:	ldr	pc, [ip, #3196]!	; 0xc7c

00009fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>:
    9fb4:	add	ip, pc, #0, 12
    9fb8:	add	ip, ip, #139264	; 0x22000
    9fbc:	ldr	pc, [ip, #3188]!	; 0xc74

00009fc0 <std::ios_base::Init::Init()@plt>:
    9fc0:	add	ip, pc, #0, 12
    9fc4:	add	ip, ip, #139264	; 0x22000
    9fc8:	ldr	pc, [ip, #3180]!	; 0xc6c

00009fcc <std::basic_ios<char, std::char_traits<char> >::~basic_ios()@plt>:
    9fcc:	add	ip, pc, #0, 12
    9fd0:	add	ip, ip, #139264	; 0x22000
    9fd4:	ldr	pc, [ip, #3172]!	; 0xc64

00009fd8 <cv::Mat::create(int, int const*, int)@plt>:
    9fd8:	add	ip, pc, #0, 12
    9fdc:	add	ip, ip, #139264	; 0x22000
    9fe0:	ldr	pc, [ip, #3164]!	; 0xc5c

00009fe4 <sem_init@plt>:
    9fe4:	add	ip, pc, #0, 12
    9fe8:	add	ip, ip, #139264	; 0x22000
    9fec:	ldr	pc, [ip, #3156]!	; 0xc54

00009ff0 <__cxa_atexit@plt>:
    9ff0:	add	ip, pc, #0, 12
    9ff4:	add	ip, ip, #139264	; 0x22000
    9ff8:	ldr	pc, [ip, #3148]!	; 0xc4c

00009ffc <pthread_create@plt>:
    9ffc:	add	ip, pc, #0, 12
    a000:	add	ip, ip, #139264	; 0x22000
    a004:	ldr	pc, [ip, #3140]!	; 0xc44

0000a008 <abort@plt>:
    a008:	add	ip, pc, #0, 12
    a00c:	add	ip, ip, #139264	; 0x22000
    a010:	ldr	pc, [ip, #3132]!	; 0xc3c

0000a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>:
    a014:	add	ip, pc, #0, 12
    a018:	add	ip, ip, #139264	; 0x22000
    a01c:	ldr	pc, [ip, #3124]!	; 0xc34

0000a020 <cv::Mat::operator=(cv::Scalar_<double> const&)@plt>:
    a020:	add	ip, pc, #0, 12
    a024:	add	ip, ip, #139264	; 0x22000
    a028:	ldr	pc, [ip, #3116]!	; 0xc2c

0000a02c <exit@plt>:
    a02c:	add	ip, pc, #0, 12
    a030:	add	ip, ip, #139264	; 0x22000
    a034:	ldr	pc, [ip, #3108]!	; 0xc24

0000a038 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@plt>:
    a038:	add	ip, pc, #0, 12
    a03c:	add	ip, ip, #139264	; 0x22000
    a040:	ldr	pc, [ip, #3100]!	; 0xc1c

0000a044 <calloc@plt>:
    a044:	add	ip, pc, #0, 12
    a048:	add	ip, ip, #139264	; 0x22000
    a04c:	ldr	pc, [ip, #3092]!	; 0xc14

0000a050 <ftok@plt>:
    a050:	add	ip, pc, #0, 12
    a054:	add	ip, ip, #139264	; 0x22000
    a058:	ldr	pc, [ip, #3084]!	; 0xc0c

0000a05c <__aeabi_uidivmod@plt>:
    a05c:	add	ip, pc, #0, 12
    a060:	add	ip, ip, #139264	; 0x22000
    a064:	ldr	pc, [ip, #3076]!	; 0xc04

0000a068 <cv::VideoCapture::VideoCapture()@plt>:
    a068:	add	ip, pc, #0, 12
    a06c:	add	ip, ip, #139264	; 0x22000
    a070:	ldr	pc, [ip, #3068]!	; 0xbfc

0000a074 <read@plt>:
    a074:	add	ip, pc, #0, 12
    a078:	add	ip, ip, #139264	; 0x22000
    a07c:	ldr	pc, [ip, #3060]!	; 0xbf4

0000a080 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@plt>:
    a080:	add	ip, pc, #0, 12
    a084:	add	ip, ip, #139264	; 0x22000
    a088:	ldr	pc, [ip, #3052]!	; 0xbec

0000a08c <__aeabi_atexit@plt>:
    a08c:	add	ip, pc, #0, 12
    a090:	add	ip, ip, #139264	; 0x22000
    a094:	ldr	pc, [ip, #3044]!	; 0xbe4

0000a098 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)@plt>:
    a098:	add	ip, pc, #0, 12
    a09c:	add	ip, ip, #139264	; 0x22000
    a0a0:	ldr	pc, [ip, #3036]!	; 0xbdc

0000a0a4 <semget@plt>:
    a0a4:	add	ip, pc, #0, 12
    a0a8:	add	ip, ip, #139264	; 0x22000
    a0ac:	ldr	pc, [ip, #3028]!	; 0xbd4

0000a0b0 <cv::Ptr<CvCapture>::delete_obj()@plt>:
    a0b0:	add	ip, pc, #0, 12
    a0b4:	add	ip, ip, #139264	; 0x22000
    a0b8:	ldr	pc, [ip, #3020]!	; 0xbcc

0000a0bc <ioctl@plt>:
    a0bc:	add	ip, pc, #0, 12
    a0c0:	add	ip, ip, #139264	; 0x22000
    a0c4:	ldr	pc, [ip, #3012]!	; 0xbc4

0000a0c8 <nanosleep@plt>:
    a0c8:	add	ip, pc, #0, 12
    a0cc:	add	ip, ip, #139264	; 0x22000
    a0d0:	ldr	pc, [ip, #3004]!	; 0xbbc

Disassembly of section .text:

0000a0e0 <_start>:
    a0e0:	ldr	ip, [pc, #36]	; a10c <_start+0x2c>
    a0e4:	mov	fp, #0
    a0e8:	pop	{r1}		; (ldr r1, [sp], #4)
    a0ec:	mov	r2, sp
    a0f0:	push	{r2}		; (str r2, [sp, #-4]!)
    a0f4:	push	{r0}		; (str r0, [sp, #-4]!)
    a0f8:	ldr	r0, [pc, #16]	; a110 <_start+0x30>
    a0fc:	ldr	r3, [pc, #16]	; a114 <_start+0x34>
    a100:	push	{ip}		; (str ip, [sp, #-4]!)
    a104:	bl	9d14 <__libc_start_main@plt>
    a108:	bl	a008 <abort@plt>
    a10c:	.word	0x00022f1c
    a110:	.word	0x0000d830
    a114:	.word	0x00022f20

0000a118 <call_gmon_start>:
    a118:	ldr	r3, [pc, #20]	; a134 <call_gmon_start+0x1c>
    a11c:	ldr	r2, [pc, #20]	; a138 <call_gmon_start+0x20>
    a120:	add	r3, pc, r3
    a124:	ldr	r1, [r3, r2]
    a128:	cmp	r1, #0
    a12c:	bxeq	lr
    a130:	b	9d20 <__gmon_start__@plt>
    a134:	.word	0x000229e0
    a138:	.word	0x00000188

0000a13c <__do_global_dtors_aux>:
    a13c:	ldr	r2, [pc, #16]	; a154 <__do_global_dtors_aux+0x18>
    a140:	ldrb	r3, [r2]
    a144:	cmp	r3, #0
    a148:	moveq	r3, #1
    a14c:	strbeq	r3, [r2]
    a150:	bx	lr
    a154:	.word	0x0002d3b8

0000a158 <frame_dummy>:
    a158:	ldr	r0, [pc, #32]	; a180 <frame_dummy+0x28>
    a15c:	push	{r4, lr}
    a160:	ldr	r3, [r0]
    a164:	cmp	r3, #0
    a168:	popeq	{r4, pc}
    a16c:	ldr	r3, [pc, #16]	; a184 <frame_dummy+0x2c>
    a170:	cmp	r3, #0
    a174:	popeq	{r4, pc}
    a178:	blx	r3
    a17c:	pop	{r4, pc}
    a180:	.word	0x0002c99c
	...

0000a190 <pool_notify_Delete(unsigned char, bufferInit)>:
    a190:	mov	ip, sp
    a194:	sub	sp, sp, #16
    a198:	push	{r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}
    a19c:	sub	fp, ip, #20
    a1a0:	add	ip, fp, #8
    a1a4:	sub	sp, sp, #8
    a1a8:	mov	r7, r0
    a1ac:	stm	ip, {r1, r2, r3}
    a1b0:	ldr	sl, [fp, #28]
    a1b4:	ldr	r8, [fp, #32]
    a1b8:	ldr	r6, [fp, #12]
    a1bc:	bl	199c8 <PROC_stop>
    a1c0:	sub	r3, r0, #32768	; 0x8000
    a1c4:	cmp	r3, #1280	; 0x500
    a1c8:	bhi	a2c0 <pool_notify_Delete(unsigned char, bufferInit)+0x130>
    a1cc:	mov	ip, #0
    a1d0:	mov	r0, r7
    a1d4:	mov	r1, ip
    a1d8:	mov	r2, #5
    a1dc:	movw	r3, #42096	; 0xa470
    a1e0:	movt	r3, #0
    a1e4:	str	ip, [sp]
    a1e8:	bl	16d70 <NOTIFY_unregister>
    a1ec:	sub	r3, r0, #32768	; 0x8000
    a1f0:	cmp	r3, #1280	; 0x500
    a1f4:	bhi	a360 <pool_notify_Delete(unsigned char, bufferInit)+0x1d0>
    a1f8:	lsl	r5, r7, #8
    a1fc:	movw	r4, #54204	; 0xd3bc
    a200:	movt	r4, #2
    a204:	mov	r2, r6
    a208:	mov	r0, r5
    a20c:	ldr	r1, [r4]
    a210:	bl	17c6c <POOL_free>
    a214:	sub	r3, r0, #32768	; 0x8000
    a218:	cmp	r3, #1280	; 0x500
    a21c:	bhi	a450 <pool_notify_Delete(unsigned char, bufferInit)+0x2c0>
    a220:	mov	r2, sl
    a224:	mov	r0, r5
    a228:	ldr	r1, [r4, #4]
    a22c:	bl	17c6c <POOL_free>
    a230:	sub	r3, r0, #32768	; 0x8000
    a234:	cmp	r3, #1280	; 0x500
    a238:	bhi	a430 <pool_notify_Delete(unsigned char, bufferInit)+0x2a0>
    a23c:	mov	r0, r5
    a240:	ldr	r1, [r4, #8]
    a244:	mov	r2, r8
    a248:	bl	17c6c <POOL_free>
    a24c:	sub	r3, r0, #32768	; 0x8000
    a250:	cmp	r3, #1280	; 0x500
    a254:	bhi	a410 <pool_notify_Delete(unsigned char, bufferInit)+0x280>
    a258:	ldr	r1, [r4, #12]
    a25c:	mov	r2, r8
    a260:	mov	r0, r5
    a264:	bl	17c6c <POOL_free>
    a268:	sub	r3, r0, #32768	; 0x8000
    a26c:	cmp	r3, #1280	; 0x500
    a270:	bhi	a3f0 <pool_notify_Delete(unsigned char, bufferInit)+0x260>
    a274:	mov	r0, r5
    a278:	bl	179dc <POOL_close>
    a27c:	sub	r3, r0, #32768	; 0x8000
    a280:	cmp	r3, #1280	; 0x500
    a284:	bhi	a3d0 <pool_notify_Delete(unsigned char, bufferInit)+0x240>
    a288:	mov	r0, r7
    a28c:	bl	18dc0 <PROC_detach>
    a290:	sub	r3, r0, #32768	; 0x8000
    a294:	cmp	r3, #1280	; 0x500
    a298:	bhi	a3b0 <pool_notify_Delete(unsigned char, bufferInit)+0x220>
    a29c:	bl	18468 <PROC_destroy>
    a2a0:	sub	r3, r0, #32768	; 0x8000
    a2a4:	cmp	r3, #1280	; 0x500
    a2a8:	bhi	a390 <pool_notify_Delete(unsigned char, bufferInit)+0x200>
    a2ac:	sub	sp, fp, #36	; 0x24
    a2b0:	ldm	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}
    a2b4:	nop	{0}
    a2b8:	nop	{0}
    a2bc:	nop	{0}
    a2c0:	mov	r1, r0
    a2c4:	movw	r0, #12264	; 0x2fe8
    a2c8:	movt	r0, #2
    a2cc:	lsl	r5, r7, #8
    a2d0:	bl	9c9c <printf@plt>
    a2d4:	movw	r4, #54204	; 0xd3bc
    a2d8:	mov	ip, #0
    a2dc:	movt	r4, #2
    a2e0:	mov	r1, ip
    a2e4:	mov	r2, #5
    a2e8:	mov	r0, r7
    a2ec:	movw	r3, #42096	; 0xa470
    a2f0:	movt	r3, #0
    a2f4:	str	ip, [sp]
    a2f8:	bl	16d70 <NOTIFY_unregister>
    a2fc:	mov	r2, r6
    a300:	mov	r0, r5
    a304:	ldr	r1, [r4]
    a308:	bl	17c6c <POOL_free>
    a30c:	mov	r2, sl
    a310:	mov	r0, r5
    a314:	ldr	r1, [r4, #4]
    a318:	bl	17c6c <POOL_free>
    a31c:	mov	r0, r5
    a320:	ldr	r1, [r4, #8]
    a324:	mov	r2, r8
    a328:	bl	17c6c <POOL_free>
    a32c:	ldr	r1, [r4, #12]
    a330:	mov	r2, r8
    a334:	mov	r0, r5
    a338:	bl	17c6c <POOL_free>
    a33c:	mov	r0, r5
    a340:	bl	179dc <POOL_close>
    a344:	mov	r0, r7
    a348:	bl	18dc0 <PROC_detach>
    a34c:	sub	sp, fp, #36	; 0x24
    a350:	ldm	sp, {r4, r5, r6, r7, r8, sl, fp, sp, lr}
    a354:	b	18468 <PROC_destroy>
    a358:	nop	{0}
    a35c:	nop	{0}
    a360:	lsl	r5, r7, #8
    a364:	movw	r4, #54204	; 0xd3bc
    a368:	movt	r4, #2
    a36c:	mov	r1, r0
    a370:	movw	r0, #12304	; 0x3010
    a374:	movt	r0, #2
    a378:	bl	9c9c <printf@plt>
    a37c:	mov	r2, r6
    a380:	mov	r0, r5
    a384:	ldr	r1, [r4]
    a388:	bl	17c6c <POOL_free>
    a38c:	b	a30c <pool_notify_Delete(unsigned char, bufferInit)+0x17c>
    a390:	mov	r1, r0
    a394:	movw	r0, #12648	; 0x3168
    a398:	movt	r0, #2
    a39c:	sub	sp, fp, #36	; 0x24
    a3a0:	ldm	sp, {r4, r5, r6, r7, r8, sl, fp, sp, lr}
    a3a4:	b	9c9c <printf@plt>
    a3a8:	nop	{0}
    a3ac:	nop	{0}
    a3b0:	mov	r1, r0
    a3b4:	movw	r0, #12608	; 0x3140
    a3b8:	movt	r0, #2
    a3bc:	bl	9c9c <printf@plt>
    a3c0:	b	a34c <pool_notify_Delete(unsigned char, bufferInit)+0x1bc>
    a3c4:	nop	{0}
    a3c8:	nop	{0}
    a3cc:	nop	{0}
    a3d0:	mov	r1, r0
    a3d4:	movw	r0, #12568	; 0x3118
    a3d8:	movt	r0, #2
    a3dc:	bl	9c9c <printf@plt>
    a3e0:	b	a344 <pool_notify_Delete(unsigned char, bufferInit)+0x1b4>
    a3e4:	nop	{0}
    a3e8:	nop	{0}
    a3ec:	nop	{0}
    a3f0:	mov	r1, r0
    a3f4:	movw	r0, #12512	; 0x30e0
    a3f8:	movt	r0, #2
    a3fc:	bl	9c9c <printf@plt>
    a400:	b	a33c <pool_notify_Delete(unsigned char, bufferInit)+0x1ac>
    a404:	nop	{0}
    a408:	nop	{0}
    a40c:	nop	{0}
    a410:	mov	r1, r0
    a414:	movw	r0, #12460	; 0x30ac
    a418:	movt	r0, #2
    a41c:	bl	9c9c <printf@plt>
    a420:	b	a32c <pool_notify_Delete(unsigned char, bufferInit)+0x19c>
    a424:	nop	{0}
    a428:	nop	{0}
    a42c:	nop	{0}
    a430:	mov	r1, r0
    a434:	movw	r0, #12404	; 0x3074
    a438:	movt	r0, #2
    a43c:	bl	9c9c <printf@plt>
    a440:	b	a31c <pool_notify_Delete(unsigned char, bufferInit)+0x18c>
    a444:	nop	{0}
    a448:	nop	{0}
    a44c:	nop	{0}
    a450:	mov	r1, r0
    a454:	movw	r0, #12352	; 0x3040
    a458:	movt	r0, #2
    a45c:	bl	9c9c <printf@plt>
    a460:	b	a30c <pool_notify_Delete(unsigned char, bufferInit)+0x17c>
    a464:	nop	{0}
    a468:	nop	{0}
    a46c:	nop	{0}

0000a470 <pool_notify_Notify(unsigned long, void*, void*)>:
    a470:	cmp	r2, #0
    a474:	mov	ip, sp
    a478:	push	{fp, ip, lr, pc}
    a47c:	sub	fp, ip, #4
    a480:	ldmne	sp, {fp, sp, pc}
    a484:	ldr	r0, [pc, #4]	; a490 <pool_notify_Notify(unsigned long, void*, void*)+0x20>
    a488:	ldm	sp, {fp, sp, lr}
    a48c:	b	9dbc <sem_post@plt>
    a490:	.word	0x0002d3cc
    a494:	nop	{0}
    a498:	nop	{0}
    a49c:	nop	{0}

0000a4a0 <pool_notify_Wait()>:
    a4a0:	mov	ip, sp
    a4a4:	ldr	r0, [pc, #16]	; a4bc <pool_notify_Wait()+0x1c>
    a4a8:	push	{fp, ip, lr, pc}
    a4ac:	sub	fp, ip, #4
    a4b0:	bl	9e40 <sem_wait@plt>
    a4b4:	mov	r0, #32768	; 0x8000
    a4b8:	ldm	sp, {fp, sp, pc}
    a4bc:	.word	0x0002d3cc

0000a4c0 <pool_notify_Execute(unsigned char)>:
    a4c0:	mov	r3, r0
    a4c4:	mov	r0, #0
    a4c8:	mov	ip, sp
    a4cc:	mov	r1, r0
    a4d0:	push	{fp, ip, lr, pc}
    a4d4:	mov	r2, #5
    a4d8:	sub	fp, ip, #4
    a4dc:	bl	16f14 <NOTIFY_notify>
    a4e0:	mov	r0, #32768	; 0x8000
    a4e4:	ldm	sp, {fp, sp, pc}
    a4e8:	nop	{0}
    a4ec:	nop	{0}

0000a4f0 <get_usec()>:
    a4f0:	mov	ip, sp
    a4f4:	mov	r1, #0
    a4f8:	push	{fp, ip, lr, pc}
    a4fc:	sub	fp, ip, #4
    a500:	sub	sp, sp, #8
    a504:	sub	r0, fp, #20
    a508:	bl	9e4c <gettimeofday@plt>
    a50c:	ldr	r0, [fp, #-16]
    a510:	ldr	r1, [fp, #-20]	; 0xffffffec
    a514:	movw	r2, #16960	; 0x4240
    a518:	movt	r2, #15
    a51c:	mla	r2, r1, r2, r0
    a520:	asr	r3, r2, #31
    a524:	mov	r1, r3
    a528:	mov	r0, r2
    a52c:	sub	sp, fp, #12
    a530:	ldm	sp, {fp, sp, pc}
    a534:	nop	{0}
    a538:	nop	{0}
    a53c:	nop	{0}

0000a540 <pool_notify_Create(char*, bufferInit, unsigned char, char*)>:
    a540:	mov	ip, sp
    a544:	sub	sp, sp, #16
    a548:	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
    a54c:	sub	fp, ip, #20
    a550:	sub	sp, sp, #84	; 0x54
    a554:	add	ip, fp, #8
    a558:	movw	lr, #12248	; 0x2fd8
    a55c:	movt	lr, #2
    a560:	str	r0, [fp, #-116]	; 0xffffff8c
    a564:	stm	ip, {r1, r2, r3}
    a568:	sub	r6, fp, #76	; 0x4c
    a56c:	ldm	lr, {r0, r1, r2}
    a570:	mov	r4, #0
    a574:	movw	r5, #54204	; 0xd3bc
    a578:	movt	r5, #2
    a57c:	str	r4, [fp, #-48]	; 0xffffffd0
    a580:	str	r4, [fp, #-52]	; 0xffffffcc
    a584:	stm	r6, {r0, r1, r2}
    a588:	ldr	r3, [fp, #28]
    a58c:	mov	r1, r4
    a590:	mov	r2, r4
    a594:	add	r0, r5, #16
    a598:	str	r4, [fp, #-56]	; 0xffffffc8
    a59c:	str	r3, [fp, #-112]	; 0xffffff90
    a5a0:	str	r4, [fp, #-60]	; 0xffffffc4
    a5a4:	ldrb	r7, [fp, #36]	; 0x24
    a5a8:	ldr	sl, [fp, #12]
    a5ac:	ldr	r9, [fp, #32]
    a5b0:	bl	9fe4 <sem_init@plt>
    a5b4:	mov	r0, r4
    a5b8:	bl	18058 <PROC_setup>
    a5bc:	sub	r3, r0, #32768	; 0x8000
    a5c0:	cmp	r3, #1280	; 0x500
    a5c4:	bhi	a840 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x300>
    a5c8:	mov	r0, r7
    a5cc:	mov	r1, r4
    a5d0:	bl	1884c <PROC_attach>
    a5d4:	sub	r3, r0, #32768	; 0x8000
    a5d8:	cmp	r3, #1280	; 0x500
    a5dc:	bhi	a900 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x3c0>
    a5e0:	ldr	r2, [fp, #-112]	; 0xffffff90
    a5e4:	lsl	r8, r7, #8
    a5e8:	sub	r1, fp, #104	; 0x68
    a5ec:	sub	r3, fp, #88	; 0x58
    a5f0:	mov	r0, r8
    a5f4:	str	r6, [fp, #-96]	; 0xffffffa0
    a5f8:	str	r3, [fp, #-100]	; 0xffffff9c
    a5fc:	mov	r6, #3
    a600:	str	sl, [fp, #-88]	; 0xffffffa8
    a604:	str	r2, [fp, #-84]	; 0xffffffac
    a608:	str	r9, [fp, #-80]	; 0xffffffb0
    a60c:	str	r6, [fp, #-104]	; 0xffffff98
    a610:	strh	r4, [fp, #-92]	; 0xffffffa4
    a614:	bl	177a4 <POOL_open>
    a618:	sub	r3, r0, #32768	; 0x8000
    a61c:	cmp	r3, #1280	; 0x500
    a620:	bhi	a9a0 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x460>
    a624:	mov	r2, sl
    a628:	mov	r0, r8
    a62c:	mov	r1, r5
    a630:	bl	17bbc <POOL_alloc>
    a634:	sub	r3, r0, #32768	; 0x8000
    a638:	cmp	r3, #1280	; 0x500
    a63c:	bhi	a920 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x3e0>
    a640:	ldr	r3, [r5]
    a644:	mov	r0, r8
    a648:	sub	r1, fp, #48	; 0x30
    a64c:	mov	r2, r6
    a650:	str	r4, [sp]
    a654:	bl	17d1c <POOL_translateAddr>
    a658:	sub	r3, r0, #32768	; 0x8000
    a65c:	cmp	r3, #1280	; 0x500
    a660:	bhi	aa20 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x4e0>
    a664:	mov	r0, r8
    a668:	add	r1, r5, #8
    a66c:	mov	r2, r9
    a670:	bl	17bbc <POOL_alloc>
    a674:	sub	r3, r0, #32768	; 0x8000
    a678:	cmp	r3, #1280	; 0x500
    a67c:	bhi	a940 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x400>
    a680:	ldr	r3, [r5, #8]
    a684:	mov	r0, r8
    a688:	sub	r1, fp, #56	; 0x38
    a68c:	mov	r2, r6
    a690:	str	r4, [sp]
    a694:	bl	17d1c <POOL_translateAddr>
    a698:	sub	r3, r0, #32768	; 0x8000
    a69c:	cmp	r3, #1280	; 0x500
    a6a0:	bhi	aa80 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x540>
    a6a4:	mov	r2, r9
    a6a8:	mov	r0, r8
    a6ac:	add	r1, r5, #12
    a6b0:	bl	17bbc <POOL_alloc>
    a6b4:	sub	r3, r0, #32768	; 0x8000
    a6b8:	cmp	r3, #1280	; 0x500
    a6bc:	bhi	a980 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x440>
    a6c0:	ldr	r3, [r5, #12]
    a6c4:	mov	r2, r6
    a6c8:	mov	r0, r8
    a6cc:	sub	r1, fp, #60	; 0x3c
    a6d0:	str	r4, [sp]
    a6d4:	bl	17d1c <POOL_translateAddr>
    a6d8:	sub	r3, r0, #32768	; 0x8000
    a6dc:	cmp	r3, #1280	; 0x500
    a6e0:	bhi	aa60 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x520>
    a6e4:	ldr	r2, [fp, #-112]	; 0xffffff90
    a6e8:	mov	r0, r8
    a6ec:	add	r1, r5, #4
    a6f0:	bl	17bbc <POOL_alloc>
    a6f4:	sub	r3, r0, #32768	; 0x8000
    a6f8:	cmp	r3, #1280	; 0x500
    a6fc:	bhi	a960 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x420>
    a700:	ldr	r3, [r5, #4]
    a704:	mov	r0, r8
    a708:	sub	r1, fp, #52	; 0x34
    a70c:	mov	r2, #3
    a710:	mov	r4, #0
    a714:	str	r4, [sp]
    a718:	bl	17d1c <POOL_translateAddr>
    a71c:	sub	r3, r0, #32768	; 0x8000
    a720:	cmp	r3, #1280	; 0x500
    a724:	bhi	aa40 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x500>
    a728:	mov	r1, r4
    a72c:	mov	r0, r7
    a730:	mov	r2, #5
    a734:	movw	r3, #42096	; 0xa470
    a738:	movt	r3, #0
    a73c:	str	r4, [sp]
    a740:	bl	16acc <NOTIFY_register>
    a744:	sub	r3, r0, #32768	; 0x8000
    a748:	cmp	r3, #1280	; 0x500
    a74c:	bhi	aa00 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x4c0>
    a750:	ldr	r2, [fp, #40]	; 0x28
    a754:	sub	r3, fp, #44	; 0x2c
    a758:	ldr	r1, [fp, #-116]	; 0xffffff8c
    a75c:	mov	r0, r7
    a760:	str	r2, [r3, #-20]!	; 0xffffffec
    a764:	mov	r2, #1
    a768:	bl	19420 <PROC_load>
    a76c:	sub	r3, r0, #32768	; 0x8000
    a770:	cmp	r3, #1280	; 0x500
    a774:	bhi	a9e0 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x4a0>
    a778:	mov	r0, r7
    a77c:	bl	197a4 <PROC_start>
    a780:	sub	r3, r0, #32768	; 0x8000
    a784:	cmp	r3, #1280	; 0x500
    a788:	bhi	a9c0 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x480>
    a78c:	movw	r0, #13412	; 0x3464
    a790:	movt	r0, #2
    a794:	bl	9cfc <puts@plt>
    a798:	ldr	r0, [pc, #756]	; aa94 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x554>
    a79c:	bl	9e40 <sem_wait@plt>
    a7a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a7a4:	mov	r0, r7
    a7a8:	mov	r1, #0
    a7ac:	mov	r2, #5
    a7b0:	bl	16f14 <NOTIFY_notify>
    a7b4:	sub	r3, r0, #32768	; 0x8000
    a7b8:	cmp	r3, #1280	; 0x500
    a7bc:	bls	a87c <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x33c>
    a7c0:	mov	r1, r0
    a7c4:	movw	r0, #13428	; 0x3474
    a7c8:	movt	r0, #2
    a7cc:	bl	9c9c <printf@plt>
    a7d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a7d4:	mov	r0, r7
    a7d8:	mov	r1, #0
    a7dc:	mov	r2, #5
    a7e0:	bl	16f14 <NOTIFY_notify>
    a7e4:	sub	r3, r0, #32768	; 0x8000
    a7e8:	cmp	r3, #1280	; 0x500
    a7ec:	bls	a89c <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x35c>
    a7f0:	mov	r1, r0
    a7f4:	movw	r0, #13484	; 0x34ac
    a7f8:	movt	r0, #2
    a7fc:	bl	9c9c <printf@plt>
    a800:	ldr	r3, [fp, #-52]	; 0xffffffcc
    a804:	mov	r0, r7
    a808:	mov	r1, #0
    a80c:	mov	r2, #5
    a810:	bl	16f14 <NOTIFY_notify>
    a814:	sub	r3, r0, #32768	; 0x8000
    a818:	cmp	r3, #1280	; 0x500
    a81c:	bls	a8bc <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x37c>
    a820:	mov	r1, r0
    a824:	movw	r0, #13540	; 0x34e4
    a828:	movt	r0, #2
    a82c:	bl	9c9c <printf@plt>
    a830:	b	a8bc <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x37c>
    a834:	nop	{0}
    a838:	nop	{0}
    a83c:	nop	{0}
    a840:	mov	r1, r0
    a844:	movw	r0, #12732	; 0x31bc
    a848:	movt	r0, #2
    a84c:	bl	9c9c <printf@plt>
    a850:	movw	r0, #13412	; 0x3464
    a854:	movt	r0, #2
    a858:	bl	9cfc <puts@plt>
    a85c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a860:	mov	r0, r7
    a864:	mov	r1, #0
    a868:	mov	r2, #5
    a86c:	bl	16f14 <NOTIFY_notify>
    a870:	sub	r3, r0, #32768	; 0x8000
    a874:	cmp	r3, #1280	; 0x500
    a878:	bhi	a7c0 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x280>
    a87c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a880:	mov	r0, r7
    a884:	mov	r1, #0
    a888:	mov	r2, #5
    a88c:	bl	16f14 <NOTIFY_notify>
    a890:	sub	r3, r0, #32768	; 0x8000
    a894:	cmp	r3, #1280	; 0x500
    a898:	bhi	a7f0 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x2b0>
    a89c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    a8a0:	mov	r0, r7
    a8a4:	mov	r1, #0
    a8a8:	mov	r2, #5
    a8ac:	bl	16f14 <NOTIFY_notify>
    a8b0:	sub	r3, r0, #32768	; 0x8000
    a8b4:	cmp	r3, #1280	; 0x500
    a8b8:	bhi	a820 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x2e0>
    a8bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a8c0:	mov	r0, r7
    a8c4:	mov	r1, #0
    a8c8:	mov	r2, #5
    a8cc:	bl	16f14 <NOTIFY_notify>
    a8d0:	sub	r3, r0, #32768	; 0x8000
    a8d4:	mov	r4, r0
    a8d8:	cmp	r3, #1280	; 0x500
    a8dc:	bls	a8f0 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x3b0>
    a8e0:	movw	r0, #13600	; 0x3520
    a8e4:	mov	r1, r4
    a8e8:	movt	r0, #2
    a8ec:	bl	9c9c <printf@plt>
    a8f0:	mov	r0, r4
    a8f4:	sub	sp, fp, #40	; 0x28
    a8f8:	ldm	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
    a8fc:	nop	{0}
    a900:	mov	r1, r0
    a904:	movw	r0, #12692	; 0x3194
    a908:	movt	r0, #2
    a90c:	bl	9c9c <printf@plt>
    a910:	b	a850 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x310>
    a914:	nop	{0}
    a918:	nop	{0}
    a91c:	nop	{0}
    a920:	mov	r1, r0
    a924:	movw	r0, #12876	; 0x324c
    a928:	movt	r0, #2
    a92c:	bl	9c9c <printf@plt>
    a930:	b	a850 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x310>
    a934:	nop	{0}
    a938:	nop	{0}
    a93c:	nop	{0}
    a940:	mov	r1, r0
    a944:	movw	r0, #12992	; 0x32c0
    a948:	movt	r0, #2
    a94c:	bl	9c9c <printf@plt>
    a950:	b	a850 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x310>
    a954:	nop	{0}
    a958:	nop	{0}
    a95c:	nop	{0}
    a960:	mov	r1, r0
    a964:	movw	r0, #13232	; 0x33b0
    a968:	movt	r0, #2
    a96c:	bl	9c9c <printf@plt>
    a970:	b	a850 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x310>
    a974:	nop	{0}
    a978:	nop	{0}
    a97c:	nop	{0}
    a980:	mov	r1, r0
    a984:	movw	r0, #13112	; 0x3338
    a988:	movt	r0, #2
    a98c:	bl	9c9c <printf@plt>
    a990:	b	a850 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x310>
    a994:	nop	{0}
    a998:	nop	{0}
    a99c:	nop	{0}
    a9a0:	mov	r1, r0
    a9a4:	movw	r0, #12772	; 0x31e4
    a9a8:	movt	r0, #2
    a9ac:	bl	9c9c <printf@plt>
    a9b0:	b	a850 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x310>
    a9b4:	nop	{0}
    a9b8:	nop	{0}
    a9bc:	nop	{0}
    a9c0:	mov	r1, r0
    a9c4:	movw	r0, #13372	; 0x343c
    a9c8:	movt	r0, #2
    a9cc:	bl	9c9c <printf@plt>
    a9d0:	b	a850 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x310>
    a9d4:	nop	{0}
    a9d8:	nop	{0}
    a9dc:	nop	{0}
    a9e0:	mov	r1, r0
    a9e4:	movw	r0, #13332	; 0x3414
    a9e8:	movt	r0, #2
    a9ec:	bl	9c9c <printf@plt>
    a9f0:	b	a850 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x310>
    a9f4:	nop	{0}
    a9f8:	nop	{0}
    a9fc:	nop	{0}
    aa00:	mov	r1, r0
    aa04:	movw	r0, #13288	; 0x33e8
    aa08:	movt	r0, #2
    aa0c:	bl	9c9c <printf@plt>
    aa10:	b	a850 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x310>
    aa14:	nop	{0}
    aa18:	nop	{0}
    aa1c:	nop	{0}
    aa20:	mov	r1, r0
    aa24:	movw	r0, #12812	; 0x320c
    aa28:	movt	r0, #2
    aa2c:	bl	9c9c <printf@plt>
    aa30:	b	a850 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x310>
    aa34:	nop	{0}
    aa38:	nop	{0}
    aa3c:	nop	{0}
    aa40:	mov	r1, r0
    aa44:	movw	r0, #13168	; 0x3370
    aa48:	movt	r0, #2
    aa4c:	bl	9c9c <printf@plt>
    aa50:	b	a850 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x310>
    aa54:	nop	{0}
    aa58:	nop	{0}
    aa5c:	nop	{0}
    aa60:	mov	r1, r0
    aa64:	movw	r0, #13044	; 0x32f4
    aa68:	movt	r0, #2
    aa6c:	bl	9c9c <printf@plt>
    aa70:	b	a850 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x310>
    aa74:	nop	{0}
    aa78:	nop	{0}
    aa7c:	nop	{0}
    aa80:	mov	r1, r0
    aa84:	movw	r0, #12928	; 0x3280
    aa88:	movt	r0, #2
    aa8c:	bl	9c9c <printf@plt>
    aa90:	b	a850 <pool_notify_Create(char*, bufferInit, unsigned char, char*)+0x310>
    aa94:	.word	0x0002d3cc
    aa98:	nop	{0}
    aa9c:	nop	{0}

0000aaa0 <pool_notify_Init(char*, bufferInit, char*)>:
    aaa0:	mov	ip, sp
    aaa4:	sub	sp, sp, #16
    aaa8:	push	{r4, r5, r6, fp, ip, lr, pc}
    aaac:	sub	fp, ip, #20
    aab0:	sub	sp, sp, #28
    aab4:	add	r4, fp, #8
    aab8:	subs	r6, r0, #0
    aabc:	ldr	r5, [fp, #36]	; 0x24
    aac0:	stm	r4, {r1, r2, r3}
    aac4:	beq	ab20 <pool_notify_Init(char*, bufferInit, char*)+0x80>
    aac8:	add	ip, fp, #20
    aacc:	str	r5, [sp, #20]
    aad0:	mov	r3, #0
    aad4:	str	r3, [sp, #16]
    aad8:	ldm	ip, {r0, r1, r2, r3}
    aadc:	mov	ip, sp
    aae0:	stm	ip, {r0, r1, r2, r3}
    aae4:	mov	r0, r6
    aae8:	ldm	r4, {r1, r2, r3}
    aaec:	bl	a540 <pool_notify_Create(char*, bufferInit, unsigned char, char*)>
    aaf0:	sub	r0, r0, #32768	; 0x8000
    aaf4:	cmp	r0, #1280	; 0x500
    aaf8:	bls	ab08 <pool_notify_Init(char*, bufferInit, char*)+0x68>
    aafc:	movw	r0, #13724	; 0x359c
    ab00:	movt	r0, #2
    ab04:	bl	9cfc <puts@plt>
    ab08:	movw	r0, #13760	; 0x35c0
    ab0c:	movt	r0, #2
    ab10:	sub	sp, fp, #24
    ab14:	ldm	sp, {r4, r5, r6, fp, sp, lr}
    ab18:	b	9cfc <puts@plt>
    ab1c:	nop	{0}
    ab20:	movw	r0, #13660	; 0x355c
    ab24:	movt	r0, #2
    ab28:	bl	9cfc <puts@plt>
    ab2c:	b	aac8 <pool_notify_Init(char*, bufferInit, char*)+0x28>

0000ab30 <diffToNanoseconds(timespec, timespec, double)>:
    ab30:	vmov	s15, r0
    ab34:	vldr	d16, [pc, #100]	; aba0 <diffToNanoseconds(timespec, timespec, double)+0x70>
    ab38:	mov	ip, sp
    ab3c:	vcvt.f64.s32	d18, s15
    ab40:	vmov	s15, r2
    ab44:	push	{r4, fp, ip, lr, pc}
    ab48:	sub	fp, ip, #4
    ab4c:	sub	sp, sp, #20
    ab50:	sub	r4, fp, #36	; 0x24
    ab54:	sub	ip, fp, #28
    ab58:	stm	r4, {r2, r3}
    ab5c:	vmul.f64	d17, d18, d16
    ab60:	vldr	d16, [pc, #64]	; aba8 <diffToNanoseconds(timespec, timespec, double)+0x78>
    ab64:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ab68:	stm	ip, {r0, r1}
    ab6c:	vcvt.f64.s32	d18, s15
    ab70:	vmov	s15, r3
    ab74:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ab78:	vmla.f64	d17, d18, d16
    ab7c:	vcvt.f64.s32	d16, s15
    ab80:	vmov	s15, r3
    ab84:	vadd.f64	d17, d17, d16
    ab88:	vcvt.f64.s32	d16, s15
    ab8c:	vsub.f64	d18, d17, d16
    ab90:	vmov	r0, r1, d18
    ab94:	sub	sp, fp, #16
    ab98:	ldm	sp, {r4, fp, sp, pc}
    ab9c:	nop	{0}
    aba0:	.word	0x00000000
    aba4:	.word	0xc1cdcd65
    aba8:	.word	0x00000000
    abac:	.word	0x41cdcd65

0000abb0 <global constructors keyed to diffToNanoseconds(timespec, timespec, double)>:
    abb0:	mov	ip, sp
    abb4:	push	{r4, r5, fp, ip, lr, pc}
    abb8:	movw	r4, #54236	; 0xd3dc
    abbc:	movt	r4, #2
    abc0:	sub	fp, ip, #4
    abc4:	mov	r0, r4
    abc8:	bl	9fc0 <std::ios_base::Init::Init()@plt>
    abcc:	mov	r0, r4
    abd0:	movw	r1, #40488	; 0x9e28
    abd4:	movw	r2, #52380	; 0xcc9c
    abd8:	movt	r1, #0
    abdc:	movt	r2, #2
    abe0:	ldm	sp, {r4, r5, fp, sp, lr}
    abe4:	b	a08c <__aeabi_atexit@plt>
    abe8:	nop	{0}
    abec:	nop	{0}

0000abf0 <now()>:
    abf0:	mov	ip, sp
    abf4:	push	{r4, r5, fp, ip, lr, pc}
    abf8:	mov	r4, r0
    abfc:	sub	fp, ip, #4
    ac00:	mov	r1, r4
    ac04:	mov	r0, #2
    ac08:	bl	9d68 <clock_gettime@plt>
    ac0c:	mov	r0, r4
    ac10:	ldm	sp, {r4, r5, fp, sp, pc}
    ac14:	nop	{0}
    ac18:	nop	{0}
    ac1c:	nop	{0}

0000ac20 <global constructors keyed to neon_print(__simd128_float32_t, std::string)>:
    ac20:	mov	ip, sp
    ac24:	push	{r4, r5, fp, ip, lr, pc}
    ac28:	movw	r4, #54237	; 0xd3dd
    ac2c:	movt	r4, #2
    ac30:	sub	fp, ip, #4
    ac34:	mov	r0, r4
    ac38:	bl	9fc0 <std::ios_base::Init::Init()@plt>
    ac3c:	mov	r0, r4
    ac40:	movw	r1, #40488	; 0x9e28
    ac44:	movw	r2, #52380	; 0xcc9c
    ac48:	movt	r1, #0
    ac4c:	movt	r2, #2
    ac50:	ldm	sp, {r4, r5, fp, sp, lr}
    ac54:	b	a08c <__aeabi_atexit@plt>
    ac58:	nop	{0}
    ac5c:	nop	{0}

0000ac60 <MeanShift::CalWeightCPU(cv::Mat const&, cv::Mat&, cv::Rect_<int>&, cv::Mat&, int)>:
    ac60:	mov	ip, sp
    ac64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
    ac68:	sub	fp, ip, #4
    ac6c:	sub	sp, sp, #84	; 0x54
    ac70:	mov	sl, r1
    ac74:	ldr	r6, [r0, #44]	; 0x2c
    ac78:	str	r3, [fp, #-120]	; 0xffffff88
    ac7c:	ldr	r5, [r2, #44]	; 0x2c
    ac80:	ldr	r3, [r0, #16]
    ac84:	ldr	ip, [r6]
    ac88:	ldr	r4, [r5]
    ac8c:	ldr	r0, [fp, #8]
    ac90:	ldr	r1, [r2, #16]
    ac94:	ldr	r2, [fp, #-120]	; 0xffffff88
    ac98:	mul	ip, ip, r0
    ac9c:	mul	r4, r4, r0
    aca0:	ldr	r2, [r2, #12]
    aca4:	add	r3, r3, ip
    aca8:	ldr	r0, [fp, #-120]	; 0xffffff88
    acac:	cmp	r2, #0
    acb0:	str	r2, [fp, #-116]	; 0xffffff8c
    acb4:	add	r1, r1, r4
    acb8:	vldr	s13, [r3]
    acbc:	vldr	s14, [r1]
    acc0:	vdiv.f32	s15, s13, s14
    acc4:	ldr	r9, [r0, #8]
    acc8:	vsqrt.f32	s15, s15
    accc:	vstr	s15, [fp, #-108]	; 0xffffff94
    acd0:	vldr	s13, [r3, #4]
    acd4:	vldr	s14, [r1, #4]
    acd8:	vdiv.f32	s15, s13, s14
    acdc:	vsqrt.f32	s15, s15
    ace0:	vstr	s15, [fp, #-104]	; 0xffffff98
    ace4:	vldr	s13, [r3, #8]
    ace8:	vldr	s14, [r1, #8]
    acec:	vdiv.f32	s15, s13, s14
    acf0:	vsqrt.f32	s15, s15
    acf4:	vstr	s15, [fp, #-100]	; 0xffffff9c
    acf8:	vldr	s13, [r3, #12]
    acfc:	vldr	s14, [r1, #12]
    ad00:	vdiv.f32	s15, s13, s14
    ad04:	vsqrt.f32	s15, s15
    ad08:	vstr	s15, [fp, #-96]	; 0xffffffa0
    ad0c:	vldr	s13, [r3, #16]
    ad10:	vldr	s14, [r1, #16]
    ad14:	vdiv.f32	s15, s13, s14
    ad18:	vsqrt.f32	s15, s15
    ad1c:	vstr	s15, [fp, #-92]	; 0xffffffa4
    ad20:	vldr	s13, [r3, #20]
    ad24:	vldr	s14, [r1, #20]
    ad28:	vdiv.f32	s15, s13, s14
    ad2c:	vsqrt.f32	s15, s15
    ad30:	vstr	s15, [fp, #-88]	; 0xffffffa8
    ad34:	vldr	s13, [r3, #24]
    ad38:	vldr	s14, [r1, #24]
    ad3c:	vdiv.f32	s15, s13, s14
    ad40:	vsqrt.f32	s15, s15
    ad44:	vstr	s15, [fp, #-84]	; 0xffffffac
    ad48:	vldr	s13, [r3, #28]
    ad4c:	vldr	s14, [r1, #28]
    ad50:	vdiv.f32	s15, s13, s14
    ad54:	ldr	r2, [fp, #-120]	; 0xffffff88
    ad58:	vsqrt.f32	s15, s15
    ad5c:	vstr	s15, [fp, #-80]	; 0xffffffb0
    ad60:	vldr	s13, [r3, #32]
    ad64:	vldr	s14, [r1, #32]
    ad68:	vdiv.f32	s15, s13, s14
    ad6c:	ldr	r2, [r2, #4]
    ad70:	str	r2, [fp, #-112]	; 0xffffff90
    ad74:	vsqrt.f32	s15, s15
    ad78:	vstr	s15, [fp, #-76]	; 0xffffffb4
    ad7c:	vldr	s13, [r3, #36]	; 0x24
    ad80:	vldr	s14, [r1, #36]	; 0x24
    ad84:	vdiv.f32	s15, s13, s14
    ad88:	vsqrt.f32	s15, s15
    ad8c:	vstr	s15, [fp, #-72]	; 0xffffffb8
    ad90:	vldr	s13, [r3, #40]	; 0x28
    ad94:	vldr	s14, [r1, #40]	; 0x28
    ad98:	vdiv.f32	s15, s13, s14
    ad9c:	vsqrt.f32	s15, s15
    ada0:	vstr	s15, [fp, #-68]	; 0xffffffbc
    ada4:	vldr	s13, [r3, #44]	; 0x2c
    ada8:	vldr	s14, [r1, #44]	; 0x2c
    adac:	vdiv.f32	s15, s13, s14
    adb0:	vsqrt.f32	s15, s15
    adb4:	vstr	s15, [fp, #-64]	; 0xffffffc0
    adb8:	vldr	s13, [r3, #48]	; 0x30
    adbc:	vldr	s14, [r1, #48]	; 0x30
    adc0:	vdiv.f32	s15, s13, s14
    adc4:	vsqrt.f32	s15, s15
    adc8:	vstr	s15, [fp, #-60]	; 0xffffffc4
    adcc:	vldr	s13, [r3, #52]	; 0x34
    add0:	vldr	s14, [r1, #52]	; 0x34
    add4:	vdiv.f32	s15, s13, s14
    add8:	vsqrt.f32	s15, s15
    addc:	vstr	s15, [fp, #-56]	; 0xffffffc8
    ade0:	vldr	s13, [r3, #56]	; 0x38
    ade4:	vldr	s14, [r1, #56]	; 0x38
    ade8:	vdiv.f32	s15, s13, s14
    adec:	vsqrt.f32	s15, s15
    adf0:	vstr	s15, [fp, #-52]	; 0xffffffcc
    adf4:	vldr	s13, [r3, #60]	; 0x3c
    adf8:	vldr	s14, [r1, #60]	; 0x3c
    adfc:	vdiv.f32	s15, s13, s14
    ae00:	vsqrt.f32	s15, s15
    ae04:	vstr	s15, [fp, #-48]	; 0xffffffd0
    ae08:	ble	aeac <MeanShift::CalWeightCPU(cv::Mat const&, cv::Mat&, cv::Rect_<int>&, cv::Mat&, int)+0x24c>
    ae0c:	mov	r7, #0
    ae10:	ldr	r0, [fp, #-120]	; 0xffffff88
    ae14:	cmp	r9, #0
    ae18:	ldr	r3, [r0]
    ae1c:	ble	ae9c <MeanShift::CalWeightCPU(cv::Mat const&, cv::Mat&, cv::Rect_<int>&, cv::Mat&, int)+0x23c>
    ae20:	ldr	r1, [fp, #-112]	; 0xffffff90
    ae24:	add	r6, r3, r3, lsl #1
    ae28:	mov	r5, #0
    ae2c:	add	r8, r7, r1
    ae30:	ldr	r1, [sl, #44]	; 0x2c
    ae34:	lsl	r4, r5, #2
    ae38:	ldr	r2, [fp, #4]
    ae3c:	add	r5, r5, #1
    ae40:	ldr	r3, [sl, #16]
    ae44:	cmp	r9, r5
    ae48:	ldr	r0, [r2, #44]	; 0x2c
    ae4c:	add	r3, r3, r6
    ae50:	ldr	r2, [r1]
    ae54:	add	r6, r6, #3
    ae58:	ldr	r1, [r0]
    ae5c:	mla	r2, r2, r8, r3
    ae60:	ldr	r0, [fp, #4]
    ae64:	mla	r1, r1, r7, r4
    ae68:	ldr	ip, [r0, #16]
    ae6c:	ldr	r0, [fp, #8]
    ae70:	ldrb	r3, [r2, r0]
    ae74:	sub	r0, fp, #44	; 0x2c
    ae78:	add	r2, ip, r1
    ae7c:	vldr	s13, [r2]
    ae80:	asr	r3, r3, #4
    ae84:	add	r2, r0, r3, lsl #2
    ae88:	vldr	s15, [r2, #-64]	; 0xffffffc0
    ae8c:	vmul.f32	s14, s13, s15
    ae90:	vmov	r2, s14
    ae94:	str	r2, [ip, r1]
    ae98:	bgt	ae30 <MeanShift::CalWeightCPU(cv::Mat const&, cv::Mat&, cv::Rect_<int>&, cv::Mat&, int)+0x1d0>
    ae9c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    aea0:	add	r7, r7, #1
    aea4:	cmp	r3, r7
    aea8:	bgt	ae10 <MeanShift::CalWeightCPU(cv::Mat const&, cv::Mat&, cv::Rect_<int>&, cv::Mat&, int)+0x1b0>
    aeac:	sub	sp, fp, #40	; 0x28
    aeb0:	ldm	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
    aeb4:	nop	{0}
    aeb8:	nop	{0}
    aebc:	nop	{0}

0000aec0 <MeanShift::CalWeightDSP(cv::Mat const&, cv::Mat&, cv::Rect_<int>&, cv::Mat&, int)>:
    aec0:	mov	ip, sp
    aec4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
    aec8:	sub	fp, ip, #4
    aecc:	sub	sp, sp, #124	; 0x7c
    aed0:	movw	ip, #54216	; 0xd3c8
    aed4:	movw	r5, #54212	; 0xd3c4
    aed8:	ldr	r8, [fp, #8]
    aedc:	movt	r5, #2
    aee0:	ldr	r4, [r0, #44]	; 0x2c
    aee4:	mov	r6, r1
    aee8:	str	ip, [fp, #-52]	; 0xffffffcc
    aeec:	mov	r9, #0
    aef0:	str	r5, [fp, #-48]	; 0xffffffd0
    aef4:	movw	r7, #54204	; 0xd3bc
    aef8:	ldr	ip, [r4]
    aefc:	movw	r4, #54216	; 0xd3c8
    af00:	movt	r4, #2
    af04:	str	r4, [fp, #-52]	; 0xffffffcc
    af08:	ldr	r1, [r0, #16]
    af0c:	movt	r7, #2
    af10:	mul	ip, ip, r8
    af14:	ldr	r4, [r5]
    af18:	mov	r5, r3
    af1c:	mov	sl, r9
    af20:	ldr	r3, [r1, ip]
    af24:	str	r3, [r4]
    af28:	ldr	r3, [fp, #-52]	; 0xffffffcc
    af2c:	ldr	r1, [r2, #44]	; 0x2c
    af30:	ldr	ip, [r2, #16]
    af34:	ldr	r4, [r3]
    af38:	ldr	r3, [r1]
    af3c:	mul	r3, r3, r8
    af40:	ldr	r1, [ip, r3]
    af44:	str	r1, [r4]
    af48:	ldr	r1, [fp, #-48]	; 0xffffffd0
    af4c:	ldr	ip, [r0, #44]	; 0x2c
    af50:	ldr	r4, [r0, #16]
    af54:	ldr	r1, [r1]
    af58:	str	r1, [fp, #-56]	; 0xffffffc8
    af5c:	ldr	r3, [ip]
    af60:	mla	r3, r3, r8, r4
    af64:	ldr	r1, [r3, #4]
    af68:	ldr	r3, [fp, #-56]	; 0xffffffc8
    af6c:	str	r1, [r3, #4]
    af70:	ldr	r1, [fp, #-52]	; 0xffffffcc
    af74:	ldr	ip, [r2, #44]	; 0x2c
    af78:	ldr	r4, [r2, #16]
    af7c:	ldr	r1, [r1]
    af80:	str	r1, [fp, #-60]	; 0xffffffc4
    af84:	ldr	r3, [ip]
    af88:	mla	r3, r3, r8, r4
    af8c:	ldr	r1, [r3, #4]
    af90:	ldr	r3, [fp, #-60]	; 0xffffffc4
    af94:	str	r1, [r3, #4]
    af98:	ldr	r1, [fp, #-48]	; 0xffffffd0
    af9c:	ldr	ip, [r0, #44]	; 0x2c
    afa0:	ldr	r4, [r0, #16]
    afa4:	ldr	r1, [r1]
    afa8:	str	r1, [fp, #-64]	; 0xffffffc0
    afac:	ldr	r3, [ip]
    afb0:	mla	r3, r3, r8, r4
    afb4:	ldr	r1, [r3, #8]
    afb8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    afbc:	str	r1, [r3, #8]
    afc0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    afc4:	ldr	ip, [r2, #44]	; 0x2c
    afc8:	ldr	r4, [r2, #16]
    afcc:	ldr	r1, [r1]
    afd0:	str	r1, [fp, #-68]	; 0xffffffbc
    afd4:	ldr	r3, [ip]
    afd8:	mla	r3, r3, r8, r4
    afdc:	ldr	r1, [r3, #8]
    afe0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    afe4:	str	r1, [r3, #8]
    afe8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    afec:	ldr	ip, [r0, #44]	; 0x2c
    aff0:	ldr	r4, [r0, #16]
    aff4:	ldr	r1, [r1]
    aff8:	str	r1, [fp, #-72]	; 0xffffffb8
    affc:	ldr	r3, [ip]
    b000:	mla	r3, r3, r8, r4
    b004:	ldr	r1, [r3, #12]
    b008:	ldr	r3, [fp, #-72]	; 0xffffffb8
    b00c:	str	r1, [r3, #12]
    b010:	ldr	r1, [fp, #-52]	; 0xffffffcc
    b014:	ldr	ip, [r2, #44]	; 0x2c
    b018:	ldr	r4, [r2, #16]
    b01c:	ldr	r1, [r1]
    b020:	str	r1, [fp, #-76]	; 0xffffffb4
    b024:	ldr	r3, [ip]
    b028:	mla	r3, r3, r8, r4
    b02c:	ldr	r1, [r3, #12]
    b030:	ldr	r3, [fp, #-76]	; 0xffffffb4
    b034:	str	r1, [r3, #12]
    b038:	ldr	r1, [fp, #-48]	; 0xffffffd0
    b03c:	ldr	ip, [r0, #44]	; 0x2c
    b040:	ldr	r4, [r0, #16]
    b044:	ldr	r1, [r1]
    b048:	str	r1, [fp, #-80]	; 0xffffffb0
    b04c:	ldr	r3, [ip]
    b050:	mla	r3, r3, r8, r4
    b054:	ldr	r1, [r3, #16]
    b058:	ldr	r3, [fp, #-80]	; 0xffffffb0
    b05c:	str	r1, [r3, #16]
    b060:	ldr	r1, [fp, #-52]	; 0xffffffcc
    b064:	ldr	ip, [r2, #44]	; 0x2c
    b068:	ldr	r4, [r2, #16]
    b06c:	ldr	r1, [r1]
    b070:	str	r1, [fp, #-84]	; 0xffffffac
    b074:	ldr	r3, [ip]
    b078:	mla	r3, r3, r8, r4
    b07c:	ldr	r1, [r3, #16]
    b080:	ldr	r3, [fp, #-84]	; 0xffffffac
    b084:	str	r1, [r3, #16]
    b088:	ldr	r1, [fp, #-48]	; 0xffffffd0
    b08c:	ldr	ip, [r0, #44]	; 0x2c
    b090:	ldr	r4, [r0, #16]
    b094:	ldr	r1, [r1]
    b098:	str	r1, [fp, #-88]	; 0xffffffa8
    b09c:	ldr	r3, [ip]
    b0a0:	mla	r3, r3, r8, r4
    b0a4:	ldr	r1, [r3, #20]
    b0a8:	ldr	r3, [fp, #-88]	; 0xffffffa8
    b0ac:	str	r1, [r3, #20]
    b0b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    b0b4:	ldr	ip, [r2, #44]	; 0x2c
    b0b8:	ldr	r4, [r2, #16]
    b0bc:	ldr	r1, [r1]
    b0c0:	str	r1, [fp, #-92]	; 0xffffffa4
    b0c4:	ldr	r3, [ip]
    b0c8:	mla	r3, r3, r8, r4
    b0cc:	ldr	r1, [r3, #20]
    b0d0:	ldr	r3, [fp, #-92]	; 0xffffffa4
    b0d4:	str	r1, [r3, #20]
    b0d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    b0dc:	ldr	ip, [r0, #44]	; 0x2c
    b0e0:	ldr	r4, [r0, #16]
    b0e4:	ldr	r1, [r1]
    b0e8:	str	r1, [fp, #-96]	; 0xffffffa0
    b0ec:	ldr	r3, [ip]
    b0f0:	mla	r3, r3, r8, r4
    b0f4:	ldr	r1, [r3, #24]
    b0f8:	ldr	r3, [fp, #-96]	; 0xffffffa0
    b0fc:	str	r1, [r3, #24]
    b100:	ldr	r1, [fp, #-52]	; 0xffffffcc
    b104:	ldr	ip, [r2, #44]	; 0x2c
    b108:	ldr	r4, [r2, #16]
    b10c:	ldr	r1, [r1]
    b110:	str	r1, [fp, #-100]	; 0xffffff9c
    b114:	ldr	r3, [ip]
    b118:	mla	r3, r3, r8, r4
    b11c:	ldr	r1, [r3, #24]
    b120:	ldr	r3, [fp, #-100]	; 0xffffff9c
    b124:	str	r1, [r3, #24]
    b128:	ldr	r1, [fp, #-48]	; 0xffffffd0
    b12c:	ldr	ip, [r0, #44]	; 0x2c
    b130:	ldr	r4, [r0, #16]
    b134:	ldr	r1, [r1]
    b138:	str	r1, [fp, #-104]	; 0xffffff98
    b13c:	ldr	r3, [ip]
    b140:	mla	r3, r3, r8, r4
    b144:	ldr	r1, [r3, #28]
    b148:	ldr	r3, [fp, #-104]	; 0xffffff98
    b14c:	str	r1, [r3, #28]
    b150:	ldr	r1, [fp, #-52]	; 0xffffffcc
    b154:	ldr	ip, [r2, #44]	; 0x2c
    b158:	ldr	r4, [r2, #16]
    b15c:	ldr	r1, [r1]
    b160:	str	r1, [fp, #-108]	; 0xffffff94
    b164:	ldr	r3, [ip]
    b168:	mla	r3, r3, r8, r4
    b16c:	ldr	r1, [r3, #28]
    b170:	ldr	r3, [fp, #-108]	; 0xffffff94
    b174:	str	r1, [r3, #28]
    b178:	ldr	r1, [fp, #-48]	; 0xffffffd0
    b17c:	ldr	ip, [r0, #44]	; 0x2c
    b180:	ldr	r4, [r0, #16]
    b184:	ldr	r1, [r1]
    b188:	str	r1, [fp, #-112]	; 0xffffff90
    b18c:	ldr	r3, [ip]
    b190:	mla	r3, r3, r8, r4
    b194:	ldr	r1, [r3, #32]
    b198:	ldr	r3, [fp, #-112]	; 0xffffff90
    b19c:	str	r1, [r3, #32]
    b1a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    b1a4:	ldr	ip, [r2, #44]	; 0x2c
    b1a8:	ldr	r4, [r2, #16]
    b1ac:	ldr	r1, [r1]
    b1b0:	str	r1, [fp, #-116]	; 0xffffff8c
    b1b4:	ldr	r3, [ip]
    b1b8:	mla	r3, r3, r8, r4
    b1bc:	ldr	r1, [r3, #32]
    b1c0:	ldr	r3, [fp, #-116]	; 0xffffff8c
    b1c4:	str	r1, [r3, #32]
    b1c8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    b1cc:	ldr	ip, [r0, #44]	; 0x2c
    b1d0:	ldr	r4, [r0, #16]
    b1d4:	ldr	r1, [r1]
    b1d8:	str	r1, [fp, #-120]	; 0xffffff88
    b1dc:	ldr	r3, [ip]
    b1e0:	mla	r3, r3, r8, r4
    b1e4:	ldr	r1, [r3, #36]	; 0x24
    b1e8:	ldr	r3, [fp, #-120]	; 0xffffff88
    b1ec:	str	r1, [r3, #36]	; 0x24
    b1f0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    b1f4:	ldr	ip, [r2, #44]	; 0x2c
    b1f8:	ldr	r4, [r2, #16]
    b1fc:	ldr	r1, [r1]
    b200:	str	r1, [fp, #-124]	; 0xffffff84
    b204:	ldr	r3, [ip]
    b208:	mla	r3, r3, r8, r4
    b20c:	ldr	r1, [r3, #36]	; 0x24
    b210:	ldr	r3, [fp, #-124]	; 0xffffff84
    b214:	str	r1, [r3, #36]	; 0x24
    b218:	ldr	r1, [fp, #-48]	; 0xffffffd0
    b21c:	ldr	ip, [r0, #44]	; 0x2c
    b220:	ldr	r4, [r0, #16]
    b224:	ldr	r1, [r1]
    b228:	str	r1, [fp, #-128]	; 0xffffff80
    b22c:	ldr	r3, [ip]
    b230:	mla	r3, r3, r8, r4
    b234:	ldr	r1, [r3, #40]	; 0x28
    b238:	ldr	r3, [fp, #-128]	; 0xffffff80
    b23c:	str	r1, [r3, #40]	; 0x28
    b240:	ldr	r1, [fp, #-52]	; 0xffffffcc
    b244:	ldr	ip, [r2, #44]	; 0x2c
    b248:	ldr	r4, [r2, #16]
    b24c:	ldr	r1, [r1]
    b250:	str	r1, [fp, #-132]	; 0xffffff7c
    b254:	ldr	r3, [ip]
    b258:	mla	r3, r3, r8, r4
    b25c:	ldr	r1, [r3, #40]	; 0x28
    b260:	ldr	r3, [fp, #-132]	; 0xffffff7c
    b264:	str	r1, [r3, #40]	; 0x28
    b268:	ldr	r1, [fp, #-48]	; 0xffffffd0
    b26c:	ldr	ip, [r0, #44]	; 0x2c
    b270:	ldr	r4, [r0, #16]
    b274:	ldr	r1, [r1]
    b278:	str	r1, [fp, #-136]	; 0xffffff78
    b27c:	ldr	r3, [ip]
    b280:	mla	r3, r3, r8, r4
    b284:	ldr	r1, [r3, #44]	; 0x2c
    b288:	ldr	r3, [fp, #-136]	; 0xffffff78
    b28c:	str	r1, [r3, #44]	; 0x2c
    b290:	ldr	r1, [fp, #-52]	; 0xffffffcc
    b294:	ldr	ip, [r2, #44]	; 0x2c
    b298:	ldr	r4, [r2, #16]
    b29c:	ldr	r1, [r1]
    b2a0:	str	r1, [fp, #-140]	; 0xffffff74
    b2a4:	ldr	r3, [ip]
    b2a8:	mla	r3, r3, r8, r4
    b2ac:	ldr	r1, [r3, #44]	; 0x2c
    b2b0:	ldr	r3, [fp, #-140]	; 0xffffff74
    b2b4:	str	r1, [r3, #44]	; 0x2c
    b2b8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    b2bc:	ldr	ip, [r0, #44]	; 0x2c
    b2c0:	ldr	r4, [r0, #16]
    b2c4:	ldr	r1, [r1]
    b2c8:	str	r1, [fp, #-144]	; 0xffffff70
    b2cc:	ldr	r3, [ip]
    b2d0:	mla	r3, r3, r8, r4
    b2d4:	ldr	r1, [r3, #48]	; 0x30
    b2d8:	ldr	r3, [fp, #-144]	; 0xffffff70
    b2dc:	str	r1, [r3, #48]	; 0x30
    b2e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    b2e4:	ldr	ip, [r2, #44]	; 0x2c
    b2e8:	ldr	r4, [r2, #16]
    b2ec:	ldr	r1, [r1]
    b2f0:	str	r1, [fp, #-148]	; 0xffffff6c
    b2f4:	ldr	r3, [ip]
    b2f8:	mla	r3, r3, r8, r4
    b2fc:	ldr	r1, [r3, #48]	; 0x30
    b300:	ldr	r3, [fp, #-148]	; 0xffffff6c
    b304:	str	r1, [r3, #48]	; 0x30
    b308:	ldr	r1, [fp, #-48]	; 0xffffffd0
    b30c:	ldr	ip, [r0, #44]	; 0x2c
    b310:	ldr	r4, [r0, #16]
    b314:	ldr	r1, [r1]
    b318:	str	r1, [fp, #-152]	; 0xffffff68
    b31c:	ldr	r3, [ip]
    b320:	mla	r3, r3, r8, r4
    b324:	ldr	r1, [r3, #52]	; 0x34
    b328:	ldr	r3, [fp, #-152]	; 0xffffff68
    b32c:	str	r1, [r3, #52]	; 0x34
    b330:	ldr	r1, [fp, #-52]	; 0xffffffcc
    b334:	ldr	ip, [r2, #44]	; 0x2c
    b338:	ldr	r4, [r2, #16]
    b33c:	ldr	r1, [r1]
    b340:	str	r1, [fp, #-156]	; 0xffffff64
    b344:	ldr	r3, [ip]
    b348:	mla	r3, r3, r8, r4
    b34c:	ldr	r1, [r3, #52]	; 0x34
    b350:	ldr	r3, [fp, #-156]	; 0xffffff64
    b354:	str	r1, [r3, #52]	; 0x34
    b358:	ldr	r1, [fp, #-48]	; 0xffffffd0
    b35c:	ldr	ip, [r0, #44]	; 0x2c
    b360:	ldr	r4, [r0, #16]
    b364:	ldr	r1, [r1]
    b368:	str	r1, [fp, #-160]	; 0xffffff60
    b36c:	ldr	r3, [ip]
    b370:	mla	r3, r3, r8, r4
    b374:	ldr	r1, [r3, #56]	; 0x38
    b378:	ldr	r3, [fp, #-160]	; 0xffffff60
    b37c:	str	r1, [r3, #56]	; 0x38
    b380:	ldr	r1, [fp, #-52]	; 0xffffffcc
    b384:	ldr	ip, [r2, #44]	; 0x2c
    b388:	ldr	r4, [r2, #16]
    b38c:	ldr	r1, [r1]
    b390:	str	r1, [fp, #-164]	; 0xffffff5c
    b394:	ldr	r3, [ip]
    b398:	mla	r3, r3, r8, r4
    b39c:	ldr	r1, [r3, #56]	; 0x38
    b3a0:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b3a4:	str	r1, [r3, #56]	; 0x38
    b3a8:	ldr	ip, [r0, #44]	; 0x2c
    b3ac:	ldr	r4, [r0, #16]
    b3b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    b3b4:	ldr	r3, [ip]
    b3b8:	ldr	r0, [r1]
    b3bc:	mla	r3, r3, r8, r4
    b3c0:	ldr	r1, [r3, #60]	; 0x3c
    b3c4:	str	r1, [r0, #60]	; 0x3c
    b3c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    b3cc:	ldr	r0, [r2, #44]	; 0x2c
    b3d0:	ldr	r1, [r2, #16]
    b3d4:	ldr	ip, [r3]
    b3d8:	ldr	r3, [r0]
    b3dc:	mla	r3, r3, r8, r1
    b3e0:	ldr	r2, [r3, #60]	; 0x3c
    b3e4:	str	r2, [ip, #60]	; 0x3c
    b3e8:	mov	r4, #0
    b3ec:	ldr	r2, [r6, #44]	; 0x2c
    b3f0:	ldr	r3, [r5]
    b3f4:	ldr	r1, [r5, #4]
    b3f8:	add	r3, r4, r3
    b3fc:	ldr	ip, [r2]
    b400:	add	r1, r9, r1
    b404:	ldr	r0, [r6, #16]
    b408:	add	r3, r3, r3, lsl #1
    b40c:	ldr	r2, [r7]
    b410:	mla	r1, ip, r1, r3
    b414:	add	r2, r2, sl
    b418:	add	r0, r0, r1
    b41c:	ldrb	r3, [r0, r8]
    b420:	strb	r3, [r2, r4]
    b424:	add	r4, r4, #1
    b428:	cmp	r4, #86	; 0x56
    b42c:	bne	b3ec <MeanShift::CalWeightDSP(cv::Mat const&, cv::Mat&, cv::Rect_<int>&, cv::Mat&, int)+0x52c>
    b430:	add	r9, r9, #1
    b434:	add	sl, sl, #86	; 0x56
    b438:	cmp	r9, #58	; 0x3a
    b43c:	bne	b3e8 <MeanShift::CalWeightDSP(cv::Mat const&, cv::Mat&, cv::Rect_<int>&, cv::Mat&, int)+0x528>
    b440:	mov	r0, #1
    b444:	sub	sp, fp, #40	; 0x28
    b448:	ldm	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
    b44c:	b	a4c0 <pool_notify_Execute(unsigned char)>

0000b450 <MeanShift::CalWeightNEON(cv::Mat const&, cv::Mat&, cv::Rect_<int>&, cv::Mat&, int)>:
    b450:	mov	ip, sp
    b454:	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
    b458:	sub	fp, ip, #4
    b45c:	sub	sp, sp, #92	; 0x5c
    b460:	sub	r9, fp, #108	; 0x6c
    b464:	mov	r8, r1
    b468:	ldr	r7, [fp, #4]
    b46c:	mov	r4, r3
    b470:	ldr	ip, [r0, #16]
    b474:	ldr	r5, [fp, #8]
    b478:	str	ip, [fp, #-112]	; 0xffffff90
    b47c:	ldr	ip, [r2, #16]
    b480:	str	ip, [fp, #-116]	; 0xffffff8c
    b484:	mov	ip, #0
    b488:	ldr	r6, [r0, #44]	; 0x2c
    b48c:	ldr	sl, [r2, #44]	; 0x2c
    b490:	ldr	r3, [r6]
    b494:	lsl	r1, ip, #2
    b498:	ldr	r2, [fp, #-112]	; 0xffffff90
    b49c:	add	ip, ip, #4
    b4a0:	cmp	ip, #16
    b4a4:	add	r0, r9, r1
    b4a8:	mla	r3, r3, r5, r2
    b4ac:	ldr	r2, [fp, #-116]	; 0xffffff8c
    b4b0:	str	r3, [fp, #-120]	; 0xffffff88
    b4b4:	ldr	r3, [sl]
    b4b8:	mla	r3, r3, r5, r2
    b4bc:	ldr	r2, [fp, #-120]	; 0xffffff88
    b4c0:	str	r3, [fp, #-128]	; 0xffffff80
    b4c4:	add	r3, r2, r1
    b4c8:	vld1.32	{d18-d19}, [r3]
    b4cc:	ldr	r3, [fp, #-128]	; 0xffffff80
    b4d0:	vrecpe.f32	q9, q9
    b4d4:	add	r2, r3, r1
    b4d8:	vld1.32	{d16-d17}, [r2]
    b4dc:	vmul.f32	q8, q8, q9
    b4e0:	vrsqrte.f32	q8, q8
    b4e4:	vst1.32	{d16-d17}, [r0]
    b4e8:	bne	b490 <MeanShift::CalWeightNEON(cv::Mat const&, cv::Mat&, cv::Rect_<int>&, cv::Mat&, int)+0x40>
    b4ec:	ldr	r2, [r4, #4]
    b4f0:	mov	r6, #0
    b4f4:	ldr	r3, [r4]
    b4f8:	rsb	r2, r2, r2, lsl #4
    b4fc:	add	r3, r3, r3, lsl #1
    b500:	add	r3, r3, r2, lsl #7
    b504:	add	sl, r3, r5
    b508:	mov	r5, sl
    b50c:	mov	r4, #0
    b510:	ldr	r3, [r7, #44]	; 0x2c
    b514:	ldr	r0, [r8, #16]
    b518:	ldr	ip, [r7, #16]
    b51c:	ldr	r1, [r3]
    b520:	ldrb	r2, [r0, r5]
    b524:	sub	r0, fp, #44	; 0x2c
    b528:	add	r5, r5, #3
    b52c:	mla	r1, r1, r6, r4
    b530:	asr	r2, r2, #4
    b534:	add	r4, r4, #4
    b538:	add	r3, r0, r2, lsl #2
    b53c:	vldr	s13, [r3, #-64]	; 0xffffffc0
    b540:	add	r2, ip, r1
    b544:	vldr	s15, [r2]
    b548:	vmul.f32	s14, s15, s13
    b54c:	cmp	r4, #344	; 0x158
    b550:	vmov	r3, s14
    b554:	str	r3, [ip, r1]
    b558:	bne	b510 <MeanShift::CalWeightNEON(cv::Mat const&, cv::Mat&, cv::Rect_<int>&, cv::Mat&, int)+0xc0>
    b55c:	add	r6, r6, #1
    b560:	cmp	r6, #58	; 0x3a
    b564:	addne	sl, sl, #1920	; 0x780
    b568:	bne	b508 <MeanShift::CalWeightNEON(cv::Mat const&, cv::Mat&, cv::Rect_<int>&, cv::Mat&, int)+0xb8>
    b56c:	sub	sp, fp, #40	; 0x28
    b570:	ldm	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
    b574:	nop	{0}
    b578:	nop	{0}
    b57c:	nop	{0}

0000b580 <MeanShift::Epanechnikov_kernel()>:
    b580:	vmov.f32	s10, #112	; 0x3f800000  1.0
    b584:	vldr	d19, [pc, #172]	; b638 <MeanShift::Epanechnikov_kernel()+0xb8>
    b588:	mov	ip, sp
    b58c:	vldr	s12, [pc, #172]	; b640 <MeanShift::Epanechnikov_kernel()+0xc0>
    b590:	push	{r4, r5, fp, ip, lr, pc}
    b594:	vldr	s8, [pc, #168]	; b644 <MeanShift::Epanechnikov_kernel()+0xc4>
    b598:	sub	fp, ip, #4
    b59c:	vldr	s9, [pc, #164]	; b648 <MeanShift::Epanechnikov_kernel()+0xc8>
    b5a0:	mov	r5, r0
    b5a4:	mov	r4, #0
    b5a8:	sub	r3, r4, #29
    b5ac:	vmov.f64	d18, #112	; 0x3f800000  1.0
    b5b0:	mov	ip, #0
    b5b4:	vmov	s14, r3
    b5b8:	vcvt.f32.s32	s15, s14
    b5bc:	vmul.f32	s14, s15, s15
    b5c0:	vmul.f32	s11, s14, s8
    b5c4:	sub	r3, ip, #48	; 0x30
    b5c8:	vldr	s13, [pc, #112]	; b640 <MeanShift::Epanechnikov_kernel()+0xc0>
    b5cc:	ldr	r2, [r5, #116]	; 0x74
    b5d0:	lsl	r0, ip, #2
    b5d4:	vmov	s14, r3
    b5d8:	add	ip, ip, #1
    b5dc:	ldr	r1, [r5, #88]	; 0x58
    b5e0:	vcvt.f32.s32	s15, s14
    b5e4:	ldr	r3, [r2]
    b5e8:	mla	r3, r3, r4, r0
    b5ec:	vmul.f32	s14, s15, s15
    b5f0:	vmov.f32	s15, s11
    b5f4:	vmla.f32	s15, s14, s9
    b5f8:	vcmpe.f32	s15, s10
    b5fc:	vmrs	APSR_nzcv, fpscr
    b600:	vcvtmi.f64.f32	d16, s15
    b604:	vsubmi.f64	d16, d18, d16
    b608:	vmulmi.f64	d17, d16, d19
    b60c:	vcvtmi.f32.f64	s13, d17
    b610:	cmp	ip, #96	; 0x60
    b614:	vmov	r2, s13
    b618:	vadd.f32	s12, s12, s13
    b61c:	str	r2, [r1, r3]
    b620:	bne	b5c4 <MeanShift::Epanechnikov_kernel()+0x44>
    b624:	add	r4, r4, #1
    b628:	cmp	r4, #58	; 0x3a
    b62c:	bne	b5a8 <MeanShift::Epanechnikov_kernel()+0x28>
    b630:	vmov	r0, s12
    b634:	ldm	sp, {r4, r5, fp, sp, pc}
    b638:	.word	0x80000000
    b63c:	.word	0x409b54f4
    b640:	.word	0x00000000
    b644:	.word	0x3a9bda41
    b648:	.word	0x39e38e39
    b64c:	nop	{0}

0000b650 <MeanShift::pdf_representation(cv::Mat const&, cv::Rect_<int> const&)>:
    b650:	mov	ip, sp
    b654:	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
    b658:	sub	fp, ip, #4
    b65c:	sub	sp, sp, #236	; 0xec
    b660:	sub	r6, fp, #76	; 0x4c
    b664:	mov	r8, r0
    b668:	str	r3, [fp, #-252]	; 0xffffff04
    b66c:	mov	r4, #0
    b670:	mov	r3, #0
    b674:	mov	r5, #0
    b678:	str	r1, [fp, #-244]	; 0xffffff0c
    b67c:	str	r2, [fp, #-248]	; 0xffffff08
    b680:	strd	r4, [r6, r3]
    b684:	add	r3, r3, #8
    b688:	cmp	r3, #32
    b68c:	bne	b680 <MeanShift::pdf_representation(cv::Mat const&, cv::Rect_<int> const&)+0x30>
    b690:	mov	lr, #0
    b694:	sub	r0, fp, #124	; 0x7c
    b698:	str	r0, [fp, #-260]	; 0xfffffefc
    b69c:	mov	r3, #5
    b6a0:	str	lr, [r8, #48]	; 0x30
    b6a4:	add	r1, r8, #8
    b6a8:	str	lr, [r8]
    b6ac:	add	r0, r8, #48	; 0x30
    b6b0:	ldr	r2, [fp, #-260]	; 0xfffffefc
    b6b4:	mov	ip, #3
    b6b8:	str	lr, [r8, #4]
    b6bc:	str	r1, [r8, #40]	; 0x28
    b6c0:	mov	r1, #2
    b6c4:	str	r0, [r8, #44]	; 0x2c
    b6c8:	mov	r0, r8
    b6cc:	str	lr, [r8, #8]
    b6d0:	str	lr, [r8, #12]
    b6d4:	strd	r4, [fp, #-68]	; 0xffffffbc
    b6d8:	str	lr, [r8, #16]
    b6dc:	strd	r4, [fp, #-76]	; 0xffffffb4
    b6e0:	str	lr, [r8, #20]
    b6e4:	strd	r4, [fp, #-52]	; 0xffffffcc
    b6e8:	str	lr, [r8, #24]
    b6ec:	strd	r4, [fp, #-60]	; 0xffffffc4
    b6f0:	str	lr, [r8, #28]
    b6f4:	mov	r4, #16
    b6f8:	str	lr, [r8, #32]
    b6fc:	str	lr, [r8, #36]	; 0x24
    b700:	str	lr, [r8, #52]	; 0x34
    b704:	str	ip, [fp, #-124]	; 0xffffff84
    b708:	str	r4, [fp, #-120]	; 0xffffff88
    b70c:	bl	9fd8 <cv::Mat::create(int, int const*, int)@plt>
    b710:	mov	r0, r8
    b714:	mov	r1, r6
    b718:	bl	a020 <cv::Mat::operator=(cv::Scalar_<double> const&)@plt>
    b71c:	mov	r0, #288	; 0x120
    b720:	bl	9c78 <operator new[](unsigned int)@plt>
    b724:	add	r1, r0, #288	; 0x120
    b728:	mov	r3, r0
    b72c:	mov	r2, #0
    b730:	str	r0, [fp, #-240]	; 0xffffff10
    b734:	strb	r2, [r3]
    b738:	strb	r2, [r3, #1]
    b73c:	strb	r2, [r3, #2]
    b740:	add	r3, r3, #3
    b744:	cmp	r3, r1
    b748:	bne	b734 <MeanShift::pdf_representation(cv::Mat const&, cv::Rect_<int> const&)+0xe4>
    b74c:	ldr	r1, [fp, #-252]	; 0xffffff04
    b750:	mov	r2, #0
    b754:	sub	r6, fp, #172	; 0xac
    b758:	mov	sl, r2
    b75c:	sub	r3, fp, #220	; 0xdc
    b760:	sub	r4, fp, #124	; 0x7c
    b764:	ldr	r1, [r1, #4]
    b768:	str	r2, [fp, #-232]	; 0xffffff18
    b76c:	str	r3, [fp, #-276]	; 0xfffffeec
    b770:	str	r1, [fp, #-236]	; 0xffffff14
    b774:	str	r4, [fp, #-272]	; 0xfffffef0
    b778:	ldr	lr, [fp, #-252]	; 0xffffff04
    b77c:	ldr	r3, [lr, #8]
    b780:	ldr	r2, [lr]
    b784:	cmp	r3, #0
    b788:	ble	b908 <MeanShift::pdf_representation(cv::Mat const&, cv::Rect_<int> const&)+0x2b8>
    b78c:	ldr	r0, [fp, #-232]	; 0xffffff18
    b790:	mov	r9, #0
    b794:	ldr	r1, [fp, #-236]	; 0xffffff14
    b798:	add	r2, r2, r2, lsl #1
    b79c:	str	r6, [fp, #-264]	; 0xfffffef8
    b7a0:	str	r2, [fp, #-224]	; 0xffffff20
    b7a4:	add	r0, r0, r1
    b7a8:	sub	r2, fp, #220	; 0xdc
    b7ac:	str	r0, [fp, #-228]	; 0xffffff1c
    b7b0:	str	r2, [fp, #-256]	; 0xffffff00
    b7b4:	ldr	r3, [fp, #-248]	; 0xffffff08
    b7b8:	mov	r5, r6
    b7bc:	ldr	lr, [fp, #-240]	; 0xffffff10
    b7c0:	ldr	r0, [fp, #-228]	; 0xffffff1c
    b7c4:	ldr	r1, [r3, #44]	; 0x2c
    b7c8:	ldr	r2, [r3, #16]
    b7cc:	add	r3, r9, r9, lsl #1
    b7d0:	add	r7, lr, r3
    b7d4:	ldr	r4, [fp, #-256]	; 0xffffff00
    b7d8:	ldr	r3, [r1]
    b7dc:	sub	lr, fp, #124	; 0x7c
    b7e0:	ldr	r1, [fp, #-224]	; 0xffffff20
    b7e4:	add	r9, r9, #16
    b7e8:	mla	r3, r3, r0, r2
    b7ec:	ldr	r2, [fp, #-264]	; 0xfffffef8
    b7f0:	add	r3, r3, r1
    b7f4:	add	r1, r1, #48	; 0x30
    b7f8:	str	r1, [fp, #-224]	; 0xffffff20
    b7fc:	vld3.8	{d22,d24,d26}, [r3]!
    b800:	vld3.8	{d23,d25,d27}, [r3]!
    b804:	vstmia	r2, {d22-d27}
    b808:	str	r6, [fp, #-264]	; 0xfffffef8
    b80c:	ldr	ip, [fp, #-260]	; 0xfffffefc
    b810:	ldm	r5!, {r0, r1, r2, r3}
    b814:	stmia	ip!, {r0, r1, r2, r3}
    b818:	vldr	d18, [fp, #-124]	; 0xffffff84
    b81c:	vldr	d19, [fp, #-116]	; 0xffffff8c
    b820:	ldm	r5!, {r0, r1, r2, r3}
    b824:	str	lr, [fp, #-260]	; 0xfffffefc
    b828:	vshr.u8	q9, q9, #4
    b82c:	stmia	ip!, {r0, r1, r2, r3}
    b830:	vldr	d16, [fp, #-108]	; 0xffffff94
    b834:	vldr	d17, [fp, #-100]	; 0xffffff9c
    b838:	ldm	r5, {r0, r1, r2, r3}
    b83c:	vshr.u8	q8, q8, #4
    b840:	stm	ip, {r0, r1, r2, r3}
    b844:	ldr	ip, [fp, #-272]	; 0xfffffef0
    b848:	vstr	d18, [fp, #-124]	; 0xffffff84
    b84c:	vstr	d19, [fp, #-116]	; 0xffffff8c
    b850:	str	sl, [r4], #4
    b854:	ldr	lr, [fp, #-256]	; 0xffffff00
    b858:	vstr	d16, [fp, #-108]	; 0xffffff94
    b85c:	vstr	d17, [fp, #-100]	; 0xffffff9c
    b860:	ldm	ip!, {r0, r1, r2, r3}
    b864:	vldr	d16, [fp, #-92]	; 0xffffffa4
    b868:	vldr	d17, [fp, #-84]	; 0xffffffac
    b86c:	str	sl, [lr, #4]
    b870:	sub	lr, fp, #220	; 0xdc
    b874:	str	lr, [fp, #-256]	; 0xffffff00
    b878:	mov	lr, r6
    b87c:	vshr.u8	q8, q8, #4
    b880:	add	r4, r4, #4
    b884:	stmia	lr!, {r0, r1, r2, r3}
    b888:	vstr	d16, [fp, #-92]	; 0xffffffa4
    b88c:	vstr	d17, [fp, #-84]	; 0xffffffac
    b890:	ldm	ip!, {r0, r1, r2, r3}
    b894:	str	sl, [r4], #4
    b898:	str	sl, [r4], #4
    b89c:	str	sl, [r4], #4
    b8a0:	str	sl, [r4], #4
    b8a4:	stmia	lr!, {r0, r1, r2, r3}
    b8a8:	mov	lr, r6
    b8ac:	ldm	ip, {r0, r1, r2, r3}
    b8b0:	str	sl, [r4], #4
    b8b4:	stm	r5, {r0, r1, r2, r3}
    b8b8:	str	sl, [r4], #4
    b8bc:	ldm	lr!, {r0, r1, r2, r3}
    b8c0:	str	sl, [r4], #4
    b8c4:	str	sl, [r4], #4
    b8c8:	str	sl, [r4], #4
    b8cc:	str	sl, [r4]
    b8d0:	ldr	ip, [fp, #-276]	; 0xfffffeec
    b8d4:	stmia	ip!, {r0, r1, r2, r3}
    b8d8:	ldm	lr!, {r0, r1, r2, r3}
    b8dc:	stmia	ip!, {r0, r1, r2, r3}
    b8e0:	ldm	r5, {r0, r1, r2, r3}
    b8e4:	stm	ip, {r0, r1, r2, r3}
    b8e8:	sub	r0, fp, #220	; 0xdc
    b8ec:	vldmia	r0, {d16-d21}
    b8f0:	vst3.8	{d16,d18,d20}, [r7]!
    b8f4:	vst3.8	{d17,d19,d21}, [r7]!
    b8f8:	ldr	r1, [fp, #-252]	; 0xffffff04
    b8fc:	ldr	r3, [r1, #8]
    b900:	cmp	r3, r9
    b904:	bgt	b7b4 <MeanShift::pdf_representation(cv::Mat const&, cv::Rect_<int> const&)+0x164>
    b908:	ldr	ip, [fp, #-240]	; 0xffffff10
    b90c:	mov	lr, #0
    b910:	ldr	r2, [fp, #-244]	; 0xffffff0c
    b914:	ldr	r4, [fp, #-232]	; 0xffffff18
    b918:	ldrb	r0, [ip]
    b91c:	ldr	r1, [r2, #116]	; 0x74
    b920:	ldr	r2, [r2, #88]	; 0x58
    b924:	ldr	r3, [r1]
    b928:	add	r2, r2, lr
    b92c:	ldr	r1, [r8, #16]
    b930:	add	lr, lr, #4
    b934:	cmp	lr, #344	; 0x158
    b938:	mul	r3, r3, r4
    b93c:	add	r4, r1, r0, lsl #2
    b940:	vldr	s15, [r4]
    b944:	add	r2, r2, r3
    b948:	vldr	s14, [r2]
    b94c:	vadd.f32	s15, s15, s14
    b950:	vmov	r2, s15
    b954:	str	r2, [r1, r0, lsl #2]
    b958:	ldr	r2, [r8, #44]	; 0x2c
    b95c:	ldrb	r1, [ip, #1]
    b960:	ldr	r0, [r8, #16]
    b964:	ldr	r3, [r2]
    b968:	add	r3, r3, r1, lsl #2
    b96c:	add	r4, r0, r3
    b970:	vldr	s15, [r4]
    b974:	vadd.f32	s15, s15, s14
    b978:	vmov	r1, s15
    b97c:	str	r1, [r0, r3]
    b980:	ldr	r2, [r8, #44]	; 0x2c
    b984:	ldrb	r0, [ip, #2]
    b988:	add	ip, ip, #3
    b98c:	ldr	r1, [r8, #16]
    b990:	ldr	r3, [r2]
    b994:	lsl	r3, r3, #1
    b998:	add	r3, r3, r0, lsl #2
    b99c:	add	r2, r1, r3
    b9a0:	vldr	s15, [r2]
    b9a4:	vadd.f32	s15, s15, s14
    b9a8:	vmov	r4, s15
    b9ac:	str	r4, [r1, r3]
    b9b0:	bne	b910 <MeanShift::pdf_representation(cv::Mat const&, cv::Rect_<int> const&)+0x2c0>
    b9b4:	ldr	lr, [fp, #-232]	; 0xffffff18
    b9b8:	add	lr, lr, #1
    b9bc:	str	lr, [fp, #-232]	; 0xffffff18
    b9c0:	cmp	lr, #58	; 0x3a
    b9c4:	bne	b778 <MeanShift::pdf_representation(cv::Mat const&, cv::Rect_<int> const&)+0x128>
    b9c8:	mov	r0, r8
    b9cc:	sub	sp, fp, #40	; 0x28
    b9d0:	ldm	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
    b9d4:	mov	r4, r0
    b9d8:	mov	r0, r8
    b9dc:	bl	d740 <cv::Mat::~Mat()>
    b9e0:	mov	r0, r4
    b9e4:	bl	9f84 <__cxa_end_cleanup@plt>
    b9e8:	nop	{0}
    b9ec:	nop	{0}

0000b9f0 <MeanShift::MeanShift()>:
    b9f0:	mov	ip, sp
    b9f4:	mov	r3, #0
    b9f8:	push	{r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}
    b9fc:	add	sl, r0, #268	; 0x10c
    ba00:	mov	r4, r0
    ba04:	add	r2, r0, #8
    ba08:	add	r1, r0, #48	; 0x30
    ba0c:	str	r3, [r0, #120]	; 0x78
    ba10:	str	r2, [r0, #40]	; 0x28
    ba14:	sub	fp, ip, #4
    ba18:	str	r1, [r0, #44]	; 0x2c
    ba1c:	add	r2, r0, #80	; 0x50
    ba20:	add	r1, r0, #120	; 0x78
    ba24:	str	r3, [r0]
    ba28:	str	r2, [r0, #112]	; 0x70
    ba2c:	add	r8, r4, #128	; 0x80
    ba30:	str	r1, [r0, #116]	; 0x74
    ba34:	mov	r0, sl
    ba38:	str	r3, [r4, #4]
    ba3c:	str	r3, [r4, #8]
    ba40:	str	r3, [r4, #12]
    ba44:	str	r3, [r4, #16]
    ba48:	str	r3, [r4, #20]
    ba4c:	str	r3, [r4, #24]
    ba50:	str	r3, [r4, #28]
    ba54:	str	r3, [r4, #32]
    ba58:	str	r3, [r4, #36]	; 0x24
    ba5c:	str	r3, [r4, #52]	; 0x34
    ba60:	str	r3, [r4, #48]	; 0x30
    ba64:	str	r3, [r4, #56]	; 0x38
    ba68:	str	r3, [r4, #60]	; 0x3c
    ba6c:	str	r3, [r4, #64]	; 0x40
    ba70:	str	r3, [r4, #68]	; 0x44
    ba74:	str	r3, [r4, #72]	; 0x48
    ba78:	str	r3, [r4, #76]	; 0x4c
    ba7c:	str	r3, [r4, #80]	; 0x50
    ba80:	str	r3, [r4, #84]	; 0x54
    ba84:	str	r3, [r4, #88]	; 0x58
    ba88:	str	r3, [r4, #92]	; 0x5c
    ba8c:	str	r3, [r4, #96]	; 0x60
    ba90:	str	r3, [r4, #100]	; 0x64
    ba94:	str	r3, [r4, #104]	; 0x68
    ba98:	str	r3, [r4, #108]	; 0x6c
    ba9c:	str	r3, [r4, #124]	; 0x7c
    baa0:	bl	9f9c <std::ios_base::ios_base()@plt>
    baa4:	movw	r7, #53856	; 0xd260
    baa8:	movt	r7, #2
    baac:	ldr	r2, [pc, #244]	; bba8 <MeanShift::MeanShift()+0x1b8>
    bab0:	mov	r3, #0
    bab4:	ldr	ip, [r7, #4]
    bab8:	mov	r1, r3
    babc:	str	r3, [r4, #380]	; 0x17c
    bac0:	str	r2, [r4, #268]	; 0x10c
    bac4:	str	ip, [r4, #128]	; 0x80
    bac8:	strb	r3, [r4, #384]	; 0x180
    bacc:	strb	r3, [r4, #385]	; 0x181
    bad0:	str	r3, [r4, #388]	; 0x184
    bad4:	str	r3, [r4, #392]	; 0x188
    bad8:	str	r3, [r4, #396]	; 0x18c
    badc:	str	r3, [r4, #400]	; 0x190
    bae0:	ldr	r3, [r7, #8]
    bae4:	ldr	r0, [ip, #-12]
    bae8:	str	r3, [r8, r0]
    baec:	ldr	r2, [r4, #128]	; 0x80
    baf0:	ldr	r0, [r2, #-12]
    baf4:	add	r0, r8, r0
    baf8:	bl	9cf0 <std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)@plt>
    bafc:	ldr	r2, [pc, #168]	; bbac <MeanShift::MeanShift()+0x1bc>
    bb00:	add	r5, r4, #132	; 0x84
    bb04:	add	r6, r8, #140	; 0x8c
    bb08:	add	r3, r2, #20
    bb0c:	mov	r0, r5
    bb10:	str	r2, [r4, #128]	; 0x80
    bb14:	str	r3, [r8, #140]	; 0x8c
    bb18:	bl	9f00 <std::basic_filebuf<char, std::char_traits<char> >::basic_filebuf()@plt>
    bb1c:	mov	r0, r6
    bb20:	mov	r1, r5
    bb24:	bl	9cf0 <std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)@plt>
    bb28:	mov	r2, #0
    bb2c:	mov	r3, #0
    bb30:	mov	r1, #424	; 0x1a8
    bb34:	mov	ip, #416	; 0x1a0
    bb38:	strd	r2, [r4, r1]
    bb3c:	mov	r0, r4
    bb40:	mov	r1, #408	; 0x198
    bb44:	strd	r2, [r4, ip]
    bb48:	strd	r2, [r4, r1]
    bb4c:	ldm	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}
    bb50:	mov	r6, r0
    bb54:	add	r0, r4, #72	; 0x48
    bb58:	bl	d740 <cv::Mat::~Mat()>
    bb5c:	mov	r0, r4
    bb60:	bl	d740 <cv::Mat::~Mat()>
    bb64:	mov	r0, r6
    bb68:	bl	9f84 <__cxa_end_cleanup@plt>
    bb6c:	mov	r6, r0
    bb70:	mov	r0, r5
    bb74:	bl	9f24 <std::basic_filebuf<char, std::char_traits<char> >::~basic_filebuf()@plt>
    bb78:	ldr	r3, [r7, #4]
    bb7c:	ldr	r1, [r7, #8]
    bb80:	str	r3, [r4, #128]	; 0x80
    bb84:	ldr	r2, [r3, #-12]
    bb88:	str	r1, [r8, r2]
    bb8c:	mov	r0, sl
    bb90:	bl	9fcc <std::basic_ios<char, std::char_traits<char> >::~basic_ios()@plt>
    bb94:	b	bb54 <MeanShift::MeanShift()+0x164>
    bb98:	mov	r6, r0
    bb9c:	b	bb78 <MeanShift::MeanShift()+0x188>
    bba0:	mov	r6, r0
    bba4:	b	bb8c <MeanShift::MeanShift()+0x19c>
    bba8:	.word	0x0002d370
    bbac:	.word	0x0002d34c

0000bbb0 <MeanShift::CalWeight(cv::Mat const&, cv::Mat&, cv::Rect_<int>&)>:
    bbb0:	mov	ip, sp
    bbb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
    bbb8:	vpush	{d8}
    bbbc:	sub	fp, ip, #4
    bbc0:	sub	sp, sp, #140	; 0x8c
    bbc4:	sub	r8, fp, #100	; 0x64
    bbc8:	mov	r9, r3
    bbcc:	ldr	sl, [fp, #4]
    bbd0:	mov	r6, r0
    bbd4:	mov	r7, r2
    bbd8:	mov	r3, #0
    bbdc:	str	r1, [fp, #-168]	; 0xffffff58
    bbe0:	mov	r0, #0
    bbe4:	mov	r1, #0
    bbe8:	strd	r0, [r8, r3]
    bbec:	add	r3, r3, #8
    bbf0:	cmp	r3, #32
    bbf4:	bne	bbe0 <MeanShift::CalWeight(cv::Mat const&, cv::Mat&, cv::Rect_<int>&)+0x30>
    bbf8:	mov	lr, #0
    bbfc:	sub	r2, fp, #164	; 0xa4
    bc00:	str	lr, [r6, #48]	; 0x30
    bc04:	mov	r3, #5
    bc08:	str	lr, [r6]
    bc0c:	add	r1, r6, #8
    bc10:	str	lr, [r6, #4]
    bc14:	add	r0, r6, #48	; 0x30
    bc18:	str	lr, [r6, #8]
    bc1c:	sub	r4, fp, #60	; 0x3c
    bc20:	str	r1, [r6, #40]	; 0x28
    bc24:	mov	r5, #0
    bc28:	str	r0, [r6, #44]	; 0x2c
    bc2c:	mov	r1, #2
    bc30:	str	lr, [r6, #12]
    bc34:	mov	r0, r6
    bc38:	str	lr, [r6, #16]
    bc3c:	mov	ip, #58	; 0x3a
    bc40:	str	r4, [fp, #-176]	; 0xffffff50
    bc44:	mov	r4, #0
    bc48:	str	lr, [r6, #20]
    bc4c:	strd	r4, [fp, #-92]	; 0xffffffa4
    bc50:	str	lr, [r6, #24]
    bc54:	mov	r4, #0
    bc58:	movw	r5, #0
    bc5c:	movt	r5, #16368	; 0x3ff0
    bc60:	strd	r4, [fp, #-100]	; 0xffffff9c
    bc64:	str	lr, [r6, #28]
    bc68:	mov	r4, #0
    bc6c:	mov	r5, #0
    bc70:	strd	r4, [fp, #-76]	; 0xffffffb4
    bc74:	str	lr, [r6, #32]
    bc78:	strd	r4, [fp, #-84]	; 0xffffffac
    bc7c:	str	lr, [r6, #36]	; 0x24
    bc80:	str	lr, [r6, #52]	; 0x34
    bc84:	mov	r4, #86	; 0x56
    bc88:	str	ip, [fp, #-164]	; 0xffffff5c
    bc8c:	str	r4, [fp, #-160]	; 0xffffff60
    bc90:	bl	9fd8 <cv::Mat::create(int, int const*, int)@plt>
    bc94:	mov	r0, r6
    bc98:	mov	r1, r8
    bc9c:	bl	a020 <cv::Mat::operator=(cv::Scalar_<double> const&)@plt>
    bca0:	sub	r0, fp, #60	; 0x3c
    bca4:	bl	abf0 <now()>
    bca8:	ldr	r0, [fp, #-168]	; 0xffffff58
    bcac:	movw	ip, #54212	; 0xd3c4
    bcb0:	movt	ip, #2
    bcb4:	movw	lr, #54216	; 0xd3c8
    bcb8:	movt	lr, #2
    bcbc:	mov	r5, #0
    bcc0:	ldr	r3, [r0, #16]
    bcc4:	movw	r8, #54204	; 0xd3bc
    bcc8:	ldr	r2, [ip]
    bccc:	movt	r8, #2
    bcd0:	mov	r4, r5
    bcd4:	ldr	r1, [r3]
    bcd8:	str	r1, [r2]
    bcdc:	ldr	r3, [r9, #16]
    bce0:	ldr	r2, [lr]
    bce4:	ldr	r1, [r3]
    bce8:	str	r1, [r2]
    bcec:	ldr	r3, [r0, #16]
    bcf0:	ldr	r2, [ip]
    bcf4:	ldr	r1, [r3, #4]
    bcf8:	str	r1, [r2, #4]
    bcfc:	ldr	r3, [r9, #16]
    bd00:	ldr	r2, [lr]
    bd04:	ldr	r1, [r3, #4]
    bd08:	str	r1, [r2, #4]
    bd0c:	ldr	r3, [r0, #16]
    bd10:	ldr	r2, [ip]
    bd14:	ldr	r1, [r3, #8]
    bd18:	str	r1, [r2, #8]
    bd1c:	ldr	r3, [r9, #16]
    bd20:	ldr	r2, [lr]
    bd24:	ldr	r1, [r3, #8]
    bd28:	str	r1, [r2, #8]
    bd2c:	ldr	r3, [r0, #16]
    bd30:	ldr	r2, [ip]
    bd34:	ldr	r1, [r3, #12]
    bd38:	str	r1, [r2, #12]
    bd3c:	ldr	r3, [r9, #16]
    bd40:	ldr	r2, [lr]
    bd44:	ldr	r1, [r3, #12]
    bd48:	str	r1, [r2, #12]
    bd4c:	ldr	r3, [r0, #16]
    bd50:	ldr	r2, [ip]
    bd54:	ldr	r1, [r3, #16]
    bd58:	str	r1, [r2, #16]
    bd5c:	ldr	r3, [r9, #16]
    bd60:	ldr	r2, [lr]
    bd64:	ldr	r1, [r3, #16]
    bd68:	str	r1, [r2, #16]
    bd6c:	ldr	r3, [r0, #16]
    bd70:	ldr	r2, [ip]
    bd74:	ldr	r1, [r3, #20]
    bd78:	str	r1, [r2, #20]
    bd7c:	ldr	r3, [r9, #16]
    bd80:	ldr	r2, [lr]
    bd84:	ldr	r1, [r3, #20]
    bd88:	str	r1, [r2, #20]
    bd8c:	ldr	r3, [r0, #16]
    bd90:	ldr	r2, [ip]
    bd94:	ldr	r1, [r3, #24]
    bd98:	str	r1, [r2, #24]
    bd9c:	ldr	r3, [r9, #16]
    bda0:	ldr	r2, [lr]
    bda4:	ldr	r1, [r3, #24]
    bda8:	str	r1, [r2, #24]
    bdac:	ldr	r3, [r0, #16]
    bdb0:	ldr	r2, [ip]
    bdb4:	ldr	r1, [r3, #28]
    bdb8:	str	r1, [r2, #28]
    bdbc:	ldr	r3, [r9, #16]
    bdc0:	ldr	r2, [lr]
    bdc4:	ldr	r1, [r3, #28]
    bdc8:	str	r1, [r2, #28]
    bdcc:	ldr	r3, [r0, #16]
    bdd0:	ldr	r2, [ip]
    bdd4:	ldr	r1, [r3, #32]
    bdd8:	str	r1, [r2, #32]
    bddc:	ldr	r3, [r9, #16]
    bde0:	ldr	r2, [lr]
    bde4:	ldr	r1, [r3, #32]
    bde8:	str	r1, [r2, #32]
    bdec:	ldr	r3, [r0, #16]
    bdf0:	ldr	r2, [ip]
    bdf4:	ldr	r1, [r3, #36]	; 0x24
    bdf8:	str	r1, [r2, #36]	; 0x24
    bdfc:	ldr	r3, [r9, #16]
    be00:	ldr	r2, [lr]
    be04:	ldr	r1, [r3, #36]	; 0x24
    be08:	str	r1, [r2, #36]	; 0x24
    be0c:	ldr	r3, [r0, #16]
    be10:	ldr	r2, [ip]
    be14:	ldr	r1, [r3, #40]	; 0x28
    be18:	str	r1, [r2, #40]	; 0x28
    be1c:	ldr	r3, [r9, #16]
    be20:	ldr	r2, [lr]
    be24:	ldr	r1, [r3, #40]	; 0x28
    be28:	str	r1, [r2, #40]	; 0x28
    be2c:	ldr	r3, [r0, #16]
    be30:	ldr	r2, [ip]
    be34:	ldr	r1, [r3, #44]	; 0x2c
    be38:	str	r1, [r2, #44]	; 0x2c
    be3c:	ldr	r3, [r9, #16]
    be40:	ldr	r2, [lr]
    be44:	ldr	r1, [r3, #44]	; 0x2c
    be48:	str	r1, [r2, #44]	; 0x2c
    be4c:	ldr	r3, [r0, #16]
    be50:	ldr	r2, [ip]
    be54:	ldr	r1, [r3, #48]	; 0x30
    be58:	str	r1, [r2, #48]	; 0x30
    be5c:	ldr	r3, [r9, #16]
    be60:	ldr	r2, [lr]
    be64:	ldr	r1, [r3, #48]	; 0x30
    be68:	str	r1, [r2, #48]	; 0x30
    be6c:	ldr	r3, [r0, #16]
    be70:	ldr	r2, [ip]
    be74:	ldr	r1, [r3, #52]	; 0x34
    be78:	str	r1, [r2, #52]	; 0x34
    be7c:	ldr	r3, [r9, #16]
    be80:	ldr	r2, [lr]
    be84:	ldr	r1, [r3, #52]	; 0x34
    be88:	str	r1, [r2, #52]	; 0x34
    be8c:	ldr	r3, [r0, #16]
    be90:	ldr	r2, [ip]
    be94:	ldr	r1, [r3, #56]	; 0x38
    be98:	str	r1, [r2, #56]	; 0x38
    be9c:	ldr	r3, [r9, #16]
    bea0:	ldr	r2, [lr]
    bea4:	ldr	r1, [r3, #56]	; 0x38
    bea8:	str	r1, [r2, #56]	; 0x38
    beac:	ldr	r1, [fp, #-168]	; 0xffffff58
    beb0:	ldr	r0, [ip]
    beb4:	ldr	r3, [r1, #16]
    beb8:	ldr	r2, [r3, #60]	; 0x3c
    bebc:	str	r2, [r0, #60]	; 0x3c
    bec0:	ldr	r3, [r9, #16]
    bec4:	ldr	r1, [lr]
    bec8:	ldr	r2, [r3, #60]	; 0x3c
    becc:	str	r2, [r1, #60]	; 0x3c
    bed0:	mov	lr, #0
    bed4:	ldr	r3, [r7, #44]	; 0x2c
    bed8:	ldr	r2, [sl]
    bedc:	ldr	r1, [sl, #4]
    bee0:	add	r2, lr, r2
    bee4:	ldr	r0, [r3]
    bee8:	add	r1, r5, r1
    beec:	ldr	ip, [r7, #16]
    bef0:	add	r2, r2, r2, lsl #1
    bef4:	ldr	r3, [r8]
    bef8:	mla	r1, r0, r1, r2
    befc:	add	r3, r3, r4
    bf00:	ldrb	r2, [ip, r1]
    bf04:	strb	r2, [r3, lr]
    bf08:	add	lr, lr, #1
    bf0c:	cmp	lr, #86	; 0x56
    bf10:	bne	bed4 <MeanShift::CalWeight(cv::Mat const&, cv::Mat&, cv::Rect_<int>&)+0x324>
    bf14:	add	r5, r5, #1
    bf18:	add	r4, r4, #86	; 0x56
    bf1c:	cmp	r5, #58	; 0x3a
    bf20:	bne	bed0 <MeanShift::CalWeight(cv::Mat const&, cv::Mat&, cv::Rect_<int>&)+0x320>
    bf24:	mov	r0, #1
    bf28:	bl	a4c0 <pool_notify_Execute(unsigned char)>
    bf2c:	sub	r2, fp, #68	; 0x44
    bf30:	str	r2, [fp, #-180]	; 0xffffff4c
    bf34:	mov	r0, r2
    bf38:	bl	abf0 <now()>
    bf3c:	ldr	r3, [fp, #-176]	; 0xffffff50
    bf40:	mov	ip, #408	; 0x198
    bf44:	ldr	r4, [fp, #-180]	; 0xffffff4c
    bf48:	ldr	r5, [fp, #-168]	; 0xffffff58
    bf4c:	ldm	r3, {r0, r1}
    bf50:	add	r5, r5, ip
    bf54:	ldm	r4, {r2, r3}
    bf58:	mov	r4, #0
    bf5c:	vldr	d8, [r5]
    bf60:	mov	r5, #0
    bf64:	strd	r4, [sp]
    bf68:	bl	ab30 <diffToNanoseconds(timespec, timespec, double)>
    bf6c:	vmov	d17, r0, r1
    bf70:	mov	r3, #408	; 0x198
    bf74:	ldr	ip, [fp, #-168]	; 0xffffff58
    bf78:	sub	r0, fp, #60	; 0x3c
    bf7c:	vadd.f64	d16, d17, d8
    bf80:	vmov	r4, r5, d16
    bf84:	strd	r4, [ip, r3]
    bf88:	bl	abf0 <now()>
    bf8c:	ldr	ip, [fp, #-168]	; 0xffffff58
    bf90:	mov	r0, #0
    bf94:	ldr	lr, [r9, #16]
    bf98:	ldr	r8, [r9, #44]	; 0x2c
    bf9c:	ldr	r5, [ip, #16]
    bfa0:	ldr	r4, [ip, #44]	; 0x2c
    bfa4:	ldr	r3, [r4]
    bfa8:	lsl	r1, r0, #2
    bfac:	ldr	r2, [r8]
    bfb0:	add	r0, r0, #4
    bfb4:	add	r3, r5, r3
    bfb8:	cmp	r0, #16
    bfbc:	add	r3, r3, r1
    bfc0:	add	r2, lr, r2
    bfc4:	add	r2, r2, r1
    bfc8:	vld1.32	{d18-d19}, [r3]
    bfcc:	vld1.32	{d16-d17}, [r2]
    bfd0:	vrecpe.f32	q9, q9
    bfd4:	vmul.f32	q8, q8, q9
    bfd8:	sub	r2, fp, #164	; 0xa4
    bfdc:	add	r1, r2, r1
    bfe0:	vrsqrte.f32	q8, q8
    bfe4:	vst1.32	{d16-d17}, [r1]
    bfe8:	bne	bfa4 <MeanShift::CalWeight(cv::Mat const&, cv::Mat&, cv::Rect_<int>&)+0x3f4>
    bfec:	ldr	r2, [sl, #4]
    bff0:	mov	r5, #0
    bff4:	ldr	r3, [sl]
    bff8:	rsb	r2, r2, r2, lsl #4
    bffc:	add	r3, r3, r3, lsl #1
    c000:	add	r3, r3, r2, lsl #7
    c004:	add	r8, r3, #1
    c008:	mov	r4, r8
    c00c:	mov	lr, #0
    c010:	ldr	r3, [r6, #44]	; 0x2c
    c014:	ldr	r0, [r7, #16]
    c018:	ldr	ip, [r6, #16]
    c01c:	ldr	r1, [r3]
    c020:	ldrb	r2, [r0, r4]
    c024:	sub	r0, fp, #52	; 0x34
    c028:	add	r4, r4, #3
    c02c:	mla	r1, r1, r5, lr
    c030:	asr	r2, r2, #4
    c034:	add	lr, lr, #4
    c038:	add	r3, r0, r2, lsl #2
    c03c:	vldr	s13, [r3, #-112]	; 0xffffff90
    c040:	add	r2, ip, r1
    c044:	vldr	s15, [r2]
    c048:	vmul.f32	s14, s15, s13
    c04c:	cmp	lr, #344	; 0x158
    c050:	vmov	r3, s14
    c054:	str	r3, [ip, r1]
    c058:	bne	c010 <MeanShift::CalWeight(cv::Mat const&, cv::Mat&, cv::Rect_<int>&)+0x460>
    c05c:	add	r5, r5, #1
    c060:	cmp	r5, #58	; 0x3a
    c064:	addne	r8, r8, #1920	; 0x780
    c068:	bne	c008 <MeanShift::CalWeight(cv::Mat const&, cv::Mat&, cv::Rect_<int>&)+0x458>
    c06c:	ldr	r4, [fp, #-168]	; 0xffffff58
    c070:	mov	ip, #0
    c074:	ldr	r8, [r9, #44]	; 0x2c
    c078:	ldr	lr, [r9, #16]
    c07c:	ldr	r5, [r4, #16]
    c080:	ldr	r4, [r4, #44]	; 0x2c
    c084:	ldr	r3, [r4]
    c088:	lsl	r1, ip, #2
    c08c:	ldr	r2, [r8]
    c090:	add	ip, ip, #4
    c094:	sub	r9, fp, #164	; 0xa4
    c098:	cmp	ip, #16
    c09c:	add	r3, r5, r3, lsl #1
    c0a0:	add	r0, r9, r1
    c0a4:	add	r3, r3, r1
    c0a8:	add	r2, lr, r2, lsl #1
    c0ac:	vld1.32	{d18-d19}, [r3]
    c0b0:	add	r2, r2, r1
    c0b4:	vld1.32	{d16-d17}, [r2]
    c0b8:	vrecpe.f32	q9, q9
    c0bc:	vmul.f32	q8, q8, q9
    c0c0:	vrsqrte.f32	q8, q8
    c0c4:	vst1.32	{d16-d17}, [r0]
    c0c8:	bne	c084 <MeanShift::CalWeight(cv::Mat const&, cv::Mat&, cv::Rect_<int>&)+0x4d4>
    c0cc:	ldr	r2, [sl, #4]
    c0d0:	mov	r5, #0
    c0d4:	ldr	r3, [sl]
    c0d8:	rsb	r2, r2, r2, lsl #4
    c0dc:	add	r3, r3, r3, lsl #1
    c0e0:	add	r3, r3, r2, lsl #7
    c0e4:	add	r8, r3, #2
    c0e8:	mov	r4, r8
    c0ec:	mov	lr, #0
    c0f0:	ldr	r3, [r6, #44]	; 0x2c
    c0f4:	ldr	r0, [r7, #16]
    c0f8:	ldr	ip, [r6, #16]
    c0fc:	ldr	r1, [r3]
    c100:	ldrb	r2, [r0, r4]
    c104:	sub	r0, fp, #52	; 0x34
    c108:	add	r4, r4, #3
    c10c:	mla	r1, r1, r5, lr
    c110:	asr	r2, r2, #4
    c114:	add	lr, lr, #4
    c118:	add	r3, r0, r2, lsl #2
    c11c:	vldr	s13, [r3, #-112]	; 0xffffff90
    c120:	add	r2, ip, r1
    c124:	vldr	s15, [r2]
    c128:	vmul.f32	s14, s15, s13
    c12c:	cmp	lr, #344	; 0x158
    c130:	vmov	r3, s14
    c134:	str	r3, [ip, r1]
    c138:	bne	c0f0 <MeanShift::CalWeight(cv::Mat const&, cv::Mat&, cv::Rect_<int>&)+0x540>
    c13c:	add	r5, r5, #1
    c140:	cmp	r5, #58	; 0x3a
    c144:	addne	r8, r8, #1920	; 0x780
    c148:	bne	c0e8 <MeanShift::CalWeight(cv::Mat const&, cv::Mat&, cv::Rect_<int>&)+0x538>
    c14c:	sub	r0, fp, #68	; 0x44
    c150:	bl	abf0 <now()>
    c154:	ldr	r4, [fp, #-176]	; 0xffffff50
    c158:	mov	ip, #416	; 0x1a0
    c15c:	ldr	r5, [fp, #-180]	; 0xffffff4c
    c160:	ldr	r9, [fp, #-168]	; 0xffffff58
    c164:	ldm	r4, {r0, r1}
    c168:	mov	r4, #0
    c16c:	add	r9, r9, ip
    c170:	ldm	r5, {r2, r3}
    c174:	mov	r5, #0
    c178:	vldr	d8, [r9]
    c17c:	strd	r4, [sp]
    c180:	bl	ab30 <diffToNanoseconds(timespec, timespec, double)>
    c184:	vmov	d17, r0, r1
    c188:	mov	r3, #416	; 0x1a0
    c18c:	ldr	r9, [fp, #-168]	; 0xffffff58
    c190:	sub	r0, fp, #60	; 0x3c
    c194:	vadd.f64	d16, d17, d8
    c198:	vmov	r4, r5, d16
    c19c:	strd	r4, [r9, r3]
    c1a0:	bl	abf0 <now()>
    c1a4:	bl	a4a0 <pool_notify_Wait()>
    c1a8:	mov	r5, #0
    c1ac:	movw	r4, #54208	; 0xd3c0
    c1b0:	movt	r4, #2
    c1b4:	mov	r7, r5
    c1b8:	mov	lr, r7
    c1bc:	mov	ip, #0
    c1c0:	ldr	r1, [r6, #44]	; 0x2c
    c1c4:	ldr	r0, [r6, #16]
    c1c8:	ldr	r2, [r4]
    c1cc:	ldr	r3, [r1]
    c1d0:	add	r2, r2, lr
    c1d4:	vldr	s13, [r2]
    c1d8:	add	lr, lr, #4
    c1dc:	mla	r3, r3, r5, ip
    c1e0:	add	ip, ip, #4
    c1e4:	cmp	ip, #344	; 0x158
    c1e8:	add	r1, r0, r3
    c1ec:	vldr	s15, [r1]
    c1f0:	vmul.f32	s14, s15, s13
    c1f4:	vmov	r2, s14
    c1f8:	str	r2, [r0, r3]
    c1fc:	bne	c1c0 <MeanShift::CalWeight(cv::Mat const&, cv::Mat&, cv::Rect_<int>&)+0x610>
    c200:	add	r5, r5, #1
    c204:	add	r7, r7, #344	; 0x158
    c208:	cmp	r5, #58	; 0x3a
    c20c:	bne	c1b8 <MeanShift::CalWeight(cv::Mat const&, cv::Mat&, cv::Rect_<int>&)+0x608>
    c210:	sub	r0, fp, #68	; 0x44
    c214:	bl	abf0 <now()>
    c218:	ldr	r3, [fp, #-176]	; 0xffffff50
    c21c:	mov	ip, #424	; 0x1a8
    c220:	ldr	r4, [fp, #-180]	; 0xffffff4c
    c224:	ldr	r5, [fp, #-168]	; 0xffffff58
    c228:	ldm	r3, {r0, r1}
    c22c:	add	r5, r5, ip
    c230:	ldm	r4, {r2, r3}
    c234:	mov	r4, #0
    c238:	vldr	d8, [r5]
    c23c:	mov	r5, #0
    c240:	strd	r4, [sp]
    c244:	bl	ab30 <diffToNanoseconds(timespec, timespec, double)>
    c248:	vmov	d17, r0, r1
    c24c:	mov	r3, #424	; 0x1a8
    c250:	ldr	r9, [fp, #-168]	; 0xffffff58
    c254:	mov	r0, r6
    c258:	vadd.f64	d16, d17, d8
    c25c:	vmov	r4, r5, d16
    c260:	strd	r4, [r9, r3]
    c264:	sub	ip, fp, #48	; 0x30
    c268:	vldmia	ip!, {d8}
    c26c:	sub	sp, fp, #40	; 0x28
    c270:	ldm	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
    c274:	mov	r4, r0
    c278:	mov	r0, r6
    c27c:	bl	d740 <cv::Mat::~Mat()>
    c280:	mov	r0, r4
    c284:	bl	9f84 <__cxa_end_cleanup@plt>
    c288:	nop	{0}
    c28c:	nop	{0}

0000c290 <neon_print(__simd128_uint8_t, std::string)>:
    c290:	mov	ip, sp
    c294:	vmov	d16, r0, r1
    c298:	vmov	d17, r2, r3
    c29c:	push	{r4, r5, fp, ip, lr, pc}
    c2a0:	movw	r4, #53872	; 0xd270
    c2a4:	movt	r4, #2
    c2a8:	sub	fp, ip, #4
    c2ac:	sub	sp, sp, #16
    c2b0:	sub	ip, fp, #36	; 0x24
    c2b4:	mov	r2, #10
    c2b8:	mov	r0, r4
    c2bc:	movw	r1, #13816	; 0x35f8
    c2c0:	movt	r1, #2
    c2c4:	vst1.8	{d16-d17}, [ip]
    c2c8:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    c2cc:	ldr	r3, [fp, #4]
    c2d0:	mov	r0, r4
    c2d4:	ldr	r1, [r3]
    c2d8:	ldr	r2, [r1, #-12]
    c2dc:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    c2e0:	mov	r2, #1
    c2e4:	movw	r1, #13828	; 0x3604
    c2e8:	movt	r1, #2
    c2ec:	mov	r5, r0
    c2f0:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    c2f4:	mov	r0, r5
    c2f8:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c2fc:	ldrb	r1, [fp, #-36]	; 0xffffffdc
    c300:	mov	r0, r4
    c304:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c308:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c30c:	ldrb	r1, [fp, #-35]	; 0xffffffdd
    c310:	mov	r0, r4
    c314:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c318:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c31c:	ldrb	r1, [fp, #-34]	; 0xffffffde
    c320:	mov	r0, r4
    c324:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c328:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c32c:	ldrb	r1, [fp, #-33]	; 0xffffffdf
    c330:	mov	r0, r4
    c334:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c338:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c33c:	ldrb	r1, [fp, #-32]	; 0xffffffe0
    c340:	mov	r0, r4
    c344:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c348:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c34c:	ldrb	r1, [fp, #-31]	; 0xffffffe1
    c350:	mov	r0, r4
    c354:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c358:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c35c:	ldrb	r1, [fp, #-30]	; 0xffffffe2
    c360:	mov	r0, r4
    c364:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c368:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c36c:	ldrb	r1, [fp, #-29]	; 0xffffffe3
    c370:	mov	r0, r4
    c374:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c378:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c37c:	ldrb	r1, [fp, #-28]	; 0xffffffe4
    c380:	mov	r0, r4
    c384:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c388:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c38c:	ldrb	r1, [fp, #-27]	; 0xffffffe5
    c390:	mov	r0, r4
    c394:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c398:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c39c:	ldrb	r1, [fp, #-26]	; 0xffffffe6
    c3a0:	mov	r0, r4
    c3a4:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c3a8:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c3ac:	ldrb	r1, [fp, #-25]	; 0xffffffe7
    c3b0:	mov	r0, r4
    c3b4:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c3b8:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c3bc:	ldrb	r1, [fp, #-24]	; 0xffffffe8
    c3c0:	mov	r0, r4
    c3c4:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c3c8:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c3cc:	ldrb	r1, [fp, #-23]	; 0xffffffe9
    c3d0:	mov	r0, r4
    c3d4:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c3d8:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c3dc:	ldrb	r1, [fp, #-22]	; 0xffffffea
    c3e0:	mov	r0, r4
    c3e4:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c3e8:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c3ec:	ldrb	r1, [fp, #-21]	; 0xffffffeb
    c3f0:	mov	r0, r4
    c3f4:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c3f8:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c3fc:	mov	r0, r4
    c400:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c404:	sub	sp, fp, #20
    c408:	ldm	sp, {r4, r5, fp, sp, pc}
    c40c:	nop	{0}

0000c410 <neon_print(__simd128_uint8_t)>:
    c410:	mov	ip, sp
    c414:	push	{r4, r5, r6, r7, r8, fp, ip, lr, pc}
    c418:	sub	fp, ip, #4
    c41c:	sub	r8, fp, #44	; 0x2c
    c420:	sub	sp, sp, #20
    c424:	mov	r7, r3
    c428:	mov	r6, r2
    c42c:	mov	r5, r1
    c430:	mov	r4, r0
    c434:	movw	r1, #13832	; 0x3608
    c438:	mov	r0, r8
    c43c:	movt	r1, #2
    c440:	sub	r2, fp, #37	; 0x25
    c444:	bl	a098 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)@plt>
    c448:	mov	r0, r4
    c44c:	mov	r1, r5
    c450:	mov	r2, r6
    c454:	mov	r3, r7
    c458:	str	r8, [sp]
    c45c:	bl	c290 <neon_print(__simd128_uint8_t, std::string)>
    c460:	ldr	r0, [fp, #-44]	; 0xffffffd4
    c464:	movw	r3, #53840	; 0xd250
    c468:	movt	r3, #2
    c46c:	sub	r4, r0, #12
    c470:	cmp	r4, r3
    c474:	bne	c480 <neon_print(__simd128_uint8_t)+0x70>
    c478:	sub	sp, fp, #32
    c47c:	ldm	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
    c480:	movw	r3, #40788	; 0x9f54
    c484:	movt	r3, #0
    c488:	cmp	r3, #0
    c48c:	beq	c4b4 <neon_print(__simd128_uint8_t)+0xa4>
    c490:	sub	r0, r0, #4
    c494:	mvn	r1, #0
    c498:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    c49c:	cmp	r0, #0
    c4a0:	bgt	c478 <neon_print(__simd128_uint8_t)+0x68>
    c4a4:	mov	r0, r4
    c4a8:	sub	r1, fp, #38	; 0x26
    c4ac:	bl	9f90 <std::string::_Rep::_M_destroy(std::allocator<char> const&)@plt>
    c4b0:	b	c478 <neon_print(__simd128_uint8_t)+0x68>
    c4b4:	ldr	r0, [r4, #8]
    c4b8:	sub	r3, r0, #1
    c4bc:	str	r3, [r4, #8]
    c4c0:	b	c49c <neon_print(__simd128_uint8_t)+0x8c>
    c4c4:	mov	r4, r0
    c4c8:	mov	r0, r4
    c4cc:	bl	9f84 <__cxa_end_cleanup@plt>
    c4d0:	mov	r4, r0
    c4d4:	mov	r0, r8
    c4d8:	bl	a080 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@plt>
    c4dc:	b	c4c8 <neon_print(__simd128_uint8_t)+0xb8>
    c4e0:	b	c4c4 <neon_print(__simd128_uint8_t)+0xb4>
    c4e4:	nop	{0}
    c4e8:	nop	{0}
    c4ec:	nop	{0}

0000c4f0 <neon_print(__simd128_float32_t, std::string)>:
    c4f0:	mov	ip, sp
    c4f4:	vmov	d16, r0, r1
    c4f8:	vmov	d17, r2, r3
    c4fc:	push	{r4, r5, fp, ip, lr, pc}
    c500:	movw	r4, #53872	; 0xd270
    c504:	movt	r4, #2
    c508:	sub	fp, ip, #4
    c50c:	sub	sp, sp, #16
    c510:	sub	ip, fp, #36	; 0x24
    c514:	mov	r2, #10
    c518:	mov	r0, r4
    c51c:	movw	r1, #13816	; 0x35f8
    c520:	movt	r1, #2
    c524:	vst1.32	{d16-d17}, [ip]
    c528:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    c52c:	ldr	r3, [fp, #4]
    c530:	mov	r0, r4
    c534:	ldr	r1, [r3]
    c538:	ldr	r2, [r1, #-12]
    c53c:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    c540:	mov	r2, #1
    c544:	movw	r1, #13828	; 0x3604
    c548:	movt	r1, #2
    c54c:	mov	r5, r0
    c550:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    c554:	mov	r0, r5
    c558:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c55c:	vldr	s15, [fp, #-36]	; 0xffffffdc
    c560:	vcvt.f64.f32	d17, s15
    c564:	mov	r0, r4
    c568:	vmov	r2, r3, d17
    c56c:	bl	9ed0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    c570:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c574:	vldr	s15, [fp, #-32]	; 0xffffffe0
    c578:	vcvt.f64.f32	d16, s15
    c57c:	mov	r0, r4
    c580:	vmov	r2, r3, d16
    c584:	bl	9ed0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    c588:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c58c:	vldr	s15, [fp, #-28]	; 0xffffffe4
    c590:	vcvt.f64.f32	d17, s15
    c594:	mov	r0, r4
    c598:	vmov	r2, r3, d17
    c59c:	bl	9ed0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    c5a0:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c5a4:	vldr	s15, [fp, #-24]	; 0xffffffe8
    c5a8:	vcvt.f64.f32	d16, s15
    c5ac:	mov	r0, r4
    c5b0:	vmov	r2, r3, d16
    c5b4:	bl	9ed0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    c5b8:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c5bc:	mov	r0, r4
    c5c0:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c5c4:	sub	sp, fp, #20
    c5c8:	ldm	sp, {r4, r5, fp, sp, pc}
    c5cc:	nop	{0}

0000c5d0 <neon_print(__simd128_float32_t)>:
    c5d0:	mov	ip, sp
    c5d4:	push	{r4, r5, r6, r7, r8, fp, ip, lr, pc}
    c5d8:	sub	fp, ip, #4
    c5dc:	sub	r8, fp, #44	; 0x2c
    c5e0:	sub	sp, sp, #20
    c5e4:	mov	r7, r3
    c5e8:	mov	r6, r2
    c5ec:	mov	r5, r1
    c5f0:	mov	r4, r0
    c5f4:	movw	r1, #13852	; 0x361c
    c5f8:	mov	r0, r8
    c5fc:	movt	r1, #2
    c600:	sub	r2, fp, #37	; 0x25
    c604:	bl	a098 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)@plt>
    c608:	mov	r0, r4
    c60c:	mov	r1, r5
    c610:	mov	r2, r6
    c614:	mov	r3, r7
    c618:	str	r8, [sp]
    c61c:	bl	c4f0 <neon_print(__simd128_float32_t, std::string)>
    c620:	ldr	r0, [fp, #-44]	; 0xffffffd4
    c624:	movw	r3, #53840	; 0xd250
    c628:	movt	r3, #2
    c62c:	sub	r4, r0, #12
    c630:	cmp	r4, r3
    c634:	bne	c640 <neon_print(__simd128_float32_t)+0x70>
    c638:	sub	sp, fp, #32
    c63c:	ldm	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
    c640:	movw	r3, #40788	; 0x9f54
    c644:	movt	r3, #0
    c648:	cmp	r3, #0
    c64c:	beq	c674 <neon_print(__simd128_float32_t)+0xa4>
    c650:	sub	r0, r0, #4
    c654:	mvn	r1, #0
    c658:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    c65c:	cmp	r0, #0
    c660:	bgt	c638 <neon_print(__simd128_float32_t)+0x68>
    c664:	mov	r0, r4
    c668:	sub	r1, fp, #38	; 0x26
    c66c:	bl	9f90 <std::string::_Rep::_M_destroy(std::allocator<char> const&)@plt>
    c670:	b	c638 <neon_print(__simd128_float32_t)+0x68>
    c674:	ldr	r0, [r4, #8]
    c678:	sub	r3, r0, #1
    c67c:	str	r3, [r4, #8]
    c680:	b	c65c <neon_print(__simd128_float32_t)+0x8c>
    c684:	mov	r4, r0
    c688:	mov	r0, r4
    c68c:	bl	9f84 <__cxa_end_cleanup@plt>
    c690:	mov	r4, r0
    c694:	mov	r0, r8
    c698:	bl	a080 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@plt>
    c69c:	b	c688 <neon_print(__simd128_float32_t)+0xb8>
    c6a0:	b	c684 <neon_print(__simd128_float32_t)+0xb4>
    c6a4:	nop	{0}
    c6a8:	nop	{0}
    c6ac:	nop	{0}

0000c6b0 <neon_print(__simd64_uint8_t, std::string)>:
    c6b0:	mov	ip, sp
    c6b4:	vmov	d16, r0, r1
    c6b8:	push	{r4, r5, fp, ip, lr, pc}
    c6bc:	sub	fp, ip, #4
    c6c0:	movw	r4, #53872	; 0xd270
    c6c4:	movt	r4, #2
    c6c8:	sub	sp, sp, #8
    c6cc:	sub	r3, fp, #28
    c6d0:	mov	r5, r2
    c6d4:	vst1.8	{d16}, [r3]
    c6d8:	mov	r2, #10
    c6dc:	mov	r0, r4
    c6e0:	movw	r1, #13816	; 0x35f8
    c6e4:	movt	r1, #2
    c6e8:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    c6ec:	ldr	r1, [r5]
    c6f0:	mov	r0, r4
    c6f4:	ldr	r2, [r1, #-12]
    c6f8:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    c6fc:	mov	r2, #1
    c700:	movw	r1, #13828	; 0x3604
    c704:	movt	r1, #2
    c708:	mov	r5, r0
    c70c:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    c710:	mov	r0, r5
    c714:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c718:	ldrb	r1, [fp, #-28]	; 0xffffffe4
    c71c:	mov	r0, r4
    c720:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c724:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c728:	ldrb	r1, [fp, #-27]	; 0xffffffe5
    c72c:	mov	r0, r4
    c730:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c734:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c738:	ldrb	r1, [fp, #-26]	; 0xffffffe6
    c73c:	mov	r0, r4
    c740:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c744:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c748:	ldrb	r1, [fp, #-25]	; 0xffffffe7
    c74c:	mov	r0, r4
    c750:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c754:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c758:	ldrb	r1, [fp, #-24]	; 0xffffffe8
    c75c:	mov	r0, r4
    c760:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c764:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c768:	ldrb	r1, [fp, #-23]	; 0xffffffe9
    c76c:	mov	r0, r4
    c770:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c774:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c778:	ldrb	r1, [fp, #-22]	; 0xffffffea
    c77c:	mov	r0, r4
    c780:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c784:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c788:	ldrb	r1, [fp, #-21]	; 0xffffffeb
    c78c:	mov	r0, r4
    c790:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c794:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c798:	mov	r0, r4
    c79c:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c7a0:	sub	sp, fp, #20
    c7a4:	ldm	sp, {r4, r5, fp, sp, pc}
    c7a8:	nop	{0}
    c7ac:	nop	{0}

0000c7b0 <neon_print(__simd64_uint8_t)>:
    c7b0:	mov	ip, sp
    c7b4:	push	{r4, r5, r6, fp, ip, lr, pc}
    c7b8:	sub	fp, ip, #4
    c7bc:	sub	r6, fp, #36	; 0x24
    c7c0:	sub	sp, sp, #12
    c7c4:	mov	r4, r0
    c7c8:	mov	r5, r1
    c7cc:	movw	r1, #13872	; 0x3630
    c7d0:	sub	r2, fp, #29
    c7d4:	movt	r1, #2
    c7d8:	mov	r0, r6
    c7dc:	bl	a098 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)@plt>
    c7e0:	mov	r0, r4
    c7e4:	mov	r1, r5
    c7e8:	mov	r2, r6
    c7ec:	bl	c6b0 <neon_print(__simd64_uint8_t, std::string)>
    c7f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c7f4:	movw	r3, #53840	; 0xd250
    c7f8:	movt	r3, #2
    c7fc:	sub	r4, r0, #12
    c800:	cmp	r4, r3
    c804:	bne	c810 <neon_print(__simd64_uint8_t)+0x60>
    c808:	sub	sp, fp, #24
    c80c:	ldm	sp, {r4, r5, r6, fp, sp, pc}
    c810:	movw	r3, #40788	; 0x9f54
    c814:	movt	r3, #0
    c818:	cmp	r3, #0
    c81c:	beq	c844 <neon_print(__simd64_uint8_t)+0x94>
    c820:	sub	r0, r0, #4
    c824:	mvn	r1, #0
    c828:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    c82c:	cmp	r0, #0
    c830:	bgt	c808 <neon_print(__simd64_uint8_t)+0x58>
    c834:	mov	r0, r4
    c838:	sub	r1, fp, #30
    c83c:	bl	9f90 <std::string::_Rep::_M_destroy(std::allocator<char> const&)@plt>
    c840:	b	c808 <neon_print(__simd64_uint8_t)+0x58>
    c844:	ldr	r0, [r4, #8]
    c848:	sub	r3, r0, #1
    c84c:	str	r3, [r4, #8]
    c850:	b	c82c <neon_print(__simd64_uint8_t)+0x7c>
    c854:	mov	r4, r0
    c858:	mov	r0, r4
    c85c:	bl	9f84 <__cxa_end_cleanup@plt>
    c860:	mov	r4, r0
    c864:	mov	r0, r6
    c868:	bl	a080 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@plt>
    c86c:	b	c858 <neon_print(__simd64_uint8_t)+0xa8>
    c870:	b	c854 <neon_print(__simd64_uint8_t)+0xa4>
    c874:	nop	{0}
    c878:	nop	{0}
    c87c:	nop	{0}

0000c880 <neon_print(__simd128_uint32_t, std::string)>:
    c880:	mov	ip, sp
    c884:	vmov	d16, r0, r1
    c888:	vmov	d17, r2, r3
    c88c:	push	{r4, r5, fp, ip, lr, pc}
    c890:	movw	r4, #53872	; 0xd270
    c894:	movt	r4, #2
    c898:	sub	fp, ip, #4
    c89c:	sub	sp, sp, #16
    c8a0:	sub	ip, fp, #36	; 0x24
    c8a4:	mov	r2, #10
    c8a8:	mov	r0, r4
    c8ac:	movw	r1, #13816	; 0x35f8
    c8b0:	movt	r1, #2
    c8b4:	vst1.32	{d16-d17}, [ip]
    c8b8:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    c8bc:	ldr	r3, [fp, #4]
    c8c0:	mov	r0, r4
    c8c4:	ldr	r1, [r3]
    c8c8:	ldr	r2, [r1, #-12]
    c8cc:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    c8d0:	mov	r2, #1
    c8d4:	movw	r1, #13828	; 0x3604
    c8d8:	movt	r1, #2
    c8dc:	mov	r5, r0
    c8e0:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    c8e4:	mov	r0, r5
    c8e8:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c8ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
    c8f0:	mov	r0, r4
    c8f4:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c8f8:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c8fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    c900:	mov	r0, r4
    c904:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c908:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c90c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c910:	mov	r0, r4
    c914:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c918:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c91c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    c920:	mov	r0, r4
    c924:	bl	9d98 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    c928:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c92c:	mov	r0, r4
    c930:	bl	9fb4 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    c934:	sub	sp, fp, #20
    c938:	ldm	sp, {r4, r5, fp, sp, pc}
    c93c:	nop	{0}

0000c940 <neon_print(__simd128_uint32_t)>:
    c940:	mov	ip, sp
    c944:	push	{r4, r5, r6, r7, r8, fp, ip, lr, pc}
    c948:	sub	fp, ip, #4
    c94c:	sub	r8, fp, #44	; 0x2c
    c950:	sub	sp, sp, #20
    c954:	mov	r7, r3
    c958:	mov	r6, r2
    c95c:	mov	r5, r1
    c960:	mov	r4, r0
    c964:	movw	r1, #13892	; 0x3644
    c968:	mov	r0, r8
    c96c:	movt	r1, #2
    c970:	sub	r2, fp, #37	; 0x25
    c974:	bl	a098 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)@plt>
    c978:	mov	r0, r4
    c97c:	mov	r1, r5
    c980:	mov	r2, r6
    c984:	mov	r3, r7
    c988:	str	r8, [sp]
    c98c:	bl	c880 <neon_print(__simd128_uint32_t, std::string)>
    c990:	ldr	r0, [fp, #-44]	; 0xffffffd4
    c994:	movw	r3, #53840	; 0xd250
    c998:	movt	r3, #2
    c99c:	sub	r4, r0, #12
    c9a0:	cmp	r4, r3
    c9a4:	bne	c9b0 <neon_print(__simd128_uint32_t)+0x70>
    c9a8:	sub	sp, fp, #32
    c9ac:	ldm	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
    c9b0:	movw	r3, #40788	; 0x9f54
    c9b4:	movt	r3, #0
    c9b8:	cmp	r3, #0
    c9bc:	beq	c9e4 <neon_print(__simd128_uint32_t)+0xa4>
    c9c0:	sub	r0, r0, #4
    c9c4:	mvn	r1, #0
    c9c8:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    c9cc:	cmp	r0, #0
    c9d0:	bgt	c9a8 <neon_print(__simd128_uint32_t)+0x68>
    c9d4:	mov	r0, r4
    c9d8:	sub	r1, fp, #38	; 0x26
    c9dc:	bl	9f90 <std::string::_Rep::_M_destroy(std::allocator<char> const&)@plt>
    c9e0:	b	c9a8 <neon_print(__simd128_uint32_t)+0x68>
    c9e4:	ldr	r0, [r4, #8]
    c9e8:	sub	r3, r0, #1
    c9ec:	str	r3, [r4, #8]
    c9f0:	b	c9cc <neon_print(__simd128_uint32_t)+0x8c>
    c9f4:	mov	r4, r0
    c9f8:	mov	r0, r4
    c9fc:	bl	9f84 <__cxa_end_cleanup@plt>
    ca00:	mov	r4, r0
    ca04:	mov	r0, r8
    ca08:	bl	a080 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@plt>
    ca0c:	b	c9f8 <neon_print(__simd128_uint32_t)+0xb8>
    ca10:	b	c9f4 <neon_print(__simd128_uint32_t)+0xb4>
    ca14:	nop	{0}
    ca18:	nop	{0}
    ca1c:	nop	{0}

0000ca20 <MeanShift::track(cv::Mat const&)>:
    ca20:	mov	ip, sp
    ca24:	mov	r3, #0
    ca28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
    ca2c:	vpush	{d8}
    ca30:	sub	fp, ip, #4
    ca34:	vldr	s16, [pc, #684]	; cce8 <MeanShift::track(cv::Mat const&)+0x2c8>
    ca38:	add	r7, r1, #56	; 0x38
    ca3c:	sub	sl, fp, #108	; 0x6c
    ca40:	sub	r9, fp, #164	; 0xa4
    ca44:	sub	sp, sp, #124	; 0x7c
    ca48:	mov	r5, r1
    ca4c:	mov	r4, r0
    ca50:	mov	r8, r2
    ca54:	mov	r6, r3
    ca58:	vldr	s17, [pc, #652]	; ccec <MeanShift::track(cv::Mat const&)+0x2cc>
    ca5c:	str	r3, [r0]
    ca60:	str	r3, [r0, #4]
    ca64:	str	r3, [r0, #8]
    ca68:	str	r3, [r0, #12]
    ca6c:	mov	r0, sl
    ca70:	mov	r1, r5
    ca74:	mov	r2, r8
    ca78:	mov	r3, r7
    ca7c:	bl	b650 <MeanShift::pdf_representation(cv::Mat const&, cv::Rect_<int> const&)>
    ca80:	mov	r0, r9
    ca84:	mov	r1, r5
    ca88:	mov	r2, r8
    ca8c:	mov	r3, sl
    ca90:	str	r7, [sp]
    ca94:	bl	bbb0 <MeanShift::CalWeight(cv::Mat const&, cv::Mat&, cv::Rect_<int>&)>
    ca98:	ldr	r2, [r5, #56]	; 0x38
    ca9c:	vldr	s12, [pc, #588]	; ccf0 <MeanShift::track(cv::Mat const&)+0x2d0>
    caa0:	ldr	r1, [r5, #60]	; 0x3c
    caa4:	mov	r3, #86	; 0x56
    caa8:	vmov.f32	s10, s12
    caac:	str	r3, [r4, #8]
    cab0:	str	r2, [r4]
    cab4:	mov	r3, #58	; 0x3a
    cab8:	str	r1, [r4, #4]
    cabc:	mov	r0, #0
    cac0:	str	r3, [r4, #12]
    cac4:	vmov.f32	s11, s12
    cac8:	ldr	lr, [fp, #-148]	; 0xffffff6c
    cacc:	ldr	ip, [fp, #-120]	; 0xffffff88
    cad0:	vmov	s14, r0
    cad4:	mov	r1, #0
    cad8:	vmov.f64	d19, #112	; 0x3f800000  1.0
    cadc:	vcvt.f32.s32	s15, s14
    cae0:	vsub.f32	s15, s15, s16
    cae4:	vmul.f32	s9, s15, s17
    cae8:	vcvt.f64.f32	d16, s9
    caec:	vmul.f64	d18, d16, d16
    caf0:	b	cb24 <MeanShift::track(cv::Mat const&)+0x104>
    caf4:	nop	{0}
    caf8:	nop	{0}
    cafc:	nop	{0}
    cb00:	vldr	s14, [pc, #488]	; ccf0 <MeanShift::track(cv::Mat const&)+0x2d0>
    cb04:	vmov.f32	s15, s14
    cb08:	add	r1, r1, #1
    cb0c:	cmp	r1, #86	; 0x56
    cb10:	vmov.f32	s13, s14
    cb14:	vadd.f32	s12, s12, s14
    cb18:	vadd.f32	s11, s11, s15
    cb1c:	vadd.f32	s10, s10, s13
    cb20:	beq	cb84 <MeanShift::track(cv::Mat const&)+0x164>
    cb24:	vmov	s14, r1
    cb28:	vmov.f64	d17, d18
    cb2c:	vcvt.f32.s32	s15, s14
    cb30:	vsub.f32	s15, s15, s16
    cb34:	vmul.f32	s14, s15, s17
    cb38:	vcvt.f64.f32	d16, s14
    cb3c:	vmla.f64	d17, d16, d16
    cb40:	vcmpe.f64	d17, d19
    cb44:	vmrs	APSR_nzcv, fpscr
    cb48:	bgt	cb00 <MeanShift::track(cv::Mat const&)+0xe0>
    cb4c:	ldr	r3, [ip]
    cb50:	lsl	r2, r1, #2
    cb54:	add	r1, r1, #1
    cb58:	cmp	r1, #86	; 0x56
    cb5c:	mla	r3, r3, r0, r2
    cb60:	add	r3, r3, lr
    cb64:	vldr	s15, [r3]
    cb68:	vmul.f32	s14, s15, s14
    cb6c:	vmov.f32	s13, s15
    cb70:	vmul.f32	s15, s15, s9
    cb74:	vadd.f32	s12, s12, s14
    cb78:	vadd.f32	s11, s11, s15
    cb7c:	vadd.f32	s10, s10, s13
    cb80:	bne	cb24 <MeanShift::track(cv::Mat const&)+0x104>
    cb84:	add	r0, r0, #1
    cb88:	cmp	r0, #58	; 0x3a
    cb8c:	bne	cad0 <MeanShift::track(cv::Mat const&)+0xb0>
    cb90:	vdiv.f32	s12, s12, s10
    cb94:	ldr	r1, [r4]
    cb98:	ldr	r0, [r4, #4]
    cb9c:	vdiv.f32	s15, s11, s10
    cba0:	vmul.f32	s14, s12, s16
    cba4:	vmul.f32	s13, s15, s16
    cba8:	vcvt.s32.f32	s14, s14
    cbac:	vcvt.s32.f32	s13, s13
    cbb0:	vmov	r3, s14
    cbb4:	vmov	r2, s13
    cbb8:	add	r1, r1, r3
    cbbc:	str	r1, [r4]
    cbc0:	ldr	r3, [r5, #56]	; 0x38
    cbc4:	cmp	r1, r3
    cbc8:	add	r2, r2, r0
    cbcc:	str	r2, [r4, #4]
    cbd0:	bne	cbe0 <MeanShift::track(cv::Mat const&)+0x1c0>
    cbd4:	ldr	r3, [r5, #60]	; 0x3c
    cbd8:	cmp	r2, r3
    cbdc:	beq	ccc4 <MeanShift::track(cv::Mat const&)+0x2a4>
    cbe0:	ldr	r0, [fp, #-144]	; 0xffffff70
    cbe4:	str	r1, [r5, #56]	; 0x38
    cbe8:	cmp	r0, #0
    cbec:	str	r2, [r5, #60]	; 0x3c
    cbf0:	beq	cc04 <MeanShift::track(cv::Mat const&)+0x1e4>
    cbf4:	mvn	r1, #0
    cbf8:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    cbfc:	cmp	r0, #1
    cc00:	beq	ccac <MeanShift::track(cv::Mat const&)+0x28c>
    cc04:	ldr	r2, [fp, #-124]	; 0xffffff84
    cc08:	mov	r3, #0
    cc0c:	str	r3, [fp, #-132]	; 0xffffff7c
    cc10:	add	r1, r9, #48	; 0x30
    cc14:	str	r3, [fp, #-136]	; 0xffffff78
    cc18:	str	r3, [fp, #-140]	; 0xffffff74
    cc1c:	str	r3, [fp, #-148]	; 0xffffff6c
    cc20:	str	r3, [r2]
    cc24:	ldr	r0, [fp, #-120]	; 0xffffff88
    cc28:	str	r3, [fp, #-144]	; 0xffffff70
    cc2c:	cmp	r0, r1
    cc30:	beq	cc38 <MeanShift::track(cv::Mat const&)+0x218>
    cc34:	bl	9f60 <cv::fastFree(void*)@plt>
    cc38:	ldr	r0, [fp, #-88]	; 0xffffffa8
    cc3c:	cmp	r0, #0
    cc40:	beq	cc54 <MeanShift::track(cv::Mat const&)+0x234>
    cc44:	mvn	r1, #0
    cc48:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    cc4c:	cmp	r0, #1
    cc50:	beq	ccb8 <MeanShift::track(cv::Mat const&)+0x298>
    cc54:	ldr	r2, [fp, #-68]	; 0xffffffbc
    cc58:	mov	r3, #0
    cc5c:	str	r3, [fp, #-76]	; 0xffffffb4
    cc60:	add	r1, sl, #48	; 0x30
    cc64:	str	r3, [fp, #-80]	; 0xffffffb0
    cc68:	str	r3, [fp, #-84]	; 0xffffffac
    cc6c:	str	r3, [fp, #-92]	; 0xffffffa4
    cc70:	str	r3, [r2]
    cc74:	ldr	r0, [fp, #-64]	; 0xffffffc0
    cc78:	str	r3, [fp, #-88]	; 0xffffffa8
    cc7c:	cmp	r0, r1
    cc80:	beq	cc88 <MeanShift::track(cv::Mat const&)+0x268>
    cc84:	bl	9f60 <cv::fastFree(void*)@plt>
    cc88:	add	r6, r6, #1
    cc8c:	cmp	r6, #8
    cc90:	bne	ca6c <MeanShift::track(cv::Mat const&)+0x4c>
    cc94:	b	ccd4 <MeanShift::track(cv::Mat const&)+0x2b4>
    cc98:	mov	r4, r0
    cc9c:	mov	r0, sl
    cca0:	bl	d740 <cv::Mat::~Mat()>
    cca4:	mov	r0, r4
    cca8:	bl	9f84 <__cxa_end_cleanup@plt>
    ccac:	mov	r0, r9
    ccb0:	bl	9d8c <cv::Mat::deallocate()@plt>
    ccb4:	b	cc04 <MeanShift::track(cv::Mat const&)+0x1e4>
    ccb8:	mov	r0, sl
    ccbc:	bl	9d8c <cv::Mat::deallocate()@plt>
    ccc0:	b	cc54 <MeanShift::track(cv::Mat const&)+0x234>
    ccc4:	mov	r0, r9
    ccc8:	bl	d740 <cv::Mat::~Mat()>
    cccc:	mov	r0, sl
    ccd0:	bl	d740 <cv::Mat::~Mat()>
    ccd4:	mov	r0, r4
    ccd8:	sub	ip, fp, #48	; 0x30
    ccdc:	vldmia	ip!, {d8}
    cce0:	sub	sp, fp, #40	; 0x28
    cce4:	ldm	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
    cce8:	.word	0x41e40000
    ccec:	.word	0x3d0fb824
    ccf0:	.word	0x00000000
    ccf4:	nop	{0}
    ccf8:	nop	{0}
    ccfc:	nop	{0}

0000cd00 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)>:
    cd00:	mov	ip, sp
    cd04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
    cd08:	sub	fp, ip, #4
    cd0c:	sub	sp, sp, #156	; 0x9c
    cd10:	mov	r5, r0
    cd14:	add	sl, r0, #72	; 0x48
    cd18:	mov	r9, r1
    cd1c:	mov	r6, #0
    cd20:	ldr	lr, [r2, #12]
    cd24:	mov	r7, #0
    cd28:	ldm	r2, {r0, ip}
    cd2c:	ldr	r3, [r2, #8]
    cd30:	mov	r2, #0
    cd34:	str	r0, [r5, #56]	; 0x38
    cd38:	str	ip, [r5, #60]	; 0x3c
    cd3c:	str	r3, [r5, #64]	; 0x40
    cd40:	str	lr, [r5, #68]	; 0x44
    cd44:	sub	r1, fp, #84	; 0x54
    cd48:	strd	r6, [r1, r2]
    cd4c:	add	r2, r2, #8
    cd50:	cmp	r2, #32
    cd54:	bne	cd44 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x44>
    cd58:	sub	r8, fp, #140	; 0x8c
    cd5c:	sub	r2, fp, #52	; 0x34
    cd60:	mov	r3, #5
    cd64:	mov	r1, #2
    cd68:	mov	r0, r8
    cd6c:	mov	r4, #0
    cd70:	add	ip, r8, #8
    cd74:	add	lr, r8, #48	; 0x30
    cd78:	str	ip, [fp, #-100]	; 0xffffff9c
    cd7c:	strd	r6, [fp, #-76]	; 0xffffffb4
    cd80:	mov	ip, #58	; 0x3a
    cd84:	str	lr, [fp, #-96]	; 0xffffffa0
    cd88:	str	ip, [fp, #-52]	; 0xffffffcc
    cd8c:	mov	lr, #96	; 0x60
    cd90:	strd	r6, [fp, #-84]	; 0xffffffac
    cd94:	str	lr, [fp, #-48]	; 0xffffffd0
    cd98:	strd	r6, [fp, #-60]	; 0xffffffc4
    cd9c:	strd	r6, [fp, #-68]	; 0xffffffbc
    cda0:	str	r4, [fp, #-92]	; 0xffffffa4
    cda4:	str	r4, [fp, #-140]	; 0xffffff74
    cda8:	str	r4, [fp, #-136]	; 0xffffff78
    cdac:	str	r4, [fp, #-132]	; 0xffffff7c
    cdb0:	str	r4, [fp, #-128]	; 0xffffff80
    cdb4:	str	r4, [fp, #-124]	; 0xffffff84
    cdb8:	str	r4, [fp, #-120]	; 0xffffff88
    cdbc:	str	r4, [fp, #-116]	; 0xffffff8c
    cdc0:	str	r4, [fp, #-112]	; 0xffffff90
    cdc4:	str	r4, [fp, #-108]	; 0xffffff94
    cdc8:	str	r4, [fp, #-104]	; 0xffffff98
    cdcc:	str	r4, [fp, #-88]	; 0xffffffa8
    cdd0:	bl	9fd8 <cv::Mat::create(int, int const*, int)@plt>
    cdd4:	mov	r0, r8
    cdd8:	sub	r1, fp, #84	; 0x54
    cddc:	bl	a020 <cv::Mat::operator=(cv::Scalar_<double> const&)@plt>
    cde0:	cmp	sl, r8
    cde4:	ldreq	r0, [fp, #-120]	; 0xffffff88
    cde8:	beq	cec0 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x1c0>
    cdec:	ldr	r0, [fp, #-120]	; 0xffffff88
    cdf0:	cmp	r0, #0
    cdf4:	beq	ce00 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x100>
    cdf8:	mov	r1, #1
    cdfc:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    ce00:	ldr	r0, [r5, #92]	; 0x5c
    ce04:	cmp	r0, #0
    ce08:	beq	ce1c <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x11c>
    ce0c:	mvn	r1, #0
    ce10:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    ce14:	cmp	r0, #1
    ce18:	beq	d1b4 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x4b4>
    ce1c:	ldr	r1, [r5, #112]	; 0x70
    ce20:	mov	r2, #0
    ce24:	str	r2, [r5, #104]	; 0x68
    ce28:	str	r2, [r5, #100]	; 0x64
    ce2c:	str	r2, [r5, #96]	; 0x60
    ce30:	str	r2, [r5, #88]	; 0x58
    ce34:	str	r2, [r1]
    ce38:	ldr	r3, [r5, #76]	; 0x4c
    ce3c:	str	r2, [r5, #92]	; 0x5c
    ce40:	cmp	r3, #2
    ce44:	ldr	r3, [fp, #-140]	; 0xffffff74
    ce48:	str	r3, [r5, #72]	; 0x48
    ce4c:	bgt	d148 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x448>
    ce50:	ldr	r3, [fp, #-136]	; 0xffffff78
    ce54:	cmp	r3, #2
    ce58:	bgt	d148 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x448>
    ce5c:	str	r3, [r5, #76]	; 0x4c
    ce60:	ldr	r3, [fp, #-132]	; 0xffffff7c
    ce64:	ldr	r2, [fp, #-128]	; 0xffffff80
    ce68:	str	r3, [r5, #80]	; 0x50
    ce6c:	ldr	r3, [fp, #-96]	; 0xffffffa0
    ce70:	str	r2, [r5, #84]	; 0x54
    ce74:	ldr	r2, [r5, #116]	; 0x74
    ce78:	ldr	r1, [r3]
    ce7c:	str	r1, [r2]
    ce80:	ldr	r3, [fp, #-96]	; 0xffffffa0
    ce84:	ldr	r0, [r5, #116]	; 0x74
    ce88:	ldr	r2, [r3, #4]
    ce8c:	str	r2, [r0, #4]
    ce90:	ldr	r3, [fp, #-124]	; 0xffffff84
    ce94:	ldr	r2, [fp, #-116]	; 0xffffff8c
    ce98:	ldr	r0, [fp, #-120]	; 0xffffff88
    ce9c:	str	r3, [r5, #88]	; 0x58
    cea0:	ldr	r3, [fp, #-112]	; 0xffffff90
    cea4:	str	r2, [r5, #96]	; 0x60
    cea8:	ldr	r2, [fp, #-108]	; 0xffffff94
    ceac:	str	r3, [r5, #100]	; 0x64
    ceb0:	ldr	r3, [fp, #-104]	; 0xffffff98
    ceb4:	str	r2, [r5, #104]	; 0x68
    ceb8:	str	r0, [r5, #92]	; 0x5c
    cebc:	str	r3, [r5, #108]	; 0x6c
    cec0:	cmp	r0, #0
    cec4:	beq	ced8 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x1d8>
    cec8:	mvn	r1, #0
    cecc:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    ced0:	cmp	r0, #1
    ced4:	beq	d1a8 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x4a8>
    ced8:	ldr	r2, [fp, #-100]	; 0xffffff9c
    cedc:	mov	r3, #0
    cee0:	str	r3, [fp, #-108]	; 0xffffff94
    cee4:	add	r1, r8, #48	; 0x30
    cee8:	str	r3, [fp, #-112]	; 0xffffff90
    ceec:	str	r3, [fp, #-116]	; 0xffffff8c
    cef0:	str	r3, [fp, #-124]	; 0xffffff84
    cef4:	str	r3, [r2]
    cef8:	ldr	r0, [fp, #-96]	; 0xffffffa0
    cefc:	str	r3, [fp, #-120]	; 0xffffff88
    cf00:	cmp	r0, r1
    cf04:	beq	cf0c <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x20c>
    cf08:	bl	9f60 <cv::fastFree(void*)@plt>
    cf0c:	vmov.f32	s11, #112	; 0x3f800000  1.0
    cf10:	vldr	d19, [pc, #680]	; d1c0 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x4c0>
    cf14:	mov	lr, #0
    cf18:	vldr	s13, [pc, #680]	; d1c8 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x4c8>
    cf1c:	vldr	s9, [pc, #680]	; d1cc <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x4cc>
    cf20:	vldr	s10, [pc, #680]	; d1d0 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x4d0>
    cf24:	sub	r3, lr, #29
    cf28:	vmov.f64	d18, #112	; 0x3f800000  1.0
    cf2c:	mov	ip, #0
    cf30:	vmov	s14, r3
    cf34:	vcvt.f32.s32	s15, s14
    cf38:	vmul.f32	s14, s15, s15
    cf3c:	vmul.f32	s12, s14, s9
    cf40:	sub	r3, ip, #48	; 0x30
    cf44:	ldr	r1, [r5, #116]	; 0x74
    cf48:	lsl	r0, ip, #2
    cf4c:	ldr	r2, [r5, #88]	; 0x58
    cf50:	vmov	s14, r3
    cf54:	add	ip, ip, #1
    cf58:	ldr	r3, [r1]
    cf5c:	vcvt.f32.s32	s15, s14
    cf60:	mla	r3, r3, lr, r0
    cf64:	vmul.f32	s14, s15, s15
    cf68:	vmov.f32	s15, s12
    cf6c:	vmla.f32	s15, s14, s10
    cf70:	vcmpe.f32	s15, s11
    cf74:	vmrs	APSR_nzcv, fpscr
    cf78:	vcvtmi.f64.f32	d16, s15
    cf7c:	vldrpl	s15, [pc, #580]	; d1c8 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x4c8>
    cf80:	vsubmi.f64	d16, d18, d16
    cf84:	vmulmi.f64	d17, d16, d19
    cf88:	vcvtmi.f32.f64	s15, d17
    cf8c:	cmp	ip, #96	; 0x60
    cf90:	vmov	r1, s15
    cf94:	vadd.f32	s13, s13, s15
    cf98:	str	r1, [r2, r3]
    cf9c:	bne	cf40 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x240>
    cfa0:	add	lr, lr, #1
    cfa4:	cmp	lr, #58	; 0x3a
    cfa8:	bne	cf24 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x224>
    cfac:	vmov.f32	s15, #112	; 0x3f800000  1.0
    cfb0:	mov	ip, #0
    cfb4:	vdiv.f32	s14, s15, s13
    cfb8:	vmov	lr, s14
    cfbc:	mov	r0, #0
    cfc0:	ldr	r1, [r5, #116]	; 0x74
    cfc4:	vmov.32	d7[0], lr
    cfc8:	ldr	r2, [r5, #88]	; 0x58
    cfcc:	ldr	r3, [r1]
    cfd0:	mla	r3, r3, ip, r2
    cfd4:	add	r3, r3, r0
    cfd8:	add	r0, r0, #16
    cfdc:	vld1.32	{d16-d17}, [r3]
    cfe0:	cmp	r0, #384	; 0x180
    cfe4:	vmul.f32	q8, q8, d7[0]
    cfe8:	vst1.32	{d16-d17}, [r3]
    cfec:	bne	cfc0 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x2c0>
    cff0:	add	ip, ip, #1
    cff4:	cmp	ip, #58	; 0x3a
    cff8:	bne	cfbc <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x2bc>
    cffc:	sub	r6, fp, #196	; 0xc4
    d000:	mov	r2, r9
    d004:	mov	r1, r5
    d008:	add	r3, r5, #56	; 0x38
    d00c:	mov	r0, r6
    d010:	bl	b650 <MeanShift::pdf_representation(cv::Mat const&, cv::Rect_<int> const&)>
    d014:	cmp	r5, r6
    d018:	ldreq	r0, [fp, #-176]	; 0xffffff50
    d01c:	beq	d0f4 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x3f4>
    d020:	ldr	r0, [fp, #-176]	; 0xffffff50
    d024:	cmp	r0, #0
    d028:	beq	d034 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x334>
    d02c:	mov	r1, #1
    d030:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    d034:	ldr	r0, [r5, #20]
    d038:	cmp	r0, #0
    d03c:	beq	d050 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x350>
    d040:	mvn	r1, #0
    d044:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    d048:	cmp	r0, #1
    d04c:	beq	d188 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x488>
    d050:	ldr	r1, [r5, #40]	; 0x28
    d054:	mov	r2, #0
    d058:	str	r2, [r5, #32]
    d05c:	str	r2, [r5, #28]
    d060:	str	r2, [r5, #24]
    d064:	str	r2, [r5, #16]
    d068:	str	r2, [r1]
    d06c:	ldr	r3, [r5, #4]
    d070:	str	r2, [r5, #20]
    d074:	cmp	r3, #2
    d078:	ldr	r3, [fp, #-196]	; 0xffffff3c
    d07c:	str	r3, [r5]
    d080:	bgt	d158 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x458>
    d084:	ldr	r3, [fp, #-192]	; 0xffffff40
    d088:	cmp	r3, #2
    d08c:	bgt	d158 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x458>
    d090:	str	r3, [r5, #4]
    d094:	ldr	r3, [fp, #-188]	; 0xffffff44
    d098:	ldr	r2, [fp, #-184]	; 0xffffff48
    d09c:	str	r3, [r5, #8]
    d0a0:	ldr	r3, [fp, #-152]	; 0xffffff68
    d0a4:	str	r2, [r5, #12]
    d0a8:	ldr	r2, [r5, #44]	; 0x2c
    d0ac:	ldr	r1, [r3]
    d0b0:	str	r1, [r2]
    d0b4:	ldr	r3, [fp, #-152]	; 0xffffff68
    d0b8:	ldr	r0, [r5, #44]	; 0x2c
    d0bc:	ldr	r2, [r3, #4]
    d0c0:	str	r2, [r0, #4]
    d0c4:	ldr	r3, [fp, #-180]	; 0xffffff4c
    d0c8:	ldr	r2, [fp, #-172]	; 0xffffff54
    d0cc:	ldr	r0, [fp, #-176]	; 0xffffff50
    d0d0:	str	r3, [r5, #16]
    d0d4:	ldr	r3, [fp, #-160]	; 0xffffff60
    d0d8:	str	r2, [r5, #24]
    d0dc:	ldr	r2, [fp, #-168]	; 0xffffff58
    d0e0:	str	r3, [r5, #36]	; 0x24
    d0e4:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d0e8:	str	r2, [r5, #28]
    d0ec:	str	r0, [r5, #20]
    d0f0:	str	r3, [r5, #32]
    d0f4:	cmp	r0, #0
    d0f8:	beq	d10c <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x40c>
    d0fc:	mvn	r1, #0
    d100:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    d104:	cmp	r0, #1
    d108:	beq	d17c <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x47c>
    d10c:	ldr	r3, [fp, #-156]	; 0xffffff64
    d110:	mov	ip, #0
    d114:	str	ip, [fp, #-164]	; 0xffffff5c
    d118:	add	r2, r6, #48	; 0x30
    d11c:	str	ip, [fp, #-168]	; 0xffffff58
    d120:	str	ip, [fp, #-172]	; 0xffffff54
    d124:	str	ip, [fp, #-180]	; 0xffffff4c
    d128:	str	ip, [r3]
    d12c:	ldr	r0, [fp, #-152]	; 0xffffff68
    d130:	cmp	r0, r2
    d134:	beq	d140 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x440>
    d138:	str	ip, [fp, #-176]	; 0xffffff50
    d13c:	bl	9f60 <cv::fastFree(void*)@plt>
    d140:	sub	sp, fp, #40	; 0x28
    d144:	ldm	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
    d148:	mov	r0, sl
    d14c:	mov	r1, r8
    d150:	bl	9c6c <cv::Mat::copySize(cv::Mat const&)@plt>
    d154:	b	ce90 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x190>
    d158:	mov	r0, r5
    d15c:	mov	r1, r6
    d160:	bl	9c6c <cv::Mat::copySize(cv::Mat const&)@plt>
    d164:	b	d0c4 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x3c4>
    d168:	mov	r4, r0
    d16c:	mov	r0, r8
    d170:	bl	d740 <cv::Mat::~Mat()>
    d174:	mov	r0, r4
    d178:	bl	9f84 <__cxa_end_cleanup@plt>
    d17c:	mov	r0, r6
    d180:	bl	9d8c <cv::Mat::deallocate()@plt>
    d184:	b	d10c <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x40c>
    d188:	mov	r0, r5
    d18c:	bl	9d8c <cv::Mat::deallocate()@plt>
    d190:	b	d050 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x350>
    d194:	mov	r4, r0
    d198:	mov	r0, r6
    d19c:	bl	d740 <cv::Mat::~Mat()>
    d1a0:	mov	r0, r4
    d1a4:	bl	9f84 <__cxa_end_cleanup@plt>
    d1a8:	mov	r0, r8
    d1ac:	bl	9d8c <cv::Mat::deallocate()@plt>
    d1b0:	b	ced8 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x1d8>
    d1b4:	mov	r0, sl
    d1b8:	bl	9d8c <cv::Mat::deallocate()@plt>
    d1bc:	b	ce1c <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)+0x11c>
    d1c0:	.word	0x80000000
    d1c4:	.word	0x409b54f4
    d1c8:	.word	0x00000000
    d1cc:	.word	0x3a9bda41
    d1d0:	.word	0x39e38e39
    d1d4:	nop	{0}
    d1d8:	nop	{0}
    d1dc:	nop	{0}

0000d1e0 <MeanShift::~MeanShift()>:
    d1e0:	ldr	r3, [pc, #432]	; d398 <MeanShift::~MeanShift()+0x1b8>
    d1e4:	mov	ip, sp
    d1e8:	push	{r4, r5, r6, r7, fp, ip, lr, pc}
    d1ec:	add	r2, r3, #20
    d1f0:	str	r2, [r0, #268]	; 0x10c
    d1f4:	mov	r5, r0
    d1f8:	ldr	r2, [pc, #412]	; d39c <MeanShift::~MeanShift()+0x1bc>
    d1fc:	mov	r4, r0
    d200:	str	r3, [r0, #128]	; 0x80
    d204:	sub	fp, ip, #4
    d208:	str	r2, [r5, #132]!	; 0x84
    d20c:	mov	r0, r5
    d210:	bl	9cb4 <std::basic_filebuf<char, std::char_traits<char> >::close()@plt>
    d214:	add	r0, r4, #188	; 0xbc
    d218:	bl	9da4 <std::__basic_file<char>::~__basic_file()@plt>
    d21c:	ldr	r3, [pc, #380]	; d3a0 <MeanShift::~MeanShift()+0x1c0>
    d220:	add	r0, r4, #160	; 0xa0
    d224:	str	r3, [r4, #132]	; 0x84
    d228:	bl	9fa8 <std::locale::~locale()@plt>
    d22c:	movw	r3, #53856	; 0xd260
    d230:	movt	r3, #2
    d234:	mov	r0, r4
    d238:	ldr	r2, [r3, #4]
    d23c:	ldr	r1, [r3, #8]
    d240:	str	r2, [r4, #128]	; 0x80
    d244:	ldr	r3, [r2, #-12]
    d248:	ldr	r2, [pc, #340]	; d3a4 <MeanShift::~MeanShift()+0x1c4>
    d24c:	add	r3, r4, r3
    d250:	str	r1, [r3, #128]	; 0x80
    d254:	str	r2, [r0, #268]!	; 0x10c
    d258:	bl	9e70 <std::ios_base::~ios_base()@plt>
    d25c:	ldr	r0, [r4, #92]	; 0x5c
    d260:	cmp	r0, #0
    d264:	beq	d278 <MeanShift::~MeanShift()+0x98>
    d268:	mvn	r1, #0
    d26c:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    d270:	cmp	r0, #1
    d274:	beq	d320 <MeanShift::~MeanShift()+0x140>
    d278:	ldr	r3, [r4, #112]	; 0x70
    d27c:	mov	r2, #0
    d280:	str	r2, [r4, #104]	; 0x68
    d284:	add	r1, r4, #120	; 0x78
    d288:	str	r2, [r4, #100]	; 0x64
    d28c:	str	r2, [r4, #96]	; 0x60
    d290:	str	r2, [r4, #88]	; 0x58
    d294:	str	r2, [r3]
    d298:	ldr	r0, [r4, #116]	; 0x74
    d29c:	str	r2, [r4, #92]	; 0x5c
    d2a0:	cmp	r0, r1
    d2a4:	beq	d2ac <MeanShift::~MeanShift()+0xcc>
    d2a8:	bl	9f60 <cv::fastFree(void*)@plt>
    d2ac:	ldr	r0, [r4, #20]
    d2b0:	cmp	r0, #0
    d2b4:	beq	d2c8 <MeanShift::~MeanShift()+0xe8>
    d2b8:	mvn	r1, #0
    d2bc:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    d2c0:	cmp	r0, #1
    d2c4:	beq	d310 <MeanShift::~MeanShift()+0x130>
    d2c8:	ldr	r3, [r4, #40]	; 0x28
    d2cc:	mov	r2, #0
    d2d0:	str	r2, [r4, #32]
    d2d4:	add	r1, r4, #48	; 0x30
    d2d8:	str	r2, [r4, #28]
    d2dc:	str	r2, [r4, #24]
    d2e0:	str	r2, [r4, #16]
    d2e4:	str	r2, [r3]
    d2e8:	ldr	r0, [r4, #44]	; 0x2c
    d2ec:	str	r2, [r4, #20]
    d2f0:	cmp	r0, r1
    d2f4:	beq	d2fc <MeanShift::~MeanShift()+0x11c>
    d2f8:	bl	9f60 <cv::fastFree(void*)@plt>
    d2fc:	mov	r0, r4
    d300:	ldm	sp, {r4, r5, r6, r7, fp, sp, pc}
    d304:	nop	{0}
    d308:	nop	{0}
    d30c:	nop	{0}
    d310:	mov	r0, r4
    d314:	bl	9d8c <cv::Mat::deallocate()@plt>
    d318:	b	d2c8 <MeanShift::~MeanShift()+0xe8>
    d31c:	nop	{0}
    d320:	add	r0, r4, #72	; 0x48
    d324:	bl	9d8c <cv::Mat::deallocate()@plt>
    d328:	b	d278 <MeanShift::~MeanShift()+0x98>
    d32c:	mov	r6, r0
    d330:	mov	r0, r4
    d334:	bl	d740 <cv::Mat::~Mat()>
    d338:	mov	r0, r6
    d33c:	bl	9f84 <__cxa_end_cleanup@plt>
    d340:	mov	r6, r0
    d344:	add	r0, r4, #72	; 0x48
    d348:	bl	d740 <cv::Mat::~Mat()>
    d34c:	b	d330 <MeanShift::~MeanShift()+0x150>
    d350:	mov	r6, r0
    d354:	mov	r0, r5
    d358:	bl	9db0 <std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()@plt>
    d35c:	movw	r3, #53856	; 0xd260
    d360:	movt	r3, #2
    d364:	add	r0, r4, #268	; 0x10c
    d368:	ldr	r2, [r3, #4]
    d36c:	ldr	r1, [r3, #8]
    d370:	str	r2, [r4, #128]	; 0x80
    d374:	ldr	r3, [r2, #-12]
    d378:	add	r3, r4, r3
    d37c:	str	r1, [r3, #128]	; 0x80
    d380:	bl	9fcc <std::basic_ios<char, std::char_traits<char> >::~basic_ios()@plt>
    d384:	b	d344 <MeanShift::~MeanShift()+0x164>
    d388:	mov	r6, r0
    d38c:	add	r0, r4, #188	; 0xbc
    d390:	bl	9da4 <std::__basic_file<char>::~__basic_file()@plt>
    d394:	b	d354 <MeanShift::~MeanShift()+0x174>
    d398:	.word	0x0002d34c
    d39c:	.word	0x0002d380
    d3a0:	.word	0x0002d308
    d3a4:	.word	0x0002d370
    d3a8:	nop	{0}
    d3ac:	nop	{0}

0000d3b0 <MeanShift::~MeanShift()>:
    d3b0:	ldr	r3, [pc, #432]	; d568 <MeanShift::~MeanShift()+0x1b8>
    d3b4:	mov	ip, sp
    d3b8:	push	{r4, r5, r6, r7, fp, ip, lr, pc}
    d3bc:	add	r2, r3, #20
    d3c0:	str	r2, [r0, #268]	; 0x10c
    d3c4:	mov	r5, r0
    d3c8:	ldr	r2, [pc, #412]	; d56c <MeanShift::~MeanShift()+0x1bc>
    d3cc:	mov	r4, r0
    d3d0:	str	r3, [r0, #128]	; 0x80
    d3d4:	sub	fp, ip, #4
    d3d8:	str	r2, [r5, #132]!	; 0x84
    d3dc:	mov	r0, r5
    d3e0:	bl	9cb4 <std::basic_filebuf<char, std::char_traits<char> >::close()@plt>
    d3e4:	add	r0, r4, #188	; 0xbc
    d3e8:	bl	9da4 <std::__basic_file<char>::~__basic_file()@plt>
    d3ec:	ldr	r3, [pc, #380]	; d570 <MeanShift::~MeanShift()+0x1c0>
    d3f0:	add	r0, r4, #160	; 0xa0
    d3f4:	str	r3, [r4, #132]	; 0x84
    d3f8:	bl	9fa8 <std::locale::~locale()@plt>
    d3fc:	movw	r3, #53856	; 0xd260
    d400:	movt	r3, #2
    d404:	mov	r0, r4
    d408:	ldr	r2, [r3, #4]
    d40c:	ldr	r1, [r3, #8]
    d410:	str	r2, [r4, #128]	; 0x80
    d414:	ldr	r3, [r2, #-12]
    d418:	ldr	r2, [pc, #340]	; d574 <MeanShift::~MeanShift()+0x1c4>
    d41c:	add	r3, r4, r3
    d420:	str	r1, [r3, #128]	; 0x80
    d424:	str	r2, [r0, #268]!	; 0x10c
    d428:	bl	9e70 <std::ios_base::~ios_base()@plt>
    d42c:	ldr	r0, [r4, #92]	; 0x5c
    d430:	cmp	r0, #0
    d434:	beq	d448 <MeanShift::~MeanShift()+0x98>
    d438:	mvn	r1, #0
    d43c:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    d440:	cmp	r0, #1
    d444:	beq	d4f0 <MeanShift::~MeanShift()+0x140>
    d448:	ldr	r3, [r4, #112]	; 0x70
    d44c:	mov	r2, #0
    d450:	str	r2, [r4, #104]	; 0x68
    d454:	add	r1, r4, #120	; 0x78
    d458:	str	r2, [r4, #100]	; 0x64
    d45c:	str	r2, [r4, #96]	; 0x60
    d460:	str	r2, [r4, #88]	; 0x58
    d464:	str	r2, [r3]
    d468:	ldr	r0, [r4, #116]	; 0x74
    d46c:	str	r2, [r4, #92]	; 0x5c
    d470:	cmp	r0, r1
    d474:	beq	d47c <MeanShift::~MeanShift()+0xcc>
    d478:	bl	9f60 <cv::fastFree(void*)@plt>
    d47c:	ldr	r0, [r4, #20]
    d480:	cmp	r0, #0
    d484:	beq	d498 <MeanShift::~MeanShift()+0xe8>
    d488:	mvn	r1, #0
    d48c:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    d490:	cmp	r0, #1
    d494:	beq	d4e0 <MeanShift::~MeanShift()+0x130>
    d498:	ldr	r3, [r4, #40]	; 0x28
    d49c:	mov	r2, #0
    d4a0:	str	r2, [r4, #32]
    d4a4:	add	r1, r4, #48	; 0x30
    d4a8:	str	r2, [r4, #28]
    d4ac:	str	r2, [r4, #24]
    d4b0:	str	r2, [r4, #16]
    d4b4:	str	r2, [r3]
    d4b8:	ldr	r0, [r4, #44]	; 0x2c
    d4bc:	str	r2, [r4, #20]
    d4c0:	cmp	r0, r1
    d4c4:	beq	d4cc <MeanShift::~MeanShift()+0x11c>
    d4c8:	bl	9f60 <cv::fastFree(void*)@plt>
    d4cc:	mov	r0, r4
    d4d0:	ldm	sp, {r4, r5, r6, r7, fp, sp, pc}
    d4d4:	nop	{0}
    d4d8:	nop	{0}
    d4dc:	nop	{0}
    d4e0:	mov	r0, r4
    d4e4:	bl	9d8c <cv::Mat::deallocate()@plt>
    d4e8:	b	d498 <MeanShift::~MeanShift()+0xe8>
    d4ec:	nop	{0}
    d4f0:	add	r0, r4, #72	; 0x48
    d4f4:	bl	9d8c <cv::Mat::deallocate()@plt>
    d4f8:	b	d448 <MeanShift::~MeanShift()+0x98>
    d4fc:	mov	r6, r0
    d500:	mov	r0, r4
    d504:	bl	d740 <cv::Mat::~Mat()>
    d508:	mov	r0, r6
    d50c:	bl	9f84 <__cxa_end_cleanup@plt>
    d510:	mov	r6, r0
    d514:	add	r0, r4, #72	; 0x48
    d518:	bl	d740 <cv::Mat::~Mat()>
    d51c:	b	d500 <MeanShift::~MeanShift()+0x150>
    d520:	mov	r6, r0
    d524:	mov	r0, r5
    d528:	bl	9db0 <std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()@plt>
    d52c:	movw	r3, #53856	; 0xd260
    d530:	movt	r3, #2
    d534:	add	r0, r4, #268	; 0x10c
    d538:	ldr	r2, [r3, #4]
    d53c:	ldr	r1, [r3, #8]
    d540:	str	r2, [r4, #128]	; 0x80
    d544:	ldr	r3, [r2, #-12]
    d548:	add	r3, r4, r3
    d54c:	str	r1, [r3, #128]	; 0x80
    d550:	bl	9fcc <std::basic_ios<char, std::char_traits<char> >::~basic_ios()@plt>
    d554:	b	d514 <MeanShift::~MeanShift()+0x164>
    d558:	mov	r6, r0
    d55c:	add	r0, r4, #188	; 0xbc
    d560:	bl	9da4 <std::__basic_file<char>::~__basic_file()@plt>
    d564:	b	d524 <MeanShift::~MeanShift()+0x174>
    d568:	.word	0x0002d34c
    d56c:	.word	0x0002d380
    d570:	.word	0x0002d308
    d574:	.word	0x0002d370
    d578:	nop	{0}
    d57c:	nop	{0}

0000d580 <MeanShift::MeanShift()>:
    d580:	mov	ip, sp
    d584:	mov	r3, #0
    d588:	push	{r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}
    d58c:	add	sl, r0, #268	; 0x10c
    d590:	mov	r4, r0
    d594:	add	r2, r0, #8
    d598:	add	r1, r0, #48	; 0x30
    d59c:	str	r3, [r0, #120]	; 0x78
    d5a0:	str	r2, [r0, #40]	; 0x28
    d5a4:	sub	fp, ip, #4
    d5a8:	str	r1, [r0, #44]	; 0x2c
    d5ac:	add	r2, r0, #80	; 0x50
    d5b0:	add	r1, r0, #120	; 0x78
    d5b4:	str	r3, [r0]
    d5b8:	str	r2, [r0, #112]	; 0x70
    d5bc:	add	r8, r4, #128	; 0x80
    d5c0:	str	r1, [r0, #116]	; 0x74
    d5c4:	mov	r0, sl
    d5c8:	str	r3, [r4, #4]
    d5cc:	str	r3, [r4, #8]
    d5d0:	str	r3, [r4, #12]
    d5d4:	str	r3, [r4, #16]
    d5d8:	str	r3, [r4, #20]
    d5dc:	str	r3, [r4, #24]
    d5e0:	str	r3, [r4, #28]
    d5e4:	str	r3, [r4, #32]
    d5e8:	str	r3, [r4, #36]	; 0x24
    d5ec:	str	r3, [r4, #52]	; 0x34
    d5f0:	str	r3, [r4, #48]	; 0x30
    d5f4:	str	r3, [r4, #56]	; 0x38
    d5f8:	str	r3, [r4, #60]	; 0x3c
    d5fc:	str	r3, [r4, #64]	; 0x40
    d600:	str	r3, [r4, #68]	; 0x44
    d604:	str	r3, [r4, #72]	; 0x48
    d608:	str	r3, [r4, #76]	; 0x4c
    d60c:	str	r3, [r4, #80]	; 0x50
    d610:	str	r3, [r4, #84]	; 0x54
    d614:	str	r3, [r4, #88]	; 0x58
    d618:	str	r3, [r4, #92]	; 0x5c
    d61c:	str	r3, [r4, #96]	; 0x60
    d620:	str	r3, [r4, #100]	; 0x64
    d624:	str	r3, [r4, #104]	; 0x68
    d628:	str	r3, [r4, #108]	; 0x6c
    d62c:	str	r3, [r4, #124]	; 0x7c
    d630:	bl	9f9c <std::ios_base::ios_base()@plt>
    d634:	movw	r7, #53856	; 0xd260
    d638:	movt	r7, #2
    d63c:	ldr	r2, [pc, #244]	; d738 <MeanShift::MeanShift()+0x1b8>
    d640:	mov	r3, #0
    d644:	ldr	ip, [r7, #4]
    d648:	mov	r1, r3
    d64c:	str	r3, [r4, #380]	; 0x17c
    d650:	str	r2, [r4, #268]	; 0x10c
    d654:	str	ip, [r4, #128]	; 0x80
    d658:	strb	r3, [r4, #384]	; 0x180
    d65c:	strb	r3, [r4, #385]	; 0x181
    d660:	str	r3, [r4, #388]	; 0x184
    d664:	str	r3, [r4, #392]	; 0x188
    d668:	str	r3, [r4, #396]	; 0x18c
    d66c:	str	r3, [r4, #400]	; 0x190
    d670:	ldr	r3, [r7, #8]
    d674:	ldr	r0, [ip, #-12]
    d678:	str	r3, [r8, r0]
    d67c:	ldr	r2, [r4, #128]	; 0x80
    d680:	ldr	r0, [r2, #-12]
    d684:	add	r0, r8, r0
    d688:	bl	9cf0 <std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)@plt>
    d68c:	ldr	r2, [pc, #168]	; d73c <MeanShift::MeanShift()+0x1bc>
    d690:	add	r5, r4, #132	; 0x84
    d694:	add	r6, r8, #140	; 0x8c
    d698:	add	r3, r2, #20
    d69c:	mov	r0, r5
    d6a0:	str	r2, [r4, #128]	; 0x80
    d6a4:	str	r3, [r8, #140]	; 0x8c
    d6a8:	bl	9f00 <std::basic_filebuf<char, std::char_traits<char> >::basic_filebuf()@plt>
    d6ac:	mov	r0, r6
    d6b0:	mov	r1, r5
    d6b4:	bl	9cf0 <std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)@plt>
    d6b8:	mov	r2, #0
    d6bc:	mov	r3, #0
    d6c0:	mov	r1, #424	; 0x1a8
    d6c4:	mov	ip, #416	; 0x1a0
    d6c8:	strd	r2, [r4, r1]
    d6cc:	mov	r0, r4
    d6d0:	mov	r1, #408	; 0x198
    d6d4:	strd	r2, [r4, ip]
    d6d8:	strd	r2, [r4, r1]
    d6dc:	ldm	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}
    d6e0:	mov	r6, r0
    d6e4:	add	r0, r4, #72	; 0x48
    d6e8:	bl	d740 <cv::Mat::~Mat()>
    d6ec:	mov	r0, r4
    d6f0:	bl	d740 <cv::Mat::~Mat()>
    d6f4:	mov	r0, r6
    d6f8:	bl	9f84 <__cxa_end_cleanup@plt>
    d6fc:	mov	r6, r0
    d700:	mov	r0, r5
    d704:	bl	9f24 <std::basic_filebuf<char, std::char_traits<char> >::~basic_filebuf()@plt>
    d708:	ldr	r3, [r7, #4]
    d70c:	ldr	r1, [r7, #8]
    d710:	str	r3, [r4, #128]	; 0x80
    d714:	ldr	r2, [r3, #-12]
    d718:	str	r1, [r8, r2]
    d71c:	mov	r0, sl
    d720:	bl	9fcc <std::basic_ios<char, std::char_traits<char> >::~basic_ios()@plt>
    d724:	b	d6e4 <MeanShift::MeanShift()+0x164>
    d728:	mov	r6, r0
    d72c:	b	d708 <MeanShift::MeanShift()+0x188>
    d730:	mov	r6, r0
    d734:	b	d71c <MeanShift::MeanShift()+0x19c>
    d738:	.word	0x0002d370
    d73c:	.word	0x0002d34c

0000d740 <cv::Mat::~Mat()>:
    d740:	mov	ip, sp
    d744:	push	{r4, r5, fp, ip, lr, pc}
    d748:	mov	r4, r0
    d74c:	ldr	r0, [r0, #20]
    d750:	sub	fp, ip, #4
    d754:	cmp	r0, #0
    d758:	beq	d76c <cv::Mat::~Mat()+0x2c>
    d75c:	mvn	r1, #0
    d760:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    d764:	cmp	r0, #1
    d768:	beq	d7b0 <cv::Mat::~Mat()+0x70>
    d76c:	ldr	r3, [r4, #40]	; 0x28
    d770:	mov	r2, #0
    d774:	str	r2, [r4, #32]
    d778:	add	r1, r4, #48	; 0x30
    d77c:	str	r2, [r4, #28]
    d780:	str	r2, [r4, #24]
    d784:	str	r2, [r4, #16]
    d788:	str	r2, [r3]
    d78c:	ldr	r0, [r4, #44]	; 0x2c
    d790:	str	r2, [r4, #20]
    d794:	cmp	r0, r1
    d798:	beq	d7a0 <cv::Mat::~Mat()+0x60>
    d79c:	bl	9f60 <cv::fastFree(void*)@plt>
    d7a0:	mov	r0, r4
    d7a4:	ldm	sp, {r4, r5, fp, sp, pc}
    d7a8:	nop	{0}
    d7ac:	nop	{0}
    d7b0:	mov	r0, r4
    d7b4:	bl	9d8c <cv::Mat::deallocate()@plt>
    d7b8:	b	d76c <cv::Mat::~Mat()+0x2c>
    d7bc:	nop	{0}

0000d7c0 <enable_runfast()>:
    d7c0:	mov	ip, sp
    d7c4:	movw	r3, #24672	; 0x6060
    d7c8:	push	{fp, ip, lr, pc}
    d7cc:	movt	r3, #1032	; 0x408
    d7d0:	sub	fp, ip, #4
    d7d4:	mov	r2, #50331648	; 0x3000000
    d7d8:	vmrs	r3, fpscr
    d7dc:	and	r3, r3, r3
    d7e0:	orr	r3, r3, r2
    d7e4:	vmsr	fpscr, r3
    d7e8:	ldm	sp, {fp, sp, pc}
    d7ec:	nop	{0}

0000d7f0 <global constructors keyed to enable_runfast()>:
    d7f0:	mov	ip, sp
    d7f4:	push	{r4, r5, fp, ip, lr, pc}
    d7f8:	movw	r4, #54238	; 0xd3de
    d7fc:	movt	r4, #2
    d800:	sub	fp, ip, #4
    d804:	mov	r0, r4
    d808:	bl	9fc0 <std::ios_base::Init::Init()@plt>
    d80c:	mov	r0, r4
    d810:	movw	r1, #40488	; 0x9e28
    d814:	movw	r2, #52380	; 0xcc9c
    d818:	movt	r1, #0
    d81c:	movt	r2, #2
    d820:	ldm	sp, {r4, r5, fp, sp, lr}
    d824:	b	a08c <__aeabi_atexit@plt>
    d828:	nop	{0}
    d82c:	nop	{0}

0000d830 <main>:
    d830:	mov	ip, sp
    d834:	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
    d838:	vpush	{d8-d12}
    d83c:	sub	sp, sp, #1632	; 0x660
    d840:	sub	fp, ip, #4
    d844:	sub	sp, sp, #4
    d848:	mov	r4, r0
    d84c:	movw	r0, #13912	; 0x3658
    d850:	movt	r0, #2
    d854:	mov	sl, r1
    d858:	bl	9cfc <puts@plt>
    d85c:	sub	r0, fp, #200	; 0xc8
    d860:	bl	a068 <cv::VideoCapture::VideoCapture()@plt>
    d864:	cmp	r4, #2
    d868:	mov	r3, #0
    d86c:	str	r3, [fp, #-92]	; 0xffffffa4
    d870:	bgt	da18 <main+0x1e8>
    d874:	movw	r0, #53872	; 0xd270
    d878:	movw	r1, #13924	; 0x3664
    d87c:	movt	r0, #2
    d880:	movt	r1, #2
    d884:	bl	9df8 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    d888:	ldr	r2, [r0]
    d88c:	mov	r6, r0
    d890:	ldr	r3, [r2, #-12]
    d894:	add	r3, r0, r3
    d898:	ldr	r4, [r3, #124]	; 0x7c
    d89c:	cmp	r4, #0
    d8a0:	beq	eb5c <main+0x132c>
    d8a4:	ldrb	r3, [r4, #28]
    d8a8:	cmp	r3, #0
    d8ac:	subeq	r1, fp, #684	; 0x2ac
    d8b0:	ldrbne	r1, [r4, #39]	; 0x27
    d8b4:	bne	d920 <main+0xf0>
    d8b8:	strb	r3, [r1, r3]
    d8bc:	add	r3, r3, #1
    d8c0:	cmp	r3, #256	; 0x100
    d8c4:	bne	d8b8 <main+0x88>
    d8c8:	add	r5, r4, #29
    d8cc:	ldr	ip, [r4]
    d8d0:	mov	r0, r4
    d8d4:	add	r2, r1, #256	; 0x100
    d8d8:	mov	r3, r5
    d8dc:	mov	lr, pc
    d8e0:	ldr	pc, [ip, #28]
    d8e4:	mov	r3, #1
    d8e8:	mov	r1, r5
    d8ec:	strb	r3, [r4, #28]
    d8f0:	sub	r0, fp, #684	; 0x2ac
    d8f4:	mov	r2, #256	; 0x100
    d8f8:	bl	9f48 <memcmp@plt>
    d8fc:	mov	r1, #10
    d900:	cmp	r0, #0
    d904:	mov	r0, r4
    d908:	movne	r3, #2
    d90c:	strbne	r3, [r4, #28]
    d910:	ldr	r3, [r4]
    d914:	mov	lr, pc
    d918:	ldr	pc, [r3, #24]
    d91c:	mov	r1, r0
    d920:	mov	r0, r6
    d924:	bl	9dd4 <std::ostream::put(char)@plt>
    d928:	bl	9d80 <std::ostream::flush()@plt>
    d92c:	movw	r0, #53872	; 0xd270
    d930:	movw	r1, #13964	; 0x368c
    d934:	movt	r0, #2
    d938:	movt	r1, #2
    d93c:	bl	9df8 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    d940:	ldr	r1, [sl]
    d944:	bl	9df8 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    d948:	movw	r1, #13976	; 0x3698
    d94c:	movt	r1, #2
    d950:	bl	9df8 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    d954:	ldr	r2, [r0]
    d958:	mov	r6, r0
    d95c:	ldr	r3, [r2, #-12]
    d960:	add	r3, r0, r3
    d964:	ldr	r4, [r3, #124]	; 0x7c
    d968:	cmp	r4, #0
    d96c:	beq	ebc4 <main+0x1394>
    d970:	ldrb	r3, [r4, #28]
    d974:	cmp	r3, #0
    d978:	subeq	r1, fp, #684	; 0x2ac
    d97c:	ldrbne	r1, [r4, #39]	; 0x27
    d980:	bne	d9ec <main+0x1bc>
    d984:	strb	r3, [r1, r3]
    d988:	add	r3, r3, #1
    d98c:	cmp	r3, #256	; 0x100
    d990:	bne	d984 <main+0x154>
    d994:	add	r5, r4, #29
    d998:	ldr	ip, [r4]
    d99c:	mov	r0, r4
    d9a0:	add	r2, r1, #256	; 0x100
    d9a4:	mov	r3, r5
    d9a8:	mov	lr, pc
    d9ac:	ldr	pc, [ip, #28]
    d9b0:	mov	r3, #1
    d9b4:	mov	r1, r5
    d9b8:	strb	r3, [r4, #28]
    d9bc:	sub	r0, fp, #684	; 0x2ac
    d9c0:	mov	r2, #256	; 0x100
    d9c4:	bl	9f48 <memcmp@plt>
    d9c8:	mov	r1, #10
    d9cc:	cmp	r0, #0
    d9d0:	mov	r0, r4
    d9d4:	movne	r3, #2
    d9d8:	strbne	r3, [r4, #28]
    d9dc:	ldr	r3, [r4]
    d9e0:	mov	lr, pc
    d9e4:	ldr	pc, [r3, #24]
    d9e8:	mov	r1, r0
    d9ec:	mov	r0, r6
    d9f0:	bl	9dd4 <std::ostream::put(char)@plt>
    d9f4:	bl	9d80 <std::ostream::flush()@plt>
    d9f8:	mvn	r4, #0
    d9fc:	sub	r0, fp, #200	; 0xc8
    da00:	bl	9eac <cv::VideoCapture::~VideoCapture()@plt>
    da04:	mov	r0, r4
    da08:	sub	ip, fp, #80	; 0x50
    da0c:	vldmia	ip!, {d8-d12}
    da10:	sub	sp, fp, #40	; 0x28
    da14:	ldm	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
    da18:	movw	r0, #14000	; 0x36b0
    da1c:	movt	r0, #2
    da20:	bl	9cfc <puts@plt>
    da24:	sub	r7, fp, #96	; 0x60
    da28:	ldr	r1, [sl, #4]
    da2c:	sub	r2, fp, #85	; 0x55
    da30:	mov	r0, r7
    da34:	bl	a098 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)@plt>
    da38:	sub	r6, fp, #212	; 0xd4
    da3c:	mov	r1, r7
    da40:	mov	r0, r6
    da44:	bl	9e34 <cv::VideoCapture::VideoCapture(std::string const&)@plt>
    da48:	ldr	r4, [fp, #-204]	; 0xffffff34
    da4c:	cmp	r4, #0
    da50:	beq	da60 <main+0x230>
    da54:	mov	r0, r4
    da58:	mov	r1, #1
    da5c:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    da60:	ldr	r0, [fp, #-192]	; 0xffffff40
    da64:	cmp	r0, #0
    da68:	beq	da7c <main+0x24c>
    da6c:	mvn	r1, #0
    da70:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    da74:	cmp	r0, #1
    da78:	beq	ea24 <main+0x11f4>
    da7c:	ldr	r3, [fp, #-208]	; 0xffffff30
    da80:	mov	r0, r6
    da84:	str	r4, [fp, #-192]	; 0xffffff40
    da88:	str	r3, [fp, #-196]	; 0xffffff3c
    da8c:	bl	9eac <cv::VideoCapture::~VideoCapture()@plt>
    da90:	ldr	r0, [fp, #-96]	; 0xffffffa0
    da94:	movw	r8, #53840	; 0xd250
    da98:	movt	r8, #2
    da9c:	sub	r4, r0, #12
    daa0:	cmp	r4, r8
    daa4:	bne	eb70 <main+0x1340>
    daa8:	ldr	sl, [sl, #8]
    daac:	movw	r0, #14016	; 0x36c0
    dab0:	movt	r0, #2
    dab4:	str	sl, [fp, #-1668]	; 0xfffff97c
    dab8:	bl	9cfc <puts@plt>
    dabc:	sub	lr, fp, #372	; 0x174
    dac0:	sub	r0, fp, #200	; 0xc8
    dac4:	mov	ip, #0
    dac8:	mov	r3, #228	; 0xe4
    dacc:	mov	r1, lr
    dad0:	movw	r2, #367	; 0x16f
    dad4:	str	r3, [fp, #-240]	; 0xffffff10
    dad8:	mov	r3, #86	; 0x56
    dadc:	str	r2, [fp, #-236]	; 0xffffff14
    dae0:	mov	r2, #58	; 0x3a
    dae4:	str	r3, [fp, #-232]	; 0xffffff18
    dae8:	add	r3, lr, #8
    daec:	str	ip, [fp, #-324]	; 0xfffffebc
    daf0:	add	lr, lr, #48	; 0x30
    daf4:	str	ip, [fp, #-372]	; 0xfffffe8c
    daf8:	str	ip, [fp, #-368]	; 0xfffffe90
    dafc:	str	r2, [fp, #-228]	; 0xffffff1c
    db00:	str	r3, [fp, #-332]	; 0xfffffeb4
    db04:	str	lr, [fp, #-328]	; 0xfffffeb8
    db08:	str	ip, [fp, #-364]	; 0xfffffe94
    db0c:	str	ip, [fp, #-360]	; 0xfffffe98
    db10:	str	ip, [fp, #-356]	; 0xfffffe9c
    db14:	str	ip, [fp, #-352]	; 0xfffffea0
    db18:	str	ip, [fp, #-348]	; 0xfffffea4
    db1c:	str	ip, [fp, #-344]	; 0xfffffea8
    db20:	str	ip, [fp, #-340]	; 0xfffffeac
    db24:	str	ip, [fp, #-336]	; 0xfffffeb0
    db28:	str	ip, [fp, #-320]	; 0xfffffec0
    db2c:	bl	9c90 <cv::VideoCapture::read(cv::Mat&)@plt>
    db30:	ldr	r3, [fp, #-372]	; 0xfffffe8c
    db34:	sub	r1, fp, #428	; 0x1ac
    db38:	ldr	r2, [fp, #-364]	; 0xfffffe94
    db3c:	add	r0, r1, #48	; 0x30
    db40:	ldr	lr, [fp, #-352]	; 0xfffffea0
    db44:	mov	ip, #0
    db48:	str	r3, [fp, #-428]	; 0xfffffe54
    db4c:	add	r1, r1, #8
    db50:	ldr	r3, [fp, #-360]	; 0xfffffe98
    db54:	cmp	lr, #0
    db58:	str	r2, [fp, #-420]	; 0xfffffe5c
    db5c:	ldr	r2, [fp, #-356]	; 0xfffffe9c
    db60:	str	r3, [fp, #-416]	; 0xfffffe60
    db64:	ldr	r3, [fp, #-348]	; 0xfffffea4
    db68:	str	r2, [fp, #-412]	; 0xfffffe64
    db6c:	ldr	r2, [fp, #-344]	; 0xfffffea8
    db70:	ldr	r4, [fp, #-368]	; 0xfffffe90
    db74:	str	r3, [fp, #-404]	; 0xfffffe6c
    db78:	str	r2, [fp, #-400]	; 0xfffffe70
    db7c:	ldr	r3, [fp, #-340]	; 0xfffffeac
    db80:	ldr	r2, [fp, #-336]	; 0xfffffeb0
    db84:	str	r1, [fp, #-388]	; 0xfffffe7c
    db88:	str	r3, [fp, #-396]	; 0xfffffe74
    db8c:	str	r2, [fp, #-392]	; 0xfffffe78
    db90:	str	r0, [fp, #-384]	; 0xfffffe80
    db94:	str	ip, [fp, #-380]	; 0xfffffe84
    db98:	str	r4, [fp, #-424]	; 0xfffffe58
    db9c:	str	lr, [fp, #-408]	; 0xfffffe68
    dba0:	str	ip, [fp, #-376]	; 0xfffffe88
    dba4:	beq	dbb8 <main+0x388>
    dba8:	mov	r0, lr
    dbac:	mov	r1, #1
    dbb0:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    dbb4:	ldr	r4, [fp, #-368]	; 0xfffffe90
    dbb8:	cmp	r4, #2
    dbbc:	bgt	ea0c <main+0x11dc>
    dbc0:	ldr	r3, [fp, #-328]	; 0xfffffeb8
    dbc4:	ldr	r2, [fp, #-384]	; 0xfffffe80
    dbc8:	ldr	r1, [r3]
    dbcc:	str	r1, [r2]
    dbd0:	ldr	r3, [fp, #-328]	; 0xfffffeb8
    dbd4:	ldr	r2, [fp, #-384]	; 0xfffffe80
    dbd8:	ldr	r1, [r3, #4]
    dbdc:	str	r1, [r2, #4]
    dbe0:	ldr	r0, [fp, #-408]	; 0xfffffe68
    dbe4:	ldr	sl, [fp, #-232]	; 0xffffff18
    dbe8:	cmp	r0, #0
    dbec:	ldr	r9, [fp, #-228]	; 0xffffff1c
    dbf0:	beq	dc04 <main+0x3d4>
    dbf4:	mvn	r1, #0
    dbf8:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    dbfc:	cmp	r0, #1
    dc00:	beq	ea6c <main+0x123c>
    dc04:	ldr	r2, [fp, #-388]	; 0xfffffe7c
    dc08:	mov	r3, #0
    dc0c:	str	r3, [fp, #-396]	; 0xfffffe74
    dc10:	str	r3, [fp, #-400]	; 0xfffffe70
    dc14:	str	r3, [fp, #-404]	; 0xfffffe6c
    dc18:	str	r3, [fp, #-412]	; 0xfffffe64
    dc1c:	str	r3, [r2]
    dc20:	sub	r2, fp, #380	; 0x17c
    dc24:	ldr	r0, [fp, #-384]	; 0xfffffe80
    dc28:	str	r3, [fp, #-408]	; 0xfffffe68
    dc2c:	cmp	r0, r2
    dc30:	beq	dc38 <main+0x408>
    dc34:	bl	9f60 <cv::fastFree(void*)@plt>
    dc38:	mul	r3, sl, r9
    dc3c:	sub	r0, fp, #92	; 0x5c
    dc40:	movw	r1, #14036	; 0x36d4
    dc44:	movt	r1, #2
    dc48:	str	r3, [fp, #-1664]	; 0xfffff980
    dc4c:	adds	r3, r3, #127	; 0x7f
    dc50:	ldr	ip, [fp, #-1664]	; 0xfffff980
    dc54:	addmi	r3, ip, #254	; 0xfe
    dc58:	lsl	r4, ip, #2
    dc5c:	bic	r6, r3, #127	; 0x7f
    dc60:	adds	ip, r4, #127	; 0x7f
    dc64:	add	r2, r6, #512	; 0x200
    dc68:	addmi	ip, r4, #254	; 0xfe
    dc6c:	bic	r5, ip, #127	; 0x7f
    dc70:	add	r2, r2, r5
    dc74:	bl	9c60 <asprintf@plt>
    dc78:	movw	r0, #14040	; 0x36d8
    dc7c:	movt	r0, #2
    dc80:	bl	9cfc <puts@plt>
    dc84:	sub	r7, fp, #108	; 0x6c
    dc88:	mov	r0, r7
    dc8c:	bl	abf0 <now()>
    dc90:	sub	r0, fp, #272	; 0x110
    dc94:	str	sl, [fp, #-272]	; 0xfffffef0
    dc98:	str	r0, [fp, #-1680]	; 0xfffff970
    dc9c:	sub	r2, fp, #284	; 0x11c
    dca0:	str	r4, [fp, #-268]	; 0xfffffef4
    dca4:	mov	r3, #256	; 0x100
    dca8:	str	r2, [fp, #-1684]	; 0xfffff96c
    dcac:	str	r5, [fp, #-264]	; 0xfffffef8
    dcb0:	str	r3, [fp, #-260]	; 0xfffffefc
    dcb4:	ldm	r0, {r0, r1, r2, r3}
    dcb8:	ldr	ip, [fp, #-1664]	; 0xfffff980
    dcbc:	str	r9, [fp, #-276]	; 0xfffffeec
    dcc0:	str	r6, [fp, #-280]	; 0xfffffee8
    dcc4:	str	ip, [fp, #-284]	; 0xfffffee4
    dcc8:	mov	ip, sp
    dccc:	stm	ip, {r0, r1, r2, r3}
    dcd0:	ldr	ip, [fp, #-1684]	; 0xfffff96c
    dcd4:	ldr	r0, [fp, #-1668]	; 0xfffff97c
    dcd8:	ldm	ip, {r1, r2, r3}
    dcdc:	ldr	ip, [fp, #-92]	; 0xffffffa4
    dce0:	str	ip, [sp, #16]
    dce4:	bl	aaa0 <pool_notify_Init(char*, bufferInit, char*)>
    dce8:	sub	r4, fp, #116	; 0x74
    dcec:	mov	r0, r4
    dcf0:	bl	abf0 <now()>
    dcf4:	ldm	r4, {r2, r3}
    dcf8:	movw	r5, #0
    dcfc:	ldm	r7, {r0, r1}
    dd00:	mov	r4, #0
    dd04:	movt	r5, #16368	; 0x3ff0
    dd08:	strd	r4, [sp]
    dd0c:	bl	ab30 <diffToNanoseconds(timespec, timespec, double)>
    dd10:	vldr	d16, [pc, #712]	; dfe0 <main+0x7b0>
    dd14:	vmov	d18, r0, r1
    dd18:	movw	r0, #14068	; 0x36f4
    dd1c:	movt	r0, #2
    dd20:	vmul.f64	d17, d18, d16
    dd24:	vmov	r2, r3, d17
    dd28:	bl	9c9c <printf@plt>
    dd2c:	sub	r6, fp, #100	; 0x64
    dd30:	movw	r1, #14108	; 0x371c
    dd34:	sub	r2, fp, #86	; 0x56
    dd38:	movt	r1, #2
    dd3c:	mov	r0, r6
    dd40:	bl	a098 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)@plt>
    dd44:	ldr	r3, [fp, #-360]	; 0xfffffe98
    dd48:	movw	r2, #19526	; 0x4c46
    dd4c:	ldr	ip, [fp, #-364]	; 0xfffffe94
    dd50:	movt	r2, #12630	; 0x3156
    dd54:	sub	r0, fp, #224	; 0xe0
    dd58:	mov	r1, r6
    dd5c:	str	r3, [fp, #-124]	; 0xffffff84
    dd60:	mov	r4, #0
    dd64:	str	ip, [fp, #-120]	; 0xffffff88
    dd68:	sub	r3, fp, #124	; 0x7c
    dd6c:	mov	ip, #1
    dd70:	movw	r5, #0
    dd74:	str	r3, [sp, #8]
    dd78:	movt	r5, #16436	; 0x4034
    dd7c:	str	ip, [sp, #12]
    dd80:	strd	r4, [sp]
    dd84:	bl	9f30 <cv::VideoWriter::VideoWriter(std::string const&, int, double, cv::Size_<int>, bool)@plt>
    dd88:	ldr	r0, [fp, #-100]	; 0xffffff9c
    dd8c:	sub	r4, r0, #12
    dd90:	cmp	r8, r4
    dd94:	bne	ea94 <main+0x1264>
    dd98:	sub	r0, fp, #1072	; 0x430
    dd9c:	sub	r0, r0, #4
    dda0:	bl	9f9c <std::ios_base::ios_base()@plt>
    dda4:	movw	r0, #53856	; 0xd260
    dda8:	movt	r0, #2
    ddac:	sub	r2, fp, #84	; 0x54
    ddb0:	str	r2, [fp, #-1656]	; 0xfffff988
    ddb4:	str	r0, [fp, #-1672]	; 0xfffff978
    ddb8:	mov	r3, #0
    ddbc:	ldr	r2, [r0, #4]
    ddc0:	mov	r1, r3
    ddc4:	ldr	r0, [fp, #-1656]	; 0xfffff988
    ddc8:	ldr	ip, [pc, #548]	; dff4 <main+0x7c4>
    ddcc:	str	r3, [fp, #-964]	; 0xfffffc3c
    ddd0:	str	r2, [r0, #-1132]!	; 0xfffffb94
    ddd4:	str	ip, [fp, #-1076]	; 0xfffffbcc
    ddd8:	str	r0, [fp, #-1656]	; 0xfffff988
    dddc:	strb	r3, [fp, #-960]	; 0xfffffc40
    dde0:	strb	r3, [fp, #-959]	; 0xfffffc41
    dde4:	str	r3, [fp, #-956]	; 0xfffffc44
    dde8:	str	r3, [fp, #-952]	; 0xfffffc48
    ddec:	str	r3, [fp, #-948]	; 0xfffffc4c
    ddf0:	str	r3, [fp, #-944]	; 0xfffffc50
    ddf4:	ldr	r0, [r2, #-12]
    ddf8:	ldr	r2, [fp, #-1672]	; 0xfffff978
    ddfc:	ldr	ip, [fp, #-1656]	; 0xfffff988
    de00:	ldr	r3, [r2, #8]
    de04:	str	r3, [ip, r0]
    de08:	ldr	r2, [fp, #-1216]	; 0xfffffb40
    de0c:	ldr	r0, [r2, #-12]
    de10:	add	r0, ip, r0
    de14:	bl	9cf0 <std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)@plt>
    de18:	ldr	r2, [pc, #472]	; dff8 <main+0x7c8>
    de1c:	sub	r0, fp, #84	; 0x54
    de20:	ldr	r3, [pc, #468]	; dffc <main+0x7cc>
    de24:	str	r2, [r0, #-1132]!	; 0xfffffb94
    de28:	str	r0, [fp, #-1660]	; 0xfffff984
    de2c:	add	r0, r0, #4
    de30:	ldr	ip, [fp, #-1660]	; 0xfffff984
    de34:	str	r3, [fp, #-1076]	; 0xfffffbcc
    de38:	add	r4, ip, #140	; 0x8c
    de3c:	bl	9f00 <std::basic_filebuf<char, std::char_traits<char> >::basic_filebuf()@plt>
    de40:	sub	r1, fp, #1200	; 0x4b0
    de44:	mov	r0, r4
    de48:	sub	r1, r1, #4
    de4c:	sub	r1, r1, #8
    de50:	bl	9cf0 <std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)@plt>
    de54:	sub	r0, fp, #1200	; 0x4b0
    de58:	movw	r1, #14136	; 0x3738
    de5c:	sub	r0, r0, #4
    de60:	movt	r1, #2
    de64:	sub	r0, r0, #8
    de68:	mov	r2, #48	; 0x30
    de6c:	bl	9f78 <std::basic_filebuf<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode)@plt>
    de70:	cmp	r0, #0
    de74:	beq	ea4c <main+0x121c>
    de78:	ldr	r3, [fp, #-1216]	; 0xfffffb40
    de7c:	mov	r1, #0
    de80:	ldr	r2, [fp, #-1660]	; 0xfffff984
    de84:	ldr	r0, [r3, #-12]
    de88:	add	r0, r2, r0
    de8c:	bl	a038 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@plt>
    de90:	sub	r0, fp, #1200	; 0x4b0
    de94:	movw	r1, #14164	; 0x3754
    de98:	sub	r0, r0, #4
    de9c:	movt	r1, #2
    dea0:	sub	r0, r0, #12
    dea4:	bl	9df8 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    dea8:	movw	r1, #14168	; 0x3758
    deac:	movt	r1, #2
    deb0:	bl	9df8 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    deb4:	movw	r1, #14172	; 0x375c
    deb8:	movt	r1, #2
    debc:	bl	9df8 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    dec0:	movw	r1, #14168	; 0x3758
    dec4:	mov	r2, #1
    dec8:	movt	r1, #2
    decc:	mov	r6, r0
    ded0:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    ded4:	movw	r1, #14176	; 0x3760
    ded8:	mov	r0, r6
    dedc:	movt	r1, #2
    dee0:	mov	r2, #1
    dee4:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    dee8:	ldr	r2, [r6]
    deec:	ldr	r3, [r2, #-12]
    def0:	add	r3, r6, r3
    def4:	ldr	r4, [r3, #124]	; 0x7c
    def8:	cmp	r4, #0
    defc:	beq	ebc8 <main+0x1398>
    df00:	ldrb	r3, [r4, #28]
    df04:	cmp	r3, #0
    df08:	subeq	r1, fp, #684	; 0x2ac
    df0c:	ldrbne	r1, [r4, #39]	; 0x27
    df10:	bne	df7c <main+0x74c>
    df14:	strb	r3, [r1, r3]
    df18:	add	r3, r3, #1
    df1c:	cmp	r3, #256	; 0x100
    df20:	bne	df14 <main+0x6e4>
    df24:	add	r5, r4, #29
    df28:	ldr	ip, [r4]
    df2c:	mov	r0, r4
    df30:	add	r2, r1, #256	; 0x100
    df34:	mov	r3, r5
    df38:	mov	lr, pc
    df3c:	ldr	pc, [ip, #28]
    df40:	mov	r3, #1
    df44:	mov	r1, r5
    df48:	strb	r3, [r4, #28]
    df4c:	sub	r0, fp, #684	; 0x2ac
    df50:	mov	r2, #256	; 0x100
    df54:	bl	9f48 <memcmp@plt>
    df58:	mov	r1, #10
    df5c:	cmp	r0, #0
    df60:	mov	r0, r4
    df64:	movne	r3, #2
    df68:	strbne	r3, [r4, #28]
    df6c:	ldr	r3, [r4]
    df70:	mov	lr, pc
    df74:	ldr	pc, [r3, #24]
    df78:	mov	r1, r0
    df7c:	mov	r0, r6
    df80:	bl	9dd4 <std::ostream::put(char)@plt>
    df84:	bl	9d80 <std::ostream::flush()@plt>
    df88:	sub	r3, fp, #132	; 0x84
    df8c:	str	r3, [fp, #-1692]	; 0xfffff964
    df90:	mov	r0, r3
    df94:	bl	abf0 <now()>
    df98:	sub	r0, fp, #1648	; 0x670
    df9c:	sub	r0, r0, #4
    dfa0:	bl	d580 <MeanShift::MeanShift()>
    dfa4:	sub	r0, fp, #1648	; 0x670
    dfa8:	sub	r1, fp, #372	; 0x174
    dfac:	sub	r0, r0, #4
    dfb0:	sub	r2, fp, #240	; 0xf0
    dfb4:	bl	cd00 <MeanShift::Init_target_frame(cv::Mat const&, cv::Rect_<int> const&)>
    dfb8:	vldr	d11, [pc, #40]	; dfe8 <main+0x7b8>
    dfbc:	sub	r8, fp, #940	; 0x3ac
    dfc0:	sub	ip, fp, #156	; 0x9c
    dfc4:	add	r0, r8, #256	; 0x100
    dfc8:	str	ip, [fp, #-1688]	; 0xfffff968
    dfcc:	vldr	s16, [pc, #28]	; dff0 <main+0x7c0>
    dfd0:	vmov.f64	d10, d11
    dfd4:	str	r0, [fp, #-1676]	; 0xfffff974
    dfd8:	vmov.f64	d9, d11
    dfdc:	b	e000 <main+0x7d0>
    dfe0:	.word	0xe826d695
    dfe4:	.word	0x3e112e0b
	...
    dff4:	.word	0x0002d370
    dff8:	.word	0x0002d34c
    dffc:	.word	0x0002d360
    e000:	sub	r0, fp, #156	; 0x9c
    e004:	bl	abf0 <now()>
    e008:	sub	r0, fp, #200	; 0xc8
    e00c:	sub	r1, fp, #372	; 0x174
    e010:	bl	9c90 <cv::VideoCapture::read(cv::Mat&)@plt>
    e014:	cmp	r0, #0
    e018:	beq	e268 <main+0xa38>
    e01c:	sub	r4, fp, #164	; 0xa4
    e020:	mov	r0, r4
    e024:	bl	abf0 <now()>
    e028:	ldr	ip, [fp, #-1688]	; 0xfffff968
    e02c:	movw	r5, #0
    e030:	ldm	r4, {r2, r3}
    e034:	movt	r5, #16368	; 0x3ff0
    e038:	mov	r4, #0
    e03c:	ldm	ip, {r0, r1}
    e040:	strd	r4, [sp]
    e044:	bl	ab30 <diffToNanoseconds(timespec, timespec, double)>
    e048:	sub	r6, fp, #140	; 0x8c
    e04c:	vmov	d16, r0, r1
    e050:	mov	r0, r6
    e054:	vadd.f64	d10, d10, d16
    e058:	bl	abf0 <now()>
    e05c:	sub	r1, fp, #1648	; 0x670
    e060:	sub	r0, fp, #684	; 0x2ac
    e064:	sub	r1, r1, #4
    e068:	sub	r2, fp, #372	; 0x174
    e06c:	bl	ca20 <MeanShift::track(cv::Mat const&)>
    e070:	sub	r4, fp, #148	; 0x94
    e074:	ldr	r9, [fp, #-680]	; 0xfffffd58
    e078:	ldr	r7, [fp, #-684]	; 0xfffffd54
    e07c:	mov	r0, r4
    e080:	bl	abf0 <now()>
    e084:	ldm	r4, {r2, r3}
    e088:	movw	r5, #0
    e08c:	ldm	r6, {r0, r1}
    e090:	mov	r4, #0
    e094:	movt	r5, #16368	; 0x3ff0
    e098:	strd	r4, [sp]
    e09c:	bl	ab30 <diffToNanoseconds(timespec, timespec, double)>
    e0a0:	sub	sl, fp, #172	; 0xac
    e0a4:	vmov	d17, r0, r1
    e0a8:	mov	r0, sl
    e0ac:	vadd.f64	d11, d11, d17
    e0b0:	bl	abf0 <now()>
    e0b4:	sub	r0, fp, #1200	; 0x4b0
    e0b8:	vmov	r1, s16
    e0bc:	sub	r0, r0, #4
    e0c0:	sub	r0, r0, #12
    e0c4:	bl	9cd8 <std::ostream::operator<<(int)@plt>
    e0c8:	movw	r1, #14168	; 0x3758
    e0cc:	mov	r2, #1
    e0d0:	movt	r1, #2
    e0d4:	mov	r4, r0
    e0d8:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    e0dc:	mov	r0, r4
    e0e0:	mov	r1, r7
    e0e4:	bl	9cd8 <std::ostream::operator<<(int)@plt>
    e0e8:	movw	r1, #14168	; 0x3758
    e0ec:	mov	r2, #1
    e0f0:	movt	r1, #2
    e0f4:	mov	r4, r0
    e0f8:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    e0fc:	mov	r0, r4
    e100:	mov	r1, r9
    e104:	bl	9cd8 <std::ostream::operator<<(int)@plt>
    e108:	ldr	r2, [r0]
    e10c:	mov	r5, r0
    e110:	ldr	r3, [r2, #-12]
    e114:	add	r3, r0, r3
    e118:	ldr	r4, [r3, #124]	; 0x7c
    e11c:	cmp	r4, #0
    e120:	beq	ea48 <main+0x1218>
    e124:	ldrb	r3, [r4, #28]
    e128:	cmp	r3, #0
    e12c:	ldrbne	r1, [r4, #39]	; 0x27
    e130:	bne	e1a0 <main+0x970>
    e134:	strb	r3, [r8, r3]
    e138:	add	r3, r3, #1
    e13c:	cmp	r3, #256	; 0x100
    e140:	bne	e134 <main+0x904>
    e144:	add	r6, r4, #29
    e148:	ldr	ip, [r4]
    e14c:	mov	r0, r4
    e150:	mov	r1, r8
    e154:	ldr	r2, [fp, #-1676]	; 0xfffff974
    e158:	mov	r3, r6
    e15c:	mov	lr, pc
    e160:	ldr	pc, [ip, #28]
    e164:	mov	r3, #1
    e168:	mov	r1, r6
    e16c:	strb	r3, [r4, #28]
    e170:	mov	r0, r8
    e174:	mov	r2, #256	; 0x100
    e178:	bl	9f48 <memcmp@plt>
    e17c:	mov	r1, #10
    e180:	cmp	r0, #0
    e184:	mov	r0, r4
    e188:	movne	r3, #2
    e18c:	strbne	r3, [r4, #28]
    e190:	ldr	r3, [r4]
    e194:	mov	lr, pc
    e198:	ldr	pc, [r3, #24]
    e19c:	mov	r1, r0
    e1a0:	mov	r0, r5
    e1a4:	bl	9dd4 <std::ostream::put(char)@plt>
    e1a8:	bl	9d80 <std::ostream::flush()@plt>
    e1ac:	mov	r6, #0
    e1b0:	sub	ip, fp, #292	; 0x124
    e1b4:	str	r7, [fp, #-256]	; 0xffffff00
    e1b8:	mov	r7, #0
    e1bc:	strd	r6, [ip]
    e1c0:	sub	r2, fp, #316	; 0x13c
    e1c4:	ldr	ip, [fp, #-676]	; 0xfffffd5c
    e1c8:	strd	r6, [r2]
    e1cc:	mov	r4, #0
    e1d0:	movw	r5, #57344	; 0xe000
    e1d4:	sub	r0, fp, #372	; 0x174
    e1d8:	movt	r5, #16495	; 0x406f
    e1dc:	str	ip, [fp, #-248]	; 0xffffff08
    e1e0:	sub	r1, fp, #256	; 0x100
    e1e4:	ldr	ip, [fp, #-672]	; 0xfffffd60
    e1e8:	mov	r3, #3
    e1ec:	str	r9, [fp, #-252]	; 0xffffff04
    e1f0:	str	ip, [fp, #-244]	; 0xffffff0c
    e1f4:	sub	ip, fp, #308	; 0x134
    e1f8:	strd	r6, [ip]
    e1fc:	sub	ip, fp, #300	; 0x12c
    e200:	strd	r4, [ip]
    e204:	mov	ip, #8
    e208:	mov	r4, #0
    e20c:	str	ip, [sp]
    e210:	str	r4, [sp, #4]
    e214:	bl	9e94 <cv::rectangle(cv::Mat&, cv::Rect_<int>, cv::Scalar_<double> const&, int, int, int)@plt>
    e218:	sub	r0, fp, #224	; 0xe0
    e21c:	sub	r1, fp, #372	; 0x174
    e220:	bl	9d2c <cv::VideoWriter::operator<<(cv::Mat const&)@plt>
    e224:	sub	r4, fp, #180	; 0xb4
    e228:	mov	r0, r4
    e22c:	bl	abf0 <now()>
    e230:	ldm	r4, {r2, r3}
    e234:	movw	r5, #0
    e238:	ldm	sl, {r0, r1}
    e23c:	mov	r4, #0
    e240:	movt	r5, #16368	; 0x3ff0
    e244:	strd	r4, [sp]
    e248:	bl	ab30 <diffToNanoseconds(timespec, timespec, double)>
    e24c:	vmov	r2, s16
    e250:	vmov	d16, r0, r1
    e254:	vadd.f64	d9, d9, d16
    e258:	add	r2, r2, #1
    e25c:	cmp	r2, #32
    e260:	vmov	s16, r2
    e264:	bne	e000 <main+0x7d0>
    e268:	sub	r0, fp, #1200	; 0x4b0
    e26c:	sub	r0, r0, #4
    e270:	sub	r0, r0, #8
    e274:	bl	9cb4 <std::basic_filebuf<char, std::char_traits<char> >::close()@plt>
    e278:	cmp	r0, #0
    e27c:	beq	ea78 <main+0x1248>
    e280:	ldr	ip, [fp, #-1680]	; 0xfffff970
    e284:	ldm	ip, {r0, r1, r2, r3}
    e288:	ldr	ip, [fp, #-1664]	; 0xfffff980
    e28c:	str	ip, [fp, #-284]	; 0xfffffee4
    e290:	mov	ip, sp
    e294:	stm	ip, {r0, r1, r2, r3}
    e298:	ldr	ip, [fp, #-1684]	; 0xfffff96c
    e29c:	mov	r0, #0
    e2a0:	ldm	ip, {r1, r2, r3}
    e2a4:	bl	a190 <pool_notify_Delete(unsigned char, bufferInit)>
    e2a8:	sub	r4, fp, #188	; 0xbc
    e2ac:	mov	r0, r4
    e2b0:	bl	abf0 <now()>
    e2b4:	ldr	r2, [fp, #-1692]	; 0xfffff964
    e2b8:	movw	r5, #0
    e2bc:	movt	r5, #16368	; 0x3ff0
    e2c0:	ldm	r2, {r0, r1}
    e2c4:	ldm	r4, {r2, r3}
    e2c8:	mov	r4, #0
    e2cc:	strd	r4, [sp]
    e2d0:	bl	ab30 <diffToNanoseconds(timespec, timespec, double)>
    e2d4:	vmov	d12, r0, r1
    e2d8:	mov	r2, #10
    e2dc:	movw	r0, #53872	; 0xd270
    e2e0:	movw	r1, #14180	; 0x3764
    e2e4:	movt	r0, #2
    e2e8:	movt	r1, #2
    e2ec:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    e2f0:	movw	r0, #53872	; 0xd270
    e2f4:	vmov	r1, s16
    e2f8:	movt	r0, #2
    e2fc:	bl	9cd8 <std::ostream::operator<<(int)@plt>
    e300:	movw	r1, #14192	; 0x3770
    e304:	mov	r2, #7
    e308:	movt	r1, #2
    e30c:	mov	r6, r0
    e310:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    e314:	ldr	r2, [r6]
    e318:	ldr	r3, [r2, #-12]
    e31c:	add	r3, r6, r3
    e320:	ldr	r4, [r3, #124]	; 0x7c
    e324:	cmp	r4, #0
    e328:	beq	eba4 <main+0x1374>
    e32c:	ldrb	r3, [r4, #28]
    e330:	cmp	r3, #0
    e334:	subeq	r1, fp, #940	; 0x3ac
    e338:	ldrbne	r1, [r4, #39]	; 0x27
    e33c:	bne	e3a8 <main+0xb78>
    e340:	strb	r3, [r1, r3]
    e344:	add	r3, r3, #1
    e348:	cmp	r3, #256	; 0x100
    e34c:	bne	e340 <main+0xb10>
    e350:	add	r5, r4, #29
    e354:	ldr	ip, [r4]
    e358:	mov	r0, r4
    e35c:	add	r2, r1, #256	; 0x100
    e360:	mov	r3, r5
    e364:	mov	lr, pc
    e368:	ldr	pc, [ip, #28]
    e36c:	mov	r3, #1
    e370:	mov	r1, r5
    e374:	strb	r3, [r4, #28]
    e378:	sub	r0, fp, #940	; 0x3ac
    e37c:	mov	r2, #256	; 0x100
    e380:	bl	9f48 <memcmp@plt>
    e384:	mov	r1, #10
    e388:	cmp	r0, #0
    e38c:	mov	r0, r4
    e390:	movne	r3, #2
    e394:	strbne	r3, [r4, #28]
    e398:	ldr	r3, [r4]
    e39c:	mov	lr, pc
    e3a0:	ldr	pc, [r3, #24]
    e3a4:	mov	r1, r0
    e3a8:	mov	r0, r6
    e3ac:	bl	9dd4 <std::ostream::put(char)@plt>
    e3b0:	bl	9d80 <std::ostream::flush()@plt>
    e3b4:	movw	r0, #53872	; 0xd270
    e3b8:	movw	r1, #14200	; 0x3778
    e3bc:	movt	r0, #2
    e3c0:	movt	r1, #2
    e3c4:	mov	r2, #6
    e3c8:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    e3cc:	vldr	d16, [pc, #732]	; e6b0 <main+0xe80>
    e3d0:	movw	r0, #53872	; 0xd270
    e3d4:	movt	r0, #2
    e3d8:	vmul.f64	d12, d12, d16
    e3dc:	vmov	r2, r3, d12
    e3e0:	bl	9ed0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    e3e4:	movw	r1, #14208	; 0x3780
    e3e8:	mov	r2, #11
    e3ec:	movt	r1, #2
    e3f0:	mov	r4, r0
    e3f4:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    e3f8:	vcvt.f64.s32	d16, s16
    e3fc:	mov	r0, r4
    e400:	vdiv.f64	d8, d16, d12
    e404:	vmov	r2, r3, d8
    e408:	bl	9ed0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    e40c:	ldr	r2, [r0]
    e410:	mov	r6, r0
    e414:	ldr	r3, [r2, #-12]
    e418:	add	r3, r0, r3
    e41c:	ldr	r4, [r3, #124]	; 0x7c
    e420:	cmp	r4, #0
    e424:	beq	ebbc <main+0x138c>
    e428:	ldrb	r3, [r4, #28]
    e42c:	cmp	r3, #0
    e430:	subeq	r1, fp, #940	; 0x3ac
    e434:	ldrbne	r1, [r4, #39]	; 0x27
    e438:	bne	e4a4 <main+0xc74>
    e43c:	strb	r3, [r1, r3]
    e440:	add	r3, r3, #1
    e444:	cmp	r3, #256	; 0x100
    e448:	bne	e43c <main+0xc0c>
    e44c:	add	r5, r4, #29
    e450:	ldr	ip, [r4]
    e454:	mov	r0, r4
    e458:	add	r2, r1, #256	; 0x100
    e45c:	mov	r3, r5
    e460:	mov	lr, pc
    e464:	ldr	pc, [ip, #28]
    e468:	mov	r3, #1
    e46c:	mov	r1, r5
    e470:	strb	r3, [r4, #28]
    e474:	sub	r0, fp, #940	; 0x3ac
    e478:	mov	r2, #256	; 0x100
    e47c:	bl	9f48 <memcmp@plt>
    e480:	mov	r1, #10
    e484:	cmp	r0, #0
    e488:	mov	r0, r4
    e48c:	movne	r3, #2
    e490:	strbne	r3, [r4, #28]
    e494:	ldr	r3, [r4]
    e498:	mov	lr, pc
    e49c:	ldr	pc, [r3, #24]
    e4a0:	mov	r1, r0
    e4a4:	mov	r0, r6
    e4a8:	bl	9dd4 <std::ostream::put(char)@plt>
    e4ac:	bl	9d80 <std::ostream::flush()@plt>
    e4b0:	movw	r0, #53872	; 0xd270
    e4b4:	movw	r1, #14220	; 0x378c
    e4b8:	movt	r0, #2
    e4bc:	movt	r1, #2
    e4c0:	mov	r2, #1
    e4c4:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    e4c8:	movw	r0, #53872	; 0xd270
    e4cc:	movw	r1, #14224	; 0x3790
    e4d0:	movt	r0, #2
    e4d4:	movt	r1, #2
    e4d8:	mov	r2, #5
    e4dc:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    e4e0:	movw	r0, #53872	; 0xd270
    e4e4:	movw	r1, #14168	; 0x3758
    e4e8:	movt	r0, #2
    e4ec:	movt	r1, #2
    e4f0:	mov	r2, #1
    e4f4:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    e4f8:	vldr	d16, [pc, #432]	; e6b0 <main+0xe80>
    e4fc:	movw	r0, #53872	; 0xd270
    e500:	movt	r0, #2
    e504:	vmul.f64	d17, d10, d16
    e508:	vmov	r2, r3, d17
    e50c:	bl	9ed0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    e510:	movw	r1, #14168	; 0x3758
    e514:	mov	r2, #1
    e518:	movt	r1, #2
    e51c:	mov	r4, r0
    e520:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    e524:	vldr	d16, [pc, #388]	; e6b0 <main+0xe80>
    e528:	mov	r0, r4
    e52c:	vmul.f64	d18, d11, d16
    e530:	vmov	r2, r3, d18
    e534:	bl	9ed0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    e538:	movw	r1, #14168	; 0x3758
    e53c:	mov	r2, #1
    e540:	movt	r1, #2
    e544:	mov	r4, r0
    e548:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    e54c:	vldr	d16, [pc, #348]	; e6b0 <main+0xe80>
    e550:	mov	r0, r4
    e554:	vmul.f64	d17, d9, d16
    e558:	vmov	r2, r3, d17
    e55c:	bl	9ed0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    e560:	movw	r1, #14168	; 0x3758
    e564:	mov	r2, #1
    e568:	movt	r1, #2
    e56c:	mov	r4, r0
    e570:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    e574:	mov	r0, r4
    e578:	vmov	r2, r3, d12
    e57c:	bl	9ed0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    e580:	movw	r1, #14168	; 0x3758
    e584:	mov	r2, #1
    e588:	movt	r1, #2
    e58c:	mov	r4, r0
    e590:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    e594:	mov	r0, r4
    e598:	vmov	r2, r3, d8
    e59c:	bl	9ed0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    e5a0:	ldr	r2, [r0]
    e5a4:	mov	r6, r0
    e5a8:	ldr	r3, [r2, #-12]
    e5ac:	add	r3, r0, r3
    e5b0:	ldr	r4, [r3, #124]	; 0x7c
    e5b4:	cmp	r4, #0
    e5b8:	beq	ebfc <main+0x13cc>
    e5bc:	ldrb	r3, [r4, #28]
    e5c0:	cmp	r3, #0
    e5c4:	subeq	r1, fp, #940	; 0x3ac
    e5c8:	ldrbne	r1, [r4, #39]	; 0x27
    e5cc:	bne	e638 <main+0xe08>
    e5d0:	strb	r3, [r1, r3]
    e5d4:	add	r3, r3, #1
    e5d8:	cmp	r3, #256	; 0x100
    e5dc:	bne	e5d0 <main+0xda0>
    e5e0:	add	r5, r4, #29
    e5e4:	ldr	ip, [r4]
    e5e8:	mov	r0, r4
    e5ec:	add	r2, r1, #256	; 0x100
    e5f0:	mov	r3, r5
    e5f4:	mov	lr, pc
    e5f8:	ldr	pc, [ip, #28]
    e5fc:	mov	r3, #1
    e600:	mov	r1, r5
    e604:	strb	r3, [r4, #28]
    e608:	sub	r0, fp, #940	; 0x3ac
    e60c:	mov	r2, #256	; 0x100
    e610:	bl	9f48 <memcmp@plt>
    e614:	mov	r1, #10
    e618:	cmp	r0, #0
    e61c:	mov	r0, r4
    e620:	movne	r3, #2
    e624:	strbne	r3, [r4, #28]
    e628:	ldr	r3, [r4]
    e62c:	mov	lr, pc
    e630:	ldr	pc, [r3, #24]
    e634:	mov	r1, r0
    e638:	mov	r0, r6
    e63c:	bl	9dd4 <std::ostream::put(char)@plt>
    e640:	bl	9d80 <std::ostream::flush()@plt>
    e644:	movw	r0, #53872	; 0xd270
    e648:	movw	r1, #14232	; 0x3798
    e64c:	movt	r0, #2
    e650:	movt	r1, #2
    e654:	bl	9df8 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    e658:	movw	r3, #64376	; 0xfb78
    e65c:	sub	r2, fp, #84	; 0x54
    e660:	movt	r3, #65535	; 0xffff
    e664:	vldr	d16, [pc, #76]	; e6b8 <main+0xe88>
    e668:	add	r2, r2, r3
    e66c:	vldr	d17, [r2]
    e670:	vmul.f64	d18, d16, d17
    e674:	vmov	r2, r3, d18
    e678:	bl	9ed0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    e67c:	ldr	r2, [r0]
    e680:	mov	r6, r0
    e684:	ldr	r3, [r2, #-12]
    e688:	add	r3, r0, r3
    e68c:	ldr	r4, [r3, #124]	; 0x7c
    e690:	cmp	r4, #0
    e694:	beq	ec00 <main+0x13d0>
    e698:	ldrb	r3, [r4, #28]
    e69c:	cmp	r3, #0
    e6a0:	subeq	r1, fp, #940	; 0x3ac
    e6a4:	ldrbne	r1, [r4, #39]	; 0x27
    e6a8:	bne	e73c <main+0xf0c>
    e6ac:	b	e6d4 <main+0xea4>
    e6b0:	.word	0xe826d695
    e6b4:	.word	0x3e112e0b
    e6b8:	.word	0xa0b5ed8d
    e6bc:	.word	0x3eb0c6f7
    e6c0:	.word	0x0002d370
    e6c4:	.word	0x0002d308
    e6c8:	.word	0x0002d380
    e6cc:	.word	0x0002d360
    e6d0:	.word	0x0002d34c
    e6d4:	strb	r3, [r1, r3]
    e6d8:	add	r3, r3, #1
    e6dc:	cmp	r3, #256	; 0x100
    e6e0:	bne	e6d4 <main+0xea4>
    e6e4:	add	r5, r4, #29
    e6e8:	ldr	ip, [r4]
    e6ec:	mov	r0, r4
    e6f0:	add	r2, r1, #256	; 0x100
    e6f4:	mov	r3, r5
    e6f8:	mov	lr, pc
    e6fc:	ldr	pc, [ip, #28]
    e700:	mov	r3, #1
    e704:	mov	r1, r5
    e708:	strb	r3, [r4, #28]
    e70c:	sub	r0, fp, #940	; 0x3ac
    e710:	mov	r2, #256	; 0x100
    e714:	bl	9f48 <memcmp@plt>
    e718:	mov	r1, #10
    e71c:	cmp	r0, #0
    e720:	mov	r0, r4
    e724:	movne	r3, #2
    e728:	strbne	r3, [r4, #28]
    e72c:	ldr	r3, [r4]
    e730:	mov	lr, pc
    e734:	ldr	pc, [r3, #24]
    e738:	mov	r1, r0
    e73c:	mov	r0, r6
    e740:	bl	9dd4 <std::ostream::put(char)@plt>
    e744:	bl	9d80 <std::ostream::flush()@plt>
    e748:	movw	r0, #53872	; 0xd270
    e74c:	movw	r1, #14248	; 0x37a8
    e750:	movt	r0, #2
    e754:	movt	r1, #2
    e758:	mov	r2, #16
    e75c:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    e760:	movw	r3, #64384	; 0xfb80
    e764:	sub	r0, fp, #84	; 0x54
    e768:	movt	r3, #65535	; 0xffff
    e76c:	vldr	d16, [pc, #-188]	; e6b8 <main+0xe88>
    e770:	add	r0, r0, r3
    e774:	vldr	d17, [r0]
    e778:	movw	r0, #53872	; 0xd270
    e77c:	movt	r0, #2
    e780:	vmul.f64	d18, d16, d17
    e784:	vmov	r2, r3, d18
    e788:	bl	9ed0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    e78c:	ldr	r2, [r0]
    e790:	mov	r6, r0
    e794:	ldr	r3, [r2, #-12]
    e798:	add	r3, r0, r3
    e79c:	ldr	r4, [r3, #124]	; 0x7c
    e7a0:	cmp	r4, #0
    e7a4:	beq	ec04 <main+0x13d4>
    e7a8:	ldrb	r3, [r4, #28]
    e7ac:	cmp	r3, #0
    e7b0:	subeq	r1, fp, #940	; 0x3ac
    e7b4:	ldrbne	r1, [r4, #39]	; 0x27
    e7b8:	bne	e824 <main+0xff4>
    e7bc:	strb	r3, [r1, r3]
    e7c0:	add	r3, r3, #1
    e7c4:	cmp	r3, #256	; 0x100
    e7c8:	bne	e7bc <main+0xf8c>
    e7cc:	add	r5, r4, #29
    e7d0:	ldr	ip, [r4]
    e7d4:	mov	r0, r4
    e7d8:	add	r2, r1, #256	; 0x100
    e7dc:	mov	r3, r5
    e7e0:	mov	lr, pc
    e7e4:	ldr	pc, [ip, #28]
    e7e8:	mov	r3, #1
    e7ec:	mov	r1, r5
    e7f0:	strb	r3, [r4, #28]
    e7f4:	sub	r0, fp, #940	; 0x3ac
    e7f8:	mov	r2, #256	; 0x100
    e7fc:	bl	9f48 <memcmp@plt>
    e800:	mov	r1, #10
    e804:	cmp	r0, #0
    e808:	mov	r0, r4
    e80c:	movne	r3, #2
    e810:	strbne	r3, [r4, #28]
    e814:	ldr	r3, [r4]
    e818:	mov	lr, pc
    e81c:	ldr	pc, [r3, #24]
    e820:	mov	r1, r0
    e824:	mov	r0, r6
    e828:	bl	9dd4 <std::ostream::put(char)@plt>
    e82c:	bl	9d80 <std::ostream::flush()@plt>
    e830:	movw	r0, #53872	; 0xd270
    e834:	movw	r1, #14268	; 0x37bc
    e838:	movt	r0, #2
    e83c:	movt	r1, #2
    e840:	mov	r2, #17
    e844:	bl	9ef4 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)@plt>
    e848:	movw	r3, #64392	; 0xfb88
    e84c:	sub	r0, fp, #84	; 0x54
    e850:	movt	r3, #65535	; 0xffff
    e854:	vldr	d16, [pc, #-420]	; e6b8 <main+0xe88>
    e858:	add	r0, r0, r3
    e85c:	vldr	d17, [r0]
    e860:	movw	r0, #53872	; 0xd270
    e864:	movt	r0, #2
    e868:	vmul.f64	d18, d16, d17
    e86c:	vmov	r2, r3, d18
    e870:	bl	9ed0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    e874:	ldr	r2, [r0]
    e878:	mov	r6, r0
    e87c:	ldr	r3, [r2, #-12]
    e880:	add	r3, r0, r3
    e884:	ldr	r4, [r3, #124]	; 0x7c
    e888:	cmp	r4, #0
    e88c:	beq	ec08 <main+0x13d8>
    e890:	ldrb	r3, [r4, #28]
    e894:	cmp	r3, #0
    e898:	subeq	r1, fp, #940	; 0x3ac
    e89c:	ldrbne	r1, [r4, #39]	; 0x27
    e8a0:	bne	e90c <main+0x10dc>
    e8a4:	strb	r3, [r1, r3]
    e8a8:	add	r3, r3, #1
    e8ac:	cmp	r3, #256	; 0x100
    e8b0:	bne	e8a4 <main+0x1074>
    e8b4:	add	r5, r4, #29
    e8b8:	ldr	ip, [r4]
    e8bc:	mov	r0, r4
    e8c0:	add	r2, r1, #256	; 0x100
    e8c4:	mov	r3, r5
    e8c8:	mov	lr, pc
    e8cc:	ldr	pc, [ip, #28]
    e8d0:	mov	r3, #1
    e8d4:	mov	r1, r5
    e8d8:	strb	r3, [r4, #28]
    e8dc:	sub	r0, fp, #940	; 0x3ac
    e8e0:	mov	r2, #256	; 0x100
    e8e4:	bl	9f48 <memcmp@plt>
    e8e8:	mov	r1, #10
    e8ec:	cmp	r0, #0
    e8f0:	mov	r0, r4
    e8f4:	movne	r3, #2
    e8f8:	strbne	r3, [r4, #28]
    e8fc:	ldr	r3, [r4]
    e900:	mov	lr, pc
    e904:	ldr	pc, [r3, #24]
    e908:	mov	r1, r0
    e90c:	mov	r0, r6
    e910:	bl	9dd4 <std::ostream::put(char)@plt>
    e914:	bl	9d80 <std::ostream::flush()@plt>
    e918:	sub	r0, fp, #1648	; 0x670
    e91c:	sub	r0, r0, #4
    e920:	bl	d3b0 <MeanShift::~MeanShift()>
    e924:	ldr	r3, [fp, #-1660]	; 0xfffff984
    e928:	sub	r0, fp, #1200	; 0x4b0
    e92c:	ldr	r2, [pc, #-612]	; e6d0 <main+0xea0>
    e930:	sub	r0, r0, #4
    e934:	ldr	ip, [pc, #-624]	; e6cc <main+0xe9c>
    e938:	sub	r0, r0, #8
    e93c:	str	r2, [fp, #-1216]	; 0xfffffb40
    e940:	str	ip, [r3, #140]	; 0x8c
    e944:	ldr	r3, [pc, #-644]	; e6c8 <main+0xe98>
    e948:	str	r3, [fp, #-1212]	; 0xfffffb44
    e94c:	bl	9cb4 <std::basic_filebuf<char, std::char_traits<char> >::close()@plt>
    e950:	sub	r0, fp, #1152	; 0x480
    e954:	sub	r0, r0, #4
    e958:	bl	9da4 <std::__basic_file<char>::~__basic_file()@plt>
    e95c:	sub	r4, fp, #1200	; 0x4b0
    e960:	ldr	r3, [pc, #-676]	; e6c4 <main+0xe94>
    e964:	sub	r4, r4, #4
    e968:	sub	r4, r4, #12
    e96c:	add	r0, r4, #32
    e970:	str	r3, [fp, #-1212]	; 0xfffffb44
    e974:	bl	9fa8 <std::locale::~locale()@plt>
    e978:	ldr	r3, [fp, #-1672]	; 0xfffff978
    e97c:	ldr	ip, [fp, #-1656]	; 0xfffff988
    e980:	add	r0, r4, #140	; 0x8c
    e984:	ldr	r2, [r3, #4]
    e988:	ldr	r1, [r3, #8]
    e98c:	str	r2, [fp, #-1216]	; 0xfffffb40
    e990:	ldr	r3, [r2, #-12]
    e994:	ldr	r2, [pc, #-732]	; e6c0 <main+0xe90>
    e998:	str	r1, [ip, r3]
    e99c:	str	r2, [fp, #-1076]	; 0xfffffbcc
    e9a0:	bl	9e70 <std::ios_base::~ios_base()@plt>
    e9a4:	sub	r0, fp, #224	; 0xe0
    e9a8:	bl	9ea0 <cv::VideoWriter::~VideoWriter()@plt>
    e9ac:	ldr	r0, [fp, #-352]	; 0xfffffea0
    e9b0:	cmp	r0, #0
    e9b4:	beq	e9c8 <main+0x1198>
    e9b8:	mvn	r1, #0
    e9bc:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    e9c0:	cmp	r0, #1
    e9c4:	beq	ea3c <main+0x120c>
    e9c8:	ldr	r3, [fp, #-332]	; 0xfffffeb4
    e9cc:	mov	r0, #0
    e9d0:	str	r0, [fp, #-340]	; 0xfffffeac
    e9d4:	str	r0, [fp, #-344]	; 0xfffffea8
    e9d8:	str	r0, [fp, #-348]	; 0xfffffea4
    e9dc:	str	r0, [fp, #-356]	; 0xfffffe9c
    e9e0:	str	r0, [r3]
    e9e4:	sub	r3, fp, #324	; 0x144
    e9e8:	ldr	r2, [fp, #-328]	; 0xfffffeb8
    e9ec:	str	r0, [fp, #-352]	; 0xfffffea0
    e9f0:	cmp	r2, r3
    e9f4:	moveq	r4, r0
    e9f8:	beq	d9fc <main+0x1cc>
    e9fc:	mov	r0, r2
    ea00:	bl	9f60 <cv::fastFree(void*)@plt>
    ea04:	mov	r4, #0
    ea08:	b	d9fc <main+0x1cc>
    ea0c:	sub	r0, fp, #428	; 0x1ac
    ea10:	sub	r1, fp, #372	; 0x174
    ea14:	mov	r3, #0
    ea18:	str	r3, [fp, #-424]	; 0xfffffe58
    ea1c:	bl	9c6c <cv::Mat::copySize(cv::Mat const&)@plt>
    ea20:	b	dbe0 <main+0x3b0>
    ea24:	sub	r2, fp, #200	; 0xc8
    ea28:	add	r0, r2, #4
    ea2c:	bl	a0b0 <cv::Ptr<CvCapture>::delete_obj()@plt>
    ea30:	ldr	r0, [fp, #-192]	; 0xffffff40
    ea34:	bl	9f60 <cv::fastFree(void*)@plt>
    ea38:	b	da7c <main+0x24c>
    ea3c:	sub	r0, fp, #372	; 0x174
    ea40:	bl	9d8c <cv::Mat::deallocate()@plt>
    ea44:	b	e9c8 <main+0x1198>
    ea48:	bl	9ce4 <std::__throw_bad_cast()@plt>
    ea4c:	ldr	r3, [fp, #-1216]	; 0xfffffb40
    ea50:	ldr	ip, [fp, #-1660]	; 0xfffff984
    ea54:	ldr	r0, [r3, #-12]
    ea58:	add	r0, ip, r0
    ea5c:	ldr	r1, [r0, #20]
    ea60:	orr	r1, r1, #4
    ea64:	bl	a038 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@plt>
    ea68:	b	de90 <main+0x660>
    ea6c:	sub	r0, fp, #428	; 0x1ac
    ea70:	bl	9d8c <cv::Mat::deallocate()@plt>
    ea74:	b	dc04 <main+0x3d4>
    ea78:	ldr	r3, [fp, #-1216]	; 0xfffffb40
    ea7c:	mov	r1, #4
    ea80:	ldr	r2, [fp, #-1660]	; 0xfffff984
    ea84:	ldr	r0, [r3, #-12]
    ea88:	add	r0, r2, r0
    ea8c:	bl	9c84 <std::basic_ios<char, std::char_traits<char> >::setstate(std::_Ios_Iostate)@plt>
    ea90:	b	e280 <main+0xa50>
    ea94:	movw	r3, #40788	; 0x9f54
    ea98:	movt	r3, #0
    ea9c:	cmp	r3, #0
    eaa0:	beq	eafc <main+0x12cc>
    eaa4:	sub	r0, r0, #4
    eaa8:	mvn	r1, #0
    eaac:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    eab0:	cmp	r0, #0
    eab4:	bgt	dd98 <main+0x568>
    eab8:	mov	r0, r4
    eabc:	sub	r1, fp, #88	; 0x58
    eac0:	bl	9f90 <std::string::_Rep::_M_destroy(std::allocator<char> const&)@plt>
    eac4:	b	dd98 <main+0x568>
    eac8:	mov	r5, r0
    eacc:	sub	r0, fp, #224	; 0xe0
    ead0:	bl	9ea0 <cv::VideoWriter::~VideoWriter()@plt>
    ead4:	sub	r0, fp, #372	; 0x174
    ead8:	bl	d740 <cv::Mat::~Mat()>
    eadc:	sub	r0, fp, #200	; 0xc8
    eae0:	bl	9eac <cv::VideoCapture::~VideoCapture()@plt>
    eae4:	mov	r0, r5
    eae8:	bl	9f84 <__cxa_end_cleanup@plt>
    eaec:	mov	r5, r0
    eaf0:	sub	r0, fp, #224	; 0xe0
    eaf4:	bl	9ea0 <cv::VideoWriter::~VideoWriter()@plt>
    eaf8:	b	ead4 <main+0x12a4>
    eafc:	ldr	r0, [r4, #8]
    eb00:	sub	r3, r0, #1
    eb04:	str	r3, [r4, #8]
    eb08:	b	eab0 <main+0x1280>
    eb0c:	mov	r5, r0
    eb10:	sub	r0, fp, #1072	; 0x430
    eb14:	sub	r0, r0, #4
    eb18:	bl	9fcc <std::basic_ios<char, std::char_traits<char> >::~basic_ios()@plt>
    eb1c:	b	eacc <main+0x129c>
    eb20:	mov	r5, r0
    eb24:	ldr	r0, [fp, #-1672]	; 0xfffff978
    eb28:	ldr	r3, [r0, #4]
    eb2c:	ldr	r1, [r0, #8]
    eb30:	str	r3, [fp, #-1216]	; 0xfffffb40
    eb34:	ldr	r2, [r3, #-12]
    eb38:	ldr	r3, [fp, #-1656]	; 0xfffff988
    eb3c:	str	r1, [r3, r2]
    eb40:	b	eb10 <main+0x12e0>
    eb44:	mov	r5, r0
    eb48:	sub	r0, fp, #1200	; 0x4b0
    eb4c:	sub	r0, r0, #4
    eb50:	sub	r0, r0, #8
    eb54:	bl	9f24 <std::basic_filebuf<char, std::char_traits<char> >::~basic_filebuf()@plt>
    eb58:	b	eb24 <main+0x12f4>
    eb5c:	bl	9ce4 <std::__throw_bad_cast()@plt>
    eb60:	mov	r5, r0
    eb64:	b	eadc <main+0x12ac>
    eb68:	mov	r5, r0
    eb6c:	b	ead4 <main+0x12a4>
    eb70:	movw	r3, #40788	; 0x9f54
    eb74:	movt	r3, #0
    eb78:	cmp	r3, #0
    eb7c:	beq	ebac <main+0x137c>
    eb80:	sub	r0, r0, #4
    eb84:	mvn	r1, #0
    eb88:	bl	a014 <__gnu_cxx::__exchange_and_add(int volatile*, int)@plt>
    eb8c:	cmp	r0, #0
    eb90:	bgt	daa8 <main+0x278>
    eb94:	mov	r0, r4
    eb98:	sub	r1, fp, #87	; 0x57
    eb9c:	bl	9f90 <std::string::_Rep::_M_destroy(std::allocator<char> const&)@plt>
    eba0:	b	daa8 <main+0x278>
    eba4:	bl	9ce4 <std::__throw_bad_cast()@plt>
    eba8:	b	eb60 <main+0x1330>
    ebac:	ldr	r0, [r4, #8]
    ebb0:	sub	r3, r0, #1
    ebb4:	str	r3, [r4, #8]
    ebb8:	b	eb8c <main+0x135c>
    ebbc:	bl	9ce4 <std::__throw_bad_cast()@plt>
    ebc0:	b	eb60 <main+0x1330>
    ebc4:	bl	9ce4 <std::__throw_bad_cast()@plt>
    ebc8:	bl	9ce4 <std::__throw_bad_cast()@plt>
    ebcc:	mov	r5, r0
    ebd0:	sub	r0, fp, #1648	; 0x670
    ebd4:	sub	r0, r0, #4
    ebd8:	bl	d3b0 <MeanShift::~MeanShift()>
    ebdc:	sub	r0, fp, #1200	; 0x4b0
    ebe0:	sub	r0, r0, #4
    ebe4:	sub	r0, r0, #12
    ebe8:	bl	9edc <std::basic_ofstream<char, std::char_traits<char> >::~basic_ofstream()@plt>
    ebec:	b	eacc <main+0x129c>
    ebf0:	mov	r5, r0
    ebf4:	b	ebdc <main+0x13ac>
    ebf8:	b	eb68 <main+0x1338>
    ebfc:	bl	9ce4 <std::__throw_bad_cast()@plt>
    ec00:	bl	9ce4 <std::__throw_bad_cast()@plt>
    ec04:	bl	9ce4 <std::__throw_bad_cast()@plt>
    ec08:	bl	9ce4 <std::__throw_bad_cast()@plt>
    ec0c:	mov	r5, r0
    ec10:	sub	r0, fp, #1152	; 0x480
    ec14:	sub	r0, r0, #4
    ec18:	bl	9da4 <std::__basic_file<char>::~__basic_file()@plt>
    ec1c:	sub	r4, fp, #1200	; 0x4b0
    ec20:	sub	r4, r4, #4
    ec24:	sub	r4, r4, #12
    ec28:	add	r0, r4, #4
    ec2c:	bl	9db0 <std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()@plt>
    ec30:	ldr	r0, [fp, #-1672]	; 0xfffff978
    ec34:	ldr	r2, [r0, #4]
    ec38:	ldr	r1, [r0, #8]
    ec3c:	add	r0, r4, #140	; 0x8c
    ec40:	str	r2, [fp, #-1216]	; 0xfffffb40
    ec44:	ldr	r3, [r2, #-12]
    ec48:	ldr	r2, [fp, #-1656]	; 0xfffff988
    ec4c:	str	r1, [r2, r3]
    ec50:	bl	9fcc <std::basic_ios<char, std::char_traits<char> >::~basic_ios()@plt>
    ec54:	b	eacc <main+0x129c>
    ec58:	mov	r5, r0
    ec5c:	b	ec1c <main+0x13ec>
    ec60:	mov	r5, r0
    ec64:	mov	r0, r7
    ec68:	bl	a080 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@plt>
    ec6c:	b	eadc <main+0x12ac>
    ec70:	mov	r5, r0
    ec74:	mov	r0, r6
    ec78:	bl	9eac <cv::VideoCapture::~VideoCapture()@plt>
    ec7c:	b	ec64 <main+0x1434>
    ec80:	mov	r5, r0
    ec84:	mov	r0, r6
    ec88:	bl	a080 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@plt>
    ec8c:	b	ead4 <main+0x12a4>

0000ec90 <CHNL_create>:
    ec90:	push	{fp, lr}
    ec94:	add	fp, sp, #4
    ec98:	sub	sp, sp, #56	; 0x38
    ec9c:	str	r0, [fp, #-40]	; 0xffffffd8
    eca0:	str	r1, [fp, #-44]	; 0xffffffd4
    eca4:	str	r2, [fp, #-48]	; 0xffffffd0
    eca8:	mov	r3, #32768	; 0x8000
    ecac:	str	r3, [fp, #-8]
    ecb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    ecb4:	cmp	r3, #0
    ecb8:	bne	ed90 <CHNL_create+0x100>
    ecbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    ecc0:	cmp	r3, #0
    ecc4:	bne	ece0 <CHNL_create+0x50>
    ecc8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    eccc:	cmp	r3, #15
    ecd0:	bhi	ece0 <CHNL_create+0x50>
    ecd4:	mov	r3, #1
    ecd8:	str	r3, [fp, #-56]	; 0xffffffc8
    ecdc:	b	ece8 <CHNL_create+0x58>
    ece0:	mov	r3, #0
    ece4:	str	r3, [fp, #-56]	; 0xffffffc8
    ece8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    ecec:	cmp	r3, #0
    ecf0:	beq	ed90 <CHNL_create+0x100>
    ecf4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ecf8:	cmp	r3, #0
    ecfc:	beq	ed70 <CHNL_create+0xe0>
    ed00:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ed04:	ldr	r3, [r3]
    ed08:	cmp	r3, #1
    ed0c:	beq	ed30 <CHNL_create+0xa0>
    ed10:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ed14:	ldr	r3, [r3]
    ed18:	cmp	r3, #2
    ed1c:	beq	ed30 <CHNL_create+0xa0>
    ed20:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ed24:	ldr	r3, [r3]
    ed28:	cmp	r3, #3
    ed2c:	bne	ed7c <CHNL_create+0xec>
    ed30:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ed34:	ldr	r3, [r3, #4]
    ed38:	cmp	r3, #1
    ed3c:	beq	ed50 <CHNL_create+0xc0>
    ed40:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ed44:	ldr	r3, [r3, #4]
    ed48:	cmp	r3, #2
    ed4c:	bne	ed7c <CHNL_create+0xec>
    ed50:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ed54:	ldr	r3, [r3, #8]
    ed58:	cmp	r3, #1
    ed5c:	beq	ed70 <CHNL_create+0xe0>
    ed60:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ed64:	ldr	r3, [r3, #8]
    ed68:	cmp	r3, #2
    ed6c:	bne	ed7c <CHNL_create+0xec>
    ed70:	mov	r3, #1
    ed74:	str	r3, [fp, #-52]	; 0xffffffcc
    ed78:	b	ed84 <CHNL_create+0xf4>
    ed7c:	mov	r3, #0
    ed80:	str	r3, [fp, #-52]	; 0xffffffcc
    ed84:	ldr	r3, [fp, #-52]	; 0xffffffcc
    ed88:	cmp	r3, #0
    ed8c:	bne	ed9c <CHNL_create+0x10c>
    ed90:	ldr	r3, [pc, #80]	; ede8 <CHNL_create+0x158>
    ed94:	str	r3, [fp, #-8]
    ed98:	b	edd8 <CHNL_create+0x148>
    ed9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    eda0:	str	r3, [fp, #-28]	; 0xffffffe4
    eda4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    eda8:	str	r3, [fp, #-24]	; 0xffffffe8
    edac:	ldr	r3, [fp, #-48]	; 0xffffffd0
    edb0:	str	r3, [fp, #-20]	; 0xffffffec
    edb4:	ldr	r3, [pc, #48]	; edec <CHNL_create+0x15c>
    edb8:	ldr	r3, [r3]
    edbc:	sub	r2, fp, #32
    edc0:	mov	r0, r3
    edc4:	ldr	r1, [pc, #36]	; edf0 <CHNL_create+0x160>
    edc8:	mov	r3, #0
    edcc:	bl	f94c <DRV_Invoke>
    edd0:	mov	r3, r0
    edd4:	str	r3, [fp, #-8]
    edd8:	ldr	r3, [fp, #-8]
    eddc:	mov	r0, r3
    ede0:	sub	sp, fp, #4
    ede4:	pop	{fp, pc}
    ede8:	.word	0x8000800b
    edec:	.word	0x0002d3ec
    edf0:	.word	0xc018e024

0000edf4 <CHNL_delete>:
    edf4:	push	{fp, lr}
    edf8:	add	fp, sp, #4
    edfc:	sub	sp, sp, #48	; 0x30
    ee00:	str	r0, [fp, #-40]	; 0xffffffd8
    ee04:	str	r1, [fp, #-44]	; 0xffffffd4
    ee08:	mov	r3, #32768	; 0x8000
    ee0c:	str	r3, [fp, #-8]
    ee10:	ldr	r3, [fp, #-40]	; 0xffffffd8
    ee14:	cmp	r3, #0
    ee18:	bne	ee54 <CHNL_delete+0x60>
    ee1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    ee20:	cmp	r3, #0
    ee24:	bne	ee40 <CHNL_delete+0x4c>
    ee28:	ldr	r3, [fp, #-44]	; 0xffffffd4
    ee2c:	cmp	r3, #15
    ee30:	bhi	ee40 <CHNL_delete+0x4c>
    ee34:	mov	r3, #1
    ee38:	str	r3, [fp, #-48]	; 0xffffffd0
    ee3c:	b	ee48 <CHNL_delete+0x54>
    ee40:	mov	r3, #0
    ee44:	str	r3, [fp, #-48]	; 0xffffffd0
    ee48:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ee4c:	cmp	r3, #0
    ee50:	bne	ee60 <CHNL_delete+0x6c>
    ee54:	ldr	r3, [pc, #72]	; eea4 <CHNL_delete+0xb0>
    ee58:	str	r3, [fp, #-8]
    ee5c:	b	ee94 <CHNL_delete+0xa0>
    ee60:	ldr	r3, [fp, #-40]	; 0xffffffd8
    ee64:	str	r3, [fp, #-28]	; 0xffffffe4
    ee68:	ldr	r3, [fp, #-44]	; 0xffffffd4
    ee6c:	str	r3, [fp, #-24]	; 0xffffffe8
    ee70:	ldr	r3, [pc, #48]	; eea8 <CHNL_delete+0xb4>
    ee74:	ldr	r3, [r3]
    ee78:	sub	r2, fp, #32
    ee7c:	mov	r0, r3
    ee80:	ldr	r1, [pc, #36]	; eeac <CHNL_delete+0xb8>
    ee84:	mov	r3, #0
    ee88:	bl	f94c <DRV_Invoke>
    ee8c:	mov	r3, r0
    ee90:	str	r3, [fp, #-8]
    ee94:	ldr	r3, [fp, #-8]
    ee98:	mov	r0, r3
    ee9c:	sub	sp, fp, #4
    eea0:	pop	{fp, pc}
    eea4:	.word	0x8000800b
    eea8:	.word	0x0002d3ec
    eeac:	.word	0xc018e025

0000eeb0 <CHNL_allocateBuffer>:
    eeb0:	push	{fp, lr}
    eeb4:	add	fp, sp, #4
    eeb8:	sub	sp, sp, #56	; 0x38
    eebc:	str	r0, [fp, #-40]	; 0xffffffd8
    eec0:	str	r1, [fp, #-44]	; 0xffffffd4
    eec4:	str	r2, [fp, #-48]	; 0xffffffd0
    eec8:	str	r3, [fp, #-52]	; 0xffffffcc
    eecc:	mov	r3, #32768	; 0x8000
    eed0:	str	r3, [fp, #-8]
    eed4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    eed8:	cmp	r3, #0
    eedc:	bne	ef48 <CHNL_allocateBuffer+0x98>
    eee0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    eee4:	cmp	r3, #0
    eee8:	bne	ef04 <CHNL_allocateBuffer+0x54>
    eeec:	ldr	r3, [fp, #-44]	; 0xffffffd4
    eef0:	cmp	r3, #15
    eef4:	bhi	ef04 <CHNL_allocateBuffer+0x54>
    eef8:	mov	r3, #1
    eefc:	str	r3, [fp, #-56]	; 0xffffffc8
    ef00:	b	ef0c <CHNL_allocateBuffer+0x5c>
    ef04:	mov	r3, #0
    ef08:	str	r3, [fp, #-56]	; 0xffffffc8
    ef0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    ef10:	cmp	r3, #0
    ef14:	beq	ef48 <CHNL_allocateBuffer+0x98>
    ef18:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ef1c:	cmp	r3, #0
    ef20:	beq	ef48 <CHNL_allocateBuffer+0x98>
    ef24:	ldr	r3, [fp, #-52]	; 0xffffffcc
    ef28:	cmp	r3, #0
    ef2c:	beq	ef48 <CHNL_allocateBuffer+0x98>
    ef30:	ldr	r3, [fp, #4]
    ef34:	cmp	r3, #0
    ef38:	beq	ef48 <CHNL_allocateBuffer+0x98>
    ef3c:	ldr	r3, [fp, #4]
    ef40:	cmp	r3, #1000	; 0x3e8
    ef44:	bls	ef54 <CHNL_allocateBuffer+0xa4>
    ef48:	ldr	r3, [pc, #96]	; efb0 <CHNL_allocateBuffer+0x100>
    ef4c:	str	r3, [fp, #-8]
    ef50:	b	efa0 <CHNL_allocateBuffer+0xf0>
    ef54:	ldr	r3, [fp, #-40]	; 0xffffffd8
    ef58:	str	r3, [fp, #-28]	; 0xffffffe4
    ef5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    ef60:	str	r3, [fp, #-24]	; 0xffffffe8
    ef64:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ef68:	str	r3, [fp, #-20]	; 0xffffffec
    ef6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    ef70:	str	r3, [fp, #-16]
    ef74:	ldr	r3, [fp, #4]
    ef78:	str	r3, [fp, #-12]
    ef7c:	ldr	r3, [pc, #48]	; efb4 <CHNL_allocateBuffer+0x104>
    ef80:	ldr	r3, [r3]
    ef84:	sub	r2, fp, #32
    ef88:	mov	r0, r3
    ef8c:	ldr	r1, [pc, #36]	; efb8 <CHNL_allocateBuffer+0x108>
    ef90:	mov	r3, #0
    ef94:	bl	f94c <DRV_Invoke>
    ef98:	mov	r3, r0
    ef9c:	str	r3, [fp, #-8]
    efa0:	ldr	r3, [fp, #-8]
    efa4:	mov	r0, r3
    efa8:	sub	sp, fp, #4
    efac:	pop	{fp, pc}
    efb0:	.word	0x8000800b
    efb4:	.word	0x0002d3ec
    efb8:	.word	0xc018e028

0000efbc <CHNL_freeBuffer>:
    efbc:	push	{fp, lr}
    efc0:	add	fp, sp, #4
    efc4:	sub	sp, sp, #56	; 0x38
    efc8:	str	r0, [fp, #-40]	; 0xffffffd8
    efcc:	str	r1, [fp, #-44]	; 0xffffffd4
    efd0:	str	r2, [fp, #-48]	; 0xffffffd0
    efd4:	str	r3, [fp, #-52]	; 0xffffffcc
    efd8:	mov	r3, #32768	; 0x8000
    efdc:	str	r3, [fp, #-8]
    efe0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    efe4:	cmp	r3, #0
    efe8:	bne	f048 <CHNL_freeBuffer+0x8c>
    efec:	ldr	r3, [fp, #-40]	; 0xffffffd8
    eff0:	cmp	r3, #0
    eff4:	bne	f010 <CHNL_freeBuffer+0x54>
    eff8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    effc:	cmp	r3, #15
    f000:	bhi	f010 <CHNL_freeBuffer+0x54>
    f004:	mov	r3, #1
    f008:	str	r3, [fp, #-56]	; 0xffffffc8
    f00c:	b	f018 <CHNL_freeBuffer+0x5c>
    f010:	mov	r3, #0
    f014:	str	r3, [fp, #-56]	; 0xffffffc8
    f018:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f01c:	cmp	r3, #0
    f020:	beq	f048 <CHNL_freeBuffer+0x8c>
    f024:	ldr	r3, [fp, #-48]	; 0xffffffd0
    f028:	cmp	r3, #0
    f02c:	beq	f048 <CHNL_freeBuffer+0x8c>
    f030:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f034:	cmp	r3, #0
    f038:	beq	f048 <CHNL_freeBuffer+0x8c>
    f03c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f040:	cmp	r3, #1000	; 0x3e8
    f044:	bls	f054 <CHNL_freeBuffer+0x98>
    f048:	ldr	r3, [pc, #88]	; f0a8 <CHNL_freeBuffer+0xec>
    f04c:	str	r3, [fp, #-8]
    f050:	b	f098 <CHNL_freeBuffer+0xdc>
    f054:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f058:	str	r3, [fp, #-28]	; 0xffffffe4
    f05c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f060:	str	r3, [fp, #-24]	; 0xffffffe8
    f064:	ldr	r3, [fp, #-48]	; 0xffffffd0
    f068:	str	r3, [fp, #-20]	; 0xffffffec
    f06c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f070:	str	r3, [fp, #-16]
    f074:	ldr	r3, [pc, #48]	; f0ac <CHNL_freeBuffer+0xf0>
    f078:	ldr	r3, [r3]
    f07c:	sub	r2, fp, #32
    f080:	mov	r0, r3
    f084:	ldr	r1, [pc, #36]	; f0b0 <CHNL_freeBuffer+0xf4>
    f088:	mov	r3, #0
    f08c:	bl	f94c <DRV_Invoke>
    f090:	mov	r3, r0
    f094:	str	r3, [fp, #-8]
    f098:	ldr	r3, [fp, #-8]
    f09c:	mov	r0, r3
    f0a0:	sub	sp, fp, #4
    f0a4:	pop	{fp, pc}
    f0a8:	.word	0x8000800b
    f0ac:	.word	0x0002d3ec
    f0b0:	.word	0xc018e029

0000f0b4 <CHNL_issue>:
    f0b4:	push	{fp, lr}
    f0b8:	add	fp, sp, #4
    f0bc:	sub	sp, sp, #48	; 0x30
    f0c0:	str	r0, [fp, #-40]	; 0xffffffd8
    f0c4:	str	r1, [fp, #-44]	; 0xffffffd4
    f0c8:	str	r2, [fp, #-48]	; 0xffffffd0
    f0cc:	mov	r3, #32768	; 0x8000
    f0d0:	str	r3, [fp, #-8]
    f0d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f0d8:	cmp	r3, #0
    f0dc:	bne	f124 <CHNL_issue+0x70>
    f0e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f0e4:	cmp	r3, #0
    f0e8:	bne	f104 <CHNL_issue+0x50>
    f0ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f0f0:	cmp	r3, #15
    f0f4:	bhi	f104 <CHNL_issue+0x50>
    f0f8:	mov	r3, #1
    f0fc:	str	r3, [fp, #-52]	; 0xffffffcc
    f100:	b	f10c <CHNL_issue+0x58>
    f104:	mov	r3, #0
    f108:	str	r3, [fp, #-52]	; 0xffffffcc
    f10c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f110:	cmp	r3, #0
    f114:	beq	f124 <CHNL_issue+0x70>
    f118:	ldr	r3, [fp, #-48]	; 0xffffffd0
    f11c:	cmp	r3, #0
    f120:	bne	f130 <CHNL_issue+0x7c>
    f124:	ldr	r3, [pc, #108]	; f198 <CHNL_issue+0xe4>
    f128:	str	r3, [fp, #-8]
    f12c:	b	f188 <CHNL_issue+0xd4>
    f130:	ldr	r3, [fp, #-48]	; 0xffffffd0
    f134:	ldr	r3, [r3]
    f138:	cmp	r3, #0
    f13c:	bne	f14c <CHNL_issue+0x98>
    f140:	ldr	r3, [pc, #80]	; f198 <CHNL_issue+0xe4>
    f144:	str	r3, [fp, #-8]
    f148:	b	f188 <CHNL_issue+0xd4>
    f14c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f150:	str	r3, [fp, #-28]	; 0xffffffe4
    f154:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f158:	str	r3, [fp, #-24]	; 0xffffffe8
    f15c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    f160:	str	r3, [fp, #-20]	; 0xffffffec
    f164:	ldr	r3, [pc, #48]	; f19c <CHNL_issue+0xe8>
    f168:	ldr	r3, [r3]
    f16c:	sub	r2, fp, #32
    f170:	mov	r0, r3
    f174:	ldr	r1, [pc, #36]	; f1a0 <CHNL_issue+0xec>
    f178:	mov	r3, #0
    f17c:	bl	f94c <DRV_Invoke>
    f180:	mov	r3, r0
    f184:	str	r3, [fp, #-8]
    f188:	ldr	r3, [fp, #-8]
    f18c:	mov	r0, r3
    f190:	sub	sp, fp, #4
    f194:	pop	{fp, pc}
    f198:	.word	0x8000800b
    f19c:	.word	0x0002d3ec
    f1a0:	.word	0xc018e026

0000f1a4 <CHNL_reclaim>:
    f1a4:	push	{fp, lr}
    f1a8:	add	fp, sp, #4
    f1ac:	sub	sp, sp, #56	; 0x38
    f1b0:	str	r0, [fp, #-40]	; 0xffffffd8
    f1b4:	str	r1, [fp, #-44]	; 0xffffffd4
    f1b8:	str	r2, [fp, #-48]	; 0xffffffd0
    f1bc:	str	r3, [fp, #-52]	; 0xffffffcc
    f1c0:	mov	r3, #32768	; 0x8000
    f1c4:	str	r3, [fp, #-8]
    f1c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f1cc:	cmp	r3, #0
    f1d0:	bne	f218 <CHNL_reclaim+0x74>
    f1d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f1d8:	cmp	r3, #0
    f1dc:	bne	f1f8 <CHNL_reclaim+0x54>
    f1e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f1e4:	cmp	r3, #15
    f1e8:	bhi	f1f8 <CHNL_reclaim+0x54>
    f1ec:	mov	r3, #1
    f1f0:	str	r3, [fp, #-56]	; 0xffffffc8
    f1f4:	b	f200 <CHNL_reclaim+0x5c>
    f1f8:	mov	r3, #0
    f1fc:	str	r3, [fp, #-56]	; 0xffffffc8
    f200:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f204:	cmp	r3, #0
    f208:	beq	f218 <CHNL_reclaim+0x74>
    f20c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f210:	cmp	r3, #0
    f214:	bne	f224 <CHNL_reclaim+0x80>
    f218:	ldr	r3, [pc, #88]	; f278 <CHNL_reclaim+0xd4>
    f21c:	str	r3, [fp, #-8]
    f220:	b	f268 <CHNL_reclaim+0xc4>
    f224:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f228:	str	r3, [fp, #-28]	; 0xffffffe4
    f22c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f230:	str	r3, [fp, #-24]	; 0xffffffe8
    f234:	ldr	r3, [fp, #-48]	; 0xffffffd0
    f238:	str	r3, [fp, #-20]	; 0xffffffec
    f23c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f240:	str	r3, [fp, #-16]
    f244:	ldr	r3, [pc, #48]	; f27c <CHNL_reclaim+0xd8>
    f248:	ldr	r3, [r3]
    f24c:	sub	r2, fp, #32
    f250:	mov	r0, r3
    f254:	ldr	r1, [pc, #36]	; f280 <CHNL_reclaim+0xdc>
    f258:	mov	r3, #0
    f25c:	bl	f94c <DRV_Invoke>
    f260:	mov	r3, r0
    f264:	str	r3, [fp, #-8]
    f268:	ldr	r3, [fp, #-8]
    f26c:	mov	r0, r3
    f270:	sub	sp, fp, #4
    f274:	pop	{fp, pc}
    f278:	.word	0x8000800b
    f27c:	.word	0x0002d3ec
    f280:	.word	0xc018e027

0000f284 <CHNL_idle>:
    f284:	push	{fp, lr}
    f288:	add	fp, sp, #4
    f28c:	sub	sp, sp, #48	; 0x30
    f290:	str	r0, [fp, #-40]	; 0xffffffd8
    f294:	str	r1, [fp, #-44]	; 0xffffffd4
    f298:	mov	r3, #32768	; 0x8000
    f29c:	str	r3, [fp, #-8]
    f2a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f2a4:	cmp	r3, #0
    f2a8:	bne	f2e4 <CHNL_idle+0x60>
    f2ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f2b0:	cmp	r3, #0
    f2b4:	bne	f2d0 <CHNL_idle+0x4c>
    f2b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f2bc:	cmp	r3, #15
    f2c0:	bhi	f2d0 <CHNL_idle+0x4c>
    f2c4:	mov	r3, #1
    f2c8:	str	r3, [fp, #-48]	; 0xffffffd0
    f2cc:	b	f2d8 <CHNL_idle+0x54>
    f2d0:	mov	r3, #0
    f2d4:	str	r3, [fp, #-48]	; 0xffffffd0
    f2d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    f2dc:	cmp	r3, #0
    f2e0:	bne	f2f0 <CHNL_idle+0x6c>
    f2e4:	ldr	r3, [pc, #72]	; f334 <CHNL_idle+0xb0>
    f2e8:	str	r3, [fp, #-8]
    f2ec:	b	f324 <CHNL_idle+0xa0>
    f2f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f2f4:	str	r3, [fp, #-28]	; 0xffffffe4
    f2f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f2fc:	str	r3, [fp, #-24]	; 0xffffffe8
    f300:	ldr	r3, [pc, #48]	; f338 <CHNL_idle+0xb4>
    f304:	ldr	r3, [r3]
    f308:	sub	r2, fp, #32
    f30c:	mov	r0, r3
    f310:	ldr	r1, [pc, #36]	; f33c <CHNL_idle+0xb8>
    f314:	mov	r3, #0
    f318:	bl	f94c <DRV_Invoke>
    f31c:	mov	r3, r0
    f320:	str	r3, [fp, #-8]
    f324:	ldr	r3, [fp, #-8]
    f328:	mov	r0, r3
    f32c:	sub	sp, fp, #4
    f330:	pop	{fp, pc}
    f334:	.word	0x8000800b
    f338:	.word	0x0002d3ec
    f33c:	.word	0xc018e02a

0000f340 <CHNL_flush>:
    f340:	push	{fp, lr}
    f344:	add	fp, sp, #4
    f348:	sub	sp, sp, #48	; 0x30
    f34c:	str	r0, [fp, #-40]	; 0xffffffd8
    f350:	str	r1, [fp, #-44]	; 0xffffffd4
    f354:	mov	r3, #32768	; 0x8000
    f358:	str	r3, [fp, #-8]
    f35c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f360:	cmp	r3, #0
    f364:	bne	f3a0 <CHNL_flush+0x60>
    f368:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f36c:	cmp	r3, #0
    f370:	bne	f38c <CHNL_flush+0x4c>
    f374:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f378:	cmp	r3, #15
    f37c:	bhi	f38c <CHNL_flush+0x4c>
    f380:	mov	r3, #1
    f384:	str	r3, [fp, #-48]	; 0xffffffd0
    f388:	b	f394 <CHNL_flush+0x54>
    f38c:	mov	r3, #0
    f390:	str	r3, [fp, #-48]	; 0xffffffd0
    f394:	ldr	r3, [fp, #-48]	; 0xffffffd0
    f398:	cmp	r3, #0
    f39c:	bne	f3ac <CHNL_flush+0x6c>
    f3a0:	ldr	r3, [pc, #72]	; f3f0 <CHNL_flush+0xb0>
    f3a4:	str	r3, [fp, #-8]
    f3a8:	b	f3e0 <CHNL_flush+0xa0>
    f3ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f3b0:	str	r3, [fp, #-28]	; 0xffffffe4
    f3b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f3b8:	str	r3, [fp, #-24]	; 0xffffffe8
    f3bc:	ldr	r3, [pc, #48]	; f3f4 <CHNL_flush+0xb4>
    f3c0:	ldr	r3, [r3]
    f3c4:	sub	r2, fp, #32
    f3c8:	mov	r0, r3
    f3cc:	ldr	r1, [pc, #36]	; f3f8 <CHNL_flush+0xb8>
    f3d0:	mov	r3, #0
    f3d4:	bl	f94c <DRV_Invoke>
    f3d8:	mov	r3, r0
    f3dc:	str	r3, [fp, #-8]
    f3e0:	ldr	r3, [fp, #-8]
    f3e4:	mov	r0, r3
    f3e8:	sub	sp, fp, #4
    f3ec:	pop	{fp, pc}
    f3f0:	.word	0x8000800b
    f3f4:	.word	0x0002d3ec
    f3f8:	.word	0xc018e02b

0000f3fc <CHNL_control>:
    f3fc:	push	{fp, lr}
    f400:	add	fp, sp, #4
    f404:	sub	sp, sp, #56	; 0x38
    f408:	str	r0, [fp, #-40]	; 0xffffffd8
    f40c:	str	r1, [fp, #-44]	; 0xffffffd4
    f410:	str	r2, [fp, #-48]	; 0xffffffd0
    f414:	str	r3, [fp, #-52]	; 0xffffffcc
    f418:	mov	r3, #32768	; 0x8000
    f41c:	str	r3, [fp, #-8]
    f420:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f424:	cmp	r3, #0
    f428:	bne	f464 <CHNL_control+0x68>
    f42c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f430:	cmp	r3, #0
    f434:	bne	f450 <CHNL_control+0x54>
    f438:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f43c:	cmp	r3, #15
    f440:	bhi	f450 <CHNL_control+0x54>
    f444:	mov	r3, #1
    f448:	str	r3, [fp, #-56]	; 0xffffffc8
    f44c:	b	f458 <CHNL_control+0x5c>
    f450:	mov	r3, #0
    f454:	str	r3, [fp, #-56]	; 0xffffffc8
    f458:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f45c:	cmp	r3, #0
    f460:	bne	f470 <CHNL_control+0x74>
    f464:	ldr	r3, [pc, #88]	; f4c4 <CHNL_control+0xc8>
    f468:	str	r3, [fp, #-8]
    f46c:	b	f4b4 <CHNL_control+0xb8>
    f470:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f474:	str	r3, [fp, #-28]	; 0xffffffe4
    f478:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f47c:	str	r3, [fp, #-24]	; 0xffffffe8
    f480:	ldr	r3, [fp, #-48]	; 0xffffffd0
    f484:	str	r3, [fp, #-20]	; 0xffffffec
    f488:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f48c:	str	r3, [fp, #-16]
    f490:	ldr	r3, [pc, #48]	; f4c8 <CHNL_control+0xcc>
    f494:	ldr	r3, [r3]
    f498:	sub	r2, fp, #32
    f49c:	mov	r0, r3
    f4a0:	ldr	r1, [pc, #36]	; f4cc <CHNL_control+0xd0>
    f4a4:	mov	r3, #0
    f4a8:	bl	f94c <DRV_Invoke>
    f4ac:	mov	r3, r0
    f4b0:	str	r3, [fp, #-8]
    f4b4:	ldr	r3, [fp, #-8]
    f4b8:	mov	r0, r3
    f4bc:	sub	sp, fp, #4
    f4c0:	pop	{fp, pc}
    f4c4:	.word	0x8000800b
    f4c8:	.word	0x0002d3ec
    f4cc:	.word	0xc018e02c

0000f4d0 <DRV_Initialize>:
    f4d0:	push	{r4, fp, lr}
    f4d4:	add	fp, sp, #8
    f4d8:	sub	sp, sp, #60	; 0x3c
    f4dc:	str	r0, [fp, #-56]	; 0xffffffc8
    f4e0:	str	r1, [fp, #-60]	; 0xffffffc4
    f4e4:	mov	r3, #32768	; 0x8000
    f4e8:	str	r3, [fp, #-28]	; 0xffffffe4
    f4ec:	mov	r3, #0
    f4f0:	str	r3, [fp, #-20]	; 0xffffffec
    f4f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f4f8:	cmp	r3, #0
    f4fc:	bne	f50c <DRV_Initialize+0x3c>
    f500:	ldr	r3, [pc, #676]	; f7ac <DRV_Initialize+0x2dc>
    f504:	str	r3, [fp, #-28]	; 0xffffffe4
    f508:	b	f79c <DRV_Initialize+0x2cc>
    f50c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f510:	ldr	r3, [r3]
    f514:	cmp	r3, #0
    f518:	beq	f580 <DRV_Initialize+0xb0>
    f51c:	ldr	r3, [pc, #652]	; f7b0 <DRV_Initialize+0x2e0>
    f520:	ldr	r3, [r3]
    f524:	mov	r0, r3
    f528:	bl	22b68 <_SYNC_USR_enterCS>
    f52c:	mov	r3, r0
    f530:	str	r3, [fp, #-28]	; 0xffffffe4
    f534:	ldr	r2, [fp, #-28]	; 0xffffffe4
    f538:	ldr	r3, [pc, #628]	; f7b4 <DRV_Initialize+0x2e4>
    f53c:	cmp	r2, r3
    f540:	ble	f79c <DRV_Initialize+0x2cc>
    f544:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f548:	cmp	r3, #34048	; 0x8500
    f54c:	bgt	f79c <DRV_Initialize+0x2cc>
    f550:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f554:	ldr	r2, [r3]
    f558:	ldr	r3, [r2, #8]
    f55c:	add	r3, r3, #1
    f560:	str	r3, [r2, #8]
    f564:	ldr	r3, [pc, #580]	; f7b0 <DRV_Initialize+0x2e0>
    f568:	ldr	r3, [r3]
    f56c:	mov	r0, r3
    f570:	bl	22c7c <_SYNC_USR_leaveCS>
    f574:	mov	r3, r0
    f578:	str	r3, [fp, #-28]	; 0xffffffe4
    f57c:	b	f79c <DRV_Initialize+0x2cc>
    f580:	mov	r0, #16
    f584:	bl	9e7c <malloc@plt>
    f588:	mov	r3, r0
    f58c:	mov	r2, r3
    f590:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f594:	str	r2, [r3]
    f598:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f59c:	ldr	r3, [r3]
    f5a0:	cmp	r3, #0
    f5a4:	beq	f794 <DRV_Initialize+0x2c4>
    f5a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f5ac:	ldr	r4, [r3]
    f5b0:	ldr	r0, [pc, #512]	; f7b8 <DRV_Initialize+0x2e8>
    f5b4:	ldr	r1, [pc, #512]	; f7bc <DRV_Initialize+0x2ec>
    f5b8:	bl	9e1c <open@plt>
    f5bc:	mov	r3, r0
    f5c0:	str	r3, [r4, #4]
    f5c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f5c8:	ldr	r3, [r3]
    f5cc:	ldr	r3, [r3, #4]
    f5d0:	cmp	r3, #0
    f5d4:	bge	f5ec <DRV_Initialize+0x11c>
    f5d8:	ldr	r0, [pc, #480]	; f7c0 <DRV_Initialize+0x2f0>
    f5dc:	bl	9f18 <perror@plt>
    f5e0:	ldr	r3, [pc, #476]	; f7c4 <DRV_Initialize+0x2f4>
    f5e4:	str	r3, [fp, #-28]	; 0xffffffe4
    f5e8:	b	f624 <DRV_Initialize+0x154>
    f5ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f5f0:	ldr	r3, [r3]
    f5f4:	ldr	r3, [r3, #4]
    f5f8:	mov	r0, r3
    f5fc:	mov	r1, #2
    f600:	mov	r2, #1
    f604:	bl	9ccc <fcntl@plt>
    f608:	mov	r3, r0
    f60c:	str	r3, [fp, #-24]	; 0xffffffe8
    f610:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f614:	cmp	r3, #0
    f618:	beq	f624 <DRV_Initialize+0x154>
    f61c:	ldr	r3, [pc, #416]	; f7c4 <DRV_Initialize+0x2f4>
    f620:	str	r3, [fp, #-28]	; 0xffffffe4
    f624:	ldr	r2, [fp, #-28]	; 0xffffffe4
    f628:	ldr	r3, [pc, #388]	; f7b4 <DRV_Initialize+0x2e4>
    f62c:	cmp	r2, r3
    f630:	ble	f710 <DRV_Initialize+0x240>
    f634:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f638:	cmp	r3, #34048	; 0x8500
    f63c:	bgt	f710 <DRV_Initialize+0x240>
    f640:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f644:	ldr	r3, [r3]
    f648:	ldr	r3, [r3, #4]
    f64c:	sub	r2, fp, #52	; 0x34
    f650:	mov	r0, r3
    f654:	ldr	r1, [pc, #364]	; f7c8 <DRV_Initialize+0x2f8>
    f658:	bl	a0bc <ioctl@plt>
    f65c:	mov	r3, r0
    f660:	str	r3, [fp, #-24]	; 0xffffffe8
    f664:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f668:	cmp	r3, #0
    f66c:	bge	f67c <DRV_Initialize+0x1ac>
    f670:	ldr	r3, [pc, #332]	; f7c4 <DRV_Initialize+0x2f4>
    f674:	str	r3, [fp, #-28]	; 0xffffffe4
    f678:	b	f6e0 <DRV_Initialize+0x210>
    f67c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    f680:	str	r3, [fp, #-20]	; 0xffffffec
    f684:	mov	r3, #64	; 0x40
    f688:	str	r3, [fp, #-16]
    f68c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f690:	ldr	r3, [r3]
    f694:	ldr	r3, [r3, #4]
    f698:	ldr	r2, [fp, #-20]	; 0xffffffec
    f69c:	str	r3, [sp]
    f6a0:	str	r2, [sp, #4]
    f6a4:	mov	r0, #0
    f6a8:	ldr	r1, [fp, #-16]
    f6ac:	mov	r2, #3
    f6b0:	mov	r3, #1
    f6b4:	bl	9e88 <mmap@plt>
    f6b8:	mov	r3, r0
    f6bc:	mov	r2, r3
    f6c0:	ldr	r3, [pc, #260]	; f7cc <DRV_Initialize+0x2fc>
    f6c4:	str	r2, [r3]
    f6c8:	ldr	r3, [pc, #252]	; f7cc <DRV_Initialize+0x2fc>
    f6cc:	ldr	r3, [r3]
    f6d0:	cmn	r3, #1
    f6d4:	bne	f6e0 <DRV_Initialize+0x210>
    f6d8:	ldr	r3, [pc, #228]	; f7c4 <DRV_Initialize+0x2f4>
    f6dc:	str	r3, [fp, #-28]	; 0xffffffe4
    f6e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    f6e4:	ldr	r3, [pc, #200]	; f7b4 <DRV_Initialize+0x2e4>
    f6e8:	cmp	r2, r3
    f6ec:	ble	f6fc <DRV_Initialize+0x22c>
    f6f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f6f4:	cmp	r3, #34048	; 0x8500
    f6f8:	ble	f710 <DRV_Initialize+0x240>
    f6fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f700:	ldr	r3, [r3]
    f704:	ldr	r3, [r3, #4]
    f708:	mov	r0, r3
    f70c:	bl	9de0 <close@plt>
    f710:	ldr	r2, [fp, #-28]	; 0xffffffe4
    f714:	ldr	r3, [pc, #152]	; f7b4 <DRV_Initialize+0x2e4>
    f718:	cmp	r2, r3
    f71c:	ble	f764 <DRV_Initialize+0x294>
    f720:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f724:	cmp	r3, #34048	; 0x8500
    f728:	bgt	f764 <DRV_Initialize+0x294>
    f72c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f730:	ldr	r2, [r3]
    f734:	ldr	r3, [pc, #148]	; f7d0 <DRV_Initialize+0x300>
    f738:	str	r3, [r2]
    f73c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f740:	ldr	r2, [r3]
    f744:	mov	r3, #1
    f748:	str	r3, [r2, #8]
    f74c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f750:	ldr	r4, [r3]
    f754:	bl	9d5c <getpagesize@plt>
    f758:	mov	r3, r0
    f75c:	str	r3, [r4, #12]
    f760:	b	f79c <DRV_Initialize+0x2cc>
    f764:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f768:	ldr	r2, [r3]
    f76c:	mov	r3, #0
    f770:	str	r3, [r2]
    f774:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f778:	ldr	r3, [r3]
    f77c:	mov	r0, r3
    f780:	bl	9dc8 <free@plt>
    f784:	ldr	r2, [fp, #-56]	; 0xffffffc8
    f788:	mov	r3, #0
    f78c:	str	r3, [r2]
    f790:	b	f79c <DRV_Initialize+0x2cc>
    f794:	ldr	r3, [pc, #56]	; f7d4 <DRV_Initialize+0x304>
    f798:	str	r3, [fp, #-28]	; 0xffffffe4
    f79c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f7a0:	mov	r0, r3
    f7a4:	sub	sp, fp, #8
    f7a8:	pop	{r4, fp, pc}
    f7ac:	.word	0x80008012
    f7b0:	.word	0x0002d3f4
    f7b4:	.word	0x00007fff
    f7b8:	.word	0x000237d0
    f7bc:	.word	0x00001002
    f7c0:	.word	0x000237e0
    f7c4:	.word	0x80008008
    f7c8:	.word	0xc018e02f
    f7cc:	.word	0x0002d3e0
    f7d0:	.word	0x5f4b5244
    f7d4:	.word	0x8000800c

0000f7d8 <DRV_Finalize>:
    f7d8:	push	{fp, lr}
    f7dc:	add	fp, sp, #4
    f7e0:	sub	sp, sp, #24
    f7e4:	str	r0, [fp, #-24]	; 0xffffffe8
    f7e8:	str	r1, [fp, #-28]	; 0xffffffe4
    f7ec:	mov	r3, #32768	; 0x8000
    f7f0:	str	r3, [fp, #-16]
    f7f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f7f8:	cmp	r3, #0
    f7fc:	beq	f91c <DRV_Finalize+0x144>
    f800:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f804:	ldr	r2, [r3]
    f808:	ldr	r3, [pc, #292]	; f934 <DRV_Finalize+0x15c>
    f80c:	cmp	r2, r3
    f810:	bne	f91c <DRV_Finalize+0x144>
    f814:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f818:	ldr	r3, [r3, #8]
    f81c:	cmp	r3, #0
    f820:	beq	f838 <DRV_Finalize+0x60>
    f824:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f828:	ldr	r3, [r3, #8]
    f82c:	sub	r2, r3, #1
    f830:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f834:	str	r2, [r3, #8]
    f838:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f83c:	ldr	r3, [r3, #8]
    f840:	cmp	r3, #0
    f844:	bne	f924 <DRV_Finalize+0x14c>
    f848:	mov	r3, #64	; 0x40
    f84c:	str	r3, [fp, #-8]
    f850:	ldr	r3, [pc, #224]	; f938 <DRV_Finalize+0x160>
    f854:	ldr	r3, [r3]
    f858:	mov	r0, r3
    f85c:	ldr	r1, [fp, #-8]
    f860:	bl	9f0c <munmap@plt>
    f864:	mov	r3, r0
    f868:	str	r3, [fp, #-12]
    f86c:	ldr	r3, [fp, #-12]
    f870:	cmn	r3, #1
    f874:	bne	f880 <DRV_Finalize+0xa8>
    f878:	ldr	r3, [pc, #188]	; f93c <DRV_Finalize+0x164>
    f87c:	str	r3, [fp, #-16]
    f880:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f884:	ldr	r3, [r3, #4]
    f888:	mov	r0, r3
    f88c:	bl	9de0 <close@plt>
    f890:	mov	r3, r0
    f894:	str	r3, [fp, #-12]
    f898:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f89c:	mov	r3, #0
    f8a0:	str	r3, [r2]
    f8a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f8a8:	mov	r3, #0
    f8ac:	str	r3, [r2, #12]
    f8b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f8b4:	bl	9dc8 <free@plt>
    f8b8:	mov	r3, #0
    f8bc:	str	r3, [fp, #-24]	; 0xffffffe8
    f8c0:	ldr	r3, [fp, #-12]
    f8c4:	cmp	r3, #0
    f8c8:	bge	f8f4 <DRV_Finalize+0x11c>
    f8cc:	ldr	r2, [fp, #-16]
    f8d0:	ldr	r3, [pc, #104]	; f940 <DRV_Finalize+0x168>
    f8d4:	cmp	r2, r3
    f8d8:	ble	f8f4 <DRV_Finalize+0x11c>
    f8dc:	ldr	r3, [fp, #-16]
    f8e0:	cmp	r3, #34048	; 0x8500
    f8e4:	bgt	f8f4 <DRV_Finalize+0x11c>
    f8e8:	ldr	r3, [pc, #76]	; f93c <DRV_Finalize+0x164>
    f8ec:	str	r3, [fp, #-16]
    f8f0:	b	f924 <DRV_Finalize+0x14c>
    f8f4:	ldr	r2, [fp, #-16]
    f8f8:	ldr	r3, [pc, #64]	; f940 <DRV_Finalize+0x168>
    f8fc:	cmp	r2, r3
    f900:	ble	f924 <DRV_Finalize+0x14c>
    f904:	ldr	r3, [fp, #-16]
    f908:	cmp	r3, #34048	; 0x8500
    f90c:	bgt	f924 <DRV_Finalize+0x14c>
    f910:	ldr	r3, [pc, #44]	; f944 <DRV_Finalize+0x16c>
    f914:	str	r3, [fp, #-16]
    f918:	b	f924 <DRV_Finalize+0x14c>
    f91c:	ldr	r3, [pc, #36]	; f948 <DRV_Finalize+0x170>
    f920:	str	r3, [fp, #-16]
    f924:	ldr	r3, [fp, #-16]
    f928:	mov	r0, r3
    f92c:	sub	sp, fp, #4
    f930:	pop	{fp, pc}
    f934:	.word	0x5f4b5244
    f938:	.word	0x0002d3e0
    f93c:	.word	0x80008008
    f940:	.word	0x00007fff
    f944:	.word	0x00008003
    f948:	.word	0x80008012

0000f94c <DRV_Invoke>:
    f94c:	push	{fp, lr}
    f950:	add	fp, sp, #4
    f954:	sub	sp, sp, #272	; 0x110
    f958:	str	r0, [fp, #-248]	; 0xffffff08
    f95c:	str	r1, [fp, #-252]	; 0xffffff04
    f960:	str	r2, [fp, #-256]	; 0xffffff00
    f964:	str	r3, [fp, #-260]	; 0xfffffefc
    f968:	mov	r3, #32768	; 0x8000
    f96c:	str	r3, [fp, #-240]	; 0xffffff10
    f970:	ldr	r3, [fp, #-256]	; 0xffffff00
    f974:	str	r3, [fp, #-236]	; 0xffffff14
    f978:	ldr	r3, [fp, #-248]	; 0xffffff08
    f97c:	cmp	r3, #0
    f980:	beq	f998 <DRV_Invoke+0x4c>
    f984:	ldr	r3, [fp, #-248]	; 0xffffff08
    f988:	ldr	r2, [r3]
    f98c:	ldr	r3, [pc, #3892]	; 108c8 <DRV_Invoke+0xf7c>
    f990:	cmp	r2, r3
    f994:	beq	f9a8 <DRV_Invoke+0x5c>
    f998:	ldr	r2, [fp, #-252]	; 0xffffff04
    f99c:	ldr	r3, [pc, #3880]	; 108cc <DRV_Invoke+0xf80>
    f9a0:	cmp	r2, r3
    f9a4:	bne	11070 <DRV_Invoke+0x1724>
    f9a8:	ldr	r2, [fp, #-252]	; 0xffffff04
    f9ac:	ldr	r3, [pc, #3868]	; 108d0 <DRV_Invoke+0xf84>
    f9b0:	add	r3, r2, r3
    f9b4:	cmp	r3, #65	; 0x41
    f9b8:	ldrls	pc, [pc, r3, lsl #2]
    f9bc:	b	11010 <DRV_Invoke+0x16c4>
    f9c0:	.word	0x00010434
    f9c4:	.word	0x00010484
    f9c8:	.word	0x00011010
    f9cc:	.word	0x00011010
    f9d0:	.word	0x00011010
    f9d4:	.word	0x00011010
    f9d8:	.word	0x00010568
    f9dc:	.word	0x000104c0
    f9e0:	.word	0x00011010
    f9e4:	.word	0x000105b8
    f9e8:	.word	0x00011010
    f9ec:	.word	0x00011010
    f9f0:	.word	0x00011010
    f9f4:	.word	0x00011010
    f9f8:	.word	0x00011010
    f9fc:	.word	0x00011010
    fa00:	.word	0x00011010
    fa04:	.word	0x00011010
    fa08:	.word	0x00011010
    fa0c:	.word	0x00011010
    fa10:	.word	0x00011010
    fa14:	.word	0x0000fbd8
    fa18:	.word	0x0000fcc8
    fa1c:	.word	0x0000fe94
    fa20:	.word	0x0000ff98
    fa24:	.word	0x00011010
    fa28:	.word	0x00011010
    fa2c:	.word	0x00011010
    fa30:	.word	0x00011010
    fa34:	.word	0x00011010
    fa38:	.word	0x00011010
    fa3c:	.word	0x00011010
    fa40:	.word	0x00011010
    fa44:	.word	0x00011010
    fa48:	.word	0x00011010
    fa4c:	.word	0x00011010
    fa50:	.word	0x00011010
    fa54:	.word	0x00011010
    fa58:	.word	0x0000fd8c
    fa5c:	.word	0x0000fe14
    fa60:	.word	0x0000fac8
    fa64:	.word	0x0000fb48
    fa68:	.word	0x00011010
    fa6c:	.word	0x00011010
    fa70:	.word	0x00011010
    fa74:	.word	0x00011010
    fa78:	.word	0x000109a0
    fa7c:	.word	0x00010bc0
    fa80:	.word	0x000107c4
    fa84:	.word	0x0001084c
    fa88:	.word	0x00010900
    fa8c:	.word	0x00011010
    fa90:	.word	0x00010d48
    fa94:	.word	0x00010da0
    fa98:	.word	0x00010df8
    fa9c:	.word	0x00010f34
    faa0:	.word	0x00011010
    faa4:	.word	0x00011010
    faa8:	.word	0x00011010
    faac:	.word	0x00011010
    fab0:	.word	0x00010fd8
    fab4:	.word	0x00011010
    fab8:	.word	0x00010074
    fabc:	.word	0x000101b0
    fac0:	.word	0x00010254
    fac4:	.word	0x00010390
    fac8:	ldr	r3, [fp, #-236]	; 0xffffff14
    facc:	ldr	r3, [r3, #8]
    fad0:	ldrh	r2, [r3, #10]
    fad4:	ldr	r3, [fp, #-236]	; 0xffffff14
    fad8:	add	r3, r3, #8
    fadc:	mov	r0, r2
    fae0:	mov	r1, r3
    fae4:	mov	r2, #512	; 0x200
    fae8:	bl	1756c <_POOL_xltBuf>
    faec:	mov	r3, r0
    faf0:	str	r3, [fp, #-240]	; 0xffffff10
    faf4:	ldr	r2, [fp, #-240]	; 0xffffff10
    faf8:	ldr	r3, [pc, #3576]	; 108f8 <DRV_Invoke+0xfac>
    fafc:	cmp	r2, r3
    fb00:	ble	11044 <DRV_Invoke+0x16f8>
    fb04:	ldr	r3, [fp, #-240]	; 0xffffff10
    fb08:	cmp	r3, #34048	; 0x8500
    fb0c:	bgt	11044 <DRV_Invoke+0x16f8>
    fb10:	ldr	r3, [fp, #-248]	; 0xffffff08
    fb14:	ldr	r3, [r3, #4]
    fb18:	mov	r0, r3
    fb1c:	ldr	r1, [fp, #-252]	; 0xffffff04
    fb20:	ldr	r2, [fp, #-236]	; 0xffffff14
    fb24:	bl	a0bc <ioctl@plt>
    fb28:	mov	r3, r0
    fb2c:	str	r3, [fp, #-232]	; 0xffffff18
    fb30:	ldr	r3, [fp, #-232]	; 0xffffff18
    fb34:	cmp	r3, #0
    fb38:	bge	11044 <DRV_Invoke+0x16f8>
    fb3c:	ldr	r3, [pc, #3504]	; 108f4 <DRV_Invoke+0xfa8>
    fb40:	str	r3, [fp, #-240]	; 0xffffff10
    fb44:	b	11044 <DRV_Invoke+0x16f8>
    fb48:	ldr	r3, [fp, #-248]	; 0xffffff08
    fb4c:	ldr	r3, [r3, #4]
    fb50:	mov	r0, r3
    fb54:	ldr	r1, [fp, #-252]	; 0xffffff04
    fb58:	ldr	r2, [fp, #-236]	; 0xffffff14
    fb5c:	bl	a0bc <ioctl@plt>
    fb60:	mov	r3, r0
    fb64:	str	r3, [fp, #-232]	; 0xffffff18
    fb68:	ldr	r3, [fp, #-232]	; 0xffffff18
    fb6c:	cmp	r3, #0
    fb70:	bge	fb80 <DRV_Invoke+0x234>
    fb74:	ldr	r3, [pc, #3448]	; 108f4 <DRV_Invoke+0xfa8>
    fb78:	str	r3, [fp, #-240]	; 0xffffff10
    fb7c:	b	11044 <DRV_Invoke+0x16f8>
    fb80:	ldr	r3, [fp, #-236]	; 0xffffff14
    fb84:	ldr	r2, [r3]
    fb88:	ldr	r3, [pc, #3432]	; 108f8 <DRV_Invoke+0xfac>
    fb8c:	cmp	r2, r3
    fb90:	ble	11044 <DRV_Invoke+0x16f8>
    fb94:	ldr	r3, [fp, #-236]	; 0xffffff14
    fb98:	ldr	r3, [r3]
    fb9c:	cmp	r3, #34048	; 0x8500
    fba0:	bgt	11044 <DRV_Invoke+0x16f8>
    fba4:	ldr	r3, [fp, #-236]	; 0xffffff14
    fba8:	ldr	r3, [r3, #4]
    fbac:	lsl	r3, r3, #16
    fbb0:	lsr	r2, r3, #16
    fbb4:	ldr	r3, [fp, #-236]	; 0xffffff14
    fbb8:	add	r3, r3, #16
    fbbc:	mov	r0, r2
    fbc0:	mov	r1, r3
    fbc4:	mov	r2, #2
    fbc8:	bl	1756c <_POOL_xltBuf>
    fbcc:	mov	r3, r0
    fbd0:	str	r3, [fp, #-240]	; 0xffffff10
    fbd4:	b	11044 <DRV_Invoke+0x16f8>
    fbd8:	ldr	r3, [fp, #-236]	; 0xffffff14
    fbdc:	ldr	r3, [r3, #4]
    fbe0:	str	r3, [fp, #-228]	; 0xffffff1c
    fbe4:	ldr	r3, [fp, #-236]	; 0xffffff14
    fbe8:	ldr	r3, [r3, #8]
    fbec:	str	r3, [fp, #-224]	; 0xffffff20
    fbf0:	ldr	r3, [fp, #-236]	; 0xffffff14
    fbf4:	ldr	r3, [r3, #12]
    fbf8:	str	r3, [fp, #-220]	; 0xffffff24
    fbfc:	ldr	r3, [fp, #-220]	; 0xffffff24
    fc00:	ldr	r3, [r3]
    fc04:	str	r3, [fp, #-216]	; 0xffffff28
    fc08:	ldr	r3, [fp, #-216]	; 0xffffff28
    fc0c:	str	r3, [fp, #-244]	; 0xffffff0c
    fc10:	ldr	r3, [pc, #3260]	; 108d4 <DRV_Invoke+0xf88>
    fc14:	ldr	r2, [r3]
    fc18:	ldr	r3, [fp, #-228]	; 0xffffff1c
    fc1c:	lsl	r3, r3, #6
    fc20:	add	r2, r2, r3
    fc24:	ldr	r3, [fp, #-224]	; 0xffffff20
    fc28:	ldr	r3, [r2, r3, lsl #2]
    fc2c:	lsl	r3, r3, #16
    fc30:	lsr	r3, r3, #16
    fc34:	sub	r2, fp, #244	; 0xf4
    fc38:	mov	r0, r3
    fc3c:	mov	r1, r2
    fc40:	mov	r2, #512	; 0x200
    fc44:	bl	1756c <_POOL_xltBuf>
    fc48:	mov	r3, r0
    fc4c:	str	r3, [fp, #-240]	; 0xffffff10
    fc50:	ldr	r2, [fp, #-240]	; 0xffffff10
    fc54:	ldr	r3, [pc, #3228]	; 108f8 <DRV_Invoke+0xfac>
    fc58:	cmp	r2, r3
    fc5c:	ble	fcbc <DRV_Invoke+0x370>
    fc60:	ldr	r3, [fp, #-240]	; 0xffffff10
    fc64:	cmp	r3, #34048	; 0x8500
    fc68:	bgt	fcbc <DRV_Invoke+0x370>
    fc6c:	ldr	r2, [fp, #-244]	; 0xffffff0c
    fc70:	ldr	r3, [fp, #-220]	; 0xffffff24
    fc74:	str	r2, [r3]
    fc78:	ldr	r3, [fp, #-248]	; 0xffffff08
    fc7c:	ldr	r3, [r3, #4]
    fc80:	mov	r0, r3
    fc84:	ldr	r1, [fp, #-252]	; 0xffffff04
    fc88:	ldr	r2, [fp, #-236]	; 0xffffff14
    fc8c:	bl	a0bc <ioctl@plt>
    fc90:	mov	r3, r0
    fc94:	str	r3, [fp, #-232]	; 0xffffff18
    fc98:	ldr	r3, [fp, #-232]	; 0xffffff18
    fc9c:	cmp	r3, #0
    fca0:	bge	fcac <DRV_Invoke+0x360>
    fca4:	ldr	r3, [pc, #3144]	; 108f4 <DRV_Invoke+0xfa8>
    fca8:	str	r3, [fp, #-240]	; 0xffffff10
    fcac:	ldr	r2, [fp, #-220]	; 0xffffff24
    fcb0:	ldr	r3, [fp, #-216]	; 0xffffff28
    fcb4:	str	r3, [r2]
    fcb8:	b	11044 <DRV_Invoke+0x16f8>
    fcbc:	ldr	r3, [pc, #3120]	; 108f4 <DRV_Invoke+0xfa8>
    fcc0:	str	r3, [fp, #-240]	; 0xffffff10
    fcc4:	b	11044 <DRV_Invoke+0x16f8>
    fcc8:	ldr	r3, [fp, #-236]	; 0xffffff14
    fccc:	ldr	r3, [r3, #4]
    fcd0:	str	r3, [fp, #-212]	; 0xffffff2c
    fcd4:	ldr	r3, [fp, #-236]	; 0xffffff14
    fcd8:	ldr	r3, [r3, #8]
    fcdc:	str	r3, [fp, #-208]	; 0xffffff30
    fce0:	ldr	r3, [fp, #-236]	; 0xffffff14
    fce4:	ldr	r3, [r3, #16]
    fce8:	str	r3, [fp, #-204]	; 0xffffff34
    fcec:	ldr	r3, [fp, #-248]	; 0xffffff08
    fcf0:	ldr	r3, [r3, #4]
    fcf4:	mov	r0, r3
    fcf8:	ldr	r1, [fp, #-252]	; 0xffffff04
    fcfc:	ldr	r2, [fp, #-236]	; 0xffffff14
    fd00:	bl	a0bc <ioctl@plt>
    fd04:	mov	r3, r0
    fd08:	str	r3, [fp, #-232]	; 0xffffff18
    fd0c:	ldr	r3, [fp, #-232]	; 0xffffff18
    fd10:	cmp	r3, #0
    fd14:	bge	fd24 <DRV_Invoke+0x3d8>
    fd18:	ldr	r3, [pc, #3028]	; 108f4 <DRV_Invoke+0xfa8>
    fd1c:	str	r3, [fp, #-240]	; 0xffffff10
    fd20:	b	11044 <DRV_Invoke+0x16f8>
    fd24:	ldr	r3, [fp, #-236]	; 0xffffff14
    fd28:	ldr	r2, [r3]
    fd2c:	ldr	r3, [pc, #3012]	; 108f8 <DRV_Invoke+0xfac>
    fd30:	cmp	r2, r3
    fd34:	ble	11044 <DRV_Invoke+0x16f8>
    fd38:	ldr	r3, [fp, #-236]	; 0xffffff14
    fd3c:	ldr	r3, [r3]
    fd40:	cmp	r3, #34048	; 0x8500
    fd44:	bgt	11044 <DRV_Invoke+0x16f8>
    fd48:	ldr	r3, [pc, #2948]	; 108d4 <DRV_Invoke+0xf88>
    fd4c:	ldr	r2, [r3]
    fd50:	ldr	r3, [fp, #-212]	; 0xffffff2c
    fd54:	lsl	r3, r3, #6
    fd58:	add	r2, r2, r3
    fd5c:	ldr	r3, [fp, #-208]	; 0xffffff30
    fd60:	ldr	r3, [r2, r3, lsl #2]
    fd64:	lsl	r3, r3, #16
    fd68:	lsr	r2, r3, #16
    fd6c:	ldr	r3, [fp, #-204]	; 0xffffff34
    fd70:	mov	r0, r2
    fd74:	mov	r1, r3
    fd78:	mov	r2, #2
    fd7c:	bl	1756c <_POOL_xltBuf>
    fd80:	mov	r3, r0
    fd84:	str	r3, [fp, #-240]	; 0xffffff10
    fd88:	b	11044 <DRV_Invoke+0x16f8>
    fd8c:	ldr	r3, [fp, #-248]	; 0xffffff08
    fd90:	ldr	r3, [r3, #4]
    fd94:	mov	r0, r3
    fd98:	ldr	r1, [fp, #-252]	; 0xffffff04
    fd9c:	ldr	r2, [fp, #-236]	; 0xffffff14
    fda0:	bl	a0bc <ioctl@plt>
    fda4:	mov	r3, r0
    fda8:	str	r3, [fp, #-232]	; 0xffffff18
    fdac:	ldr	r3, [fp, #-232]	; 0xffffff18
    fdb0:	cmp	r3, #0
    fdb4:	bge	fdc4 <DRV_Invoke+0x478>
    fdb8:	ldr	r3, [pc, #2868]	; 108f4 <DRV_Invoke+0xfa8>
    fdbc:	str	r3, [fp, #-240]	; 0xffffff10
    fdc0:	b	11044 <DRV_Invoke+0x16f8>
    fdc4:	ldr	r3, [fp, #-236]	; 0xffffff14
    fdc8:	ldr	r2, [r3]
    fdcc:	ldr	r3, [pc, #2852]	; 108f8 <DRV_Invoke+0xfac>
    fdd0:	cmp	r2, r3
    fdd4:	ble	11044 <DRV_Invoke+0x16f8>
    fdd8:	ldr	r3, [fp, #-236]	; 0xffffff14
    fddc:	ldr	r3, [r3]
    fde0:	cmp	r3, #34048	; 0x8500
    fde4:	bgt	11044 <DRV_Invoke+0x16f8>
    fde8:	ldr	r3, [fp, #-236]	; 0xffffff14
    fdec:	ldrh	r2, [r3, #4]
    fdf0:	ldr	r3, [fp, #-236]	; 0xffffff14
    fdf4:	add	r3, r3, #8
    fdf8:	mov	r0, r2
    fdfc:	mov	r1, r3
    fe00:	mov	r2, #2
    fe04:	bl	1756c <_POOL_xltBuf>
    fe08:	mov	r3, r0
    fe0c:	str	r3, [fp, #-240]	; 0xffffff10
    fe10:	b	11044 <DRV_Invoke+0x16f8>
    fe14:	ldr	r3, [fp, #-236]	; 0xffffff14
    fe18:	ldr	r3, [r3, #4]
    fe1c:	ldrh	r2, [r3, #10]
    fe20:	ldr	r3, [fp, #-236]	; 0xffffff14
    fe24:	add	r3, r3, #4
    fe28:	mov	r0, r2
    fe2c:	mov	r1, r3
    fe30:	mov	r2, #512	; 0x200
    fe34:	bl	1756c <_POOL_xltBuf>
    fe38:	mov	r3, r0
    fe3c:	str	r3, [fp, #-240]	; 0xffffff10
    fe40:	ldr	r2, [fp, #-240]	; 0xffffff10
    fe44:	ldr	r3, [pc, #2732]	; 108f8 <DRV_Invoke+0xfac>
    fe48:	cmp	r2, r3
    fe4c:	ble	11044 <DRV_Invoke+0x16f8>
    fe50:	ldr	r3, [fp, #-240]	; 0xffffff10
    fe54:	cmp	r3, #34048	; 0x8500
    fe58:	bgt	11044 <DRV_Invoke+0x16f8>
    fe5c:	ldr	r3, [fp, #-248]	; 0xffffff08
    fe60:	ldr	r3, [r3, #4]
    fe64:	mov	r0, r3
    fe68:	ldr	r1, [fp, #-252]	; 0xffffff04
    fe6c:	ldr	r2, [fp, #-236]	; 0xffffff14
    fe70:	bl	a0bc <ioctl@plt>
    fe74:	mov	r3, r0
    fe78:	str	r3, [fp, #-232]	; 0xffffff18
    fe7c:	ldr	r3, [fp, #-232]	; 0xffffff18
    fe80:	cmp	r3, #0
    fe84:	bge	11044 <DRV_Invoke+0x16f8>
    fe88:	ldr	r3, [pc, #2660]	; 108f4 <DRV_Invoke+0xfa8>
    fe8c:	str	r3, [fp, #-240]	; 0xffffff10
    fe90:	b	11044 <DRV_Invoke+0x16f8>
    fe94:	ldr	r3, [fp, #-236]	; 0xffffff14
    fe98:	ldr	r3, [r3, #4]
    fe9c:	str	r3, [fp, #-200]	; 0xffffff38
    fea0:	ldr	r3, [fp, #-236]	; 0xffffff14
    fea4:	ldr	r3, [r3, #8]
    fea8:	str	r3, [fp, #-196]	; 0xffffff3c
    feac:	ldr	r3, [fp, #-236]	; 0xffffff14
    feb0:	ldr	r3, [r3, #20]
    feb4:	str	r3, [fp, #-192]	; 0xffffff40
    feb8:	ldr	r3, [fp, #-236]	; 0xffffff14
    febc:	ldr	r3, [r3, #12]
    fec0:	str	r3, [fp, #-188]	; 0xffffff44
    fec4:	ldr	r3, [fp, #-248]	; 0xffffff08
    fec8:	ldr	r3, [r3, #4]
    fecc:	mov	r0, r3
    fed0:	ldr	r1, [fp, #-252]	; 0xffffff04
    fed4:	ldr	r2, [fp, #-236]	; 0xffffff14
    fed8:	bl	a0bc <ioctl@plt>
    fedc:	mov	r3, r0
    fee0:	str	r3, [fp, #-232]	; 0xffffff18
    fee4:	ldr	r3, [fp, #-232]	; 0xffffff18
    fee8:	cmp	r3, #0
    feec:	bge	fefc <DRV_Invoke+0x5b0>
    fef0:	ldr	r3, [pc, #2556]	; 108f4 <DRV_Invoke+0xfa8>
    fef4:	str	r3, [fp, #-240]	; 0xffffff10
    fef8:	b	11044 <DRV_Invoke+0x16f8>
    fefc:	ldr	r3, [fp, #-236]	; 0xffffff14
    ff00:	ldr	r2, [r3]
    ff04:	ldr	r3, [pc, #2540]	; 108f8 <DRV_Invoke+0xfac>
    ff08:	cmp	r2, r3
    ff0c:	ble	11044 <DRV_Invoke+0x16f8>
    ff10:	ldr	r3, [fp, #-236]	; 0xffffff14
    ff14:	ldr	r3, [r3]
    ff18:	cmp	r3, #34048	; 0x8500
    ff1c:	bgt	11044 <DRV_Invoke+0x16f8>
    ff20:	mov	r3, #0
    ff24:	str	r3, [fp, #-184]	; 0xffffff48
    ff28:	b	ff84 <DRV_Invoke+0x638>
    ff2c:	ldr	r3, [pc, #2464]	; 108d4 <DRV_Invoke+0xf88>
    ff30:	ldr	r2, [r3]
    ff34:	ldr	r3, [fp, #-200]	; 0xffffff38
    ff38:	lsl	r3, r3, #6
    ff3c:	add	r2, r2, r3
    ff40:	ldr	r3, [fp, #-196]	; 0xffffff3c
    ff44:	ldr	r3, [r2, r3, lsl #2]
    ff48:	lsl	r3, r3, #16
    ff4c:	lsr	r1, r3, #16
    ff50:	ldr	r2, [fp, #-188]	; 0xffffff44
    ff54:	ldr	r3, [fp, #-184]	; 0xffffff48
    ff58:	lsl	r3, r3, #2
    ff5c:	add	r3, r2, r3
    ff60:	mov	r0, r1
    ff64:	mov	r1, r3
    ff68:	mov	r2, #2
    ff6c:	bl	1756c <_POOL_xltBuf>
    ff70:	mov	r3, r0
    ff74:	str	r3, [fp, #-240]	; 0xffffff10
    ff78:	ldr	r3, [fp, #-184]	; 0xffffff48
    ff7c:	add	r3, r3, #1
    ff80:	str	r3, [fp, #-184]	; 0xffffff48
    ff84:	ldr	r2, [fp, #-184]	; 0xffffff48
    ff88:	ldr	r3, [fp, #-192]	; 0xffffff40
    ff8c:	cmp	r2, r3
    ff90:	bcc	ff2c <DRV_Invoke+0x5e0>
    ff94:	b	11044 <DRV_Invoke+0x16f8>
    ff98:	ldr	r3, [fp, #-236]	; 0xffffff14
    ff9c:	ldr	r3, [r3, #4]
    ffa0:	str	r3, [fp, #-180]	; 0xffffff4c
    ffa4:	ldr	r3, [fp, #-236]	; 0xffffff14
    ffa8:	ldr	r3, [r3, #8]
    ffac:	str	r3, [fp, #-176]	; 0xffffff50
    ffb0:	ldr	r3, [fp, #-236]	; 0xffffff14
    ffb4:	ldr	r3, [r3, #16]
    ffb8:	str	r3, [fp, #-172]	; 0xffffff54
    ffbc:	ldr	r3, [fp, #-236]	; 0xffffff14
    ffc0:	ldr	r3, [r3, #12]
    ffc4:	str	r3, [fp, #-168]	; 0xffffff58
    ffc8:	mov	r3, #0
    ffcc:	str	r3, [fp, #-164]	; 0xffffff5c
    ffd0:	b	1002c <DRV_Invoke+0x6e0>
    ffd4:	ldr	r3, [pc, #2296]	; 108d4 <DRV_Invoke+0xf88>
    ffd8:	ldr	r2, [r3]
    ffdc:	ldr	r3, [fp, #-180]	; 0xffffff4c
    ffe0:	lsl	r3, r3, #6
    ffe4:	add	r2, r2, r3
    ffe8:	ldr	r3, [fp, #-176]	; 0xffffff50
    ffec:	ldr	r3, [r2, r3, lsl #2]
    fff0:	lsl	r3, r3, #16
    fff4:	lsr	r1, r3, #16
    fff8:	ldr	r2, [fp, #-168]	; 0xffffff58
    fffc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   10000:	lsl	r3, r3, #2
   10004:	add	r3, r2, r3
   10008:	mov	r0, r1
   1000c:	mov	r1, r3
   10010:	mov	r2, #512	; 0x200
   10014:	bl	1756c <_POOL_xltBuf>
   10018:	mov	r3, r0
   1001c:	str	r3, [fp, #-240]	; 0xffffff10
   10020:	ldr	r3, [fp, #-164]	; 0xffffff5c
   10024:	add	r3, r3, #1
   10028:	str	r3, [fp, #-164]	; 0xffffff5c
   1002c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   10030:	ldr	r3, [fp, #-172]	; 0xffffff54
   10034:	cmp	r2, r3
   10038:	bcc	ffd4 <DRV_Invoke+0x688>
   1003c:	ldr	r3, [fp, #-248]	; 0xffffff08
   10040:	ldr	r3, [r3, #4]
   10044:	mov	r0, r3
   10048:	ldr	r1, [fp, #-252]	; 0xffffff04
   1004c:	ldr	r2, [fp, #-236]	; 0xffffff14
   10050:	bl	a0bc <ioctl@plt>
   10054:	mov	r3, r0
   10058:	str	r3, [fp, #-232]	; 0xffffff18
   1005c:	ldr	r3, [fp, #-232]	; 0xffffff18
   10060:	cmp	r3, #0
   10064:	bge	11044 <DRV_Invoke+0x16f8>
   10068:	ldr	r3, [pc, #2180]	; 108f4 <DRV_Invoke+0xfa8>
   1006c:	str	r3, [fp, #-240]	; 0xffffff10
   10070:	b	11044 <DRV_Invoke+0x16f8>
   10074:	ldr	r3, [fp, #-248]	; 0xffffff08
   10078:	ldr	r3, [r3, #4]
   1007c:	mov	r0, r3
   10080:	ldr	r1, [fp, #-252]	; 0xffffff04
   10084:	ldr	r2, [fp, #-236]	; 0xffffff14
   10088:	bl	a0bc <ioctl@plt>
   1008c:	mov	r3, r0
   10090:	str	r3, [fp, #-232]	; 0xffffff18
   10094:	ldr	r3, [fp, #-232]	; 0xffffff18
   10098:	cmp	r3, #0
   1009c:	bge	100ac <DRV_Invoke+0x760>
   100a0:	ldr	r3, [pc, #2124]	; 108f4 <DRV_Invoke+0xfa8>
   100a4:	str	r3, [fp, #-240]	; 0xffffff10
   100a8:	b	11044 <DRV_Invoke+0x16f8>
   100ac:	ldr	r3, [fp, #-236]	; 0xffffff14
   100b0:	add	r3, r3, #4
   100b4:	str	r3, [fp, #-160]	; 0xffffff60
   100b8:	ldr	r3, [fp, #-160]	; 0xffffff60
   100bc:	ldr	r3, [r3, #16]
   100c0:	str	r3, [fp, #-148]	; 0xffffff6c
   100c4:	ldr	r3, [fp, #-160]	; 0xffffff60
   100c8:	ldr	r3, [r3, #4]
   100cc:	str	r3, [fp, #-152]	; 0xffffff68
   100d0:	ldr	r3, [fp, #-248]	; 0xffffff08
   100d4:	ldr	r3, [r3, #12]
   100d8:	mov	r2, r3
   100dc:	ldr	r3, [fp, #-152]	; 0xffffff68
   100e0:	mov	r0, r3
   100e4:	mov	r1, r2
   100e8:	bl	a05c <__aeabi_uidivmod@plt>
   100ec:	mov	r3, r1
   100f0:	mov	r2, r3
   100f4:	ldr	r3, [fp, #-148]	; 0xffffff6c
   100f8:	add	r3, r3, r2
   100fc:	str	r3, [fp, #-148]	; 0xffffff6c
   10100:	ldr	r3, [fp, #-248]	; 0xffffff08
   10104:	ldr	r3, [r3, #12]
   10108:	mov	r2, r3
   1010c:	ldr	r3, [fp, #-152]	; 0xffffff68
   10110:	mov	r0, r3
   10114:	mov	r1, r2
   10118:	bl	a05c <__aeabi_uidivmod@plt>
   1011c:	mov	r3, r1
   10120:	mov	r2, r3
   10124:	ldr	r3, [fp, #-152]	; 0xffffff68
   10128:	rsb	r3, r2, r3
   1012c:	str	r3, [fp, #-152]	; 0xffffff68
   10130:	ldr	r3, [fp, #-248]	; 0xffffff08
   10134:	ldr	r3, [r3, #4]
   10138:	ldr	r2, [fp, #-152]	; 0xffffff68
   1013c:	str	r3, [sp]
   10140:	str	r2, [sp, #4]
   10144:	mov	r0, #0
   10148:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1014c:	mov	r2, #3
   10150:	mov	r3, #1
   10154:	bl	9e88 <mmap@plt>
   10158:	mov	r3, r0
   1015c:	str	r3, [fp, #-156]	; 0xffffff64
   10160:	ldr	r3, [fp, #-156]	; 0xffffff64
   10164:	cmn	r3, #1
   10168:	bne	10178 <DRV_Invoke+0x82c>
   1016c:	ldr	r3, [pc, #1920]	; 108f4 <DRV_Invoke+0xfa8>
   10170:	str	r3, [fp, #-240]	; 0xffffff10
   10174:	b	11044 <DRV_Invoke+0x16f8>
   10178:	ldr	r3, [fp, #-160]	; 0xffffff60
   1017c:	ldr	r2, [r3, #4]
   10180:	ldr	r3, [fp, #-248]	; 0xffffff08
   10184:	ldr	r3, [r3, #12]
   10188:	mov	r0, r2
   1018c:	mov	r1, r3
   10190:	bl	a05c <__aeabi_uidivmod@plt>
   10194:	mov	r3, r1
   10198:	mov	r2, r3
   1019c:	ldr	r3, [fp, #-156]	; 0xffffff64
   101a0:	add	r2, r2, r3
   101a4:	ldr	r3, [fp, #-160]	; 0xffffff60
   101a8:	str	r2, [r3, #12]
   101ac:	b	11044 <DRV_Invoke+0x16f8>
   101b0:	ldr	r3, [fp, #-236]	; 0xffffff14
   101b4:	add	r3, r3, #4
   101b8:	str	r3, [fp, #-144]	; 0xffffff70
   101bc:	ldr	r3, [fp, #-144]	; 0xffffff70
   101c0:	ldr	r3, [r3, #12]
   101c4:	str	r3, [fp, #-140]	; 0xffffff74
   101c8:	ldr	r3, [fp, #-144]	; 0xffffff70
   101cc:	ldr	r3, [r3, #16]
   101d0:	str	r3, [fp, #-136]	; 0xffffff78
   101d4:	ldr	r3, [fp, #-248]	; 0xffffff08
   101d8:	ldr	r3, [r3, #12]
   101dc:	mov	r2, r3
   101e0:	ldr	r3, [fp, #-140]	; 0xffffff74
   101e4:	mov	r0, r3
   101e8:	mov	r1, r2
   101ec:	bl	a05c <__aeabi_uidivmod@plt>
   101f0:	mov	r3, r1
   101f4:	mov	r2, r3
   101f8:	ldr	r3, [fp, #-136]	; 0xffffff78
   101fc:	add	r3, r3, r2
   10200:	str	r3, [fp, #-136]	; 0xffffff78
   10204:	ldr	r3, [fp, #-248]	; 0xffffff08
   10208:	ldr	r3, [r3, #12]
   1020c:	mov	r2, r3
   10210:	ldr	r3, [fp, #-140]	; 0xffffff74
   10214:	mov	r0, r3
   10218:	mov	r1, r2
   1021c:	bl	a05c <__aeabi_uidivmod@plt>
   10220:	mov	r3, r1
   10224:	mov	r2, r3
   10228:	ldr	r3, [fp, #-140]	; 0xffffff74
   1022c:	rsb	r3, r2, r3
   10230:	str	r3, [fp, #-140]	; 0xffffff74
   10234:	ldr	r3, [fp, #-140]	; 0xffffff74
   10238:	mov	r0, r3
   1023c:	ldr	r1, [fp, #-136]	; 0xffffff78
   10240:	bl	9f0c <munmap@plt>
   10244:	ldr	r2, [fp, #-236]	; 0xffffff14
   10248:	mov	r3, #32768	; 0x8000
   1024c:	str	r3, [r2]
   10250:	b	11044 <DRV_Invoke+0x16f8>
   10254:	ldr	r3, [fp, #-248]	; 0xffffff08
   10258:	ldr	r3, [r3, #4]
   1025c:	mov	r0, r3
   10260:	ldr	r1, [fp, #-252]	; 0xffffff04
   10264:	ldr	r2, [fp, #-236]	; 0xffffff14
   10268:	bl	a0bc <ioctl@plt>
   1026c:	mov	r3, r0
   10270:	str	r3, [fp, #-232]	; 0xffffff18
   10274:	ldr	r3, [fp, #-232]	; 0xffffff18
   10278:	cmp	r3, #0
   1027c:	bge	1028c <DRV_Invoke+0x940>
   10280:	ldr	r3, [pc, #1644]	; 108f4 <DRV_Invoke+0xfa8>
   10284:	str	r3, [fp, #-240]	; 0xffffff10
   10288:	b	11044 <DRV_Invoke+0x16f8>
   1028c:	ldr	r3, [fp, #-236]	; 0xffffff14
   10290:	add	r3, r3, #4
   10294:	str	r3, [fp, #-132]	; 0xffffff7c
   10298:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1029c:	ldr	r3, [r3, #16]
   102a0:	str	r3, [fp, #-120]	; 0xffffff88
   102a4:	ldr	r3, [fp, #-132]	; 0xffffff7c
   102a8:	ldr	r3, [r3, #4]
   102ac:	str	r3, [fp, #-124]	; 0xffffff84
   102b0:	ldr	r3, [fp, #-248]	; 0xffffff08
   102b4:	ldr	r3, [r3, #12]
   102b8:	mov	r2, r3
   102bc:	ldr	r3, [fp, #-124]	; 0xffffff84
   102c0:	mov	r0, r3
   102c4:	mov	r1, r2
   102c8:	bl	a05c <__aeabi_uidivmod@plt>
   102cc:	mov	r3, r1
   102d0:	mov	r2, r3
   102d4:	ldr	r3, [fp, #-120]	; 0xffffff88
   102d8:	add	r3, r3, r2
   102dc:	str	r3, [fp, #-120]	; 0xffffff88
   102e0:	ldr	r3, [fp, #-248]	; 0xffffff08
   102e4:	ldr	r3, [r3, #12]
   102e8:	mov	r2, r3
   102ec:	ldr	r3, [fp, #-124]	; 0xffffff84
   102f0:	mov	r0, r3
   102f4:	mov	r1, r2
   102f8:	bl	a05c <__aeabi_uidivmod@plt>
   102fc:	mov	r3, r1
   10300:	mov	r2, r3
   10304:	ldr	r3, [fp, #-124]	; 0xffffff84
   10308:	rsb	r3, r2, r3
   1030c:	str	r3, [fp, #-124]	; 0xffffff84
   10310:	ldr	r3, [fp, #-248]	; 0xffffff08
   10314:	ldr	r3, [r3, #4]
   10318:	ldr	r2, [fp, #-124]	; 0xffffff84
   1031c:	str	r3, [sp]
   10320:	str	r2, [sp, #4]
   10324:	mov	r0, #0
   10328:	ldr	r1, [fp, #-120]	; 0xffffff88
   1032c:	mov	r2, #3
   10330:	mov	r3, #1
   10334:	bl	9e88 <mmap@plt>
   10338:	mov	r3, r0
   1033c:	str	r3, [fp, #-128]	; 0xffffff80
   10340:	ldr	r3, [fp, #-128]	; 0xffffff80
   10344:	cmn	r3, #1
   10348:	bne	10358 <DRV_Invoke+0xa0c>
   1034c:	ldr	r3, [pc, #1440]	; 108f4 <DRV_Invoke+0xfa8>
   10350:	str	r3, [fp, #-240]	; 0xffffff10
   10354:	b	11044 <DRV_Invoke+0x16f8>
   10358:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1035c:	ldr	r2, [r3, #4]
   10360:	ldr	r3, [fp, #-248]	; 0xffffff08
   10364:	ldr	r3, [r3, #12]
   10368:	mov	r0, r2
   1036c:	mov	r1, r3
   10370:	bl	a05c <__aeabi_uidivmod@plt>
   10374:	mov	r3, r1
   10378:	mov	r2, r3
   1037c:	ldr	r3, [fp, #-128]	; 0xffffff80
   10380:	add	r2, r2, r3
   10384:	ldr	r3, [fp, #-132]	; 0xffffff7c
   10388:	str	r2, [r3, #12]
   1038c:	b	11044 <DRV_Invoke+0x16f8>
   10390:	ldr	r3, [fp, #-236]	; 0xffffff14
   10394:	add	r3, r3, #4
   10398:	str	r3, [fp, #-116]	; 0xffffff8c
   1039c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   103a0:	ldr	r3, [r3, #12]
   103a4:	str	r3, [fp, #-112]	; 0xffffff90
   103a8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   103ac:	ldr	r3, [r3, #16]
   103b0:	str	r3, [fp, #-108]	; 0xffffff94
   103b4:	ldr	r3, [fp, #-248]	; 0xffffff08
   103b8:	ldr	r3, [r3, #12]
   103bc:	mov	r2, r3
   103c0:	ldr	r3, [fp, #-112]	; 0xffffff90
   103c4:	mov	r0, r3
   103c8:	mov	r1, r2
   103cc:	bl	a05c <__aeabi_uidivmod@plt>
   103d0:	mov	r3, r1
   103d4:	mov	r2, r3
   103d8:	ldr	r3, [fp, #-108]	; 0xffffff94
   103dc:	add	r3, r3, r2
   103e0:	str	r3, [fp, #-108]	; 0xffffff94
   103e4:	ldr	r3, [fp, #-248]	; 0xffffff08
   103e8:	ldr	r3, [r3, #12]
   103ec:	mov	r2, r3
   103f0:	ldr	r3, [fp, #-112]	; 0xffffff90
   103f4:	mov	r0, r3
   103f8:	mov	r1, r2
   103fc:	bl	a05c <__aeabi_uidivmod@plt>
   10400:	mov	r3, r1
   10404:	mov	r2, r3
   10408:	ldr	r3, [fp, #-112]	; 0xffffff90
   1040c:	rsb	r3, r2, r3
   10410:	str	r3, [fp, #-112]	; 0xffffff90
   10414:	ldr	r3, [fp, #-112]	; 0xffffff90
   10418:	mov	r0, r3
   1041c:	ldr	r1, [fp, #-108]	; 0xffffff94
   10420:	bl	9f0c <munmap@plt>
   10424:	ldr	r2, [fp, #-236]	; 0xffffff14
   10428:	mov	r3, #32768	; 0x8000
   1042c:	str	r3, [r2]
   10430:	b	11044 <DRV_Invoke+0x16f8>
   10434:	ldr	r3, [fp, #-236]	; 0xffffff14
   10438:	ldr	r3, [r3, #4]
   1043c:	mov	r0, r3
   10440:	bl	11484 <DRV_installCleanupRoutines>
   10444:	ldr	r3, [fp, #-248]	; 0xffffff08
   10448:	ldr	r3, [r3, #4]
   1044c:	mov	r0, r3
   10450:	ldr	r1, [fp, #-252]	; 0xffffff04
   10454:	ldr	r2, [fp, #-236]	; 0xffffff14
   10458:	bl	a0bc <ioctl@plt>
   1045c:	mov	r3, r0
   10460:	str	r3, [fp, #-232]	; 0xffffff18
   10464:	ldr	r3, [fp, #-232]	; 0xffffff18
   10468:	cmp	r3, #0
   1046c:	bge	1047c <DRV_Invoke+0xb30>
   10470:	ldr	r3, [pc, #1148]	; 108f4 <DRV_Invoke+0xfa8>
   10474:	str	r3, [fp, #-240]	; 0xffffff10
   10478:	b	11044 <DRV_Invoke+0x16f8>
   1047c:	bl	173a4 <_POOL_init>
   10480:	b	11044 <DRV_Invoke+0x16f8>
   10484:	bl	17488 <_POOL_exit>
   10488:	ldr	r3, [fp, #-248]	; 0xffffff08
   1048c:	ldr	r3, [r3, #4]
   10490:	mov	r0, r3
   10494:	ldr	r1, [fp, #-252]	; 0xffffff04
   10498:	ldr	r2, [fp, #-236]	; 0xffffff14
   1049c:	bl	a0bc <ioctl@plt>
   104a0:	mov	r3, r0
   104a4:	str	r3, [fp, #-232]	; 0xffffff18
   104a8:	ldr	r3, [fp, #-232]	; 0xffffff18
   104ac:	cmp	r3, #0
   104b0:	bge	11044 <DRV_Invoke+0x16f8>
   104b4:	ldr	r3, [pc, #1080]	; 108f4 <DRV_Invoke+0xfa8>
   104b8:	str	r3, [fp, #-240]	; 0xffffff10
   104bc:	b	11044 <DRV_Invoke+0x16f8>
   104c0:	ldr	r3, [pc, #1040]	; 108d8 <DRV_Invoke+0xf8c>
   104c4:	ldr	r3, [r3]
   104c8:	cmp	r3, #0
   104cc:	bne	10510 <DRV_Invoke+0xbc4>
   104d0:	ldr	r0, [pc, #1024]	; 108d8 <DRV_Invoke+0xf8c>
   104d4:	mov	r1, #0
   104d8:	bl	f4d0 <DRV_Initialize>
   104dc:	mov	r3, r0
   104e0:	str	r3, [fp, #-240]	; 0xffffff10
   104e4:	ldr	r2, [fp, #-240]	; 0xffffff10
   104e8:	ldr	r3, [pc, #1032]	; 108f8 <DRV_Invoke+0xfac>
   104ec:	cmp	r2, r3
   104f0:	ble	10510 <DRV_Invoke+0xbc4>
   104f4:	ldr	r3, [fp, #-240]	; 0xffffff10
   104f8:	cmp	r3, #34048	; 0x8500
   104fc:	bgt	10510 <DRV_Invoke+0xbc4>
   10500:	ldr	r3, [pc, #980]	; 108dc <DRV_Invoke+0xf90>
   10504:	ldr	r3, [r3]
   10508:	mov	r0, r3
   1050c:	bl	11484 <DRV_installCleanupRoutines>
   10510:	ldr	r2, [fp, #-240]	; 0xffffff10
   10514:	ldr	r3, [pc, #988]	; 108f8 <DRV_Invoke+0xfac>
   10518:	cmp	r2, r3
   1051c:	ble	11044 <DRV_Invoke+0x16f8>
   10520:	ldr	r3, [fp, #-240]	; 0xffffff10
   10524:	cmp	r3, #34048	; 0x8500
   10528:	bgt	11044 <DRV_Invoke+0x16f8>
   1052c:	ldr	r3, [pc, #932]	; 108d8 <DRV_Invoke+0xf8c>
   10530:	ldr	r3, [r3]
   10534:	ldr	r3, [r3, #4]
   10538:	mov	r0, r3
   1053c:	ldr	r1, [fp, #-252]	; 0xffffff04
   10540:	ldr	r2, [fp, #-236]	; 0xffffff14
   10544:	bl	a0bc <ioctl@plt>
   10548:	mov	r3, r0
   1054c:	str	r3, [fp, #-232]	; 0xffffff18
   10550:	ldr	r3, [fp, #-232]	; 0xffffff18
   10554:	cmp	r3, #0
   10558:	bge	11044 <DRV_Invoke+0x16f8>
   1055c:	ldr	r3, [pc, #912]	; 108f4 <DRV_Invoke+0xfa8>
   10560:	str	r3, [fp, #-240]	; 0xffffff10
   10564:	b	11044 <DRV_Invoke+0x16f8>
   10568:	ldr	r3, [fp, #-248]	; 0xffffff08
   1056c:	cmp	r3, #0
   10570:	bne	10580 <DRV_Invoke+0xc34>
   10574:	ldr	r3, [pc, #896]	; 108fc <DRV_Invoke+0xfb0>
   10578:	str	r3, [fp, #-240]	; 0xffffff10
   1057c:	b	11044 <DRV_Invoke+0x16f8>
   10580:	ldr	r3, [fp, #-248]	; 0xffffff08
   10584:	ldr	r3, [r3, #4]
   10588:	mov	r0, r3
   1058c:	ldr	r1, [fp, #-252]	; 0xffffff04
   10590:	ldr	r2, [fp, #-236]	; 0xffffff14
   10594:	bl	a0bc <ioctl@plt>
   10598:	mov	r3, r0
   1059c:	str	r3, [fp, #-232]	; 0xffffff18
   105a0:	ldr	r3, [fp, #-232]	; 0xffffff18
   105a4:	cmp	r3, #0
   105a8:	bge	11044 <DRV_Invoke+0x16f8>
   105ac:	ldr	r3, [pc, #832]	; 108f4 <DRV_Invoke+0xfa8>
   105b0:	str	r3, [fp, #-240]	; 0xffffff10
   105b4:	b	11044 <DRV_Invoke+0x16f8>
   105b8:	ldr	r3, [fp, #-248]	; 0xffffff08
   105bc:	ldr	r3, [r3, #4]
   105c0:	mov	r0, r3
   105c4:	ldr	r1, [fp, #-252]	; 0xffffff04
   105c8:	ldr	r2, [fp, #-236]	; 0xffffff14
   105cc:	bl	a0bc <ioctl@plt>
   105d0:	mov	r3, r0
   105d4:	str	r3, [fp, #-232]	; 0xffffff18
   105d8:	ldr	r3, [fp, #-232]	; 0xffffff18
   105dc:	cmp	r3, #0
   105e0:	bge	105f0 <DRV_Invoke+0xca4>
   105e4:	ldr	r3, [pc, #776]	; 108f4 <DRV_Invoke+0xfa8>
   105e8:	str	r3, [fp, #-240]	; 0xffffff10
   105ec:	b	11044 <DRV_Invoke+0x16f8>
   105f0:	ldr	r3, [fp, #-236]	; 0xffffff14
   105f4:	ldr	r3, [r3, #8]
   105f8:	str	r3, [fp, #-264]	; 0xfffffef8
   105fc:	ldr	r3, [pc, #732]	; 108e0 <DRV_Invoke+0xf94>
   10600:	ldr	r2, [fp, #-264]	; 0xfffffef8
   10604:	cmp	r2, r3
   10608:	beq	10620 <DRV_Invoke+0xcd4>
   1060c:	ldr	r3, [pc, #720]	; 108e4 <DRV_Invoke+0xf98>
   10610:	ldr	r2, [fp, #-264]	; 0xfffffef8
   10614:	cmp	r2, r3
   10618:	beq	1072c <DRV_Invoke+0xde0>
   1061c:	b	11044 <DRV_Invoke+0x16f8>
   10620:	ldr	r3, [fp, #-236]	; 0xffffff14
   10624:	ldr	r3, [r3, #12]
   10628:	str	r3, [fp, #-96]	; 0xffffffa0
   1062c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   10630:	ldr	r3, [r3, #8]
   10634:	str	r3, [fp, #-104]	; 0xffffff98
   10638:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1063c:	ldr	r3, [r3, #12]
   10640:	str	r3, [fp, #-100]	; 0xffffff9c
   10644:	ldr	r3, [fp, #-248]	; 0xffffff08
   10648:	ldr	r3, [r3, #12]
   1064c:	mov	r2, r3
   10650:	ldr	r3, [fp, #-104]	; 0xffffff98
   10654:	mov	r0, r3
   10658:	mov	r1, r2
   1065c:	bl	a05c <__aeabi_uidivmod@plt>
   10660:	mov	r3, r1
   10664:	mov	r2, r3
   10668:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1066c:	add	r3, r3, r2
   10670:	str	r3, [fp, #-100]	; 0xffffff9c
   10674:	ldr	r3, [fp, #-248]	; 0xffffff08
   10678:	ldr	r3, [r3, #12]
   1067c:	mov	r2, r3
   10680:	ldr	r3, [fp, #-104]	; 0xffffff98
   10684:	mov	r0, r3
   10688:	mov	r1, r2
   1068c:	bl	a05c <__aeabi_uidivmod@plt>
   10690:	mov	r3, r1
   10694:	mov	r2, r3
   10698:	ldr	r3, [fp, #-104]	; 0xffffff98
   1069c:	rsb	r3, r2, r3
   106a0:	str	r3, [fp, #-104]	; 0xffffff98
   106a4:	ldr	r3, [fp, #-248]	; 0xffffff08
   106a8:	ldr	r3, [r3, #4]
   106ac:	ldr	r2, [fp, #-104]	; 0xffffff98
   106b0:	str	r3, [sp]
   106b4:	str	r2, [sp, #4]
   106b8:	mov	r0, #0
   106bc:	ldr	r1, [fp, #-100]	; 0xffffff9c
   106c0:	mov	r2, #3
   106c4:	mov	r3, #1
   106c8:	bl	9e88 <mmap@plt>
   106cc:	mov	r3, r0
   106d0:	str	r3, [fp, #-92]	; 0xffffffa4
   106d4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   106d8:	cmn	r3, #1
   106dc:	bne	106ec <DRV_Invoke+0xda0>
   106e0:	ldr	r3, [pc, #524]	; 108f4 <DRV_Invoke+0xfa8>
   106e4:	str	r3, [fp, #-240]	; 0xffffff10
   106e8:	b	11044 <DRV_Invoke+0x16f8>
   106ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   106f0:	ldr	r2, [r3, #8]
   106f4:	ldr	r3, [fp, #-248]	; 0xffffff08
   106f8:	ldr	r3, [r3, #12]
   106fc:	mov	r0, r2
   10700:	mov	r1, r3
   10704:	bl	a05c <__aeabi_uidivmod@plt>
   10708:	mov	r3, r1
   1070c:	mov	r2, r3
   10710:	ldr	r3, [fp, #-92]	; 0xffffffa4
   10714:	add	r3, r3, r2
   10718:	str	r3, [fp, #-92]	; 0xffffffa4
   1071c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   10720:	ldr	r3, [fp, #-92]	; 0xffffffa4
   10724:	str	r3, [r2, #8]
   10728:	b	11044 <DRV_Invoke+0x16f8>
   1072c:	ldr	r3, [fp, #-236]	; 0xffffff14
   10730:	ldr	r3, [r3, #12]
   10734:	str	r3, [fp, #-88]	; 0xffffffa8
   10738:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1073c:	ldr	r3, [r3, #8]
   10740:	str	r3, [fp, #-104]	; 0xffffff98
   10744:	ldr	r3, [fp, #-88]	; 0xffffffa8
   10748:	ldr	r3, [r3, #12]
   1074c:	str	r3, [fp, #-100]	; 0xffffff9c
   10750:	ldr	r3, [fp, #-248]	; 0xffffff08
   10754:	ldr	r3, [r3, #12]
   10758:	mov	r2, r3
   1075c:	ldr	r3, [fp, #-104]	; 0xffffff98
   10760:	mov	r0, r3
   10764:	mov	r1, r2
   10768:	bl	a05c <__aeabi_uidivmod@plt>
   1076c:	mov	r3, r1
   10770:	mov	r2, r3
   10774:	ldr	r3, [fp, #-100]	; 0xffffff9c
   10778:	add	r3, r3, r2
   1077c:	str	r3, [fp, #-100]	; 0xffffff9c
   10780:	ldr	r3, [fp, #-248]	; 0xffffff08
   10784:	ldr	r3, [r3, #12]
   10788:	mov	r2, r3
   1078c:	ldr	r3, [fp, #-104]	; 0xffffff98
   10790:	mov	r0, r3
   10794:	mov	r1, r2
   10798:	bl	a05c <__aeabi_uidivmod@plt>
   1079c:	mov	r3, r1
   107a0:	mov	r2, r3
   107a4:	ldr	r3, [fp, #-104]	; 0xffffff98
   107a8:	rsb	r3, r2, r3
   107ac:	str	r3, [fp, #-104]	; 0xffffff98
   107b0:	ldr	r3, [fp, #-104]	; 0xffffff98
   107b4:	mov	r0, r3
   107b8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   107bc:	bl	9f0c <munmap@plt>
   107c0:	b	11044 <DRV_Invoke+0x16f8>
   107c4:	ldr	r3, [fp, #-248]	; 0xffffff08
   107c8:	ldr	r3, [r3, #4]
   107cc:	mov	r0, r3
   107d0:	ldr	r1, [fp, #-252]	; 0xffffff04
   107d4:	ldr	r2, [fp, #-236]	; 0xffffff14
   107d8:	bl	a0bc <ioctl@plt>
   107dc:	mov	r3, r0
   107e0:	str	r3, [fp, #-232]	; 0xffffff18
   107e4:	ldr	r3, [fp, #-232]	; 0xffffff18
   107e8:	cmp	r3, #0
   107ec:	bge	107fc <DRV_Invoke+0xeb0>
   107f0:	ldr	r3, [pc, #252]	; 108f4 <DRV_Invoke+0xfa8>
   107f4:	str	r3, [fp, #-240]	; 0xffffff10
   107f8:	b	11044 <DRV_Invoke+0x16f8>
   107fc:	ldr	r3, [fp, #-236]	; 0xffffff14
   10800:	ldr	r2, [r3]
   10804:	ldr	r3, [pc, #236]	; 108f8 <DRV_Invoke+0xfac>
   10808:	cmp	r2, r3
   1080c:	ble	11044 <DRV_Invoke+0x16f8>
   10810:	ldr	r3, [fp, #-236]	; 0xffffff14
   10814:	ldr	r3, [r3]
   10818:	cmp	r3, #34048	; 0x8500
   1081c:	bgt	11044 <DRV_Invoke+0x16f8>
   10820:	ldr	r3, [fp, #-236]	; 0xffffff14
   10824:	ldrh	r2, [r3, #4]
   10828:	ldr	r3, [fp, #-236]	; 0xffffff14
   1082c:	ldr	r3, [r3, #12]
   10830:	mov	r0, r2
   10834:	mov	r1, r3
   10838:	mov	r2, #2
   1083c:	bl	1756c <_POOL_xltBuf>
   10840:	mov	r3, r0
   10844:	str	r3, [fp, #-240]	; 0xffffff10
   10848:	b	11044 <DRV_Invoke+0x16f8>
   1084c:	ldr	r3, [fp, #-236]	; 0xffffff14
   10850:	ldrh	r2, [r3, #4]
   10854:	ldr	r3, [fp, #-236]	; 0xffffff14
   10858:	add	r3, r3, #12
   1085c:	mov	r0, r2
   10860:	mov	r1, r3
   10864:	mov	r2, #512	; 0x200
   10868:	bl	1756c <_POOL_xltBuf>
   1086c:	mov	r3, r0
   10870:	str	r3, [fp, #-240]	; 0xffffff10
   10874:	ldr	r2, [fp, #-240]	; 0xffffff10
   10878:	ldr	r3, [pc, #120]	; 108f8 <DRV_Invoke+0xfac>
   1087c:	cmp	r2, r3
   10880:	ble	11044 <DRV_Invoke+0x16f8>
   10884:	ldr	r3, [fp, #-240]	; 0xffffff10
   10888:	cmp	r3, #34048	; 0x8500
   1088c:	bgt	11044 <DRV_Invoke+0x16f8>
   10890:	ldr	r3, [fp, #-248]	; 0xffffff08
   10894:	ldr	r3, [r3, #4]
   10898:	mov	r0, r3
   1089c:	ldr	r1, [fp, #-252]	; 0xffffff04
   108a0:	ldr	r2, [fp, #-236]	; 0xffffff14
   108a4:	bl	a0bc <ioctl@plt>
   108a8:	mov	r3, r0
   108ac:	str	r3, [fp, #-232]	; 0xffffff18
   108b0:	ldr	r3, [fp, #-232]	; 0xffffff18
   108b4:	cmp	r3, #0
   108b8:	bge	11044 <DRV_Invoke+0x16f8>
   108bc:	ldr	r3, [pc, #48]	; 108f4 <DRV_Invoke+0xfa8>
   108c0:	str	r3, [fp, #-240]	; 0xffffff10
   108c4:	b	11044 <DRV_Invoke+0x16f8>
   108c8:	.word	0x5f4b5244
   108cc:	.word	0xc018e018
   108d0:	.word	0x3fe71fef
   108d4:	.word	0x0002d3e0
   108d8:	.word	0x0002d3ec
   108dc:	.word	0x0002d3f0
   108e0:	.word	0x00000101
   108e4:	.word	0x00000102
   108e8:	.word	0x8000802d
   108ec:	.word	0x0002d7f0
   108f0:	.word	0x8000800b
   108f4:	.word	0x80008008
   108f8:	.word	0x00007fff
   108fc:	.word	0x80008002
   10900:	ldr	r2, [fp, #-236]	; 0xffffff14
   10904:	mov	r3, #32768	; 0x8000
   10908:	str	r3, [r2]
   1090c:	ldr	r3, [fp, #-236]	; 0xffffff14
   10910:	ldr	r2, [r3, #20]
   10914:	ldr	r3, [fp, #-236]	; 0xffffff14
   10918:	ldr	r3, [r3, #12]
   1091c:	lsl	r3, r3, #8
   10920:	orr	r3, r2, r3
   10924:	str	r3, [fp, #-84]	; 0xffffffac
   10928:	ldr	r3, [fp, #-236]	; 0xffffff14
   1092c:	ldr	r2, [r3, #8]
   10930:	ldr	r3, [fp, #-236]	; 0xffffff14
   10934:	ldr	r3, [r3, #16]
   10938:	str	r3, [r2]
   1093c:	ldr	r3, [fp, #-236]	; 0xffffff14
   10940:	ldrh	r2, [r3, #4]
   10944:	ldr	r3, [fp, #-236]	; 0xffffff14
   10948:	ldr	r3, [r3, #8]
   1094c:	mov	r0, r2
   10950:	mov	r1, r3
   10954:	ldr	r2, [fp, #-84]	; 0xffffffac
   10958:	bl	1756c <_POOL_xltBuf>
   1095c:	mov	r3, r0
   10960:	str	r3, [fp, #-240]	; 0xffffff10
   10964:	ldr	r2, [fp, #-240]	; 0xffffff10
   10968:	ldr	r3, [pc, #-120]	; 108f8 <DRV_Invoke+0xfac>
   1096c:	cmp	r2, r3
   10970:	ble	11044 <DRV_Invoke+0x16f8>
   10974:	ldr	r3, [fp, #-240]	; 0xffffff10
   10978:	cmp	r3, #34048	; 0x8500
   1097c:	bgt	11044 <DRV_Invoke+0x16f8>
   10980:	ldr	r3, [fp, #-236]	; 0xffffff14
   10984:	ldr	r3, [r3, #8]
   10988:	ldr	r3, [r3]
   1098c:	cmp	r3, #0
   10990:	bne	11044 <DRV_Invoke+0x16f8>
   10994:	ldr	r3, [pc, #-180]	; 108e8 <DRV_Invoke+0xf9c>
   10998:	str	r3, [fp, #-240]	; 0xffffff10
   1099c:	b	11044 <DRV_Invoke+0x16f8>
   109a0:	ldr	r3, [fp, #-248]	; 0xffffff08
   109a4:	ldr	r3, [r3, #4]
   109a8:	mov	r0, r3
   109ac:	ldr	r1, [fp, #-252]	; 0xffffff04
   109b0:	ldr	r2, [fp, #-236]	; 0xffffff14
   109b4:	bl	a0bc <ioctl@plt>
   109b8:	mov	r3, r0
   109bc:	str	r3, [fp, #-232]	; 0xffffff18
   109c0:	ldr	r3, [fp, #-232]	; 0xffffff18
   109c4:	cmp	r3, #0
   109c8:	blt	109f0 <DRV_Invoke+0x10a4>
   109cc:	ldr	r3, [fp, #-236]	; 0xffffff14
   109d0:	ldr	r2, [r3]
   109d4:	ldr	r3, [pc, #-228]	; 108f8 <DRV_Invoke+0xfac>
   109d8:	cmp	r2, r3
   109dc:	ble	109f0 <DRV_Invoke+0x10a4>
   109e0:	ldr	r3, [fp, #-236]	; 0xffffff14
   109e4:	ldr	r3, [r3]
   109e8:	cmp	r3, #34048	; 0x8500
   109ec:	ble	10a08 <DRV_Invoke+0x10bc>
   109f0:	ldr	r3, [fp, #-232]	; 0xffffff18
   109f4:	cmp	r3, #0
   109f8:	bge	11044 <DRV_Invoke+0x16f8>
   109fc:	ldr	r3, [pc, #-272]	; 108f4 <DRV_Invoke+0xfa8>
   10a00:	str	r3, [fp, #-240]	; 0xffffff10
   10a04:	b	11044 <DRV_Invoke+0x16f8>
   10a08:	ldr	r3, [fp, #-236]	; 0xffffff14
   10a0c:	ldr	r3, [r3, #8]
   10a10:	str	r3, [fp, #-80]	; 0xffffffb0
   10a14:	ldr	r3, [fp, #-80]	; 0xffffffb0
   10a18:	ldr	r3, [r3, #16]
   10a1c:	str	r3, [fp, #-72]	; 0xffffffb8
   10a20:	ldr	r3, [fp, #-80]	; 0xffffffb0
   10a24:	ldr	r3, [r3, #4]
   10a28:	str	r3, [fp, #-76]	; 0xffffffb4
   10a2c:	ldr	r3, [fp, #-248]	; 0xffffff08
   10a30:	ldr	r3, [r3, #12]
   10a34:	mov	r2, r3
   10a38:	ldr	r3, [fp, #-76]	; 0xffffffb4
   10a3c:	mov	r0, r3
   10a40:	mov	r1, r2
   10a44:	bl	a05c <__aeabi_uidivmod@plt>
   10a48:	mov	r3, r1
   10a4c:	mov	r2, r3
   10a50:	ldr	r3, [fp, #-72]	; 0xffffffb8
   10a54:	add	r3, r3, r2
   10a58:	str	r3, [fp, #-72]	; 0xffffffb8
   10a5c:	ldr	r3, [fp, #-248]	; 0xffffff08
   10a60:	ldr	r3, [r3, #12]
   10a64:	mov	r2, r3
   10a68:	ldr	r3, [fp, #-76]	; 0xffffffb4
   10a6c:	mov	r0, r3
   10a70:	mov	r1, r2
   10a74:	bl	a05c <__aeabi_uidivmod@plt>
   10a78:	mov	r3, r1
   10a7c:	mov	r2, r3
   10a80:	ldr	r3, [fp, #-76]	; 0xffffffb4
   10a84:	rsb	r3, r2, r3
   10a88:	str	r3, [fp, #-76]	; 0xffffffb4
   10a8c:	ldr	r3, [fp, #-248]	; 0xffffff08
   10a90:	ldr	r3, [r3, #4]
   10a94:	ldr	r2, [fp, #-76]	; 0xffffffb4
   10a98:	str	r3, [sp]
   10a9c:	str	r2, [sp, #4]
   10aa0:	mov	r0, #0
   10aa4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   10aa8:	mov	r2, #3
   10aac:	mov	r3, #1
   10ab0:	bl	9e88 <mmap@plt>
   10ab4:	mov	r3, r0
   10ab8:	str	r3, [fp, #-68]	; 0xffffffbc
   10abc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10ac0:	cmn	r3, #1
   10ac4:	bne	10ad4 <DRV_Invoke+0x1188>
   10ac8:	ldr	r3, [pc, #-476]	; 108f4 <DRV_Invoke+0xfa8>
   10acc:	str	r3, [fp, #-240]	; 0xffffff10
   10ad0:	b	11044 <DRV_Invoke+0x16f8>
   10ad4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   10ad8:	ldr	r2, [r3, #4]
   10adc:	ldr	r3, [fp, #-248]	; 0xffffff08
   10ae0:	ldr	r3, [r3, #12]
   10ae4:	mov	r0, r2
   10ae8:	mov	r1, r3
   10aec:	bl	a05c <__aeabi_uidivmod@plt>
   10af0:	mov	r3, r1
   10af4:	mov	r2, r3
   10af8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10afc:	add	r3, r3, r2
   10b00:	str	r3, [fp, #-68]	; 0xffffffbc
   10b04:	ldr	r3, [fp, #-236]	; 0xffffff14
   10b08:	ldrh	r3, [r3, #4]
   10b0c:	lsr	r3, r3, #8
   10b10:	lsl	r3, r3, #16
   10b14:	lsr	r3, r3, #16
   10b18:	str	r3, [fp, #-60]	; 0xffffffc4
   10b1c:	ldr	r3, [fp, #-236]	; 0xffffff14
   10b20:	ldrh	r3, [r3, #4]
   10b24:	strb	r3, [fp, #-61]	; 0xffffffc3
   10b28:	ldr	r0, [pc, #-580]	; 108ec <DRV_Invoke+0xfa0>
   10b2c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   10b30:	mov	r3, r2
   10b34:	lsl	r3, r3, #1
   10b38:	add	r3, r3, r2
   10b3c:	lsl	r3, r3, #8
   10b40:	mov	r1, r3
   10b44:	ldrb	r2, [fp, #-61]	; 0xffffffc3
   10b48:	mov	r3, r2
   10b4c:	lsl	r3, r3, #1
   10b50:	add	r3, r3, r2
   10b54:	lsl	r3, r3, #3
   10b58:	add	r3, r1, r3
   10b5c:	add	r3, r0, r3
   10b60:	str	r3, [fp, #-56]	; 0xffffffc8
   10b64:	ldr	r2, [fp, #-56]	; 0xffffffc8
   10b68:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10b6c:	str	r3, [r2, #4]
   10b70:	ldr	r3, [fp, #-80]	; 0xffffffb0
   10b74:	ldr	r2, [r3, #4]
   10b78:	ldr	r3, [fp, #-56]	; 0xffffffc8
   10b7c:	str	r2, [r3, #8]
   10b80:	ldr	r3, [fp, #-80]	; 0xffffffb0
   10b84:	ldr	r2, [r3, #8]
   10b88:	ldr	r3, [fp, #-56]	; 0xffffffc8
   10b8c:	str	r2, [r3, #12]
   10b90:	ldr	r3, [fp, #-80]	; 0xffffffb0
   10b94:	ldr	r2, [r3, #12]
   10b98:	ldr	r3, [fp, #-56]	; 0xffffffc8
   10b9c:	str	r2, [r3, #16]
   10ba0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   10ba4:	ldr	r2, [r3, #16]
   10ba8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   10bac:	str	r2, [r3, #20]
   10bb0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   10bb4:	mov	r3, #1
   10bb8:	strh	r3, [r2]
   10bbc:	b	11044 <DRV_Invoke+0x16f8>
   10bc0:	ldr	r3, [fp, #-236]	; 0xffffff14
   10bc4:	ldrh	r3, [r3, #4]
   10bc8:	lsr	r3, r3, #8
   10bcc:	lsl	r3, r3, #16
   10bd0:	lsr	r3, r3, #16
   10bd4:	str	r3, [fp, #-40]	; 0xffffffd8
   10bd8:	ldr	r3, [fp, #-236]	; 0xffffff14
   10bdc:	ldrh	r3, [r3, #4]
   10be0:	strb	r3, [fp, #-41]	; 0xffffffd7
   10be4:	ldr	r0, [pc, #-768]	; 108ec <DRV_Invoke+0xfa0>
   10be8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10bec:	mov	r3, r2
   10bf0:	lsl	r3, r3, #1
   10bf4:	add	r3, r3, r2
   10bf8:	lsl	r3, r3, #8
   10bfc:	mov	r1, r3
   10c00:	ldrb	r2, [fp, #-41]	; 0xffffffd7
   10c04:	mov	r3, r2
   10c08:	lsl	r3, r3, #1
   10c0c:	add	r3, r3, r2
   10c10:	lsl	r3, r3, #3
   10c14:	add	r3, r1, r3
   10c18:	add	r3, r0, r3
   10c1c:	str	r3, [fp, #-36]	; 0xffffffdc
   10c20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10c24:	ldr	r3, [r3, #4]
   10c28:	cmp	r3, #0
   10c2c:	bne	10c3c <DRV_Invoke+0x12f0>
   10c30:	ldr	r3, [pc, #-840]	; 108f0 <DRV_Invoke+0xfa4>
   10c34:	str	r3, [fp, #-240]	; 0xffffff10
   10c38:	b	11044 <DRV_Invoke+0x16f8>
   10c3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10c40:	ldr	r3, [r3, #4]
   10c44:	str	r3, [fp, #-52]	; 0xffffffcc
   10c48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10c4c:	ldr	r3, [r3, #20]
   10c50:	str	r3, [fp, #-48]	; 0xffffffd0
   10c54:	ldr	r3, [fp, #-248]	; 0xffffff08
   10c58:	ldr	r3, [r3, #12]
   10c5c:	mov	r2, r3
   10c60:	ldr	r3, [fp, #-52]	; 0xffffffcc
   10c64:	mov	r0, r3
   10c68:	mov	r1, r2
   10c6c:	bl	a05c <__aeabi_uidivmod@plt>
   10c70:	mov	r3, r1
   10c74:	mov	r2, r3
   10c78:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10c7c:	add	r3, r3, r2
   10c80:	str	r3, [fp, #-48]	; 0xffffffd0
   10c84:	ldr	r3, [fp, #-248]	; 0xffffff08
   10c88:	ldr	r3, [r3, #12]
   10c8c:	mov	r2, r3
   10c90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   10c94:	mov	r0, r3
   10c98:	mov	r1, r2
   10c9c:	bl	a05c <__aeabi_uidivmod@plt>
   10ca0:	mov	r3, r1
   10ca4:	mov	r2, r3
   10ca8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   10cac:	rsb	r3, r2, r3
   10cb0:	str	r3, [fp, #-52]	; 0xffffffcc
   10cb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   10cb8:	mov	r0, r3
   10cbc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   10cc0:	bl	9f0c <munmap@plt>
   10cc4:	ldr	r3, [fp, #-248]	; 0xffffff08
   10cc8:	ldr	r3, [r3, #4]
   10ccc:	mov	r0, r3
   10cd0:	ldr	r1, [fp, #-252]	; 0xffffff04
   10cd4:	ldr	r2, [fp, #-236]	; 0xffffff14
   10cd8:	bl	a0bc <ioctl@plt>
   10cdc:	mov	r3, r0
   10ce0:	str	r3, [fp, #-232]	; 0xffffff18
   10ce4:	ldr	r3, [fp, #-232]	; 0xffffff18
   10ce8:	cmp	r3, #0
   10cec:	bge	10cfc <DRV_Invoke+0x13b0>
   10cf0:	ldr	r3, [pc, #-1028]	; 108f4 <DRV_Invoke+0xfa8>
   10cf4:	str	r3, [fp, #-240]	; 0xffffff10
   10cf8:	b	11044 <DRV_Invoke+0x16f8>
   10cfc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10d00:	mov	r3, #0
   10d04:	str	r3, [r2, #4]
   10d08:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10d0c:	mov	r3, #0
   10d10:	str	r3, [r2, #8]
   10d14:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10d18:	mov	r3, #0
   10d1c:	str	r3, [r2, #12]
   10d20:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10d24:	mov	r3, #0
   10d28:	str	r3, [r2, #16]
   10d2c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10d30:	mvn	r3, #0
   10d34:	str	r3, [r2, #20]
   10d38:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10d3c:	mov	r3, #0
   10d40:	strh	r3, [r2]
   10d44:	b	11044 <DRV_Invoke+0x16f8>
   10d48:	ldr	r3, [fp, #-236]	; 0xffffff14
   10d4c:	ldrh	r2, [r3, #4]
   10d50:	ldr	r3, [fp, #-236]	; 0xffffff14
   10d54:	add	r3, r3, #12
   10d58:	mov	r0, r2
   10d5c:	mov	r1, r3
   10d60:	mov	r2, #512	; 0x200
   10d64:	bl	1756c <_POOL_xltBuf>
   10d68:	ldr	r3, [fp, #-248]	; 0xffffff08
   10d6c:	ldr	r3, [r3, #4]
   10d70:	mov	r0, r3
   10d74:	ldr	r1, [fp, #-252]	; 0xffffff04
   10d78:	ldr	r2, [fp, #-236]	; 0xffffff14
   10d7c:	bl	a0bc <ioctl@plt>
   10d80:	mov	r3, r0
   10d84:	str	r3, [fp, #-232]	; 0xffffff18
   10d88:	ldr	r3, [fp, #-232]	; 0xffffff18
   10d8c:	cmp	r3, #0
   10d90:	bge	11044 <DRV_Invoke+0x16f8>
   10d94:	ldr	r3, [pc, #-1192]	; 108f4 <DRV_Invoke+0xfa8>
   10d98:	str	r3, [fp, #-240]	; 0xffffff10
   10d9c:	b	11044 <DRV_Invoke+0x16f8>
   10da0:	ldr	r3, [fp, #-236]	; 0xffffff14
   10da4:	ldrh	r2, [r3, #4]
   10da8:	ldr	r3, [fp, #-236]	; 0xffffff14
   10dac:	add	r3, r3, #12
   10db0:	mov	r0, r2
   10db4:	mov	r1, r3
   10db8:	mov	r2, #512	; 0x200
   10dbc:	bl	1756c <_POOL_xltBuf>
   10dc0:	ldr	r3, [fp, #-248]	; 0xffffff08
   10dc4:	ldr	r3, [r3, #4]
   10dc8:	mov	r0, r3
   10dcc:	ldr	r1, [fp, #-252]	; 0xffffff04
   10dd0:	ldr	r2, [fp, #-236]	; 0xffffff14
   10dd4:	bl	a0bc <ioctl@plt>
   10dd8:	mov	r3, r0
   10ddc:	str	r3, [fp, #-232]	; 0xffffff18
   10de0:	ldr	r3, [fp, #-232]	; 0xffffff18
   10de4:	cmp	r3, #0
   10de8:	bge	11044 <DRV_Invoke+0x16f8>
   10dec:	ldr	r3, [pc, #-1280]	; 108f4 <DRV_Invoke+0xfa8>
   10df0:	str	r3, [fp, #-240]	; 0xffffff10
   10df4:	b	11044 <DRV_Invoke+0x16f8>
   10df8:	ldr	r3, [fp, #-248]	; 0xffffff08
   10dfc:	ldr	r3, [r3, #4]
   10e00:	mov	r0, r3
   10e04:	ldr	r1, [fp, #-252]	; 0xffffff04
   10e08:	ldr	r2, [fp, #-236]	; 0xffffff14
   10e0c:	bl	a0bc <ioctl@plt>
   10e10:	mov	r3, r0
   10e14:	str	r3, [fp, #-232]	; 0xffffff18
   10e18:	ldr	r3, [fp, #-232]	; 0xffffff18
   10e1c:	cmp	r3, #0
   10e20:	bge	10e30 <DRV_Invoke+0x14e4>
   10e24:	ldr	r3, [pc, #-1336]	; 108f4 <DRV_Invoke+0xfa8>
   10e28:	str	r3, [fp, #-240]	; 0xffffff10
   10e2c:	b	11044 <DRV_Invoke+0x16f8>
   10e30:	ldr	r3, [fp, #-236]	; 0xffffff14
   10e34:	add	r3, r3, #4
   10e38:	str	r3, [fp, #-32]	; 0xffffffe0
   10e3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10e40:	ldr	r3, [r3, #16]
   10e44:	str	r3, [fp, #-20]	; 0xffffffec
   10e48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10e4c:	ldr	r3, [r3, #4]
   10e50:	str	r3, [fp, #-24]	; 0xffffffe8
   10e54:	ldr	r3, [fp, #-248]	; 0xffffff08
   10e58:	ldr	r3, [r3, #12]
   10e5c:	mov	r2, r3
   10e60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10e64:	mov	r0, r3
   10e68:	mov	r1, r2
   10e6c:	bl	a05c <__aeabi_uidivmod@plt>
   10e70:	mov	r3, r1
   10e74:	mov	r2, r3
   10e78:	ldr	r3, [fp, #-20]	; 0xffffffec
   10e7c:	add	r3, r3, r2
   10e80:	str	r3, [fp, #-20]	; 0xffffffec
   10e84:	ldr	r3, [fp, #-248]	; 0xffffff08
   10e88:	ldr	r3, [r3, #12]
   10e8c:	mov	r2, r3
   10e90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10e94:	mov	r0, r3
   10e98:	mov	r1, r2
   10e9c:	bl	a05c <__aeabi_uidivmod@plt>
   10ea0:	mov	r3, r1
   10ea4:	mov	r2, r3
   10ea8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10eac:	rsb	r3, r2, r3
   10eb0:	str	r3, [fp, #-24]	; 0xffffffe8
   10eb4:	ldr	r3, [fp, #-248]	; 0xffffff08
   10eb8:	ldr	r3, [r3, #4]
   10ebc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10ec0:	str	r3, [sp]
   10ec4:	str	r2, [sp, #4]
   10ec8:	mov	r0, #0
   10ecc:	ldr	r1, [fp, #-20]	; 0xffffffec
   10ed0:	mov	r2, #3
   10ed4:	mov	r3, #1
   10ed8:	bl	9e88 <mmap@plt>
   10edc:	mov	r3, r0
   10ee0:	str	r3, [fp, #-28]	; 0xffffffe4
   10ee4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10ee8:	cmn	r3, #1
   10eec:	bne	10efc <DRV_Invoke+0x15b0>
   10ef0:	ldr	r3, [pc, #-1540]	; 108f4 <DRV_Invoke+0xfa8>
   10ef4:	str	r3, [fp, #-240]	; 0xffffff10
   10ef8:	b	11044 <DRV_Invoke+0x16f8>
   10efc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10f00:	ldr	r2, [r3, #4]
   10f04:	ldr	r3, [fp, #-248]	; 0xffffff08
   10f08:	ldr	r3, [r3, #12]
   10f0c:	mov	r0, r2
   10f10:	mov	r1, r3
   10f14:	bl	a05c <__aeabi_uidivmod@plt>
   10f18:	mov	r3, r1
   10f1c:	mov	r2, r3
   10f20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f24:	add	r2, r2, r3
   10f28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10f2c:	str	r2, [r3, #12]
   10f30:	b	11044 <DRV_Invoke+0x16f8>
   10f34:	ldr	r3, [fp, #-236]	; 0xffffff14
   10f38:	add	r3, r3, #4
   10f3c:	str	r3, [fp, #-16]
   10f40:	ldr	r3, [fp, #-16]
   10f44:	ldr	r3, [r3, #12]
   10f48:	str	r3, [fp, #-12]
   10f4c:	ldr	r3, [fp, #-16]
   10f50:	ldr	r3, [r3, #16]
   10f54:	str	r3, [fp, #-8]
   10f58:	ldr	r3, [fp, #-248]	; 0xffffff08
   10f5c:	ldr	r3, [r3, #12]
   10f60:	mov	r2, r3
   10f64:	ldr	r3, [fp, #-12]
   10f68:	mov	r0, r3
   10f6c:	mov	r1, r2
   10f70:	bl	a05c <__aeabi_uidivmod@plt>
   10f74:	mov	r3, r1
   10f78:	mov	r2, r3
   10f7c:	ldr	r3, [fp, #-8]
   10f80:	add	r3, r3, r2
   10f84:	str	r3, [fp, #-8]
   10f88:	ldr	r3, [fp, #-248]	; 0xffffff08
   10f8c:	ldr	r3, [r3, #12]
   10f90:	mov	r2, r3
   10f94:	ldr	r3, [fp, #-12]
   10f98:	mov	r0, r3
   10f9c:	mov	r1, r2
   10fa0:	bl	a05c <__aeabi_uidivmod@plt>
   10fa4:	mov	r3, r1
   10fa8:	mov	r2, r3
   10fac:	ldr	r3, [fp, #-12]
   10fb0:	rsb	r3, r2, r3
   10fb4:	str	r3, [fp, #-12]
   10fb8:	ldr	r3, [fp, #-12]
   10fbc:	mov	r0, r3
   10fc0:	ldr	r1, [fp, #-8]
   10fc4:	bl	9f0c <munmap@plt>
   10fc8:	ldr	r2, [fp, #-236]	; 0xffffff14
   10fcc:	mov	r3, #32768	; 0x8000
   10fd0:	str	r3, [r2]
   10fd4:	b	11044 <DRV_Invoke+0x16f8>
   10fd8:	ldr	r3, [fp, #-248]	; 0xffffff08
   10fdc:	ldr	r3, [r3, #4]
   10fe0:	mov	r0, r3
   10fe4:	ldr	r1, [fp, #-252]	; 0xffffff04
   10fe8:	ldr	r2, [fp, #-236]	; 0xffffff14
   10fec:	bl	a0bc <ioctl@plt>
   10ff0:	mov	r3, r0
   10ff4:	str	r3, [fp, #-232]	; 0xffffff18
   10ff8:	ldr	r3, [fp, #-232]	; 0xffffff18
   10ffc:	cmp	r3, #0
   11000:	bge	11044 <DRV_Invoke+0x16f8>
   11004:	ldr	r3, [pc, #-1816]	; 108f4 <DRV_Invoke+0xfa8>
   11008:	str	r3, [fp, #-240]	; 0xffffff10
   1100c:	b	11044 <DRV_Invoke+0x16f8>
   11010:	ldr	r3, [fp, #-248]	; 0xffffff08
   11014:	ldr	r3, [r3, #4]
   11018:	mov	r0, r3
   1101c:	ldr	r1, [fp, #-252]	; 0xffffff04
   11020:	ldr	r2, [fp, #-236]	; 0xffffff14
   11024:	bl	a0bc <ioctl@plt>
   11028:	mov	r3, r0
   1102c:	str	r3, [fp, #-232]	; 0xffffff18
   11030:	ldr	r3, [fp, #-232]	; 0xffffff18
   11034:	cmp	r3, #0
   11038:	bge	11044 <DRV_Invoke+0x16f8>
   1103c:	ldr	r3, [pc, #-1872]	; 108f4 <DRV_Invoke+0xfa8>
   11040:	str	r3, [fp, #-240]	; 0xffffff10
   11044:	ldr	r2, [fp, #-240]	; 0xffffff10
   11048:	ldr	r3, [pc, #-1880]	; 108f8 <DRV_Invoke+0xfac>
   1104c:	cmp	r2, r3
   11050:	ble	11078 <DRV_Invoke+0x172c>
   11054:	ldr	r3, [fp, #-240]	; 0xffffff10
   11058:	cmp	r3, #34048	; 0x8500
   1105c:	bgt	11078 <DRV_Invoke+0x172c>
   11060:	ldr	r3, [fp, #-236]	; 0xffffff14
   11064:	ldr	r3, [r3]
   11068:	str	r3, [fp, #-240]	; 0xffffff10
   1106c:	b	11078 <DRV_Invoke+0x172c>
   11070:	ldr	r3, [pc, #-1916]	; 108fc <DRV_Invoke+0xfb0>
   11074:	str	r3, [fp, #-240]	; 0xffffff10
   11078:	ldr	r3, [fp, #-240]	; 0xffffff10
   1107c:	mov	r0, r3
   11080:	sub	sp, fp, #4
   11084:	pop	{fp, pc}

00011088 <DRV_ProtectInit>:
   11088:	push	{fp, lr}
   1108c:	add	fp, sp, #4
   11090:	sub	sp, sp, #16
   11094:	str	r0, [fp, #-16]
   11098:	mov	r3, #32768	; 0x8000
   1109c:	str	r3, [fp, #-12]
   110a0:	ldr	r3, [fp, #-16]
   110a4:	cmp	r3, #0
   110a8:	beq	11198 <DRV_ProtectInit+0x110>
   110ac:	ldr	r3, [fp, #-16]
   110b0:	ldr	r2, [r3]
   110b4:	ldr	r3, [pc, #244]	; 111b0 <DRV_ProtectInit+0x128>
   110b8:	cmp	r2, r3
   110bc:	bne	11198 <DRV_ProtectInit+0x110>
   110c0:	ldr	r0, [pc, #236]	; 111b4 <DRV_ProtectInit+0x12c>
   110c4:	mov	r1, #100	; 0x64
   110c8:	bl	a050 <ftok@plt>
   110cc:	mov	r3, r0
   110d0:	str	r3, [fp, #-8]
   110d4:	ldr	r3, [fp, #-8]
   110d8:	cmn	r3, #1
   110dc:	bne	110ec <DRV_ProtectInit+0x64>
   110e0:	ldr	r3, [pc, #208]	; 111b8 <DRV_ProtectInit+0x130>
   110e4:	str	r3, [fp, #-12]
   110e8:	b	111a0 <DRV_ProtectInit+0x118>
   110ec:	ldr	r0, [fp, #-8]
   110f0:	mov	r1, #1
   110f4:	ldr	r2, [pc, #192]	; 111bc <DRV_ProtectInit+0x134>
   110f8:	bl	a0a4 <semget@plt>
   110fc:	mov	r2, r0
   11100:	ldr	r3, [pc, #184]	; 111c0 <DRV_ProtectInit+0x138>
   11104:	str	r2, [r3]
   11108:	ldr	r3, [pc, #176]	; 111c0 <DRV_ProtectInit+0x138>
   1110c:	ldr	r3, [r3]
   11110:	cmn	r3, #1
   11114:	bne	11164 <DRV_ProtectInit+0xdc>
   11118:	bl	9d38 <__errno_location@plt>
   1111c:	mov	r3, r0
   11120:	ldr	r3, [r3]
   11124:	cmp	r3, #17
   11128:	bne	11158 <DRV_ProtectInit+0xd0>
   1112c:	ldr	r0, [fp, #-8]
   11130:	mov	r1, #0
   11134:	mov	r2, #0
   11138:	bl	a0a4 <semget@plt>
   1113c:	mov	r2, r0
   11140:	ldr	r3, [pc, #120]	; 111c0 <DRV_ProtectInit+0x138>
   11144:	str	r2, [r3]
   11148:	ldr	r2, [pc, #112]	; 111c0 <DRV_ProtectInit+0x138>
   1114c:	mov	r3, #0
   11150:	strh	r3, [r2, #4]
   11154:	b	111a0 <DRV_ProtectInit+0x118>
   11158:	ldr	r3, [pc, #88]	; 111b8 <DRV_ProtectInit+0x130>
   1115c:	str	r3, [fp, #-12]
   11160:	b	111a0 <DRV_ProtectInit+0x118>
   11164:	ldr	r3, [pc, #84]	; 111c0 <DRV_ProtectInit+0x138>
   11168:	ldr	r3, [r3]
   1116c:	mov	r0, r3
   11170:	mov	r1, #0
   11174:	mov	r2, #16
   11178:	mov	r3, #1
   1117c:	bl	9d74 <semctl@plt>
   11180:	mov	r3, r0
   11184:	cmn	r3, #1
   11188:	bne	111a0 <DRV_ProtectInit+0x118>
   1118c:	ldr	r3, [pc, #36]	; 111b8 <DRV_ProtectInit+0x130>
   11190:	str	r3, [fp, #-12]
   11194:	b	111a0 <DRV_ProtectInit+0x118>
   11198:	ldr	r3, [pc, #36]	; 111c4 <DRV_ProtectInit+0x13c>
   1119c:	str	r3, [fp, #-12]
   111a0:	ldr	r3, [fp, #-12]
   111a4:	mov	r0, r3
   111a8:	sub	sp, fp, #4
   111ac:	pop	{fp, pc}
   111b0:	.word	0x5f4b5244
   111b4:	.word	0x000237d0
   111b8:	.word	0x80008008
   111bc:	.word	0x000007b6
   111c0:	.word	0x0002d3e4
   111c4:	.word	0x80008012

000111c8 <DRV_ProtectExit>:
   111c8:	push	{fp, lr}
   111cc:	add	fp, sp, #4
   111d0:	sub	sp, sp, #16
   111d4:	str	r0, [fp, #-16]
   111d8:	mov	r3, #32768	; 0x8000
   111dc:	str	r3, [fp, #-8]
   111e0:	ldr	r3, [fp, #-16]
   111e4:	cmp	r3, #0
   111e8:	beq	11234 <DRV_ProtectExit+0x6c>
   111ec:	ldr	r3, [fp, #-16]
   111f0:	ldr	r2, [r3]
   111f4:	ldr	r3, [pc, #80]	; 1124c <DRV_ProtectExit+0x84>
   111f8:	cmp	r2, r3
   111fc:	bne	11234 <DRV_ProtectExit+0x6c>
   11200:	ldr	r3, [pc, #72]	; 11250 <DRV_ProtectExit+0x88>
   11204:	ldr	r3, [r3]
   11208:	mov	r0, r3
   1120c:	mov	r1, #0
   11210:	mov	r2, #0
   11214:	mov	r3, #0
   11218:	bl	9d74 <semctl@plt>
   1121c:	mov	r3, r0
   11220:	cmn	r3, #1
   11224:	bne	1123c <DRV_ProtectExit+0x74>
   11228:	ldr	r3, [pc, #36]	; 11254 <DRV_ProtectExit+0x8c>
   1122c:	str	r3, [fp, #-8]
   11230:	b	1123c <DRV_ProtectExit+0x74>
   11234:	ldr	r3, [pc, #28]	; 11258 <DRV_ProtectExit+0x90>
   11238:	str	r3, [fp, #-8]
   1123c:	ldr	r3, [fp, #-8]
   11240:	mov	r0, r3
   11244:	sub	sp, fp, #4
   11248:	pop	{fp, pc}
   1124c:	.word	0x5f4b5244
   11250:	.word	0x0002d3e4
   11254:	.word	0x80008008
   11258:	.word	0x80008012

0001125c <DRV_ProtectEnter>:
   1125c:	push	{fp, lr}
   11260:	add	fp, sp, #4
   11264:	sub	sp, sp, #24
   11268:	str	r0, [fp, #-24]	; 0xffffffe8
   1126c:	mov	r3, #32768	; 0x8000
   11270:	str	r3, [fp, #-8]
   11274:	ldr	r3, [pc, #220]	; 11358 <DRV_ProtectEnter+0xfc>
   11278:	sub	r2, fp, #14
   1127c:	mov	ip, #6
   11280:	mov	r0, r2
   11284:	mov	r1, r3
   11288:	mov	r2, ip
   1128c:	bl	9dec <memcpy@plt>
   11290:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11294:	cmp	r3, #0
   11298:	beq	11340 <DRV_ProtectEnter+0xe4>
   1129c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   112a0:	ldr	r2, [r3]
   112a4:	ldr	r3, [pc, #176]	; 1135c <DRV_ProtectEnter+0x100>
   112a8:	cmp	r2, r3
   112ac:	bne	11340 <DRV_ProtectEnter+0xe4>
   112b0:	ldr	r3, [pc, #168]	; 11360 <DRV_ProtectEnter+0x104>
   112b4:	ldrh	r3, [r3]
   112b8:	cmp	r3, #0
   112bc:	bne	11348 <DRV_ProtectEnter+0xec>
   112c0:	mov	r3, #0
   112c4:	strh	r3, [fp, #-14]
   112c8:	mov	r3, #32768	; 0x8000
   112cc:	str	r3, [fp, #-8]
   112d0:	ldr	r3, [pc, #140]	; 11364 <DRV_ProtectEnter+0x108>
   112d4:	ldr	r3, [r3]
   112d8:	sub	r2, fp, #14
   112dc:	mov	r0, r3
   112e0:	mov	r1, r2
   112e4:	mov	r2, #1
   112e8:	bl	9d08 <semop@plt>
   112ec:	mov	r3, r0
   112f0:	cmn	r3, #1
   112f4:	bne	11320 <DRV_ProtectEnter+0xc4>
   112f8:	bl	9d38 <__errno_location@plt>
   112fc:	mov	r3, r0
   11300:	ldr	r3, [r3]
   11304:	cmp	r3, #4
   11308:	bne	11318 <DRV_ProtectEnter+0xbc>
   1130c:	ldr	r3, [pc, #84]	; 11368 <DRV_ProtectEnter+0x10c>
   11310:	str	r3, [fp, #-8]
   11314:	b	11320 <DRV_ProtectEnter+0xc4>
   11318:	ldr	r3, [pc, #76]	; 1136c <DRV_ProtectEnter+0x110>
   1131c:	str	r3, [fp, #-8]
   11320:	ldr	r2, [fp, #-8]
   11324:	ldr	r3, [pc, #60]	; 11368 <DRV_ProtectEnter+0x10c>
   11328:	cmp	r2, r3
   1132c:	beq	112c8 <DRV_ProtectEnter+0x6c>
   11330:	ldr	r3, [pc, #44]	; 11364 <DRV_ProtectEnter+0x108>
   11334:	mov	r2, #1
   11338:	strh	r2, [r3, #4]
   1133c:	b	11348 <DRV_ProtectEnter+0xec>
   11340:	ldr	r3, [pc, #40]	; 11370 <DRV_ProtectEnter+0x114>
   11344:	str	r3, [fp, #-8]
   11348:	ldr	r3, [fp, #-8]
   1134c:	mov	r0, r3
   11350:	sub	sp, fp, #4
   11354:	pop	{fp, pc}
   11358:	.word	0x00023802
   1135c:	.word	0x5f4b5244
   11360:	.word	0x0002d7cc
   11364:	.word	0x0002d3e4
   11368:	.word	0x8000801d
   1136c:	.word	0x80008008
   11370:	.word	0x80008012

00011374 <DRV_ProtectLeave>:
   11374:	push	{fp, lr}
   11378:	add	fp, sp, #4
   1137c:	sub	sp, sp, #24
   11380:	str	r0, [fp, #-24]	; 0xffffffe8
   11384:	mov	r3, #32768	; 0x8000
   11388:	str	r3, [fp, #-12]
   1138c:	ldr	r3, [pc, #216]	; 1146c <DRV_ProtectLeave+0xf8>
   11390:	sub	r2, fp, #18
   11394:	mov	ip, #6
   11398:	mov	r0, r2
   1139c:	mov	r1, r3
   113a0:	mov	r2, ip
   113a4:	bl	9dec <memcpy@plt>
   113a8:	mov	r3, #1
   113ac:	strh	r3, [fp, #-6]
   113b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   113b4:	cmp	r3, #0
   113b8:	beq	11454 <DRV_ProtectLeave+0xe0>
   113bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   113c0:	ldr	r2, [r3]
   113c4:	ldr	r3, [pc, #164]	; 11470 <DRV_ProtectLeave+0xfc>
   113c8:	cmp	r2, r3
   113cc:	bne	11454 <DRV_ProtectLeave+0xe0>
   113d0:	ldr	r3, [pc, #156]	; 11474 <DRV_ProtectLeave+0x100>
   113d4:	ldrh	r3, [r3]
   113d8:	lsl	r3, r3, #16
   113dc:	asr	r3, r3, #16
   113e0:	cmp	r3, #1
   113e4:	bne	11400 <DRV_ProtectLeave+0x8c>
   113e8:	ldr	r3, [pc, #136]	; 11478 <DRV_ProtectLeave+0x104>
   113ec:	ldrh	r3, [r3, #4]
   113f0:	cmp	r3, #0
   113f4:	bne	11400 <DRV_ProtectLeave+0x8c>
   113f8:	mov	r3, #0
   113fc:	strh	r3, [fp, #-6]
   11400:	ldrsh	r3, [fp, #-6]
   11404:	cmp	r3, #1
   11408:	bne	1145c <DRV_ProtectLeave+0xe8>
   1140c:	mov	r3, #0
   11410:	strh	r3, [fp, #-18]	; 0xffffffee
   11414:	ldr	r3, [pc, #92]	; 11478 <DRV_ProtectLeave+0x104>
   11418:	ldr	r3, [r3]
   1141c:	sub	r2, fp, #18
   11420:	mov	r0, r3
   11424:	mov	r1, r2
   11428:	mov	r2, #1
   1142c:	bl	9d08 <semop@plt>
   11430:	mov	r3, r0
   11434:	cmn	r3, #1
   11438:	bne	11444 <DRV_ProtectLeave+0xd0>
   1143c:	ldr	r3, [pc, #56]	; 1147c <DRV_ProtectLeave+0x108>
   11440:	str	r3, [fp, #-12]
   11444:	ldr	r3, [pc, #44]	; 11478 <DRV_ProtectLeave+0x104>
   11448:	mov	r2, #0
   1144c:	strh	r2, [r3, #4]
   11450:	b	1145c <DRV_ProtectLeave+0xe8>
   11454:	ldr	r3, [pc, #36]	; 11480 <DRV_ProtectLeave+0x10c>
   11458:	str	r3, [fp, #-12]
   1145c:	ldr	r3, [fp, #-12]
   11460:	mov	r0, r3
   11464:	sub	sp, fp, #4
   11468:	pop	{fp, pc}
   1146c:	.word	0x00023808
   11470:	.word	0x5f4b5244
   11474:	.word	0x0002d7cc
   11478:	.word	0x0002d3e4
   1147c:	.word	0x80008008
   11480:	.word	0x80008012

00011484 <DRV_installCleanupRoutines>:
   11484:	push	{fp, lr}
   11488:	add	fp, sp, #4
   1148c:	sub	sp, sp, #280	; 0x118
   11490:	str	r0, [fp, #-280]	; 0xfffffee8
   11494:	ldr	r3, [fp, #-280]	; 0xfffffee8
   11498:	ldr	r3, [r3]
   1149c:	ldr	r3, [r3, #48]	; 0x30
   114a0:	ldrh	r3, [r3]
   114a4:	lsl	r3, r3, #16
   114a8:	asr	r3, r3, #16
   114ac:	cmp	r3, #1
   114b0:	bne	11560 <DRV_installCleanupRoutines+0xdc>
   114b4:	sub	r3, fp, #276	; 0x114
   114b8:	mov	r0, r3
   114bc:	bl	9d50 <sigemptyset@plt>
   114c0:	sub	r3, fp, #276	; 0x114
   114c4:	mov	r0, r3
   114c8:	bl	9d44 <sigfillset@plt>
   114cc:	mov	r3, #268435456	; 0x10000000
   114d0:	str	r3, [fp, #-16]
   114d4:	sub	r3, fp, #144	; 0x90
   114d8:	sub	r2, fp, #276	; 0x114
   114dc:	mov	ip, #128	; 0x80
   114e0:	mov	r0, r3
   114e4:	mov	r1, r2
   114e8:	mov	r2, ip
   114ec:	bl	9dec <memcpy@plt>
   114f0:	ldr	r3, [pc, #120]	; 11570 <DRV_installCleanupRoutines+0xec>
   114f4:	str	r3, [fp, #-148]	; 0xffffff6c
   114f8:	mov	r3, #0
   114fc:	str	r3, [fp, #-8]
   11500:	b	11544 <DRV_installCleanupRoutines+0xc0>
   11504:	ldr	r3, [fp, #-280]	; 0xfffffee8
   11508:	ldr	r3, [r3]
   1150c:	ldr	r3, [r3, #48]	; 0x30
   11510:	ldr	r2, [r3, #8]
   11514:	ldr	r3, [fp, #-8]
   11518:	lsl	r3, r3, #2
   1151c:	add	r3, r2, r3
   11520:	ldr	r3, [r3]
   11524:	sub	r2, fp, #148	; 0x94
   11528:	mov	r0, r3
   1152c:	mov	r1, r2
   11530:	mov	r2, #0
   11534:	bl	9ca8 <sigaction@plt>
   11538:	ldr	r3, [fp, #-8]
   1153c:	add	r3, r3, #1
   11540:	str	r3, [fp, #-8]
   11544:	ldr	r3, [fp, #-280]	; 0xfffffee8
   11548:	ldr	r3, [r3]
   1154c:	ldr	r3, [r3, #48]	; 0x30
   11550:	ldr	r2, [r3, #4]
   11554:	ldr	r3, [fp, #-8]
   11558:	cmp	r2, r3
   1155c:	bhi	11504 <DRV_installCleanupRoutines+0x80>
   11560:	ldr	r0, [pc, #12]	; 11574 <DRV_installCleanupRoutines+0xf0>
   11564:	bl	22f94 <atexit>
   11568:	sub	sp, fp, #4
   1156c:	pop	{fp, pc}
   11570:	.word	0x00011648
   11574:	.word	0x00011578

00011578 <DSPLINK_atExitHandler>:
   11578:	push	{fp, lr}
   1157c:	add	fp, sp, #4
   11580:	sub	sp, sp, #40	; 0x28
   11584:	mov	r3, #0
   11588:	str	r3, [fp, #-16]
   1158c:	mov	r3, #0
   11590:	str	r3, [fp, #-12]
   11594:	ldr	r2, [pc, #160]	; 1163c <DSPLINK_atExitHandler+0xc4>
   11598:	mov	r3, #1
   1159c:	strh	r3, [r2]
   115a0:	ldr	r0, [fp, #-12]
   115a4:	bl	15bf4 <MSGQ_transportClose>
   115a8:	ldr	r0, [fp, #-12]
   115ac:	bl	199c8 <PROC_stop>
   115b0:	ldr	r3, [pc, #136]	; 11640 <DSPLINK_atExitHandler+0xc8>
   115b4:	ldr	r3, [r3]
   115b8:	cmp	r3, #0
   115bc:	beq	115e4 <DSPLINK_atExitHandler+0x6c>
   115c0:	ldr	r3, [pc, #120]	; 11640 <DSPLINK_atExitHandler+0xc8>
   115c4:	ldr	r3, [r3]
   115c8:	ldr	r3, [r3, #4]
   115cc:	sub	r2, fp, #40	; 0x28
   115d0:	mov	r0, r3
   115d4:	ldr	r1, [pc, #104]	; 11644 <DSPLINK_atExitHandler+0xcc>
   115d8:	bl	a0bc <ioctl@plt>
   115dc:	mov	r3, r0
   115e0:	str	r3, [fp, #-16]
   115e4:	mov	r3, #0
   115e8:	str	r3, [fp, #-8]
   115ec:	b	11610 <DSPLINK_atExitHandler+0x98>
   115f0:	ldr	r3, [fp, #-8]
   115f4:	lsl	r3, r3, #16
   115f8:	lsr	r3, r3, #16
   115fc:	mov	r0, r3
   11600:	bl	179dc <POOL_close>
   11604:	ldr	r3, [fp, #-8]
   11608:	add	r3, r3, #1
   1160c:	str	r3, [fp, #-8]
   11610:	ldr	r3, [fp, #-8]
   11614:	cmp	r3, #31
   11618:	bls	115f0 <DSPLINK_atExitHandler+0x78>
   1161c:	ldr	r0, [fp, #-12]
   11620:	bl	18dc0 <PROC_detach>
   11624:	bl	18468 <PROC_destroy>
   11628:	ldr	r3, [pc, #12]	; 1163c <DSPLINK_atExitHandler+0xc4>
   1162c:	mov	r2, #0
   11630:	strh	r2, [r3]
   11634:	sub	sp, fp, #4
   11638:	pop	{fp, pc}
   1163c:	.word	0x0002d7cc
   11640:	.word	0x0002d3ec
   11644:	.word	0xc018e022

00011648 <DSPLINK_sigHandler>:
   11648:	push	{fp, lr}
   1164c:	add	fp, sp, #4
   11650:	sub	sp, sp, #8
   11654:	str	r0, [fp, #-8]
   11658:	ldr	r3, [pc, #16]	; 11670 <DSPLINK_sigHandler+0x28>
   1165c:	mov	r2, #1
   11660:	strh	r2, [r3]
   11664:	bl	11578 <DSPLINK_atExitHandler>
   11668:	mov	r0, #0
   1166c:	bl	a02c <exit@plt>
   11670:	.word	0x0002d7cc

00011674 <_IDM_USR_init>:
   11674:	push	{fp, lr}
   11678:	add	fp, sp, #4
   1167c:	sub	sp, sp, #32
   11680:	mov	r3, #32768	; 0x8000
   11684:	str	r3, [fp, #-8]
   11688:	ldr	r3, [pc, #44]	; 116bc <_IDM_USR_init+0x48>
   1168c:	ldr	r3, [r3]
   11690:	sub	r2, fp, #32
   11694:	mov	r0, r3
   11698:	ldr	r1, [pc, #32]	; 116c0 <_IDM_USR_init+0x4c>
   1169c:	mov	r3, #0
   116a0:	bl	f94c <DRV_Invoke>
   116a4:	mov	r3, r0
   116a8:	str	r3, [fp, #-8]
   116ac:	ldr	r3, [fp, #-8]
   116b0:	mov	r0, r3
   116b4:	sub	sp, fp, #4
   116b8:	pop	{fp, pc}
   116bc:	.word	0x0002d3ec
   116c0:	.word	0xc018e053

000116c4 <_IDM_USR_exit>:
   116c4:	push	{fp, lr}
   116c8:	add	fp, sp, #4
   116cc:	sub	sp, sp, #32
   116d0:	mov	r3, #32768	; 0x8000
   116d4:	str	r3, [fp, #-8]
   116d8:	ldr	r3, [pc, #44]	; 1170c <_IDM_USR_exit+0x48>
   116dc:	ldr	r3, [r3]
   116e0:	sub	r2, fp, #32
   116e4:	mov	r0, r3
   116e8:	ldr	r1, [pc, #32]	; 11710 <_IDM_USR_exit+0x4c>
   116ec:	mov	r3, #0
   116f0:	bl	f94c <DRV_Invoke>
   116f4:	mov	r3, r0
   116f8:	str	r3, [fp, #-8]
   116fc:	ldr	r3, [fp, #-8]
   11700:	mov	r0, r3
   11704:	sub	sp, fp, #4
   11708:	pop	{fp, pc}
   1170c:	.word	0x0002d3ec
   11710:	.word	0xc018e054

00011714 <_IDM_USR_create>:
   11714:	push	{fp, lr}
   11718:	add	fp, sp, #4
   1171c:	sub	sp, sp, #40	; 0x28
   11720:	str	r0, [fp, #-40]	; 0xffffffd8
   11724:	str	r1, [fp, #-44]	; 0xffffffd4
   11728:	mov	r3, #32768	; 0x8000
   1172c:	str	r3, [fp, #-8]
   11730:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11734:	cmp	r3, #0
   11738:	bne	11748 <_IDM_USR_create+0x34>
   1173c:	ldr	r3, [pc, #72]	; 1178c <_IDM_USR_create+0x78>
   11740:	str	r3, [fp, #-8]
   11744:	b	1177c <_IDM_USR_create+0x68>
   11748:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1174c:	str	r3, [fp, #-28]	; 0xffffffe4
   11750:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11754:	str	r3, [fp, #-24]	; 0xffffffe8
   11758:	ldr	r3, [pc, #48]	; 11790 <_IDM_USR_create+0x7c>
   1175c:	ldr	r3, [r3]
   11760:	sub	r2, fp, #32
   11764:	mov	r0, r3
   11768:	ldr	r1, [pc, #36]	; 11794 <_IDM_USR_create+0x80>
   1176c:	mov	r3, #0
   11770:	bl	f94c <DRV_Invoke>
   11774:	mov	r3, r0
   11778:	str	r3, [fp, #-8]
   1177c:	ldr	r3, [fp, #-8]
   11780:	mov	r0, r3
   11784:	sub	sp, fp, #4
   11788:	pop	{fp, pc}
   1178c:	.word	0x8000800b
   11790:	.word	0x0002d3ec
   11794:	.word	0xc018e055

00011798 <_IDM_USR_delete>:
   11798:	push	{fp, lr}
   1179c:	add	fp, sp, #4
   117a0:	sub	sp, sp, #40	; 0x28
   117a4:	str	r0, [fp, #-40]	; 0xffffffd8
   117a8:	mov	r3, #32768	; 0x8000
   117ac:	str	r3, [fp, #-8]
   117b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   117b4:	str	r3, [fp, #-28]	; 0xffffffe4
   117b8:	ldr	r3, [pc, #44]	; 117ec <_IDM_USR_delete+0x54>
   117bc:	ldr	r3, [r3]
   117c0:	sub	r2, fp, #32
   117c4:	mov	r0, r3
   117c8:	ldr	r1, [pc, #32]	; 117f0 <_IDM_USR_delete+0x58>
   117cc:	mov	r3, #0
   117d0:	bl	f94c <DRV_Invoke>
   117d4:	mov	r3, r0
   117d8:	str	r3, [fp, #-8]
   117dc:	ldr	r3, [fp, #-8]
   117e0:	mov	r0, r3
   117e4:	sub	sp, fp, #4
   117e8:	pop	{fp, pc}
   117ec:	.word	0x0002d3ec
   117f0:	.word	0xc018e056

000117f4 <_IDM_USR_acquireId>:
   117f4:	push	{fp, lr}
   117f8:	add	fp, sp, #4
   117fc:	sub	sp, sp, #48	; 0x30
   11800:	str	r0, [fp, #-40]	; 0xffffffd8
   11804:	str	r1, [fp, #-44]	; 0xffffffd4
   11808:	str	r2, [fp, #-48]	; 0xffffffd0
   1180c:	mov	r3, #32768	; 0x8000
   11810:	str	r3, [fp, #-8]
   11814:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11818:	cmp	r3, #0
   1181c:	beq	1182c <_IDM_USR_acquireId+0x38>
   11820:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11824:	cmp	r3, #0
   11828:	bne	11838 <_IDM_USR_acquireId+0x44>
   1182c:	ldr	r3, [pc, #80]	; 11884 <_IDM_USR_acquireId+0x90>
   11830:	str	r3, [fp, #-8]
   11834:	b	11874 <_IDM_USR_acquireId+0x80>
   11838:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1183c:	str	r3, [fp, #-28]	; 0xffffffe4
   11840:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11844:	str	r3, [fp, #-24]	; 0xffffffe8
   11848:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1184c:	str	r3, [fp, #-20]	; 0xffffffec
   11850:	ldr	r3, [pc, #48]	; 11888 <_IDM_USR_acquireId+0x94>
   11854:	ldr	r3, [r3]
   11858:	sub	r2, fp, #32
   1185c:	mov	r0, r3
   11860:	ldr	r1, [pc, #36]	; 1188c <_IDM_USR_acquireId+0x98>
   11864:	mov	r3, #0
   11868:	bl	f94c <DRV_Invoke>
   1186c:	mov	r3, r0
   11870:	str	r3, [fp, #-8]
   11874:	ldr	r3, [fp, #-8]
   11878:	mov	r0, r3
   1187c:	sub	sp, fp, #4
   11880:	pop	{fp, pc}
   11884:	.word	0x8000800b
   11888:	.word	0x0002d3ec
   1188c:	.word	0xc018e057

00011890 <_IDM_USR_releaseId>:
   11890:	push	{fp, lr}
   11894:	add	fp, sp, #4
   11898:	sub	sp, sp, #40	; 0x28
   1189c:	str	r0, [fp, #-40]	; 0xffffffd8
   118a0:	str	r1, [fp, #-44]	; 0xffffffd4
   118a4:	mov	r3, #32768	; 0x8000
   118a8:	str	r3, [fp, #-8]
   118ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   118b0:	str	r3, [fp, #-28]	; 0xffffffe4
   118b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   118b8:	str	r3, [fp, #-24]	; 0xffffffe8
   118bc:	ldr	r3, [pc, #44]	; 118f0 <_IDM_USR_releaseId+0x60>
   118c0:	ldr	r3, [r3]
   118c4:	sub	r2, fp, #32
   118c8:	mov	r0, r3
   118cc:	ldr	r1, [pc, #32]	; 118f4 <_IDM_USR_releaseId+0x64>
   118d0:	mov	r3, #0
   118d4:	bl	f94c <DRV_Invoke>
   118d8:	mov	r3, r0
   118dc:	str	r3, [fp, #-8]
   118e0:	ldr	r3, [fp, #-8]
   118e4:	mov	r0, r3
   118e8:	sub	sp, fp, #4
   118ec:	pop	{fp, pc}
   118f0:	.word	0x0002d3ec
   118f4:	.word	0xc018e058

000118f8 <_MEM_USR_init>:
   118f8:	push	{fp}		; (str fp, [sp, #-4]!)
   118fc:	add	fp, sp, #0
   11900:	sub	sp, sp, #12
   11904:	mov	r3, #32768	; 0x8000
   11908:	str	r3, [fp, #-8]
   1190c:	ldr	r3, [fp, #-8]
   11910:	mov	r0, r3
   11914:	add	sp, fp, #0
   11918:	ldmfd	sp!, {fp}
   1191c:	bx	lr

00011920 <_MEM_USR_exit>:
   11920:	push	{fp}		; (str fp, [sp, #-4]!)
   11924:	add	fp, sp, #0
   11928:	sub	sp, sp, #12
   1192c:	mov	r3, #32768	; 0x8000
   11930:	str	r3, [fp, #-8]
   11934:	ldr	r3, [fp, #-8]
   11938:	mov	r0, r3
   1193c:	add	sp, fp, #0
   11940:	ldmfd	sp!, {fp}
   11944:	bx	lr

00011948 <_MEM_USR_alloc>:
   11948:	push	{fp, lr}
   1194c:	add	fp, sp, #4
   11950:	sub	sp, sp, #16
   11954:	str	r0, [fp, #-16]
   11958:	str	r1, [fp, #-20]	; 0xffffffec
   1195c:	mov	r3, #32768	; 0x8000
   11960:	str	r3, [fp, #-8]
   11964:	ldr	r3, [fp, #-16]
   11968:	cmp	r3, #0
   1196c:	beq	1197c <_MEM_USR_alloc+0x34>
   11970:	ldr	r3, [fp, #-20]	; 0xffffffec
   11974:	cmp	r3, #0
   11978:	bne	11988 <_MEM_USR_alloc+0x40>
   1197c:	ldr	r3, [pc, #68]	; 119c8 <_MEM_USR_alloc+0x80>
   11980:	str	r3, [fp, #-8]
   11984:	b	119b8 <_MEM_USR_alloc+0x70>
   11988:	ldr	r0, [fp, #-20]	; 0xffffffec
   1198c:	bl	9e7c <malloc@plt>
   11990:	mov	r3, r0
   11994:	mov	r2, r3
   11998:	ldr	r3, [fp, #-16]
   1199c:	str	r2, [r3]
   119a0:	ldr	r3, [fp, #-16]
   119a4:	ldr	r3, [r3]
   119a8:	cmp	r3, #0
   119ac:	bne	119b8 <_MEM_USR_alloc+0x70>
   119b0:	ldr	r3, [pc, #20]	; 119cc <_MEM_USR_alloc+0x84>
   119b4:	str	r3, [fp, #-8]
   119b8:	ldr	r3, [fp, #-8]
   119bc:	mov	r0, r3
   119c0:	sub	sp, fp, #4
   119c4:	pop	{fp, pc}
   119c8:	.word	0x8000800b
   119cc:	.word	0x8000800c

000119d0 <_MEM_USR_calloc>:
   119d0:	push	{fp, lr}
   119d4:	add	fp, sp, #4
   119d8:	sub	sp, sp, #16
   119dc:	str	r0, [fp, #-16]
   119e0:	str	r1, [fp, #-20]	; 0xffffffec
   119e4:	mov	r3, #32768	; 0x8000
   119e8:	str	r3, [fp, #-8]
   119ec:	ldr	r3, [fp, #-16]
   119f0:	cmp	r3, #0
   119f4:	beq	11a04 <_MEM_USR_calloc+0x34>
   119f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   119fc:	cmp	r3, #0
   11a00:	bne	11a10 <_MEM_USR_calloc+0x40>
   11a04:	ldr	r3, [pc, #72]	; 11a54 <_MEM_USR_calloc+0x84>
   11a08:	str	r3, [fp, #-8]
   11a0c:	b	11a44 <_MEM_USR_calloc+0x74>
   11a10:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a14:	mov	r1, #1
   11a18:	bl	a044 <calloc@plt>
   11a1c:	mov	r3, r0
   11a20:	mov	r2, r3
   11a24:	ldr	r3, [fp, #-16]
   11a28:	str	r2, [r3]
   11a2c:	ldr	r3, [fp, #-16]
   11a30:	ldr	r3, [r3]
   11a34:	cmp	r3, #0
   11a38:	bne	11a44 <_MEM_USR_calloc+0x74>
   11a3c:	ldr	r3, [pc, #20]	; 11a58 <_MEM_USR_calloc+0x88>
   11a40:	str	r3, [fp, #-8]
   11a44:	ldr	r3, [fp, #-8]
   11a48:	mov	r0, r3
   11a4c:	sub	sp, fp, #4
   11a50:	pop	{fp, pc}
   11a54:	.word	0x8000800b
   11a58:	.word	0x8000800c

00011a5c <_MEM_USR_free>:
   11a5c:	push	{fp, lr}
   11a60:	add	fp, sp, #4
   11a64:	sub	sp, sp, #16
   11a68:	str	r0, [fp, #-16]
   11a6c:	mov	r3, #32768	; 0x8000
   11a70:	str	r3, [fp, #-8]
   11a74:	ldr	r3, [fp, #-16]
   11a78:	cmp	r3, #0
   11a7c:	bne	11a8c <_MEM_USR_free+0x30>
   11a80:	ldr	r3, [pc, #48]	; 11ab8 <_MEM_USR_free+0x5c>
   11a84:	str	r3, [fp, #-8]
   11a88:	b	11aa8 <_MEM_USR_free+0x4c>
   11a8c:	ldr	r3, [fp, #-16]
   11a90:	ldr	r3, [r3]
   11a94:	mov	r0, r3
   11a98:	bl	9dc8 <free@plt>
   11a9c:	ldr	r2, [fp, #-16]
   11aa0:	mov	r3, #0
   11aa4:	str	r3, [r2]
   11aa8:	ldr	r3, [fp, #-8]
   11aac:	mov	r0, r3
   11ab0:	sub	sp, fp, #4
   11ab4:	pop	{fp, pc}
   11ab8:	.word	0x8000800b

00011abc <_MPCS_init>:
   11abc:	push	{fp, lr}
   11ac0:	add	fp, sp, #4
   11ac4:	sub	sp, sp, #40	; 0x28
   11ac8:	str	r0, [fp, #-40]	; 0xffffffd8
   11acc:	mov	r3, #32768	; 0x8000
   11ad0:	str	r3, [fp, #-12]
   11ad4:	mov	r3, #0
   11ad8:	str	r3, [fp, #-8]
   11adc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11ae0:	cmp	r3, #0
   11ae4:	beq	11af4 <_MPCS_init+0x38>
   11ae8:	ldr	r3, [pc, #256]	; 11bf0 <_MPCS_init+0x134>
   11aec:	str	r3, [fp, #-12]
   11af0:	b	11be0 <_MPCS_init+0x124>
   11af4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11af8:	str	r3, [fp, #-32]	; 0xffffffe0
   11afc:	ldr	r3, [pc, #240]	; 11bf4 <_MPCS_init+0x138>
   11b00:	ldr	r3, [r3]
   11b04:	sub	r2, fp, #36	; 0x24
   11b08:	mov	r0, r3
   11b0c:	ldr	r1, [pc, #228]	; 11bf8 <_MPCS_init+0x13c>
   11b10:	mov	r3, #0
   11b14:	bl	f94c <DRV_Invoke>
   11b18:	mov	r3, r0
   11b1c:	str	r3, [fp, #-12]
   11b20:	ldr	r2, [fp, #-12]
   11b24:	ldr	r3, [pc, #208]	; 11bfc <_MPCS_init+0x140>
   11b28:	cmp	r2, r3
   11b2c:	ble	11be0 <_MPCS_init+0x124>
   11b30:	ldr	r3, [fp, #-12]
   11b34:	cmp	r3, #34048	; 0x8500
   11b38:	bgt	11be0 <_MPCS_init+0x124>
   11b3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11b40:	lsl	r2, r3, #5
   11b44:	ldr	r3, [pc, #180]	; 11c00 <_MPCS_init+0x144>
   11b48:	add	r3, r2, r3
   11b4c:	str	r3, [fp, #-8]
   11b50:	ldr	r3, [fp, #-8]
   11b54:	mov	lr, r3
   11b58:	sub	ip, fp, #32
   11b5c:	ldm	ip!, {r0, r1, r2, r3}
   11b60:	stmia	lr!, {r0, r1, r2, r3}
   11b64:	ldr	r3, [ip]
   11b68:	str	r3, [lr]
   11b6c:	ldr	r3, [fp, #-8]
   11b70:	ldr	r3, [r3, #12]
   11b74:	mov	r2, r3
   11b78:	ldr	r3, [fp, #-8]
   11b7c:	str	r2, [r3, #20]
   11b80:	ldr	r3, [fp, #-8]
   11b84:	ldr	r3, [r3, #20]
   11b88:	add	r2, r3, #512	; 0x200
   11b8c:	ldr	r3, [fp, #-8]
   11b90:	str	r2, [r3, #24]
   11b94:	ldr	r3, [fp, #-8]
   11b98:	add	r2, r3, #28
   11b9c:	ldr	r3, [fp, #-8]
   11ba0:	ldr	r3, [r3, #20]
   11ba4:	add	r3, r3, #128	; 0x80
   11ba8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11bac:	ldr	r1, [pc, #80]	; 11c04 <_MPCS_init+0x148>
   11bb0:	bl	11d90 <_MPCS_open>
   11bb4:	mov	r3, r0
   11bb8:	str	r3, [fp, #-12]
   11bbc:	ldr	r2, [fp, #-12]
   11bc0:	ldr	r3, [pc, #52]	; 11bfc <_MPCS_init+0x140>
   11bc4:	cmp	r2, r3
   11bc8:	ble	11bd8 <_MPCS_init+0x11c>
   11bcc:	ldr	r3, [fp, #-12]
   11bd0:	cmp	r3, #34048	; 0x8500
   11bd4:	ble	11be0 <_MPCS_init+0x124>
   11bd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11bdc:	bl	11c08 <_MPCS_exit>
   11be0:	ldr	r3, [fp, #-12]
   11be4:	mov	r0, r3
   11be8:	sub	sp, fp, #4
   11bec:	pop	{fp, pc}
   11bf0:	.word	0x8000800b
   11bf4:	.word	0x0002d3ec
   11bf8:	.word	0xc018e047
   11bfc:	.word	0x00007fff
   11c00:	.word	0x0002d7d0
   11c04:	.word	0x00023810

00011c08 <_MPCS_exit>:
   11c08:	push	{fp, lr}
   11c0c:	add	fp, sp, #4
   11c10:	sub	sp, sp, #48	; 0x30
   11c14:	str	r0, [fp, #-48]	; 0xffffffd0
   11c18:	mov	r3, #32768	; 0x8000
   11c1c:	str	r3, [fp, #-16]
   11c20:	mov	r3, #32768	; 0x8000
   11c24:	str	r3, [fp, #-12]
   11c28:	mov	r3, #0
   11c2c:	str	r3, [fp, #-8]
   11c30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11c34:	cmp	r3, #0
   11c38:	beq	11c48 <_MPCS_exit+0x40>
   11c3c:	ldr	r3, [pc, #308]	; 11d78 <_MPCS_exit+0x170>
   11c40:	str	r3, [fp, #-16]
   11c44:	b	11c74 <_MPCS_exit+0x6c>
   11c48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11c4c:	lsl	r2, r3, #5
   11c50:	ldr	r3, [pc, #292]	; 11d7c <_MPCS_exit+0x174>
   11c54:	add	r3, r2, r3
   11c58:	str	r3, [fp, #-8]
   11c5c:	ldr	r3, [fp, #-8]
   11c60:	ldr	r3, [r3, #20]
   11c64:	cmp	r3, #0
   11c68:	bne	11c74 <_MPCS_exit+0x6c>
   11c6c:	ldr	r3, [pc, #268]	; 11d80 <_MPCS_exit+0x178>
   11c70:	str	r3, [fp, #-16]
   11c74:	ldr	r2, [fp, #-16]
   11c78:	ldr	r3, [pc, #260]	; 11d84 <_MPCS_exit+0x17c>
   11c7c:	cmp	r2, r3
   11c80:	ble	11d68 <_MPCS_exit+0x160>
   11c84:	ldr	r3, [fp, #-16]
   11c88:	cmp	r3, #34048	; 0x8500
   11c8c:	bgt	11d68 <_MPCS_exit+0x160>
   11c90:	ldr	r3, [fp, #-8]
   11c94:	ldr	r3, [r3, #28]
   11c98:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11c9c:	mov	r1, r3
   11ca0:	bl	12ac4 <MPCS_close>
   11ca4:	mov	r3, r0
   11ca8:	str	r3, [fp, #-16]
   11cac:	ldr	r2, [fp, #-16]
   11cb0:	ldr	r3, [pc, #204]	; 11d84 <_MPCS_exit+0x17c>
   11cb4:	cmp	r2, r3
   11cb8:	ble	11cd4 <_MPCS_exit+0xcc>
   11cbc:	ldr	r3, [fp, #-16]
   11cc0:	cmp	r3, #34048	; 0x8500
   11cc4:	bgt	11cd4 <_MPCS_exit+0xcc>
   11cc8:	ldr	r2, [fp, #-8]
   11ccc:	mov	r3, #0
   11cd0:	str	r3, [r2, #28]
   11cd4:	ldr	r3, [fp, #-8]
   11cd8:	ldr	r3, [r3, #12]
   11cdc:	str	r3, [fp, #-24]	; 0xffffffe8
   11ce0:	ldr	r3, [fp, #-8]
   11ce4:	ldr	r3, [r3, #16]
   11ce8:	str	r3, [fp, #-20]	; 0xffffffec
   11cec:	ldr	r3, [pc, #148]	; 11d88 <_MPCS_exit+0x180>
   11cf0:	ldr	r3, [r3]
   11cf4:	sub	r2, fp, #40	; 0x28
   11cf8:	mov	r0, r3
   11cfc:	ldr	r1, [pc, #136]	; 11d8c <_MPCS_exit+0x184>
   11d00:	mov	r3, #0
   11d04:	bl	f94c <DRV_Invoke>
   11d08:	mov	r3, r0
   11d0c:	str	r3, [fp, #-12]
   11d10:	ldr	r2, [fp, #-12]
   11d14:	ldr	r3, [pc, #104]	; 11d84 <_MPCS_exit+0x17c>
   11d18:	cmp	r2, r3
   11d1c:	ble	11d2c <_MPCS_exit+0x124>
   11d20:	ldr	r3, [fp, #-12]
   11d24:	cmp	r3, #34048	; 0x8500
   11d28:	ble	11d50 <_MPCS_exit+0x148>
   11d2c:	ldr	r2, [fp, #-16]
   11d30:	ldr	r3, [pc, #76]	; 11d84 <_MPCS_exit+0x17c>
   11d34:	cmp	r2, r3
   11d38:	ble	11d50 <_MPCS_exit+0x148>
   11d3c:	ldr	r3, [fp, #-16]
   11d40:	cmp	r3, #34048	; 0x8500
   11d44:	bgt	11d50 <_MPCS_exit+0x148>
   11d48:	ldr	r3, [fp, #-12]
   11d4c:	str	r3, [fp, #-16]
   11d50:	ldr	r2, [fp, #-8]
   11d54:	mov	r3, #0
   11d58:	str	r3, [r2, #20]
   11d5c:	ldr	r2, [fp, #-8]
   11d60:	mov	r3, #0
   11d64:	str	r3, [r2, #24]
   11d68:	ldr	r3, [fp, #-16]
   11d6c:	mov	r0, r3
   11d70:	sub	sp, fp, #4
   11d74:	pop	{fp, pc}
   11d78:	.word	0x8000800b
   11d7c:	.word	0x0002d7d0
   11d80:	.word	0x80008000
   11d84:	.word	0x00007fff
   11d88:	.word	0x0002d3ec
   11d8c:	.word	0xc018e048

00011d90 <_MPCS_open>:
   11d90:	push	{fp, lr}
   11d94:	add	fp, sp, #4
   11d98:	sub	sp, sp, #56	; 0x38
   11d9c:	str	r0, [fp, #-40]	; 0xffffffd8
   11da0:	str	r1, [fp, #-44]	; 0xffffffd4
   11da4:	str	r2, [fp, #-48]	; 0xffffffd0
   11da8:	str	r3, [fp, #-52]	; 0xffffffcc
   11dac:	mov	r3, #32768	; 0x8000
   11db0:	str	r3, [fp, #-28]	; 0xffffffe4
   11db4:	mov	r3, #32768	; 0x8000
   11db8:	str	r3, [fp, #-24]	; 0xffffffe8
   11dbc:	mov	r3, #0
   11dc0:	str	r3, [fp, #-32]	; 0xffffffe0
   11dc4:	mov	r3, #0
   11dc8:	strh	r3, [fp, #-18]	; 0xffffffee
   11dcc:	mov	r3, #0
   11dd0:	str	r3, [fp, #-16]
   11dd4:	mvn	r3, #0
   11dd8:	str	r3, [fp, #-12]
   11ddc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11de0:	mov	r3, #0
   11de4:	str	r3, [r2]
   11de8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11dec:	ldr	r1, [pc, #836]	; 12138 <_MPCS_open+0x3a8>
   11df0:	mov	r2, #17
   11df4:	bl	9cc0 <strncmp@plt>
   11df8:	mov	r3, r0
   11dfc:	cmp	r3, #0
   11e00:	bne	11e38 <_MPCS_open+0xa8>
   11e04:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11e08:	cmp	r3, #0
   11e0c:	bne	11e1c <_MPCS_open+0x8c>
   11e10:	ldr	r3, [pc, #804]	; 1213c <_MPCS_open+0x3ac>
   11e14:	str	r3, [fp, #-28]	; 0xffffffe4
   11e18:	b	11e24 <_MPCS_open+0x94>
   11e1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11e20:	str	r3, [fp, #-32]	; 0xffffffe0
   11e24:	mov	r3, #1
   11e28:	strh	r3, [fp, #-18]	; 0xffffffee
   11e2c:	mvn	r3, #0
   11e30:	str	r3, [fp, #-12]
   11e34:	b	12010 <_MPCS_open+0x280>
   11e38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11e3c:	lsl	r2, r3, #5
   11e40:	ldr	r3, [pc, #760]	; 12140 <_MPCS_open+0x3b0>
   11e44:	add	r3, r2, r3
   11e48:	str	r3, [fp, #-16]
   11e4c:	ldr	r3, [fp, #-16]
   11e50:	ldr	r3, [r3, #28]
   11e54:	mov	r0, r3
   11e58:	bl	12c3c <MPCS_enter>
   11e5c:	mov	r3, r0
   11e60:	str	r3, [fp, #-24]	; 0xffffffe8
   11e64:	mov	r3, #0
   11e68:	str	r3, [fp, #-8]
   11e6c:	b	11edc <_MPCS_open+0x14c>
   11e70:	ldr	r3, [fp, #-16]
   11e74:	ldr	r2, [r3, #24]
   11e78:	ldr	r3, [fp, #-8]
   11e7c:	lsl	r3, r3, #7
   11e80:	add	r3, r2, r3
   11e84:	ldr	r3, [r3, #4]
   11e88:	cmp	r3, #0
   11e8c:	beq	11ed0 <_MPCS_open+0x140>
   11e90:	ldr	r3, [fp, #-16]
   11e94:	ldr	r2, [r3, #24]
   11e98:	ldr	r3, [fp, #-8]
   11e9c:	lsl	r3, r3, #7
   11ea0:	add	r3, r2, r3
   11ea4:	add	r3, r3, #8
   11ea8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11eac:	mov	r1, r3
   11eb0:	mov	r2, #32
   11eb4:	bl	9cc0 <strncmp@plt>
   11eb8:	mov	r3, r0
   11ebc:	cmp	r3, #0
   11ec0:	bne	11ed0 <_MPCS_open+0x140>
   11ec4:	ldr	r3, [fp, #-8]
   11ec8:	str	r3, [fp, #-12]
   11ecc:	b	11ef4 <_MPCS_open+0x164>
   11ed0:	ldr	r3, [fp, #-8]
   11ed4:	add	r3, r3, #1
   11ed8:	str	r3, [fp, #-8]
   11edc:	ldr	r3, [fp, #-16]
   11ee0:	ldr	r3, [r3, #20]
   11ee4:	ldr	r2, [r3, #8]
   11ee8:	ldr	r3, [fp, #-8]
   11eec:	cmp	r2, r3
   11ef0:	bhi	11e70 <_MPCS_open+0xe0>
   11ef4:	ldr	r3, [fp, #-16]
   11ef8:	ldr	r3, [r3, #20]
   11efc:	ldr	r2, [r3, #8]
   11f00:	ldr	r3, [fp, #-8]
   11f04:	cmp	r2, r3
   11f08:	bne	11f18 <_MPCS_open+0x188>
   11f0c:	ldr	r3, [pc, #560]	; 12144 <_MPCS_open+0x3b4>
   11f10:	str	r3, [fp, #-28]	; 0xffffffe4
   11f14:	b	12010 <_MPCS_open+0x280>
   11f18:	ldr	r3, [fp, #-16]
   11f1c:	ldr	r2, [r3, #24]
   11f20:	ldr	r3, [fp, #-8]
   11f24:	lsl	r3, r3, #7
   11f28:	add	r3, r2, r3
   11f2c:	ldrh	r3, [r3, #2]
   11f30:	mov	r2, r3
   11f34:	and	r2, r2, #255	; 0xff
   11f38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11f3c:	lsl	r3, r3, #16
   11f40:	lsr	r3, r3, #16
   11f44:	lsl	r3, r3, #8
   11f48:	lsl	r3, r3, #16
   11f4c:	lsr	r3, r3, #16
   11f50:	orr	r3, r2, r3
   11f54:	lsl	r3, r3, #16
   11f58:	lsr	r1, r3, #16
   11f5c:	sub	ip, fp, #32
   11f60:	ldr	r3, [fp, #-16]
   11f64:	ldr	r2, [r3, #24]
   11f68:	ldr	r3, [fp, #-8]
   11f6c:	lsl	r3, r3, #7
   11f70:	add	r3, r2, r3
   11f74:	ldr	lr, [r3, #4]
   11f78:	mov	r3, #3
   11f7c:	str	r3, [sp]
   11f80:	mov	r0, r1
   11f84:	mov	r1, ip
   11f88:	mov	r2, #0
   11f8c:	mov	r3, lr
   11f90:	bl	17d1c <POOL_translateAddr>
   11f94:	mov	r3, r0
   11f98:	str	r3, [fp, #-28]	; 0xffffffe4
   11f9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11fa0:	ldr	r3, [pc, #416]	; 12148 <_MPCS_open+0x3b8>
   11fa4:	cmp	r2, r3
   11fa8:	ble	12010 <_MPCS_open+0x280>
   11fac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11fb0:	cmp	r3, #34048	; 0x8500
   11fb4:	bgt	12010 <_MPCS_open+0x280>
   11fb8:	ldr	r3, [fp, #-16]
   11fbc:	ldr	r2, [r3, #24]
   11fc0:	ldr	r3, [fp, #-8]
   11fc4:	lsl	r3, r3, #7
   11fc8:	add	r3, r2, r3
   11fcc:	ldrh	r3, [r3, #2]
   11fd0:	mov	r2, r3
   11fd4:	and	r2, r2, #255	; 0xff
   11fd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11fdc:	lsl	r3, r3, #16
   11fe0:	lsr	r3, r3, #16
   11fe4:	lsl	r3, r3, #8
   11fe8:	lsl	r3, r3, #16
   11fec:	lsr	r3, r3, #16
   11ff0:	orr	r3, r2, r3
   11ff4:	lsl	r3, r3, #16
   11ff8:	lsr	r3, r3, #16
   11ffc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12000:	mov	r0, r3
   12004:	mov	r1, r2
   12008:	mov	r2, #384	; 0x180
   1200c:	bl	17224 <POOL_invalidate>
   12010:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12014:	ldr	r3, [pc, #300]	; 12148 <_MPCS_open+0x3b8>
   12018:	cmp	r2, r3
   1201c:	ble	120c4 <_MPCS_open+0x334>
   12020:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12024:	cmp	r3, #34048	; 0x8500
   12028:	bgt	120c4 <_MPCS_open+0x334>
   1202c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12030:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12034:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12038:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1203c:	bl	1301c <_MPCS_OS_open>
   12040:	mov	r3, r0
   12044:	str	r3, [fp, #-28]	; 0xffffffe4
   12048:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1204c:	ldr	r3, [pc, #244]	; 12148 <_MPCS_open+0x3b8>
   12050:	cmp	r2, r3
   12054:	ble	120c4 <_MPCS_open+0x334>
   12058:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1205c:	cmp	r3, #34048	; 0x8500
   12060:	bgt	120c4 <_MPCS_open+0x334>
   12064:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12068:	ldr	r3, [r3]
   1206c:	mov	r2, r3
   12070:	ldr	r3, [fp, #-12]
   12074:	str	r3, [r2, #8]
   12078:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1207c:	ldr	r3, [r3]
   12080:	mov	r2, r3
   12084:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12088:	str	r3, [r2, #12]
   1208c:	ldr	r3, [fp, #-12]
   12090:	cmn	r3, #1
   12094:	bne	120a8 <_MPCS_open+0x318>
   12098:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1209c:	mvn	r3, #0
   120a0:	str	r3, [r2, #8]
   120a4:	b	120c4 <_MPCS_open+0x334>
   120a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   120ac:	ldr	r3, [fp, #-16]
   120b0:	ldr	r2, [r3, #24]
   120b4:	ldr	r3, [fp, #-12]
   120b8:	lsl	r3, r3, #7
   120bc:	add	r3, r2, r3
   120c0:	str	r3, [r1, #8]
   120c4:	ldrsh	r3, [fp, #-18]	; 0xffffffee
   120c8:	cmp	r3, #0
   120cc:	bne	12128 <_MPCS_open+0x398>
   120d0:	ldr	r3, [fp, #-16]
   120d4:	ldr	r3, [r3, #28]
   120d8:	mov	r0, r3
   120dc:	bl	12e98 <MPCS_leave>
   120e0:	mov	r3, r0
   120e4:	str	r3, [fp, #-24]	; 0xffffffe8
   120e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   120ec:	ldr	r3, [pc, #84]	; 12148 <_MPCS_open+0x3b8>
   120f0:	cmp	r2, r3
   120f4:	ble	12128 <_MPCS_open+0x398>
   120f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   120fc:	cmp	r3, #34048	; 0x8500
   12100:	bgt	12128 <_MPCS_open+0x398>
   12104:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12108:	ldr	r3, [pc, #56]	; 12148 <_MPCS_open+0x3b8>
   1210c:	cmp	r2, r3
   12110:	ble	12120 <_MPCS_open+0x390>
   12114:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12118:	cmp	r3, #34048	; 0x8500
   1211c:	ble	12128 <_MPCS_open+0x398>
   12120:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12124:	str	r3, [fp, #-28]	; 0xffffffe4
   12128:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1212c:	mov	r0, r3
   12130:	sub	sp, fp, #4
   12134:	pop	{fp, pc}
   12138:	.word	0x00023810
   1213c:	.word	0x8000800b
   12140:	.word	0x0002d7d0
   12144:	.word	0x8000802d
   12148:	.word	0x00007fff

0001214c <MPCS_create>:
   1214c:	push	{fp, lr}
   12150:	add	fp, sp, #4
   12154:	sub	sp, sp, #48	; 0x30
   12158:	str	r0, [fp, #-32]	; 0xffffffe0
   1215c:	str	r1, [fp, #-36]	; 0xffffffdc
   12160:	str	r2, [fp, #-40]	; 0xffffffd8
   12164:	str	r3, [fp, #-44]	; 0xffffffd4
   12168:	mov	r3, #32768	; 0x8000
   1216c:	str	r3, [fp, #-24]	; 0xffffffe8
   12170:	mov	r3, #32768	; 0x8000
   12174:	str	r3, [fp, #-20]	; 0xffffffec
   12178:	mvn	r3, #0
   1217c:	str	r3, [fp, #-16]
   12180:	mov	r3, #0
   12184:	str	r3, [fp, #-12]
   12188:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1218c:	cmp	r3, #0
   12190:	bne	121ac <MPCS_create+0x60>
   12194:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12198:	cmp	r3, #0
   1219c:	beq	121ac <MPCS_create+0x60>
   121a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   121a4:	cmp	r3, #0
   121a8:	bne	121b8 <MPCS_create+0x6c>
   121ac:	ldr	r3, [pc, #1100]	; 12600 <MPCS_create+0x4b4>
   121b0:	str	r3, [fp, #-24]	; 0xffffffe8
   121b4:	b	121e4 <MPCS_create+0x98>
   121b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   121bc:	lsl	r2, r3, #5
   121c0:	ldr	r3, [pc, #1084]	; 12604 <MPCS_create+0x4b8>
   121c4:	add	r3, r2, r3
   121c8:	str	r3, [fp, #-12]
   121cc:	ldr	r3, [fp, #-12]
   121d0:	ldr	r3, [r3, #20]
   121d4:	cmp	r3, #0
   121d8:	bne	121e4 <MPCS_create+0x98>
   121dc:	ldr	r3, [pc, #1060]	; 12608 <MPCS_create+0x4bc>
   121e0:	str	r3, [fp, #-24]	; 0xffffffe8
   121e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   121e8:	ldr	r3, [pc, #1052]	; 1260c <MPCS_create+0x4c0>
   121ec:	cmp	r2, r3
   121f0:	ble	125f0 <MPCS_create+0x4a4>
   121f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   121f8:	cmp	r3, #34048	; 0x8500
   121fc:	bgt	125f0 <MPCS_create+0x4a4>
   12200:	ldr	r3, [fp, #-12]
   12204:	ldr	r3, [r3, #28]
   12208:	mov	r0, r3
   1220c:	bl	12c3c <MPCS_enter>
   12210:	mov	r3, r0
   12214:	str	r3, [fp, #-20]	; 0xffffffec
   12218:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1221c:	ldr	r1, [pc, #1004]	; 12610 <MPCS_create+0x4c4>
   12220:	mov	r2, #17
   12224:	bl	9cc0 <strncmp@plt>
   12228:	mov	r3, r0
   1222c:	cmp	r3, #0
   12230:	bne	1225c <MPCS_create+0x110>
   12234:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12238:	cmp	r3, #0
   1223c:	bne	1224c <MPCS_create+0x100>
   12240:	ldr	r3, [pc, #952]	; 12600 <MPCS_create+0x4b4>
   12244:	str	r3, [fp, #-24]	; 0xffffffe8
   12248:	b	124b4 <MPCS_create+0x368>
   1224c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12250:	mov	r2, #0
   12254:	strh	r2, [r3, #6]
   12258:	b	124b4 <MPCS_create+0x368>
   1225c:	mov	r3, #0
   12260:	str	r3, [fp, #-8]
   12264:	b	122e4 <MPCS_create+0x198>
   12268:	ldr	r3, [fp, #-12]
   1226c:	ldr	r2, [r3, #24]
   12270:	ldr	r3, [fp, #-8]
   12274:	lsl	r3, r3, #7
   12278:	add	r3, r2, r3
   1227c:	add	r3, r3, #8
   12280:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12284:	mov	r1, r3
   12288:	mov	r2, #32
   1228c:	bl	9cc0 <strncmp@plt>
   12290:	mov	r3, r0
   12294:	cmp	r3, #0
   12298:	bne	122a4 <MPCS_create+0x158>
   1229c:	ldr	r3, [pc, #880]	; 12614 <MPCS_create+0x4c8>
   122a0:	str	r3, [fp, #-24]	; 0xffffffe8
   122a4:	ldr	r3, [fp, #-16]
   122a8:	cmn	r3, #1
   122ac:	bne	122d8 <MPCS_create+0x18c>
   122b0:	ldr	r3, [fp, #-12]
   122b4:	ldr	r2, [r3, #24]
   122b8:	ldr	r3, [fp, #-8]
   122bc:	lsl	r3, r3, #7
   122c0:	add	r3, r2, r3
   122c4:	ldr	r3, [r3, #4]
   122c8:	cmp	r3, #0
   122cc:	bne	122d8 <MPCS_create+0x18c>
   122d0:	ldr	r3, [fp, #-8]
   122d4:	str	r3, [fp, #-16]
   122d8:	ldr	r3, [fp, #-8]
   122dc:	add	r3, r3, #1
   122e0:	str	r3, [fp, #-8]
   122e4:	ldr	r3, [fp, #-12]
   122e8:	ldr	r3, [r3, #20]
   122ec:	ldr	r2, [r3, #8]
   122f0:	ldr	r3, [fp, #-8]
   122f4:	cmp	r2, r3
   122f8:	bls	12318 <MPCS_create+0x1cc>
   122fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12300:	ldr	r3, [pc, #772]	; 1260c <MPCS_create+0x4c0>
   12304:	cmp	r2, r3
   12308:	ble	12318 <MPCS_create+0x1cc>
   1230c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12310:	cmp	r3, #34048	; 0x8500
   12314:	ble	12268 <MPCS_create+0x11c>
   12318:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1231c:	ldr	r3, [pc, #744]	; 1260c <MPCS_create+0x4c0>
   12320:	cmp	r2, r3
   12324:	ble	12348 <MPCS_create+0x1fc>
   12328:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1232c:	cmp	r3, #34048	; 0x8500
   12330:	bgt	12348 <MPCS_create+0x1fc>
   12334:	ldr	r3, [fp, #-16]
   12338:	cmn	r3, #1
   1233c:	bne	12348 <MPCS_create+0x1fc>
   12340:	ldr	r3, [pc, #720]	; 12618 <MPCS_create+0x4cc>
   12344:	str	r3, [fp, #-24]	; 0xffffffe8
   12348:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1234c:	ldr	r3, [pc, #696]	; 1260c <MPCS_create+0x4c0>
   12350:	cmp	r2, r3
   12354:	ble	124b4 <MPCS_create+0x368>
   12358:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1235c:	cmp	r3, #34048	; 0x8500
   12360:	bgt	124b4 <MPCS_create+0x368>
   12364:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12368:	cmp	r3, #0
   1236c:	bne	123c0 <MPCS_create+0x274>
   12370:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12374:	ldrh	r3, [r3]
   12378:	sub	r2, fp, #40	; 0x28
   1237c:	mov	r0, r3
   12380:	mov	r1, r2
   12384:	mov	r2, #384	; 0x180
   12388:	bl	17bbc <POOL_alloc>
   1238c:	mov	r3, r0
   12390:	str	r3, [fp, #-24]	; 0xffffffe8
   12394:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12398:	ldr	r3, [pc, #620]	; 1260c <MPCS_create+0x4c0>
   1239c:	cmp	r2, r3
   123a0:	ble	123cc <MPCS_create+0x280>
   123a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123a8:	cmp	r3, #34048	; 0x8500
   123ac:	bgt	123cc <MPCS_create+0x280>
   123b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   123b4:	mov	r2, #1
   123b8:	strh	r2, [r3, #6]
   123bc:	b	123cc <MPCS_create+0x280>
   123c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   123c4:	mov	r2, #0
   123c8:	strh	r2, [r3, #6]
   123cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   123d0:	ldr	r3, [pc, #564]	; 1260c <MPCS_create+0x4c0>
   123d4:	cmp	r2, r3
   123d8:	ble	124b4 <MPCS_create+0x368>
   123dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123e0:	cmp	r3, #34048	; 0x8500
   123e4:	bgt	124b4 <MPCS_create+0x368>
   123e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   123ec:	ldrh	r2, [r3]
   123f0:	sub	r1, fp, #28
   123f4:	ldr	ip, [fp, #-40]	; 0xffffffd8
   123f8:	mov	r3, #0
   123fc:	str	r3, [sp]
   12400:	mov	r0, r2
   12404:	mov	r2, #3
   12408:	mov	r3, ip
   1240c:	bl	17d1c <POOL_translateAddr>
   12410:	mov	r3, r0
   12414:	str	r3, [fp, #-24]	; 0xffffffe8
   12418:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1241c:	ldr	r3, [pc, #488]	; 1260c <MPCS_create+0x4c0>
   12420:	cmp	r2, r3
   12424:	ble	124b4 <MPCS_create+0x368>
   12428:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1242c:	cmp	r3, #34048	; 0x8500
   12430:	bgt	124b4 <MPCS_create+0x368>
   12434:	ldr	r3, [fp, #-12]
   12438:	ldr	r2, [r3, #24]
   1243c:	ldr	r3, [fp, #-16]
   12440:	lsl	r3, r3, #7
   12444:	add	r2, r2, r3
   12448:	mov	r3, #1
   1244c:	strh	r3, [r2]
   12450:	ldr	r3, [fp, #-12]
   12454:	ldr	r2, [r3, #24]
   12458:	ldr	r3, [fp, #-16]
   1245c:	lsl	r3, r3, #7
   12460:	add	r2, r2, r3
   12464:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12468:	ldrh	r3, [r3]
   1246c:	strh	r3, [r2, #2]
   12470:	ldr	r3, [fp, #-12]
   12474:	ldr	r2, [r3, #24]
   12478:	ldr	r3, [fp, #-16]
   1247c:	lsl	r3, r3, #7
   12480:	add	r2, r2, r3
   12484:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12488:	str	r3, [r2, #4]
   1248c:	ldr	r3, [fp, #-12]
   12490:	ldr	r2, [r3, #24]
   12494:	ldr	r3, [fp, #-16]
   12498:	lsl	r3, r3, #7
   1249c:	add	r3, r2, r3
   124a0:	add	r3, r3, #8
   124a4:	mov	r0, r3
   124a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   124ac:	mov	r2, #32
   124b0:	bl	9e04 <strncpy@plt>
   124b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   124b8:	ldr	r3, [pc, #332]	; 1260c <MPCS_create+0x4c0>
   124bc:	cmp	r2, r3
   124c0:	ble	12598 <MPCS_create+0x44c>
   124c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124c8:	cmp	r3, #34048	; 0x8500
   124cc:	bgt	12598 <MPCS_create+0x44c>
   124d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   124d4:	mov	r2, #256	; 0x100
   124d8:	mov	r3, #0
   124dc:	strh	r3, [r1, r2]
   124e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   124e4:	mov	r3, #0
   124e8:	str	r3, [r2]
   124ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   124f0:	mov	r3, #0
   124f4:	str	r3, [r2, #128]	; 0x80
   124f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   124fc:	ldr	r3, [pc, #280]	; 1261c <MPCS_create+0x4d0>
   12500:	strh	r3, [r2, #4]
   12504:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12508:	ldr	r3, [pc, #268]	; 1261c <MPCS_create+0x4d0>
   1250c:	strh	r3, [r2, #132]	; 0x84
   12510:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12514:	mov	r3, #0
   12518:	strh	r3, [r2, #134]	; 0x86
   1251c:	ldr	r3, [fp, #-16]
   12520:	cmn	r3, #1
   12524:	bne	12538 <MPCS_create+0x3ec>
   12528:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1252c:	mvn	r3, #0
   12530:	str	r3, [r2, #8]
   12534:	b	12554 <MPCS_create+0x408>
   12538:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1253c:	ldr	r3, [fp, #-12]
   12540:	ldr	r2, [r3, #24]
   12544:	ldr	r3, [fp, #-16]
   12548:	lsl	r3, r3, #7
   1254c:	add	r3, r2, r3
   12550:	str	r3, [r1, #8]
   12554:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12558:	mov	r3, #0
   1255c:	str	r3, [r2, #12]
   12560:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12564:	mov	r3, #0
   12568:	str	r3, [r2, #140]	; 0x8c
   1256c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12570:	ldrh	r3, [r3]
   12574:	cmp	r3, #32
   12578:	beq	12598 <MPCS_create+0x44c>
   1257c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12580:	ldrh	r3, [r3]
   12584:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12588:	mov	r0, r3
   1258c:	mov	r1, r2
   12590:	mov	r2, #384	; 0x180
   12594:	bl	170a4 <POOL_writeback>
   12598:	ldr	r3, [fp, #-12]
   1259c:	ldr	r3, [r3, #28]
   125a0:	mov	r0, r3
   125a4:	bl	12e98 <MPCS_leave>
   125a8:	mov	r3, r0
   125ac:	str	r3, [fp, #-20]	; 0xffffffec
   125b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   125b4:	ldr	r3, [pc, #80]	; 1260c <MPCS_create+0x4c0>
   125b8:	cmp	r2, r3
   125bc:	ble	125f0 <MPCS_create+0x4a4>
   125c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125c4:	cmp	r3, #34048	; 0x8500
   125c8:	bgt	125f0 <MPCS_create+0x4a4>
   125cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   125d0:	ldr	r3, [pc, #52]	; 1260c <MPCS_create+0x4c0>
   125d4:	cmp	r2, r3
   125d8:	ble	125e8 <MPCS_create+0x49c>
   125dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   125e0:	cmp	r3, #34048	; 0x8500
   125e4:	ble	125f0 <MPCS_create+0x4a4>
   125e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   125ec:	str	r3, [fp, #-24]	; 0xffffffe8
   125f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125f4:	mov	r0, r3
   125f8:	sub	sp, fp, #4
   125fc:	pop	{fp, pc}
   12600:	.word	0x8000800b
   12604:	.word	0x0002d7d0
   12608:	.word	0x80008000
   1260c:	.word	0x00007fff
   12610:	.word	0x00023824
   12614:	.word	0x80008050
   12618:	.word	0x80008028
   1261c:	.word	0xffffbade

00012620 <MPCS_delete>:
   12620:	push	{fp, lr}
   12624:	add	fp, sp, #4
   12628:	sub	sp, sp, #40	; 0x28
   1262c:	str	r0, [fp, #-32]	; 0xffffffe0
   12630:	str	r1, [fp, #-36]	; 0xffffffdc
   12634:	mov	r3, #32768	; 0x8000
   12638:	str	r3, [fp, #-24]	; 0xffffffe8
   1263c:	mov	r3, #32768	; 0x8000
   12640:	str	r3, [fp, #-20]	; 0xffffffec
   12644:	mov	r3, #0
   12648:	str	r3, [fp, #-16]
   1264c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12650:	cmp	r3, #0
   12654:	bne	12664 <MPCS_delete+0x44>
   12658:	ldr	r3, [pc, #816]	; 12990 <MPCS_delete+0x370>
   1265c:	str	r3, [fp, #-24]	; 0xffffffe8
   12660:	b	12690 <MPCS_delete+0x70>
   12664:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12668:	lsl	r2, r3, #5
   1266c:	ldr	r3, [pc, #800]	; 12994 <MPCS_delete+0x374>
   12670:	add	r3, r2, r3
   12674:	str	r3, [fp, #-16]
   12678:	ldr	r3, [fp, #-16]
   1267c:	ldr	r3, [r3, #20]
   12680:	cmp	r3, #0
   12684:	bne	12690 <MPCS_delete+0x70>
   12688:	ldr	r3, [pc, #776]	; 12998 <MPCS_delete+0x378>
   1268c:	str	r3, [fp, #-24]	; 0xffffffe8
   12690:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12694:	ldr	r3, [pc, #768]	; 1299c <MPCS_delete+0x37c>
   12698:	cmp	r2, r3
   1269c:	ble	12980 <MPCS_delete+0x360>
   126a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   126a4:	cmp	r3, #34048	; 0x8500
   126a8:	bgt	12980 <MPCS_delete+0x360>
   126ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   126b0:	ldr	r1, [pc, #744]	; 129a0 <MPCS_delete+0x380>
   126b4:	mov	r2, #17
   126b8:	bl	9cc0 <strncmp@plt>
   126bc:	mov	r3, r0
   126c0:	cmp	r3, #0
   126c4:	beq	12980 <MPCS_delete+0x360>
   126c8:	ldr	r3, [fp, #-16]
   126cc:	ldr	r3, [r3, #28]
   126d0:	mov	r0, r3
   126d4:	bl	12c3c <MPCS_enter>
   126d8:	mov	r3, r0
   126dc:	str	r3, [fp, #-20]	; 0xffffffec
   126e0:	mov	r3, #0
   126e4:	str	r3, [fp, #-12]
   126e8:	b	1274c <MPCS_delete+0x12c>
   126ec:	ldr	r3, [fp, #-16]
   126f0:	ldr	r2, [r3, #24]
   126f4:	ldr	r3, [fp, #-12]
   126f8:	lsl	r3, r3, #7
   126fc:	add	r3, r2, r3
   12700:	ldr	r3, [r3, #4]
   12704:	cmp	r3, #0
   12708:	beq	12740 <MPCS_delete+0x120>
   1270c:	ldr	r3, [fp, #-16]
   12710:	ldr	r2, [r3, #24]
   12714:	ldr	r3, [fp, #-12]
   12718:	lsl	r3, r3, #7
   1271c:	add	r3, r2, r3
   12720:	add	r3, r3, #8
   12724:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12728:	mov	r1, r3
   1272c:	mov	r2, #32
   12730:	bl	9cc0 <strncmp@plt>
   12734:	mov	r3, r0
   12738:	cmp	r3, #0
   1273c:	beq	12764 <MPCS_delete+0x144>
   12740:	ldr	r3, [fp, #-12]
   12744:	add	r3, r3, #1
   12748:	str	r3, [fp, #-12]
   1274c:	ldr	r3, [fp, #-16]
   12750:	ldr	r3, [r3, #20]
   12754:	ldr	r2, [r3, #8]
   12758:	ldr	r3, [fp, #-12]
   1275c:	cmp	r2, r3
   12760:	bhi	126ec <MPCS_delete+0xcc>
   12764:	ldr	r3, [fp, #-16]
   12768:	ldr	r3, [r3, #20]
   1276c:	ldr	r2, [r3, #8]
   12770:	ldr	r3, [fp, #-12]
   12774:	cmp	r2, r3
   12778:	bne	12788 <MPCS_delete+0x168>
   1277c:	ldr	r3, [pc, #544]	; 129a4 <MPCS_delete+0x384>
   12780:	str	r3, [fp, #-24]	; 0xffffffe8
   12784:	b	12928 <MPCS_delete+0x308>
   12788:	ldr	r3, [fp, #-16]
   1278c:	ldr	r2, [r3, #24]
   12790:	ldr	r3, [fp, #-12]
   12794:	lsl	r3, r3, #7
   12798:	add	r3, r2, r3
   1279c:	ldrh	r3, [r3]
   127a0:	cmp	r3, #1
   127a4:	bne	12920 <MPCS_delete+0x300>
   127a8:	ldr	r3, [fp, #-16]
   127ac:	ldr	r2, [r3, #24]
   127b0:	ldr	r3, [fp, #-12]
   127b4:	lsl	r3, r3, #7
   127b8:	add	r3, r2, r3
   127bc:	ldrh	r3, [r3, #2]
   127c0:	mov	r2, r3
   127c4:	and	r2, r2, #255	; 0xff
   127c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   127cc:	lsl	r3, r3, #16
   127d0:	lsr	r3, r3, #16
   127d4:	lsl	r3, r3, #8
   127d8:	lsl	r3, r3, #16
   127dc:	lsr	r3, r3, #16
   127e0:	orr	r3, r2, r3
   127e4:	strh	r3, [fp, #-6]
   127e8:	sub	r1, fp, #28
   127ec:	ldr	r3, [fp, #-16]
   127f0:	ldr	r2, [r3, #24]
   127f4:	ldr	r3, [fp, #-12]
   127f8:	lsl	r3, r3, #7
   127fc:	add	r3, r2, r3
   12800:	ldr	ip, [r3, #4]
   12804:	ldrh	r2, [fp, #-6]
   12808:	mov	r3, #3
   1280c:	str	r3, [sp]
   12810:	mov	r0, r2
   12814:	mov	r2, #0
   12818:	mov	r3, ip
   1281c:	bl	17d1c <POOL_translateAddr>
   12820:	mov	r3, r0
   12824:	str	r3, [fp, #-24]	; 0xffffffe8
   12828:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1282c:	ldr	r3, [pc, #360]	; 1299c <MPCS_delete+0x37c>
   12830:	cmp	r2, r3
   12834:	ble	12928 <MPCS_delete+0x308>
   12838:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1283c:	cmp	r3, #34048	; 0x8500
   12840:	bgt	12928 <MPCS_delete+0x308>
   12844:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12848:	ldr	r3, [pc, #344]	; 129a8 <MPCS_delete+0x388>
   1284c:	strh	r3, [r2, #132]	; 0x84
   12850:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12854:	ldr	r3, [pc, #332]	; 129a8 <MPCS_delete+0x388>
   12858:	strh	r3, [r2, #4]
   1285c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12860:	mov	r3, #0
   12864:	str	r3, [r2, #8]
   12868:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1286c:	mov	r3, #0
   12870:	str	r3, [r2, #12]
   12874:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12878:	mov	r3, #0
   1287c:	str	r3, [r2, #140]	; 0x8c
   12880:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12884:	ldrh	r3, [r3, #6]
   12888:	lsl	r3, r3, #16
   1288c:	lsr	r3, r3, #16
   12890:	cmp	r3, #1
   12894:	bne	128f8 <MPCS_delete+0x2d8>
   12898:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1289c:	ldrh	r3, [fp, #-6]
   128a0:	mov	r0, r3
   128a4:	mov	r1, r2
   128a8:	mov	r2, #384	; 0x180
   128ac:	bl	17c6c <POOL_free>
   128b0:	mov	r3, r0
   128b4:	str	r3, [fp, #-20]	; 0xffffffec
   128b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   128bc:	ldr	r3, [pc, #216]	; 1299c <MPCS_delete+0x37c>
   128c0:	cmp	r2, r3
   128c4:	ble	128f8 <MPCS_delete+0x2d8>
   128c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   128cc:	cmp	r3, #34048	; 0x8500
   128d0:	bgt	128f8 <MPCS_delete+0x2d8>
   128d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   128d8:	ldr	r3, [pc, #188]	; 1299c <MPCS_delete+0x37c>
   128dc:	cmp	r2, r3
   128e0:	ble	128f0 <MPCS_delete+0x2d0>
   128e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   128e8:	cmp	r3, #34048	; 0x8500
   128ec:	ble	128f8 <MPCS_delete+0x2d8>
   128f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   128f4:	str	r3, [fp, #-24]	; 0xffffffe8
   128f8:	ldr	r3, [fp, #-16]
   128fc:	ldr	r2, [r3, #24]
   12900:	ldr	r3, [fp, #-12]
   12904:	lsl	r3, r3, #7
   12908:	add	r3, r2, r3
   1290c:	mov	r0, r3
   12910:	mov	r1, #0
   12914:	mov	r2, #128	; 0x80
   12918:	bl	9f6c <memset@plt>
   1291c:	b	12928 <MPCS_delete+0x308>
   12920:	ldr	r3, [pc, #104]	; 12990 <MPCS_delete+0x370>
   12924:	str	r3, [fp, #-24]	; 0xffffffe8
   12928:	ldr	r3, [fp, #-16]
   1292c:	ldr	r3, [r3, #28]
   12930:	mov	r0, r3
   12934:	bl	12e98 <MPCS_leave>
   12938:	mov	r3, r0
   1293c:	str	r3, [fp, #-20]	; 0xffffffec
   12940:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12944:	ldr	r3, [pc, #80]	; 1299c <MPCS_delete+0x37c>
   12948:	cmp	r2, r3
   1294c:	ble	12980 <MPCS_delete+0x360>
   12950:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12954:	cmp	r3, #34048	; 0x8500
   12958:	bgt	12980 <MPCS_delete+0x360>
   1295c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12960:	ldr	r3, [pc, #52]	; 1299c <MPCS_delete+0x37c>
   12964:	cmp	r2, r3
   12968:	ble	12978 <MPCS_delete+0x358>
   1296c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12970:	cmp	r3, #34048	; 0x8500
   12974:	ble	12980 <MPCS_delete+0x360>
   12978:	ldr	r3, [fp, #-20]	; 0xffffffec
   1297c:	str	r3, [fp, #-24]	; 0xffffffe8
   12980:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12984:	mov	r0, r3
   12988:	sub	sp, fp, #4
   1298c:	pop	{fp, pc}
   12990:	.word	0x8000800b
   12994:	.word	0x0002d7d0
   12998:	.word	0x80008000
   1299c:	.word	0x00007fff
   129a0:	.word	0x00023824
   129a4:	.word	0x8000802d
   129a8:	.word	0xffffbade

000129ac <MPCS_open>:
   129ac:	push	{fp, lr}
   129b0:	add	fp, sp, #4
   129b4:	sub	sp, sp, #32
   129b8:	str	r0, [fp, #-24]	; 0xffffffe8
   129bc:	str	r1, [fp, #-28]	; 0xffffffe4
   129c0:	str	r2, [fp, #-32]	; 0xffffffe0
   129c4:	mov	r3, #32768	; 0x8000
   129c8:	str	r3, [fp, #-16]
   129cc:	mov	r3, #0
   129d0:	str	r3, [fp, #-12]
   129d4:	mov	r3, #0
   129d8:	str	r3, [fp, #-8]
   129dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   129e0:	cmp	r3, #0
   129e4:	bne	12a00 <MPCS_open+0x54>
   129e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   129ec:	cmp	r3, #0
   129f0:	beq	12a00 <MPCS_open+0x54>
   129f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   129f8:	cmp	r3, #0
   129fc:	bne	12a0c <MPCS_open+0x60>
   12a00:	ldr	r3, [pc, #172]	; 12ab4 <MPCS_open+0x108>
   12a04:	str	r3, [fp, #-16]
   12a08:	b	12a38 <MPCS_open+0x8c>
   12a0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12a10:	lsl	r2, r3, #5
   12a14:	ldr	r3, [pc, #156]	; 12ab8 <MPCS_open+0x10c>
   12a18:	add	r3, r2, r3
   12a1c:	str	r3, [fp, #-8]
   12a20:	ldr	r3, [fp, #-8]
   12a24:	ldr	r3, [r3, #20]
   12a28:	cmp	r3, #0
   12a2c:	bne	12a38 <MPCS_open+0x8c>
   12a30:	ldr	r3, [pc, #132]	; 12abc <MPCS_open+0x110>
   12a34:	str	r3, [fp, #-16]
   12a38:	ldr	r2, [fp, #-16]
   12a3c:	ldr	r3, [pc, #124]	; 12ac0 <MPCS_open+0x114>
   12a40:	cmp	r2, r3
   12a44:	ble	12aa4 <MPCS_open+0xf8>
   12a48:	ldr	r3, [fp, #-16]
   12a4c:	cmp	r3, #34048	; 0x8500
   12a50:	bgt	12aa4 <MPCS_open+0xf8>
   12a54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12a5c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12a60:	mov	r3, #0
   12a64:	bl	11d90 <_MPCS_open>
   12a68:	mov	r3, r0
   12a6c:	str	r3, [fp, #-16]
   12a70:	ldr	r2, [fp, #-16]
   12a74:	ldr	r3, [pc, #68]	; 12ac0 <MPCS_open+0x114>
   12a78:	cmp	r2, r3
   12a7c:	ble	12aa4 <MPCS_open+0xf8>
   12a80:	ldr	r3, [fp, #-16]
   12a84:	cmp	r3, #34048	; 0x8500
   12a88:	bgt	12aa4 <MPCS_open+0xf8>
   12a8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12a90:	ldr	r3, [r3]
   12a94:	str	r3, [fp, #-12]
   12a98:	ldr	r2, [fp, #-12]
   12a9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12aa0:	str	r3, [r2, #12]
   12aa4:	ldr	r3, [fp, #-16]
   12aa8:	mov	r0, r3
   12aac:	sub	sp, fp, #4
   12ab0:	pop	{fp, pc}
   12ab4:	.word	0x8000800b
   12ab8:	.word	0x0002d7d0
   12abc:	.word	0x80008000
   12ac0:	.word	0x00007fff

00012ac4 <MPCS_close>:
   12ac4:	push	{fp, lr}
   12ac8:	add	fp, sp, #4
   12acc:	sub	sp, sp, #32
   12ad0:	str	r0, [fp, #-32]	; 0xffffffe0
   12ad4:	str	r1, [fp, #-36]	; 0xffffffdc
   12ad8:	mov	r3, #32768	; 0x8000
   12adc:	str	r3, [fp, #-24]	; 0xffffffe8
   12ae0:	mov	r3, #32768	; 0x8000
   12ae4:	str	r3, [fp, #-20]	; 0xffffffec
   12ae8:	mov	r3, #0
   12aec:	strh	r3, [fp, #-14]
   12af0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12af4:	str	r3, [fp, #-12]
   12af8:	mov	r3, #0
   12afc:	str	r3, [fp, #-8]
   12b00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12b04:	cmp	r3, #0
   12b08:	bne	12b18 <MPCS_close+0x54>
   12b0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12b10:	cmp	r3, #0
   12b14:	bne	12b24 <MPCS_close+0x60>
   12b18:	ldr	r3, [pc, #268]	; 12c2c <MPCS_close+0x168>
   12b1c:	str	r3, [fp, #-24]	; 0xffffffe8
   12b20:	b	12b50 <MPCS_close+0x8c>
   12b24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12b28:	lsl	r2, r3, #5
   12b2c:	ldr	r3, [pc, #252]	; 12c30 <MPCS_close+0x16c>
   12b30:	add	r3, r2, r3
   12b34:	str	r3, [fp, #-8]
   12b38:	ldr	r3, [fp, #-8]
   12b3c:	ldr	r3, [r3, #20]
   12b40:	cmp	r3, #0
   12b44:	bne	12b50 <MPCS_close+0x8c>
   12b48:	ldr	r3, [pc, #228]	; 12c34 <MPCS_close+0x170>
   12b4c:	str	r3, [fp, #-24]	; 0xffffffe8
   12b50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12b54:	ldr	r3, [pc, #220]	; 12c38 <MPCS_close+0x174>
   12b58:	cmp	r2, r3
   12b5c:	ble	12c1c <MPCS_close+0x158>
   12b60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12b64:	cmp	r3, #34048	; 0x8500
   12b68:	bgt	12c1c <MPCS_close+0x158>
   12b6c:	ldr	r3, [fp, #-8]
   12b70:	ldr	r2, [r3, #28]
   12b74:	ldr	r3, [fp, #-12]
   12b78:	cmp	r2, r3
   12b7c:	bne	12b8c <MPCS_close+0xc8>
   12b80:	mov	r3, #1
   12b84:	strh	r3, [fp, #-14]
   12b88:	b	12ba4 <MPCS_close+0xe0>
   12b8c:	ldr	r3, [fp, #-8]
   12b90:	ldr	r3, [r3, #28]
   12b94:	mov	r0, r3
   12b98:	bl	12c3c <MPCS_enter>
   12b9c:	mov	r3, r0
   12ba0:	str	r3, [fp, #-20]	; 0xffffffec
   12ba4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ba8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12bac:	bl	130e0 <_MPCS_OS_close>
   12bb0:	mov	r3, r0
   12bb4:	str	r3, [fp, #-24]	; 0xffffffe8
   12bb8:	ldrsh	r3, [fp, #-14]
   12bbc:	cmp	r3, #0
   12bc0:	bne	12c1c <MPCS_close+0x158>
   12bc4:	ldr	r3, [fp, #-8]
   12bc8:	ldr	r3, [r3, #28]
   12bcc:	mov	r0, r3
   12bd0:	bl	12e98 <MPCS_leave>
   12bd4:	mov	r3, r0
   12bd8:	str	r3, [fp, #-20]	; 0xffffffec
   12bdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12be0:	ldr	r3, [pc, #80]	; 12c38 <MPCS_close+0x174>
   12be4:	cmp	r2, r3
   12be8:	ble	12c1c <MPCS_close+0x158>
   12bec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12bf0:	cmp	r3, #34048	; 0x8500
   12bf4:	bgt	12c1c <MPCS_close+0x158>
   12bf8:	ldr	r2, [fp, #-20]	; 0xffffffec
   12bfc:	ldr	r3, [pc, #52]	; 12c38 <MPCS_close+0x174>
   12c00:	cmp	r2, r3
   12c04:	ble	12c14 <MPCS_close+0x150>
   12c08:	ldr	r3, [fp, #-20]	; 0xffffffec
   12c0c:	cmp	r3, #34048	; 0x8500
   12c10:	ble	12c1c <MPCS_close+0x158>
   12c14:	ldr	r3, [fp, #-20]	; 0xffffffec
   12c18:	str	r3, [fp, #-24]	; 0xffffffe8
   12c1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12c20:	mov	r0, r3
   12c24:	sub	sp, fp, #4
   12c28:	pop	{fp, pc}
   12c2c:	.word	0x8000800b
   12c30:	.word	0x0002d7d0
   12c34:	.word	0x80008000
   12c38:	.word	0x00007fff

00012c3c <MPCS_enter>:
   12c3c:	push	{fp, lr}
   12c40:	add	fp, sp, #4
   12c44:	sub	sp, sp, #24
   12c48:	str	r0, [fp, #-24]	; 0xffffffe8
   12c4c:	mov	r3, #32768	; 0x8000
   12c50:	str	r3, [fp, #-20]	; 0xffffffec
   12c54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12c58:	str	r3, [fp, #-16]
   12c5c:	mov	r3, #0
   12c60:	str	r3, [fp, #-12]
   12c64:	mov	r3, #0
   12c68:	strh	r3, [fp, #-6]
   12c6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12c70:	cmp	r3, #0
   12c74:	bne	12c84 <MPCS_enter+0x48>
   12c78:	ldr	r3, [pc, #512]	; 12e80 <MPCS_enter+0x244>
   12c7c:	str	r3, [fp, #-20]	; 0xffffffec
   12c80:	b	12cb4 <MPCS_enter+0x78>
   12c84:	ldr	r3, [fp, #-16]
   12c88:	ldr	r3, [r3, #12]
   12c8c:	lsl	r2, r3, #5
   12c90:	ldr	r3, [pc, #492]	; 12e84 <MPCS_enter+0x248>
   12c94:	add	r3, r2, r3
   12c98:	str	r3, [fp, #-12]
   12c9c:	ldr	r3, [fp, #-12]
   12ca0:	ldr	r3, [r3, #20]
   12ca4:	cmp	r3, #0
   12ca8:	bne	12cb4 <MPCS_enter+0x78>
   12cac:	ldr	r3, [pc, #468]	; 12e88 <MPCS_enter+0x24c>
   12cb0:	str	r3, [fp, #-20]	; 0xffffffec
   12cb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   12cb8:	ldr	r3, [pc, #460]	; 12e8c <MPCS_enter+0x250>
   12cbc:	cmp	r2, r3
   12cc0:	ble	12e70 <MPCS_enter+0x234>
   12cc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   12cc8:	cmp	r3, #34048	; 0x8500
   12ccc:	bgt	12e70 <MPCS_enter+0x234>
   12cd0:	ldr	r3, [fp, #-16]
   12cd4:	ldr	r3, [r3, #12]
   12cd8:	mov	r0, r3
   12cdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12ce0:	bl	1318c <_MPCS_OS_enter>
   12ce4:	mov	r3, r0
   12ce8:	str	r3, [fp, #-20]	; 0xffffffec
   12cec:	ldr	r2, [fp, #-20]	; 0xffffffec
   12cf0:	ldr	r3, [pc, #404]	; 12e8c <MPCS_enter+0x250>
   12cf4:	cmp	r2, r3
   12cf8:	ble	12e70 <MPCS_enter+0x234>
   12cfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   12d00:	cmp	r3, #34048	; 0x8500
   12d04:	bgt	12e70 <MPCS_enter+0x234>
   12d08:	ldr	r3, [fp, #-16]
   12d0c:	ldr	r2, [r3]
   12d10:	ldr	r3, [pc, #376]	; 12e90 <MPCS_enter+0x254>
   12d14:	strh	r3, [r2, #4]
   12d18:	ldr	r3, [fp, #-16]
   12d1c:	ldr	r3, [r3, #8]
   12d20:	cmn	r3, #1
   12d24:	beq	12d90 <MPCS_enter+0x154>
   12d28:	ldr	r3, [fp, #-12]
   12d2c:	ldr	r2, [r3, #24]
   12d30:	ldr	r3, [fp, #-16]
   12d34:	ldr	r3, [r3, #8]
   12d38:	lsl	r3, r3, #7
   12d3c:	add	r3, r2, r3
   12d40:	ldrh	r3, [r3, #2]
   12d44:	mov	r2, r3
   12d48:	and	r2, r2, #255	; 0xff
   12d4c:	ldr	r3, [fp, #-16]
   12d50:	ldr	r3, [r3, #12]
   12d54:	lsl	r3, r3, #16
   12d58:	lsr	r3, r3, #16
   12d5c:	lsl	r3, r3, #8
   12d60:	lsl	r3, r3, #16
   12d64:	lsr	r3, r3, #16
   12d68:	orr	r3, r2, r3
   12d6c:	strh	r3, [fp, #-6]
   12d70:	ldr	r3, [fp, #-16]
   12d74:	ldr	r3, [r3]
   12d78:	mov	r2, r3
   12d7c:	ldrh	r3, [fp, #-6]
   12d80:	mov	r0, r3
   12d84:	mov	r1, r2
   12d88:	mov	r2, #16
   12d8c:	bl	170a4 <POOL_writeback>
   12d90:	ldr	r3, [fp, #-16]
   12d94:	ldr	r1, [r3]
   12d98:	mov	r2, #256	; 0x100
   12d9c:	mov	r3, #1
   12da0:	strh	r3, [r1, r2]
   12da4:	ldr	r3, [fp, #-16]
   12da8:	ldr	r3, [r3, #8]
   12dac:	cmn	r3, #1
   12db0:	beq	12dd4 <MPCS_enter+0x198>
   12db4:	ldr	r3, [fp, #-16]
   12db8:	ldr	r3, [r3]
   12dbc:	add	r2, r3, #256	; 0x100
   12dc0:	ldrh	r3, [fp, #-6]
   12dc4:	mov	r0, r3
   12dc8:	mov	r1, r2
   12dcc:	mov	r2, #2
   12dd0:	bl	170a4 <POOL_writeback>
   12dd4:	ldr	r3, [fp, #-16]
   12dd8:	ldr	r3, [r3, #8]
   12ddc:	cmn	r3, #1
   12de0:	beq	12e30 <MPCS_enter+0x1f4>
   12de4:	ldr	r3, [fp, #-16]
   12de8:	ldr	r2, [r3]
   12dec:	ldrh	r3, [fp, #-6]
   12df0:	mov	r0, r3
   12df4:	mov	r1, r2
   12df8:	mov	r2, #384	; 0x180
   12dfc:	bl	17224 <POOL_invalidate>
   12e00:	b	12e30 <MPCS_enter+0x1f4>
   12e04:	ldr	r3, [fp, #-16]
   12e08:	ldr	r3, [r3, #8]
   12e0c:	cmn	r3, #1
   12e10:	beq	12e30 <MPCS_enter+0x1f4>
   12e14:	ldr	r3, [fp, #-16]
   12e18:	ldr	r2, [r3]
   12e1c:	ldrh	r3, [fp, #-6]
   12e20:	mov	r0, r3
   12e24:	mov	r1, r2
   12e28:	mov	r2, #384	; 0x180
   12e2c:	bl	17224 <POOL_invalidate>
   12e30:	ldr	r3, [fp, #-16]
   12e34:	ldr	r3, [r3]
   12e38:	ldrh	r3, [r3, #132]	; 0x84
   12e3c:	lsl	r3, r3, #16
   12e40:	lsr	r2, r3, #16
   12e44:	ldr	r3, [pc, #72]	; 12e94 <MPCS_enter+0x258>
   12e48:	cmp	r2, r3
   12e4c:	bne	12e70 <MPCS_enter+0x234>
   12e50:	ldr	r3, [fp, #-16]
   12e54:	ldr	r2, [r3]
   12e58:	mov	r3, #256	; 0x100
   12e5c:	ldrh	r3, [r2, r3]
   12e60:	lsl	r3, r3, #16
   12e64:	lsr	r3, r3, #16
   12e68:	cmp	r3, #0
   12e6c:	bne	12e04 <MPCS_enter+0x1c8>
   12e70:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e74:	mov	r0, r3
   12e78:	sub	sp, fp, #4
   12e7c:	pop	{fp, pc}
   12e80:	.word	0x8000800b
   12e84:	.word	0x0002d7d0
   12e88:	.word	0x80008000
   12e8c:	.word	0x00007fff
   12e90:	.word	0xffffdaba
   12e94:	.word	0x0000daba

00012e98 <MPCS_leave>:
   12e98:	push	{fp, lr}
   12e9c:	add	fp, sp, #4
   12ea0:	sub	sp, sp, #24
   12ea4:	str	r0, [fp, #-24]	; 0xffffffe8
   12ea8:	mov	r3, #32768	; 0x8000
   12eac:	str	r3, [fp, #-20]	; 0xffffffec
   12eb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12eb4:	str	r3, [fp, #-16]
   12eb8:	mov	r3, #0
   12ebc:	str	r3, [fp, #-12]
   12ec0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12ec4:	cmp	r3, #0
   12ec8:	bne	12ed8 <MPCS_leave+0x40>
   12ecc:	ldr	r3, [pc, #304]	; 13004 <MPCS_leave+0x16c>
   12ed0:	str	r3, [fp, #-20]	; 0xffffffec
   12ed4:	b	12f08 <MPCS_leave+0x70>
   12ed8:	ldr	r3, [fp, #-16]
   12edc:	ldr	r3, [r3, #12]
   12ee0:	lsl	r2, r3, #5
   12ee4:	ldr	r3, [pc, #284]	; 13008 <MPCS_leave+0x170>
   12ee8:	add	r3, r2, r3
   12eec:	str	r3, [fp, #-12]
   12ef0:	ldr	r3, [fp, #-12]
   12ef4:	ldr	r3, [r3, #20]
   12ef8:	cmp	r3, #0
   12efc:	bne	12f08 <MPCS_leave+0x70>
   12f00:	ldr	r3, [pc, #260]	; 1300c <MPCS_leave+0x174>
   12f04:	str	r3, [fp, #-20]	; 0xffffffec
   12f08:	ldr	r2, [fp, #-20]	; 0xffffffec
   12f0c:	ldr	r3, [pc, #252]	; 13010 <MPCS_leave+0x178>
   12f10:	cmp	r2, r3
   12f14:	ble	12ff4 <MPCS_leave+0x15c>
   12f18:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f1c:	cmp	r3, #34048	; 0x8500
   12f20:	bgt	12ff4 <MPCS_leave+0x15c>
   12f24:	ldr	r3, [fp, #-16]
   12f28:	ldr	r3, [r3]
   12f2c:	ldrh	r3, [r3, #4]
   12f30:	lsl	r3, r3, #16
   12f34:	lsr	r2, r3, #16
   12f38:	ldr	r3, [pc, #212]	; 13014 <MPCS_leave+0x17c>
   12f3c:	cmp	r2, r3
   12f40:	bne	12fec <MPCS_leave+0x154>
   12f44:	ldr	r3, [fp, #-16]
   12f48:	ldr	r2, [r3]
   12f4c:	ldr	r3, [pc, #196]	; 13018 <MPCS_leave+0x180>
   12f50:	strh	r3, [r2, #4]
   12f54:	ldr	r3, [fp, #-16]
   12f58:	ldr	r3, [r3, #8]
   12f5c:	cmn	r3, #1
   12f60:	beq	12fcc <MPCS_leave+0x134>
   12f64:	ldr	r3, [fp, #-12]
   12f68:	ldr	r2, [r3, #24]
   12f6c:	ldr	r3, [fp, #-16]
   12f70:	ldr	r3, [r3, #8]
   12f74:	lsl	r3, r3, #7
   12f78:	add	r3, r2, r3
   12f7c:	ldrh	r3, [r3, #2]
   12f80:	mov	r2, r3
   12f84:	and	r2, r2, #255	; 0xff
   12f88:	ldr	r3, [fp, #-16]
   12f8c:	ldr	r3, [r3, #12]
   12f90:	lsl	r3, r3, #16
   12f94:	lsr	r3, r3, #16
   12f98:	lsl	r3, r3, #8
   12f9c:	lsl	r3, r3, #16
   12fa0:	lsr	r3, r3, #16
   12fa4:	orr	r3, r2, r3
   12fa8:	strh	r3, [fp, #-6]
   12fac:	ldr	r3, [fp, #-16]
   12fb0:	ldr	r3, [r3]
   12fb4:	mov	r2, r3
   12fb8:	ldrh	r3, [fp, #-6]
   12fbc:	mov	r0, r3
   12fc0:	mov	r1, r2
   12fc4:	mov	r2, #16
   12fc8:	bl	170a4 <POOL_writeback>
   12fcc:	ldr	r3, [fp, #-16]
   12fd0:	ldr	r3, [r3, #12]
   12fd4:	mov	r0, r3
   12fd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12fdc:	bl	131d8 <_MPCS_OS_leave>
   12fe0:	mov	r3, r0
   12fe4:	str	r3, [fp, #-20]	; 0xffffffec
   12fe8:	b	12ff4 <MPCS_leave+0x15c>
   12fec:	ldr	r3, [pc, #16]	; 13004 <MPCS_leave+0x16c>
   12ff0:	str	r3, [fp, #-20]	; 0xffffffec
   12ff4:	ldr	r3, [fp, #-20]	; 0xffffffec
   12ff8:	mov	r0, r3
   12ffc:	sub	sp, fp, #4
   13000:	pop	{fp, pc}
   13004:	.word	0x8000800b
   13008:	.word	0x0002d7d0
   1300c:	.word	0x80008000
   13010:	.word	0x00007fff
   13014:	.word	0x0000daba
   13018:	.word	0xffffbade

0001301c <_MPCS_OS_open>:
   1301c:	push	{fp, lr}
   13020:	add	fp, sp, #4
   13024:	sub	sp, sp, #24
   13028:	str	r0, [fp, #-16]
   1302c:	str	r1, [fp, #-20]	; 0xffffffec
   13030:	str	r2, [fp, #-24]	; 0xffffffe8
   13034:	str	r3, [fp, #-28]	; 0xffffffe4
   13038:	mov	r3, #32768	; 0x8000
   1303c:	str	r3, [fp, #-12]
   13040:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13044:	str	r3, [fp, #-8]
   13048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1304c:	mov	r1, #16
   13050:	bl	119d0 <_MEM_USR_calloc>
   13054:	mov	r3, r0
   13058:	str	r3, [fp, #-12]
   1305c:	ldr	r2, [fp, #-12]
   13060:	ldr	r3, [pc, #116]	; 130dc <_MPCS_OS_open+0xc0>
   13064:	cmp	r2, r3
   13068:	ble	130cc <_MPCS_OS_open+0xb0>
   1306c:	ldr	r3, [fp, #-12]
   13070:	cmp	r3, #34048	; 0x8500
   13074:	bgt	130cc <_MPCS_OS_open+0xb0>
   13078:	ldr	r3, [fp, #-8]
   1307c:	ldr	r2, [r3]
   13080:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13084:	str	r3, [r2]
   13088:	ldr	r3, [fp, #-8]
   1308c:	ldr	r3, [r3]
   13090:	add	r3, r3, #4
   13094:	ldr	r0, [fp, #-20]	; 0xffffffec
   13098:	mov	r1, r3
   1309c:	bl	227e4 <_SYNC_USR_createCS>
   130a0:	mov	r3, r0
   130a4:	str	r3, [fp, #-12]
   130a8:	ldr	r2, [fp, #-12]
   130ac:	ldr	r3, [pc, #40]	; 130dc <_MPCS_OS_open+0xc0>
   130b0:	cmp	r2, r3
   130b4:	ble	130c4 <_MPCS_OS_open+0xa8>
   130b8:	ldr	r3, [fp, #-12]
   130bc:	cmp	r3, #34048	; 0x8500
   130c0:	ble	130cc <_MPCS_OS_open+0xb0>
   130c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130c8:	bl	11a5c <_MEM_USR_free>
   130cc:	ldr	r3, [fp, #-12]
   130d0:	mov	r0, r3
   130d4:	sub	sp, fp, #4
   130d8:	pop	{fp, pc}
   130dc:	.word	0x00007fff

000130e0 <_MPCS_OS_close>:
   130e0:	push	{fp, lr}
   130e4:	add	fp, sp, #4
   130e8:	sub	sp, sp, #24
   130ec:	str	r0, [fp, #-24]	; 0xffffffe8
   130f0:	str	r1, [fp, #-28]	; 0xffffffe4
   130f4:	mov	r3, #32768	; 0x8000
   130f8:	str	r3, [fp, #-16]
   130fc:	mov	r3, #32768	; 0x8000
   13100:	str	r3, [fp, #-12]
   13104:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13108:	str	r3, [fp, #-8]
   1310c:	ldr	r3, [fp, #-8]
   13110:	add	r3, r3, #4
   13114:	mov	r0, r3
   13118:	bl	22a74 <_SYNC_USR_deleteCS>
   1311c:	mov	r3, r0
   13120:	str	r3, [fp, #-16]
   13124:	sub	r3, fp, #28
   13128:	mov	r0, r3
   1312c:	bl	11a5c <_MEM_USR_free>
   13130:	mov	r3, r0
   13134:	str	r3, [fp, #-12]
   13138:	ldr	r2, [fp, #-16]
   1313c:	ldr	r3, [pc, #68]	; 13188 <_MPCS_OS_close+0xa8>
   13140:	cmp	r2, r3
   13144:	ble	13178 <_MPCS_OS_close+0x98>
   13148:	ldr	r3, [fp, #-16]
   1314c:	cmp	r3, #34048	; 0x8500
   13150:	bgt	13178 <_MPCS_OS_close+0x98>
   13154:	ldr	r2, [fp, #-12]
   13158:	ldr	r3, [pc, #40]	; 13188 <_MPCS_OS_close+0xa8>
   1315c:	cmp	r2, r3
   13160:	ble	13170 <_MPCS_OS_close+0x90>
   13164:	ldr	r3, [fp, #-12]
   13168:	cmp	r3, #34048	; 0x8500
   1316c:	ble	13178 <_MPCS_OS_close+0x98>
   13170:	ldr	r3, [fp, #-12]
   13174:	str	r3, [fp, #-16]
   13178:	ldr	r3, [fp, #-16]
   1317c:	mov	r0, r3
   13180:	sub	sp, fp, #4
   13184:	pop	{fp, pc}
   13188:	.word	0x00007fff

0001318c <_MPCS_OS_enter>:
   1318c:	push	{fp, lr}
   13190:	add	fp, sp, #4
   13194:	sub	sp, sp, #16
   13198:	str	r0, [fp, #-16]
   1319c:	str	r1, [fp, #-20]	; 0xffffffec
   131a0:	mov	r3, #32768	; 0x8000
   131a4:	str	r3, [fp, #-12]
   131a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   131ac:	str	r3, [fp, #-8]
   131b0:	ldr	r3, [fp, #-8]
   131b4:	ldr	r3, [r3, #4]
   131b8:	mov	r0, r3
   131bc:	bl	22b68 <_SYNC_USR_enterCS>
   131c0:	mov	r3, r0
   131c4:	str	r3, [fp, #-12]
   131c8:	ldr	r3, [fp, #-12]
   131cc:	mov	r0, r3
   131d0:	sub	sp, fp, #4
   131d4:	pop	{fp, pc}

000131d8 <_MPCS_OS_leave>:
   131d8:	push	{fp, lr}
   131dc:	add	fp, sp, #4
   131e0:	sub	sp, sp, #16
   131e4:	str	r0, [fp, #-16]
   131e8:	str	r1, [fp, #-20]	; 0xffffffec
   131ec:	mov	r3, #32768	; 0x8000
   131f0:	str	r3, [fp, #-12]
   131f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   131f8:	str	r3, [fp, #-8]
   131fc:	ldr	r3, [fp, #-8]
   13200:	ldr	r3, [r3, #4]
   13204:	mov	r0, r3
   13208:	bl	22c7c <_SYNC_USR_leaveCS>
   1320c:	mov	r3, r0
   13210:	str	r3, [fp, #-12]
   13214:	ldr	r3, [fp, #-12]
   13218:	mov	r0, r3
   1321c:	sub	sp, fp, #4
   13220:	pop	{fp, pc}

00013224 <_MPLIST_moduleInit>:
   13224:	push	{fp, lr}
   13228:	add	fp, sp, #4
   1322c:	sub	sp, sp, #72	; 0x48
   13230:	str	r0, [fp, #-72]	; 0xffffffb8
   13234:	mov	r3, #32768	; 0x8000
   13238:	str	r3, [fp, #-36]	; 0xffffffdc
   1323c:	mov	r3, #32768	; 0x8000
   13240:	str	r3, [fp, #-32]	; 0xffffffe0
   13244:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13248:	cmp	r3, #0
   1324c:	beq	1325c <_MPLIST_moduleInit+0x38>
   13250:	ldr	r3, [pc, #524]	; 13464 <_MPLIST_moduleInit+0x240>
   13254:	str	r3, [fp, #-36]	; 0xffffffdc
   13258:	b	13454 <_MPLIST_moduleInit+0x230>
   1325c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13260:	str	r3, [fp, #-56]	; 0xffffffc8
   13264:	ldr	r3, [pc, #508]	; 13468 <_MPLIST_moduleInit+0x244>
   13268:	ldr	r3, [r3]
   1326c:	sub	r2, fp, #60	; 0x3c
   13270:	mov	r0, r3
   13274:	ldr	r1, [pc, #496]	; 1346c <_MPLIST_moduleInit+0x248>
   13278:	mov	r3, #0
   1327c:	bl	f94c <DRV_Invoke>
   13280:	mov	r3, r0
   13284:	str	r3, [fp, #-36]	; 0xffffffdc
   13288:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1328c:	ldr	r3, [pc, #476]	; 13470 <_MPLIST_moduleInit+0x24c>
   13290:	cmp	r2, r3
   13294:	ble	13454 <_MPLIST_moduleInit+0x230>
   13298:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1329c:	cmp	r3, #34048	; 0x8500
   132a0:	bgt	13454 <_MPLIST_moduleInit+0x230>
   132a4:	ldr	r3, [pc, #456]	; 13474 <_MPLIST_moduleInit+0x250>
   132a8:	ldr	r1, [r3]
   132ac:	ldr	r3, [fp, #-72]	; 0xffffffb8
   132b0:	mov	r2, #4
   132b4:	lsl	r3, r3, #2
   132b8:	add	r3, r1, r3
   132bc:	add	r3, r3, r2
   132c0:	ldr	r3, [r3]
   132c4:	str	r3, [fp, #-8]
   132c8:	ldr	r3, [fp, #-8]
   132cc:	ldr	r3, [r3]
   132d0:	str	r3, [fp, #-24]	; 0xffffffe8
   132d4:	ldr	r3, [fp, #-8]
   132d8:	ldr	r1, [r3, #8]
   132dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   132e0:	ldr	r2, [r3, #144]	; 0x90
   132e4:	mov	r3, r2
   132e8:	lsl	r3, r3, #2
   132ec:	add	r3, r3, r2
   132f0:	lsl	r3, r3, #4
   132f4:	add	r3, r1, r3
   132f8:	str	r3, [fp, #-20]	; 0xffffffec
   132fc:	ldr	r3, [fp, #-8]
   13300:	ldr	r1, [r3, #64]	; 0x40
   13304:	ldr	r3, [fp, #-20]	; 0xffffffec
   13308:	ldr	r2, [r3, #72]	; 0x48
   1330c:	mov	r3, r2
   13310:	lsl	r3, r3, #1
   13314:	add	r3, r3, r2
   13318:	lsl	r3, r3, #4
   1331c:	add	r3, r1, r3
   13320:	str	r3, [fp, #-28]	; 0xffffffe4
   13324:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13328:	str	r3, [fp, #-16]
   1332c:	ldr	r3, [fp, #-16]
   13330:	add	r3, r3, #512	; 0x200
   13334:	str	r3, [fp, #-12]
   13338:	ldr	r2, [fp, #-16]
   1333c:	mov	r3, #1
   13340:	str	r3, [r2]
   13344:	ldr	r2, [fp, #-16]
   13348:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1334c:	str	r3, [r2, #4]
   13350:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13354:	ldr	r2, [r3, #36]	; 0x24
   13358:	ldr	r3, [fp, #-16]
   1335c:	str	r2, [r3, #8]
   13360:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13364:	ldr	r2, [r3, #40]	; 0x28
   13368:	ldr	r3, [fp, #-16]
   1336c:	str	r2, [r3, #12]
   13370:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13374:	ldr	r2, [r3, #44]	; 0x2c
   13378:	ldr	r3, [fp, #-16]
   1337c:	str	r2, [r3, #16]
   13380:	ldr	r3, [fp, #-16]
   13384:	ldr	r3, [r3, #8]
   13388:	lsl	r3, r3, #7
   1338c:	ldr	r0, [fp, #-12]
   13390:	mov	r1, #0
   13394:	mov	r2, r3
   13398:	bl	9f6c <memset@plt>
   1339c:	mov	r3, #32
   133a0:	strh	r3, [fp, #-62]	; 0xffffffc2
   133a4:	ldr	r3, [fp, #-16]
   133a8:	add	r3, r3, #128	; 0x80
   133ac:	sub	ip, fp, #62	; 0x3e
   133b0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   133b4:	ldr	r1, [pc, #188]	; 13478 <_MPLIST_moduleInit+0x254>
   133b8:	mov	r2, r3
   133bc:	mov	r3, ip
   133c0:	bl	1214c <MPCS_create>
   133c4:	mov	r3, r0
   133c8:	str	r3, [fp, #-36]	; 0xffffffdc
   133cc:	ldr	r3, [pc, #148]	; 13468 <_MPLIST_moduleInit+0x244>
   133d0:	ldr	r3, [r3]
   133d4:	sub	r2, fp, #60	; 0x3c
   133d8:	mov	r0, r3
   133dc:	ldr	r1, [pc, #152]	; 1347c <_MPLIST_moduleInit+0x258>
   133e0:	mov	r3, #0
   133e4:	bl	f94c <DRV_Invoke>
   133e8:	mov	r3, r0
   133ec:	str	r3, [fp, #-32]	; 0xffffffe0
   133f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   133f4:	ldr	r3, [pc, #116]	; 13470 <_MPLIST_moduleInit+0x24c>
   133f8:	cmp	r2, r3
   133fc:	ble	1340c <_MPLIST_moduleInit+0x1e8>
   13400:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13404:	cmp	r3, #34048	; 0x8500
   13408:	ble	13430 <_MPLIST_moduleInit+0x20c>
   1340c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13410:	ldr	r3, [pc, #88]	; 13470 <_MPLIST_moduleInit+0x24c>
   13414:	cmp	r2, r3
   13418:	ble	13430 <_MPLIST_moduleInit+0x20c>
   1341c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13420:	cmp	r3, #34048	; 0x8500
   13424:	bgt	13430 <_MPLIST_moduleInit+0x20c>
   13428:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1342c:	str	r3, [fp, #-36]	; 0xffffffdc
   13430:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13434:	ldr	r3, [pc, #52]	; 13470 <_MPLIST_moduleInit+0x24c>
   13438:	cmp	r2, r3
   1343c:	ble	1344c <_MPLIST_moduleInit+0x228>
   13440:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13444:	cmp	r3, #34048	; 0x8500
   13448:	ble	13454 <_MPLIST_moduleInit+0x230>
   1344c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13450:	bl	13480 <_MPLIST_moduleExit>
   13454:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13458:	mov	r0, r3
   1345c:	sub	sp, fp, #4
   13460:	pop	{fp, pc}
   13464:	.word	0x8000800b
   13468:	.word	0x0002d3ec
   1346c:	.word	0xc018e051
   13470:	.word	0x00007fff
   13474:	.word	0x0002d3f0
   13478:	.word	0x00023838
   1347c:	.word	0xc018e052

00013480 <_MPLIST_moduleExit>:
   13480:	push	{fp, lr}
   13484:	add	fp, sp, #4
   13488:	sub	sp, sp, #48	; 0x30
   1348c:	str	r0, [fp, #-48]	; 0xffffffd0
   13490:	mov	r3, #32768	; 0x8000
   13494:	str	r3, [fp, #-20]	; 0xffffffec
   13498:	mov	r3, #32768	; 0x8000
   1349c:	str	r3, [fp, #-16]
   134a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   134a4:	cmp	r3, #0
   134a8:	beq	134b8 <_MPLIST_moduleExit+0x38>
   134ac:	ldr	r3, [pc, #336]	; 13604 <_MPLIST_moduleExit+0x184>
   134b0:	str	r3, [fp, #-20]	; 0xffffffec
   134b4:	b	135f4 <_MPLIST_moduleExit+0x174>
   134b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   134bc:	str	r3, [fp, #-40]	; 0xffffffd8
   134c0:	ldr	r3, [pc, #320]	; 13608 <_MPLIST_moduleExit+0x188>
   134c4:	ldr	r3, [r3]
   134c8:	sub	r2, fp, #44	; 0x2c
   134cc:	mov	r0, r3
   134d0:	ldr	r1, [pc, #308]	; 1360c <_MPLIST_moduleExit+0x18c>
   134d4:	mov	r3, #0
   134d8:	bl	f94c <DRV_Invoke>
   134dc:	mov	r3, r0
   134e0:	str	r3, [fp, #-20]	; 0xffffffec
   134e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   134e8:	ldr	r3, [pc, #288]	; 13610 <_MPLIST_moduleExit+0x190>
   134ec:	cmp	r2, r3
   134f0:	ble	135f4 <_MPLIST_moduleExit+0x174>
   134f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   134f8:	cmp	r3, #34048	; 0x8500
   134fc:	bgt	135f4 <_MPLIST_moduleExit+0x174>
   13500:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13504:	ldr	r1, [pc, #264]	; 13614 <_MPLIST_moduleExit+0x194>
   13508:	bl	12620 <MPCS_delete>
   1350c:	mov	r3, r0
   13510:	str	r3, [fp, #-16]
   13514:	ldr	r2, [fp, #-16]
   13518:	ldr	r3, [pc, #240]	; 13610 <_MPLIST_moduleExit+0x190>
   1351c:	cmp	r2, r3
   13520:	ble	13530 <_MPLIST_moduleExit+0xb0>
   13524:	ldr	r3, [fp, #-16]
   13528:	cmp	r3, #34048	; 0x8500
   1352c:	ble	13554 <_MPLIST_moduleExit+0xd4>
   13530:	ldr	r2, [fp, #-20]	; 0xffffffec
   13534:	ldr	r3, [pc, #212]	; 13610 <_MPLIST_moduleExit+0x190>
   13538:	cmp	r2, r3
   1353c:	ble	13554 <_MPLIST_moduleExit+0xd4>
   13540:	ldr	r3, [fp, #-20]	; 0xffffffec
   13544:	cmp	r3, #34048	; 0x8500
   13548:	bgt	13554 <_MPLIST_moduleExit+0xd4>
   1354c:	ldr	r3, [fp, #-16]
   13550:	str	r3, [fp, #-20]	; 0xffffffec
   13554:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13558:	str	r3, [fp, #-12]
   1355c:	ldr	r3, [fp, #-12]
   13560:	add	r3, r3, #512	; 0x200
   13564:	str	r3, [fp, #-8]
   13568:	ldr	r3, [fp, #-12]
   1356c:	ldr	r3, [r3, #8]
   13570:	lsl	r3, r3, #7
   13574:	ldr	r0, [fp, #-8]
   13578:	mov	r1, #0
   1357c:	mov	r2, r3
   13580:	bl	9f6c <memset@plt>
   13584:	ldr	r2, [fp, #-12]
   13588:	mov	r3, #0
   1358c:	str	r3, [r2]
   13590:	ldr	r3, [pc, #112]	; 13608 <_MPLIST_moduleExit+0x188>
   13594:	ldr	r3, [r3]
   13598:	sub	r2, fp, #44	; 0x2c
   1359c:	mov	r0, r3
   135a0:	ldr	r1, [pc, #112]	; 13618 <_MPLIST_moduleExit+0x198>
   135a4:	mov	r3, #0
   135a8:	bl	f94c <DRV_Invoke>
   135ac:	mov	r3, r0
   135b0:	str	r3, [fp, #-16]
   135b4:	ldr	r2, [fp, #-16]
   135b8:	ldr	r3, [pc, #80]	; 13610 <_MPLIST_moduleExit+0x190>
   135bc:	cmp	r2, r3
   135c0:	ble	135d0 <_MPLIST_moduleExit+0x150>
   135c4:	ldr	r3, [fp, #-16]
   135c8:	cmp	r3, #34048	; 0x8500
   135cc:	ble	135f4 <_MPLIST_moduleExit+0x174>
   135d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   135d4:	ldr	r3, [pc, #52]	; 13610 <_MPLIST_moduleExit+0x190>
   135d8:	cmp	r2, r3
   135dc:	ble	135f4 <_MPLIST_moduleExit+0x174>
   135e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   135e4:	cmp	r3, #34048	; 0x8500
   135e8:	bgt	135f4 <_MPLIST_moduleExit+0x174>
   135ec:	ldr	r3, [fp, #-16]
   135f0:	str	r3, [fp, #-20]	; 0xffffffec
   135f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   135f8:	mov	r0, r3
   135fc:	sub	sp, fp, #4
   13600:	pop	{fp, pc}
   13604:	.word	0x8000800b
   13608:	.word	0x0002d3ec
   1360c:	.word	0xc018e051
   13610:	.word	0x00007fff
   13614:	.word	0x00023838
   13618:	.word	0xc018e052

0001361c <_MPLIST_init>:
   1361c:	push	{fp, lr}
   13620:	add	fp, sp, #4
   13624:	sub	sp, sp, #40	; 0x28
   13628:	str	r0, [fp, #-40]	; 0xffffffd8
   1362c:	mov	r3, #32768	; 0x8000
   13630:	str	r3, [fp, #-12]
   13634:	mov	r3, #0
   13638:	str	r3, [fp, #-8]
   1363c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13640:	cmp	r3, #0
   13644:	beq	13654 <_MPLIST_init+0x38>
   13648:	ldr	r3, [pc, #284]	; 1376c <_MPLIST_init+0x150>
   1364c:	str	r3, [fp, #-12]
   13650:	b	1375c <_MPLIST_init+0x140>
   13654:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13658:	str	r3, [fp, #-32]	; 0xffffffe0
   1365c:	ldr	r3, [pc, #268]	; 13770 <_MPLIST_init+0x154>
   13660:	ldr	r3, [r3]
   13664:	sub	r2, fp, #36	; 0x24
   13668:	mov	r0, r3
   1366c:	ldr	r1, [pc, #256]	; 13774 <_MPLIST_init+0x158>
   13670:	mov	r3, #0
   13674:	bl	f94c <DRV_Invoke>
   13678:	mov	r3, r0
   1367c:	str	r3, [fp, #-12]
   13680:	ldr	r2, [fp, #-12]
   13684:	ldr	r3, [pc, #236]	; 13778 <_MPLIST_init+0x15c>
   13688:	cmp	r2, r3
   1368c:	ble	1375c <_MPLIST_init+0x140>
   13690:	ldr	r3, [fp, #-12]
   13694:	cmp	r3, #34048	; 0x8500
   13698:	bgt	1375c <_MPLIST_init+0x140>
   1369c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   136a0:	lsl	r2, r3, #5
   136a4:	ldr	r3, [pc, #208]	; 1377c <_MPLIST_init+0x160>
   136a8:	add	r3, r2, r3
   136ac:	str	r3, [fp, #-8]
   136b0:	ldr	r3, [fp, #-8]
   136b4:	mov	lr, r3
   136b8:	sub	ip, fp, #32
   136bc:	ldm	ip!, {r0, r1, r2, r3}
   136c0:	stmia	lr!, {r0, r1, r2, r3}
   136c4:	ldr	r3, [ip]
   136c8:	str	r3, [lr]
   136cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   136d0:	ldr	r1, [pc, #164]	; 1377c <_MPLIST_init+0x160>
   136d4:	lsl	r3, r3, #2
   136d8:	add	r3, r3, #1
   136dc:	mov	r2, #4
   136e0:	lsl	r3, r3, #3
   136e4:	add	r3, r1, r3
   136e8:	add	r3, r3, r2
   136ec:	ldr	r3, [r3]
   136f0:	mov	r2, r3
   136f4:	ldr	r3, [fp, #-8]
   136f8:	str	r2, [r3, #20]
   136fc:	ldr	r3, [fp, #-8]
   13700:	ldr	r3, [r3, #20]
   13704:	add	r2, r3, #512	; 0x200
   13708:	ldr	r3, [fp, #-8]
   1370c:	str	r2, [r3, #24]
   13710:	ldr	r3, [fp, #-8]
   13714:	add	r2, r3, #28
   13718:	ldr	r3, [fp, #-8]
   1371c:	ldr	r3, [r3, #20]
   13720:	add	r3, r3, #128	; 0x80
   13724:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13728:	ldr	r1, [pc, #80]	; 13780 <_MPLIST_init+0x164>
   1372c:	bl	11d90 <_MPCS_open>
   13730:	mov	r3, r0
   13734:	str	r3, [fp, #-12]
   13738:	ldr	r2, [fp, #-12]
   1373c:	ldr	r3, [pc, #52]	; 13778 <_MPLIST_init+0x15c>
   13740:	cmp	r2, r3
   13744:	ble	13754 <_MPLIST_init+0x138>
   13748:	ldr	r3, [fp, #-12]
   1374c:	cmp	r3, #34048	; 0x8500
   13750:	ble	1375c <_MPLIST_init+0x140>
   13754:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13758:	bl	13784 <_MPLIST_exit>
   1375c:	ldr	r3, [fp, #-12]
   13760:	mov	r0, r3
   13764:	sub	sp, fp, #4
   13768:	pop	{fp, pc}
   1376c:	.word	0x8000800b
   13770:	.word	0x0002d3ec
   13774:	.word	0xc018e051
   13778:	.word	0x00007fff
   1377c:	.word	0x0002daf0
   13780:	.word	0x00023838

00013784 <_MPLIST_exit>:
   13784:	push	{fp, lr}
   13788:	add	fp, sp, #4
   1378c:	sub	sp, sp, #48	; 0x30
   13790:	str	r0, [fp, #-48]	; 0xffffffd0
   13794:	mov	r3, #32768	; 0x8000
   13798:	str	r3, [fp, #-16]
   1379c:	mov	r3, #32768	; 0x8000
   137a0:	str	r3, [fp, #-12]
   137a4:	mov	r3, #0
   137a8:	str	r3, [fp, #-8]
   137ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   137b0:	cmp	r3, #0
   137b4:	beq	137c4 <_MPLIST_exit+0x40>
   137b8:	ldr	r3, [pc, #296]	; 138e8 <_MPLIST_exit+0x164>
   137bc:	str	r3, [fp, #-16]
   137c0:	b	137f0 <_MPLIST_exit+0x6c>
   137c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   137c8:	lsl	r2, r3, #5
   137cc:	ldr	r3, [pc, #280]	; 138ec <_MPLIST_exit+0x168>
   137d0:	add	r3, r2, r3
   137d4:	str	r3, [fp, #-8]
   137d8:	ldr	r3, [fp, #-8]
   137dc:	ldr	r3, [r3, #20]
   137e0:	cmp	r3, #0
   137e4:	bne	137f0 <_MPLIST_exit+0x6c>
   137e8:	ldr	r3, [pc, #256]	; 138f0 <_MPLIST_exit+0x16c>
   137ec:	str	r3, [fp, #-16]
   137f0:	ldr	r2, [fp, #-16]
   137f4:	ldr	r3, [pc, #248]	; 138f4 <_MPLIST_exit+0x170>
   137f8:	cmp	r2, r3
   137fc:	ble	138d8 <_MPLIST_exit+0x154>
   13800:	ldr	r3, [fp, #-16]
   13804:	cmp	r3, #34048	; 0x8500
   13808:	bgt	138d8 <_MPLIST_exit+0x154>
   1380c:	ldr	r3, [fp, #-8]
   13810:	ldr	r3, [r3, #28]
   13814:	cmp	r3, #0
   13818:	beq	13844 <_MPLIST_exit+0xc0>
   1381c:	ldr	r3, [fp, #-8]
   13820:	ldr	r3, [r3, #28]
   13824:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13828:	mov	r1, r3
   1382c:	bl	12ac4 <MPCS_close>
   13830:	mov	r3, r0
   13834:	str	r3, [fp, #-16]
   13838:	ldr	r2, [fp, #-8]
   1383c:	mov	r3, #0
   13840:	str	r3, [r2, #28]
   13844:	ldr	r3, [fp, #-8]
   13848:	ldr	r3, [r3, #12]
   1384c:	str	r3, [fp, #-24]	; 0xffffffe8
   13850:	ldr	r3, [fp, #-8]
   13854:	ldr	r3, [r3, #16]
   13858:	str	r3, [fp, #-20]	; 0xffffffec
   1385c:	ldr	r3, [pc, #148]	; 138f8 <_MPLIST_exit+0x174>
   13860:	ldr	r3, [r3]
   13864:	sub	r2, fp, #40	; 0x28
   13868:	mov	r0, r3
   1386c:	ldr	r1, [pc, #136]	; 138fc <_MPLIST_exit+0x178>
   13870:	mov	r3, #0
   13874:	bl	f94c <DRV_Invoke>
   13878:	mov	r3, r0
   1387c:	str	r3, [fp, #-12]
   13880:	ldr	r2, [fp, #-12]
   13884:	ldr	r3, [pc, #104]	; 138f4 <_MPLIST_exit+0x170>
   13888:	cmp	r2, r3
   1388c:	ble	1389c <_MPLIST_exit+0x118>
   13890:	ldr	r3, [fp, #-12]
   13894:	cmp	r3, #34048	; 0x8500
   13898:	ble	138c0 <_MPLIST_exit+0x13c>
   1389c:	ldr	r2, [fp, #-16]
   138a0:	ldr	r3, [pc, #76]	; 138f4 <_MPLIST_exit+0x170>
   138a4:	cmp	r2, r3
   138a8:	ble	138c0 <_MPLIST_exit+0x13c>
   138ac:	ldr	r3, [fp, #-16]
   138b0:	cmp	r3, #34048	; 0x8500
   138b4:	bgt	138c0 <_MPLIST_exit+0x13c>
   138b8:	ldr	r3, [fp, #-12]
   138bc:	str	r3, [fp, #-16]
   138c0:	ldr	r2, [fp, #-8]
   138c4:	mov	r3, #0
   138c8:	str	r3, [r2, #20]
   138cc:	ldr	r2, [fp, #-8]
   138d0:	mov	r3, #0
   138d4:	str	r3, [r2, #24]
   138d8:	ldr	r3, [fp, #-16]
   138dc:	mov	r0, r3
   138e0:	sub	sp, fp, #4
   138e4:	pop	{fp, pc}
   138e8:	.word	0x8000800b
   138ec:	.word	0x0002daf0
   138f0:	.word	0x80008000
   138f4:	.word	0x00007fff
   138f8:	.word	0x0002d3ec
   138fc:	.word	0xc018e052

00013900 <MPLIST_create>:
   13900:	push	{fp, lr}
   13904:	add	fp, sp, #4
   13908:	sub	sp, sp, #56	; 0x38
   1390c:	str	r0, [fp, #-40]	; 0xffffffd8
   13910:	str	r1, [fp, #-44]	; 0xffffffd4
   13914:	str	r2, [fp, #-48]	; 0xffffffd0
   13918:	str	r3, [fp, #-52]	; 0xffffffcc
   1391c:	mov	r3, #32768	; 0x8000
   13920:	str	r3, [fp, #-24]	; 0xffffffe8
   13924:	mov	r3, #32768	; 0x8000
   13928:	str	r3, [fp, #-20]	; 0xffffffec
   1392c:	mov	r3, #0
   13930:	str	r3, [fp, #-28]	; 0xffffffe4
   13934:	mvn	r3, #0
   13938:	str	r3, [fp, #-16]
   1393c:	mov	r3, #0
   13940:	str	r3, [fp, #-12]
   13944:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13948:	cmp	r3, #0
   1394c:	beq	13968 <MPLIST_create+0x68>
   13950:	ldr	r3, [fp, #-52]	; 0xffffffcc
   13954:	cmp	r3, #0
   13958:	beq	13968 <MPLIST_create+0x68>
   1395c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13960:	cmp	r3, #0
   13964:	beq	13974 <MPLIST_create+0x74>
   13968:	ldr	r3, [pc, #1060]	; 13d94 <MPLIST_create+0x494>
   1396c:	str	r3, [fp, #-24]	; 0xffffffe8
   13970:	b	139a0 <MPLIST_create+0xa0>
   13974:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13978:	lsl	r2, r3, #5
   1397c:	ldr	r3, [pc, #1044]	; 13d98 <MPLIST_create+0x498>
   13980:	add	r3, r2, r3
   13984:	str	r3, [fp, #-12]
   13988:	ldr	r3, [fp, #-12]
   1398c:	ldr	r3, [r3, #20]
   13990:	cmp	r3, #0
   13994:	bne	139a0 <MPLIST_create+0xa0>
   13998:	ldr	r3, [pc, #1020]	; 13d9c <MPLIST_create+0x49c>
   1399c:	str	r3, [fp, #-24]	; 0xffffffe8
   139a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   139a4:	ldr	r3, [pc, #1012]	; 13da0 <MPLIST_create+0x4a0>
   139a8:	cmp	r2, r3
   139ac:	ble	13d84 <MPLIST_create+0x484>
   139b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   139b4:	cmp	r3, #34048	; 0x8500
   139b8:	bgt	13d84 <MPLIST_create+0x484>
   139bc:	ldr	r3, [fp, #-12]
   139c0:	ldr	r3, [r3, #28]
   139c4:	mov	r0, r3
   139c8:	bl	12c3c <MPCS_enter>
   139cc:	mov	r3, r0
   139d0:	str	r3, [fp, #-24]	; 0xffffffe8
   139d4:	mov	r3, #0
   139d8:	str	r3, [fp, #-8]
   139dc:	b	13a78 <MPLIST_create+0x178>
   139e0:	ldr	r3, [fp, #-12]
   139e4:	ldr	r2, [r3, #24]
   139e8:	ldr	r3, [fp, #-8]
   139ec:	lsl	r3, r3, #7
   139f0:	add	r3, r2, r3
   139f4:	add	r3, r3, #8
   139f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   139fc:	mov	r1, r3
   13a00:	mov	r2, #32
   13a04:	bl	9cc0 <strncmp@plt>
   13a08:	mov	r3, r0
   13a0c:	cmp	r3, #0
   13a10:	bne	13a1c <MPLIST_create+0x11c>
   13a14:	ldr	r3, [pc, #904]	; 13da4 <MPLIST_create+0x4a4>
   13a18:	str	r3, [fp, #-24]	; 0xffffffe8
   13a1c:	ldr	r3, [fp, #-16]
   13a20:	cmn	r3, #1
   13a24:	bne	13a6c <MPLIST_create+0x16c>
   13a28:	ldr	r3, [fp, #-12]
   13a2c:	ldr	r2, [r3, #24]
   13a30:	ldr	r3, [fp, #-8]
   13a34:	lsl	r3, r3, #7
   13a38:	add	r3, r2, r3
   13a3c:	ldr	r3, [r3, #4]
   13a40:	cmp	r3, #0
   13a44:	bne	13a6c <MPLIST_create+0x16c>
   13a48:	ldr	r3, [fp, #-12]
   13a4c:	ldr	r2, [r3, #24]
   13a50:	ldr	r3, [fp, #-8]
   13a54:	lsl	r3, r3, #7
   13a58:	add	r2, r2, r3
   13a5c:	mov	r3, #1
   13a60:	str	r3, [r2, #4]
   13a64:	ldr	r3, [fp, #-8]
   13a68:	str	r3, [fp, #-16]
   13a6c:	ldr	r3, [fp, #-8]
   13a70:	add	r3, r3, #1
   13a74:	str	r3, [fp, #-8]
   13a78:	ldr	r3, [fp, #-12]
   13a7c:	ldr	r3, [r3, #20]
   13a80:	ldr	r2, [r3, #8]
   13a84:	ldr	r3, [fp, #-8]
   13a88:	cmp	r2, r3
   13a8c:	bls	13aac <MPLIST_create+0x1ac>
   13a90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13a94:	ldr	r3, [pc, #772]	; 13da0 <MPLIST_create+0x4a0>
   13a98:	cmp	r2, r3
   13a9c:	ble	13aac <MPLIST_create+0x1ac>
   13aa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13aa4:	cmp	r3, #34048	; 0x8500
   13aa8:	ble	139e0 <MPLIST_create+0xe0>
   13aac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13ab0:	ldr	r3, [pc, #744]	; 13da0 <MPLIST_create+0x4a0>
   13ab4:	cmp	r2, r3
   13ab8:	ble	13adc <MPLIST_create+0x1dc>
   13abc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13ac0:	cmp	r3, #34048	; 0x8500
   13ac4:	bgt	13adc <MPLIST_create+0x1dc>
   13ac8:	ldr	r3, [fp, #-16]
   13acc:	cmn	r3, #1
   13ad0:	bne	13adc <MPLIST_create+0x1dc>
   13ad4:	ldr	r3, [pc, #716]	; 13da8 <MPLIST_create+0x4a8>
   13ad8:	str	r3, [fp, #-24]	; 0xffffffe8
   13adc:	ldr	r3, [fp, #-12]
   13ae0:	ldr	r3, [r3, #28]
   13ae4:	mov	r0, r3
   13ae8:	bl	12e98 <MPCS_leave>
   13aec:	mov	r3, r0
   13af0:	str	r3, [fp, #-20]	; 0xffffffec
   13af4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13af8:	ldr	r3, [pc, #672]	; 13da0 <MPLIST_create+0x4a0>
   13afc:	cmp	r2, r3
   13b00:	ble	13b34 <MPLIST_create+0x234>
   13b04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13b08:	cmp	r3, #34048	; 0x8500
   13b0c:	bgt	13b34 <MPLIST_create+0x234>
   13b10:	ldr	r2, [fp, #-20]	; 0xffffffec
   13b14:	ldr	r3, [pc, #644]	; 13da0 <MPLIST_create+0x4a0>
   13b18:	cmp	r2, r3
   13b1c:	ble	13b2c <MPLIST_create+0x22c>
   13b20:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b24:	cmp	r3, #34048	; 0x8500
   13b28:	ble	13b34 <MPLIST_create+0x234>
   13b2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b30:	str	r3, [fp, #-24]	; 0xffffffe8
   13b34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13b38:	ldr	r3, [pc, #608]	; 13da0 <MPLIST_create+0x4a0>
   13b3c:	cmp	r2, r3
   13b40:	ble	13d84 <MPLIST_create+0x484>
   13b44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13b48:	cmp	r3, #34048	; 0x8500
   13b4c:	bgt	13d84 <MPLIST_create+0x484>
   13b50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13b54:	cmp	r3, #0
   13b58:	bne	13b80 <MPLIST_create+0x280>
   13b5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   13b60:	ldrh	r3, [r3]
   13b64:	sub	r2, fp, #48	; 0x30
   13b68:	mov	r0, r3
   13b6c:	mov	r1, r2
   13b70:	mov	r2, #512	; 0x200
   13b74:	bl	17bbc <POOL_alloc>
   13b78:	mov	r3, r0
   13b7c:	str	r3, [fp, #-24]	; 0xffffffe8
   13b80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13b84:	ldr	r3, [pc, #532]	; 13da0 <MPLIST_create+0x4a0>
   13b88:	cmp	r2, r3
   13b8c:	ble	13c20 <MPLIST_create+0x320>
   13b90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13b94:	cmp	r3, #34048	; 0x8500
   13b98:	bgt	13c20 <MPLIST_create+0x320>
   13b9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   13ba0:	ldrh	r2, [r3]
   13ba4:	sub	r1, fp, #28
   13ba8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13bac:	mov	ip, r3
   13bb0:	mov	r3, #0
   13bb4:	str	r3, [sp]
   13bb8:	mov	r0, r2
   13bbc:	mov	r2, #3
   13bc0:	mov	r3, ip
   13bc4:	bl	17d1c <POOL_translateAddr>
   13bc8:	mov	r3, r0
   13bcc:	str	r3, [fp, #-24]	; 0xffffffe8
   13bd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13bd4:	ldr	r3, [pc, #452]	; 13da0 <MPLIST_create+0x4a0>
   13bd8:	cmp	r2, r3
   13bdc:	ble	13c20 <MPLIST_create+0x320>
   13be0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13be4:	cmp	r3, #34048	; 0x8500
   13be8:	bgt	13c20 <MPLIST_create+0x320>
   13bec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13bf0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13bf4:	str	r3, [r2]
   13bf8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13bfc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13c00:	str	r3, [r2, #4]
   13c04:	ldr	r3, [fp, #-52]	; 0xffffffcc
   13c08:	ldrh	r3, [r3]
   13c0c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13c10:	mov	r0, r3
   13c14:	mov	r1, r2
   13c18:	mov	r2, #8
   13c1c:	bl	170a4 <POOL_writeback>
   13c20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13c24:	ldr	r3, [pc, #372]	; 13da0 <MPLIST_create+0x4a0>
   13c28:	cmp	r2, r3
   13c2c:	ble	13c70 <MPLIST_create+0x370>
   13c30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13c34:	cmp	r3, #34048	; 0x8500
   13c38:	bgt	13c70 <MPLIST_create+0x370>
   13c3c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   13c40:	ldrh	r3, [r3]
   13c44:	strh	r3, [fp, #-30]	; 0xffffffe2
   13c48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13c4c:	add	r3, r3, #128	; 0x80
   13c50:	sub	ip, fp, #30
   13c54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13c58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13c5c:	mov	r2, r3
   13c60:	mov	r3, ip
   13c64:	bl	1214c <MPCS_create>
   13c68:	mov	r3, r0
   13c6c:	str	r3, [fp, #-24]	; 0xffffffe8
   13c70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13c74:	ldr	r3, [pc, #292]	; 13da0 <MPLIST_create+0x4a0>
   13c78:	cmp	r2, r3
   13c7c:	ble	13d40 <MPLIST_create+0x440>
   13c80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13c84:	cmp	r3, #34048	; 0x8500
   13c88:	bgt	13d40 <MPLIST_create+0x440>
   13c8c:	ldr	r3, [fp, #-12]
   13c90:	ldr	r3, [r3, #28]
   13c94:	mov	r0, r3
   13c98:	bl	12c3c <MPCS_enter>
   13c9c:	mov	r3, r0
   13ca0:	str	r3, [fp, #-20]	; 0xffffffec
   13ca4:	ldr	r3, [fp, #-12]
   13ca8:	ldr	r2, [r3, #24]
   13cac:	ldr	r3, [fp, #-16]
   13cb0:	lsl	r3, r3, #7
   13cb4:	add	r2, r2, r3
   13cb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13cbc:	str	r3, [r2, #4]
   13cc0:	ldr	r3, [fp, #-12]
   13cc4:	ldr	r2, [r3, #24]
   13cc8:	ldr	r3, [fp, #-16]
   13ccc:	lsl	r3, r3, #7
   13cd0:	add	r2, r2, r3
   13cd4:	mov	r3, #1
   13cd8:	strh	r3, [r2]
   13cdc:	ldr	r3, [fp, #-12]
   13ce0:	ldr	r2, [r3, #24]
   13ce4:	ldr	r3, [fp, #-16]
   13ce8:	lsl	r3, r3, #7
   13cec:	add	r2, r2, r3
   13cf0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   13cf4:	ldrh	r3, [r3]
   13cf8:	strh	r3, [r2, #2]
   13cfc:	ldr	r3, [fp, #-12]
   13d00:	ldr	r2, [r3, #24]
   13d04:	ldr	r3, [fp, #-16]
   13d08:	lsl	r3, r3, #7
   13d0c:	add	r3, r2, r3
   13d10:	add	r3, r3, #8
   13d14:	mov	r0, r3
   13d18:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d1c:	mov	r2, #32
   13d20:	bl	9e04 <strncpy@plt>
   13d24:	ldr	r3, [fp, #-12]
   13d28:	ldr	r3, [r3, #28]
   13d2c:	mov	r0, r3
   13d30:	bl	12e98 <MPCS_leave>
   13d34:	mov	r3, r0
   13d38:	str	r3, [fp, #-20]	; 0xffffffec
   13d3c:	b	13d84 <MPLIST_create+0x484>
   13d40:	ldr	r3, [fp, #-12]
   13d44:	ldr	r2, [r3, #24]
   13d48:	ldr	r3, [fp, #-16]
   13d4c:	lsl	r3, r3, #7
   13d50:	add	r2, r2, r3
   13d54:	mov	r3, #0
   13d58:	str	r3, [r2, #4]
   13d5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13d60:	cmp	r3, #0
   13d64:	beq	13d84 <MPLIST_create+0x484>
   13d68:	ldr	r3, [fp, #-52]	; 0xffffffcc
   13d6c:	ldrh	r3, [r3]
   13d70:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13d74:	mov	r0, r3
   13d78:	mov	r1, r2
   13d7c:	mov	r2, #8
   13d80:	bl	17c6c <POOL_free>
   13d84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13d88:	mov	r0, r3
   13d8c:	sub	sp, fp, #4
   13d90:	pop	{fp, pc}
   13d94:	.word	0x8000800b
   13d98:	.word	0x0002daf0
   13d9c:	.word	0x80008000
   13da0:	.word	0x00007fff
   13da4:	.word	0x80008050
   13da8:	.word	0x80008028

00013dac <MPLIST_delete>:
   13dac:	push	{fp, lr}
   13db0:	add	fp, sp, #4
   13db4:	sub	sp, sp, #48	; 0x30
   13db8:	str	r0, [fp, #-40]	; 0xffffffd8
   13dbc:	str	r1, [fp, #-44]	; 0xffffffd4
   13dc0:	mov	r3, #32768	; 0x8000
   13dc4:	str	r3, [fp, #-28]	; 0xffffffe4
   13dc8:	mov	r3, #32768	; 0x8000
   13dcc:	str	r3, [fp, #-24]	; 0xffffffe8
   13dd0:	mov	r3, #0
   13dd4:	str	r3, [fp, #-32]	; 0xffffffe0
   13dd8:	mov	r3, #0
   13ddc:	str	r3, [fp, #-20]	; 0xffffffec
   13de0:	mov	r3, #0
   13de4:	str	r3, [fp, #-16]
   13de8:	mov	r3, #0
   13dec:	str	r3, [fp, #-12]
   13df0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13df4:	cmp	r3, #0
   13df8:	bne	13e08 <MPLIST_delete+0x5c>
   13dfc:	ldr	r3, [pc, #916]	; 14198 <MPLIST_delete+0x3ec>
   13e00:	str	r3, [fp, #-28]	; 0xffffffe4
   13e04:	b	13e34 <MPLIST_delete+0x88>
   13e08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13e0c:	lsl	r2, r3, #5
   13e10:	ldr	r3, [pc, #900]	; 1419c <MPLIST_delete+0x3f0>
   13e14:	add	r3, r2, r3
   13e18:	str	r3, [fp, #-12]
   13e1c:	ldr	r3, [fp, #-12]
   13e20:	ldr	r3, [r3, #20]
   13e24:	cmp	r3, #0
   13e28:	bne	13e34 <MPLIST_delete+0x88>
   13e2c:	ldr	r3, [pc, #876]	; 141a0 <MPLIST_delete+0x3f4>
   13e30:	str	r3, [fp, #-28]	; 0xffffffe4
   13e34:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13e38:	ldr	r3, [pc, #868]	; 141a4 <MPLIST_delete+0x3f8>
   13e3c:	cmp	r2, r3
   13e40:	ble	14188 <MPLIST_delete+0x3dc>
   13e44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13e48:	cmp	r3, #34048	; 0x8500
   13e4c:	bgt	14188 <MPLIST_delete+0x3dc>
   13e50:	ldr	r3, [fp, #-12]
   13e54:	ldr	r3, [r3, #28]
   13e58:	mov	r0, r3
   13e5c:	bl	12c3c <MPCS_enter>
   13e60:	mov	r3, r0
   13e64:	str	r3, [fp, #-24]	; 0xffffffe8
   13e68:	mov	r3, #0
   13e6c:	str	r3, [fp, #-8]
   13e70:	b	13f30 <MPLIST_delete+0x184>
   13e74:	ldr	r3, [fp, #-12]
   13e78:	ldr	r2, [r3, #24]
   13e7c:	ldr	r3, [fp, #-8]
   13e80:	lsl	r3, r3, #7
   13e84:	add	r3, r2, r3
   13e88:	ldr	r3, [r3, #4]
   13e8c:	cmp	r3, #0
   13e90:	beq	13f24 <MPLIST_delete+0x178>
   13e94:	ldr	r3, [fp, #-12]
   13e98:	ldr	r2, [r3, #24]
   13e9c:	ldr	r3, [fp, #-8]
   13ea0:	lsl	r3, r3, #7
   13ea4:	add	r3, r2, r3
   13ea8:	ldr	r3, [r3, #4]
   13eac:	cmp	r3, #1
   13eb0:	beq	13f24 <MPLIST_delete+0x178>
   13eb4:	ldr	r3, [fp, #-12]
   13eb8:	ldr	r2, [r3, #24]
   13ebc:	ldr	r3, [fp, #-8]
   13ec0:	lsl	r3, r3, #7
   13ec4:	add	r3, r2, r3
   13ec8:	add	r3, r3, #8
   13ecc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ed0:	mov	r1, r3
   13ed4:	mov	r2, #32
   13ed8:	bl	9cc0 <strncmp@plt>
   13edc:	mov	r3, r0
   13ee0:	cmp	r3, #0
   13ee4:	bne	13f24 <MPLIST_delete+0x178>
   13ee8:	ldr	r3, [fp, #-12]
   13eec:	ldr	r2, [r3, #24]
   13ef0:	ldr	r3, [fp, #-8]
   13ef4:	lsl	r3, r3, #7
   13ef8:	add	r3, r2, r3
   13efc:	ldr	r3, [r3, #4]
   13f00:	str	r3, [fp, #-16]
   13f04:	ldr	r3, [fp, #-12]
   13f08:	ldr	r2, [r3, #24]
   13f0c:	ldr	r3, [fp, #-8]
   13f10:	lsl	r3, r3, #7
   13f14:	add	r2, r2, r3
   13f18:	mov	r3, #1
   13f1c:	str	r3, [r2, #4]
   13f20:	b	13f48 <MPLIST_delete+0x19c>
   13f24:	ldr	r3, [fp, #-8]
   13f28:	add	r3, r3, #1
   13f2c:	str	r3, [fp, #-8]
   13f30:	ldr	r3, [fp, #-12]
   13f34:	ldr	r3, [r3, #20]
   13f38:	ldr	r2, [r3, #8]
   13f3c:	ldr	r3, [fp, #-8]
   13f40:	cmp	r2, r3
   13f44:	bhi	13e74 <MPLIST_delete+0xc8>
   13f48:	ldr	r3, [fp, #-12]
   13f4c:	ldr	r3, [r3, #28]
   13f50:	mov	r0, r3
   13f54:	bl	12e98 <MPCS_leave>
   13f58:	mov	r3, r0
   13f5c:	str	r3, [fp, #-24]	; 0xffffffe8
   13f60:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13f64:	ldr	r3, [pc, #568]	; 141a4 <MPLIST_delete+0x3f8>
   13f68:	cmp	r2, r3
   13f6c:	ble	13fa0 <MPLIST_delete+0x1f4>
   13f70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13f74:	cmp	r3, #34048	; 0x8500
   13f78:	bgt	13fa0 <MPLIST_delete+0x1f4>
   13f7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13f80:	ldr	r3, [pc, #540]	; 141a4 <MPLIST_delete+0x3f8>
   13f84:	cmp	r2, r3
   13f88:	ble	13f98 <MPLIST_delete+0x1ec>
   13f8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f90:	cmp	r3, #34048	; 0x8500
   13f94:	ble	13fa0 <MPLIST_delete+0x1f4>
   13f98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f9c:	str	r3, [fp, #-28]	; 0xffffffe4
   13fa0:	ldr	r3, [fp, #-12]
   13fa4:	ldr	r3, [r3, #20]
   13fa8:	ldr	r2, [r3, #8]
   13fac:	ldr	r3, [fp, #-8]
   13fb0:	cmp	r2, r3
   13fb4:	bne	13fc4 <MPLIST_delete+0x218>
   13fb8:	ldr	r3, [pc, #488]	; 141a8 <MPLIST_delete+0x3fc>
   13fbc:	str	r3, [fp, #-28]	; 0xffffffe4
   13fc0:	b	14188 <MPLIST_delete+0x3dc>
   13fc4:	ldr	r3, [fp, #-12]
   13fc8:	ldr	r2, [r3, #24]
   13fcc:	ldr	r3, [fp, #-8]
   13fd0:	lsl	r3, r3, #7
   13fd4:	add	r3, r2, r3
   13fd8:	str	r3, [fp, #-20]	; 0xffffffec
   13fdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13fe0:	ldrh	r3, [r3]
   13fe4:	cmp	r3, #1
   13fe8:	bne	14180 <MPLIST_delete+0x3d4>
   13fec:	ldr	r3, [fp, #-12]
   13ff0:	ldr	r3, [r3, #20]
   13ff4:	ldr	r3, [r3, #4]
   13ff8:	mov	r0, r3
   13ffc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14000:	bl	12620 <MPCS_delete>
   14004:	mov	r3, r0
   14008:	str	r3, [fp, #-28]	; 0xffffffe4
   1400c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14010:	ldrh	r2, [r3, #2]
   14014:	sub	r1, fp, #32
   14018:	mov	r3, #3
   1401c:	str	r3, [sp]
   14020:	mov	r0, r2
   14024:	mov	r2, #0
   14028:	ldr	r3, [fp, #-16]
   1402c:	bl	17d1c <POOL_translateAddr>
   14030:	mov	r3, r0
   14034:	str	r3, [fp, #-24]	; 0xffffffe8
   14038:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1403c:	ldr	r3, [pc, #352]	; 141a4 <MPLIST_delete+0x3f8>
   14040:	cmp	r2, r3
   14044:	ble	14078 <MPLIST_delete+0x2cc>
   14048:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1404c:	cmp	r3, #34048	; 0x8500
   14050:	bgt	14078 <MPLIST_delete+0x2cc>
   14054:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14058:	ldr	r3, [pc, #324]	; 141a4 <MPLIST_delete+0x3f8>
   1405c:	cmp	r2, r3
   14060:	ble	14070 <MPLIST_delete+0x2c4>
   14064:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14068:	cmp	r3, #34048	; 0x8500
   1406c:	ble	14078 <MPLIST_delete+0x2cc>
   14070:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14074:	str	r3, [fp, #-28]	; 0xffffffe4
   14078:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1407c:	cmp	r3, #0
   14080:	beq	140e8 <MPLIST_delete+0x33c>
   14084:	ldr	r3, [fp, #-20]	; 0xffffffec
   14088:	ldrh	r3, [r3, #2]
   1408c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14090:	mov	r0, r3
   14094:	mov	r1, r2
   14098:	mov	r2, #512	; 0x200
   1409c:	bl	17c6c <POOL_free>
   140a0:	mov	r3, r0
   140a4:	str	r3, [fp, #-24]	; 0xffffffe8
   140a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   140ac:	ldr	r3, [pc, #240]	; 141a4 <MPLIST_delete+0x3f8>
   140b0:	cmp	r2, r3
   140b4:	ble	140e8 <MPLIST_delete+0x33c>
   140b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   140bc:	cmp	r3, #34048	; 0x8500
   140c0:	bgt	140e8 <MPLIST_delete+0x33c>
   140c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   140c8:	ldr	r3, [pc, #212]	; 141a4 <MPLIST_delete+0x3f8>
   140cc:	cmp	r2, r3
   140d0:	ble	140e0 <MPLIST_delete+0x334>
   140d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   140d8:	cmp	r3, #34048	; 0x8500
   140dc:	ble	140e8 <MPLIST_delete+0x33c>
   140e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   140e4:	str	r3, [fp, #-28]	; 0xffffffe4
   140e8:	ldr	r3, [fp, #-12]
   140ec:	ldr	r3, [r3, #28]
   140f0:	mov	r0, r3
   140f4:	bl	12c3c <MPCS_enter>
   140f8:	mov	r3, r0
   140fc:	str	r3, [fp, #-24]	; 0xffffffe8
   14100:	ldr	r3, [fp, #-12]
   14104:	ldr	r2, [r3, #24]
   14108:	ldr	r3, [fp, #-8]
   1410c:	lsl	r3, r3, #7
   14110:	add	r3, r2, r3
   14114:	mov	r0, r3
   14118:	mov	r1, #0
   1411c:	mov	r2, #128	; 0x80
   14120:	bl	9f6c <memset@plt>
   14124:	ldr	r3, [fp, #-12]
   14128:	ldr	r3, [r3, #28]
   1412c:	mov	r0, r3
   14130:	bl	12e98 <MPCS_leave>
   14134:	mov	r3, r0
   14138:	str	r3, [fp, #-24]	; 0xffffffe8
   1413c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14140:	ldr	r3, [pc, #92]	; 141a4 <MPLIST_delete+0x3f8>
   14144:	cmp	r2, r3
   14148:	ble	14188 <MPLIST_delete+0x3dc>
   1414c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14150:	cmp	r3, #34048	; 0x8500
   14154:	bgt	14188 <MPLIST_delete+0x3dc>
   14158:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1415c:	ldr	r3, [pc, #64]	; 141a4 <MPLIST_delete+0x3f8>
   14160:	cmp	r2, r3
   14164:	ble	14174 <MPLIST_delete+0x3c8>
   14168:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1416c:	cmp	r3, #34048	; 0x8500
   14170:	ble	14188 <MPLIST_delete+0x3dc>
   14174:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14178:	str	r3, [fp, #-28]	; 0xffffffe4
   1417c:	b	14188 <MPLIST_delete+0x3dc>
   14180:	ldr	r3, [pc, #16]	; 14198 <MPLIST_delete+0x3ec>
   14184:	str	r3, [fp, #-28]	; 0xffffffe4
   14188:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1418c:	mov	r0, r3
   14190:	sub	sp, fp, #4
   14194:	pop	{fp, pc}
   14198:	.word	0x8000800b
   1419c:	.word	0x0002daf0
   141a0:	.word	0x80008000
   141a4:	.word	0x00007fff
   141a8:	.word	0x8000802d

000141ac <MPLIST_open>:
   141ac:	push	{fp, lr}
   141b0:	add	fp, sp, #4
   141b4:	sub	sp, sp, #56	; 0x38
   141b8:	str	r0, [fp, #-40]	; 0xffffffd8
   141bc:	str	r1, [fp, #-44]	; 0xffffffd4
   141c0:	str	r2, [fp, #-48]	; 0xffffffd0
   141c4:	mov	r3, #32768	; 0x8000
   141c8:	str	r3, [fp, #-28]	; 0xffffffe4
   141cc:	mov	r3, #32768	; 0x8000
   141d0:	str	r3, [fp, #-24]	; 0xffffffe8
   141d4:	mov	r3, #0
   141d8:	str	r3, [fp, #-32]	; 0xffffffe0
   141dc:	mov	r3, #0
   141e0:	str	r3, [fp, #-36]	; 0xffffffdc
   141e4:	mov	r3, #0
   141e8:	str	r3, [fp, #-20]	; 0xffffffec
   141ec:	mov	r3, #0
   141f0:	str	r3, [fp, #-16]
   141f4:	mov	r3, #0
   141f8:	str	r3, [fp, #-12]
   141fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14200:	lsl	r2, r3, #5
   14204:	ldr	r3, [pc, #872]	; 14574 <MPLIST_open+0x3c8>
   14208:	add	r3, r2, r3
   1420c:	str	r3, [fp, #-16]
   14210:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14214:	cmp	r3, #0
   14218:	bne	14234 <MPLIST_open+0x88>
   1421c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14220:	cmp	r3, #0
   14224:	beq	14234 <MPLIST_open+0x88>
   14228:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1422c:	cmp	r3, #0
   14230:	bne	14240 <MPLIST_open+0x94>
   14234:	ldr	r3, [pc, #828]	; 14578 <MPLIST_open+0x3cc>
   14238:	str	r3, [fp, #-28]	; 0xffffffe4
   1423c:	b	1426c <MPLIST_open+0xc0>
   14240:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14244:	lsl	r2, r3, #5
   14248:	ldr	r3, [pc, #804]	; 14574 <MPLIST_open+0x3c8>
   1424c:	add	r3, r2, r3
   14250:	str	r3, [fp, #-16]
   14254:	ldr	r3, [fp, #-16]
   14258:	ldr	r3, [r3, #20]
   1425c:	cmp	r3, #0
   14260:	bne	1426c <MPLIST_open+0xc0>
   14264:	ldr	r3, [pc, #784]	; 1457c <MPLIST_open+0x3d0>
   14268:	str	r3, [fp, #-28]	; 0xffffffe4
   1426c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14270:	ldr	r3, [pc, #776]	; 14580 <MPLIST_open+0x3d4>
   14274:	cmp	r2, r3
   14278:	ble	14564 <MPLIST_open+0x3b8>
   1427c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14280:	cmp	r3, #34048	; 0x8500
   14284:	bgt	14564 <MPLIST_open+0x3b8>
   14288:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1428c:	mov	r3, #0
   14290:	str	r3, [r2]
   14294:	ldr	r3, [fp, #-16]
   14298:	ldr	r3, [r3, #28]
   1429c:	mov	r0, r3
   142a0:	bl	12c3c <MPCS_enter>
   142a4:	mov	r3, r0
   142a8:	str	r3, [fp, #-24]	; 0xffffffe8
   142ac:	mov	r3, #0
   142b0:	str	r3, [fp, #-8]
   142b4:	b	14338 <MPLIST_open+0x18c>
   142b8:	ldr	r3, [fp, #-16]
   142bc:	ldr	r2, [r3, #24]
   142c0:	ldr	r3, [fp, #-8]
   142c4:	lsl	r3, r3, #7
   142c8:	add	r3, r2, r3
   142cc:	ldr	r3, [r3, #4]
   142d0:	cmp	r3, #0
   142d4:	beq	1432c <MPLIST_open+0x180>
   142d8:	ldr	r3, [fp, #-16]
   142dc:	ldr	r2, [r3, #24]
   142e0:	ldr	r3, [fp, #-8]
   142e4:	lsl	r3, r3, #7
   142e8:	add	r3, r2, r3
   142ec:	ldr	r3, [r3, #4]
   142f0:	cmp	r3, #1
   142f4:	beq	1432c <MPLIST_open+0x180>
   142f8:	ldr	r3, [fp, #-16]
   142fc:	ldr	r2, [r3, #24]
   14300:	ldr	r3, [fp, #-8]
   14304:	lsl	r3, r3, #7
   14308:	add	r3, r2, r3
   1430c:	add	r3, r3, #8
   14310:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14314:	mov	r1, r3
   14318:	mov	r2, #32
   1431c:	bl	9cc0 <strncmp@plt>
   14320:	mov	r3, r0
   14324:	cmp	r3, #0
   14328:	beq	14350 <MPLIST_open+0x1a4>
   1432c:	ldr	r3, [fp, #-8]
   14330:	add	r3, r3, #1
   14334:	str	r3, [fp, #-8]
   14338:	ldr	r3, [fp, #-16]
   1433c:	ldr	r3, [r3, #20]
   14340:	ldr	r2, [r3, #8]
   14344:	ldr	r3, [fp, #-8]
   14348:	cmp	r2, r3
   1434c:	bhi	142b8 <MPLIST_open+0x10c>
   14350:	ldr	r3, [fp, #-16]
   14354:	ldr	r3, [r3, #20]
   14358:	ldr	r2, [r3, #8]
   1435c:	ldr	r3, [fp, #-8]
   14360:	cmp	r2, r3
   14364:	bne	1438c <MPLIST_open+0x1e0>
   14368:	ldr	r3, [pc, #532]	; 14584 <MPLIST_open+0x3d8>
   1436c:	str	r3, [fp, #-28]	; 0xffffffe4
   14370:	ldr	r3, [fp, #-16]
   14374:	ldr	r3, [r3, #28]
   14378:	mov	r0, r3
   1437c:	bl	12e98 <MPCS_leave>
   14380:	mov	r3, r0
   14384:	str	r3, [fp, #-24]	; 0xffffffe8
   14388:	b	14564 <MPLIST_open+0x3b8>
   1438c:	ldr	r3, [fp, #-16]
   14390:	ldr	r2, [r3, #24]
   14394:	ldr	r3, [fp, #-8]
   14398:	lsl	r3, r3, #7
   1439c:	add	r3, r2, r3
   143a0:	ldrh	r1, [r3, #2]
   143a4:	sub	ip, fp, #32
   143a8:	ldr	r3, [fp, #-16]
   143ac:	ldr	r2, [r3, #24]
   143b0:	ldr	r3, [fp, #-8]
   143b4:	lsl	r3, r3, #7
   143b8:	add	r3, r2, r3
   143bc:	ldr	lr, [r3, #4]
   143c0:	mov	r3, #3
   143c4:	str	r3, [sp]
   143c8:	mov	r0, r1
   143cc:	mov	r1, ip
   143d0:	mov	r2, #0
   143d4:	mov	r3, lr
   143d8:	bl	17d1c <POOL_translateAddr>
   143dc:	mov	r3, r0
   143e0:	str	r3, [fp, #-28]	; 0xffffffe4
   143e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   143e8:	ldr	r3, [pc, #400]	; 14580 <MPLIST_open+0x3d4>
   143ec:	cmp	r2, r3
   143f0:	ble	1442c <MPLIST_open+0x280>
   143f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   143f8:	cmp	r3, #34048	; 0x8500
   143fc:	bgt	1442c <MPLIST_open+0x280>
   14400:	ldr	r3, [fp, #-16]
   14404:	ldr	r2, [r3, #24]
   14408:	ldr	r3, [fp, #-8]
   1440c:	lsl	r3, r3, #7
   14410:	add	r3, r2, r3
   14414:	ldrh	r3, [r3, #2]
   14418:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1441c:	mov	r0, r3
   14420:	mov	r1, r2
   14424:	mov	r2, #8
   14428:	bl	17224 <POOL_invalidate>
   1442c:	ldr	r3, [fp, #-16]
   14430:	ldr	r2, [r3, #24]
   14434:	ldr	r3, [fp, #-8]
   14438:	lsl	r3, r3, #7
   1443c:	add	r3, r2, r3
   14440:	str	r3, [fp, #-20]	; 0xffffffec
   14444:	ldr	r3, [fp, #-16]
   14448:	ldr	r3, [r3, #28]
   1444c:	mov	r0, r3
   14450:	bl	12e98 <MPCS_leave>
   14454:	mov	r3, r0
   14458:	str	r3, [fp, #-24]	; 0xffffffe8
   1445c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14460:	ldr	r3, [pc, #280]	; 14580 <MPLIST_open+0x3d4>
   14464:	cmp	r2, r3
   14468:	ble	1449c <MPLIST_open+0x2f0>
   1446c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14470:	cmp	r3, #34048	; 0x8500
   14474:	bgt	1449c <MPLIST_open+0x2f0>
   14478:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1447c:	ldr	r3, [pc, #252]	; 14580 <MPLIST_open+0x3d4>
   14480:	cmp	r2, r3
   14484:	ble	14494 <MPLIST_open+0x2e8>
   14488:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1448c:	cmp	r3, #34048	; 0x8500
   14490:	ble	1449c <MPLIST_open+0x2f0>
   14494:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14498:	str	r3, [fp, #-28]	; 0xffffffe4
   1449c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   144a0:	ldr	r3, [pc, #216]	; 14580 <MPLIST_open+0x3d4>
   144a4:	cmp	r2, r3
   144a8:	ble	144dc <MPLIST_open+0x330>
   144ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   144b0:	cmp	r3, #34048	; 0x8500
   144b4:	bgt	144dc <MPLIST_open+0x330>
   144b8:	ldr	r3, [fp, #-16]
   144bc:	ldr	r3, [r3, #20]
   144c0:	ldr	r3, [r3, #4]
   144c4:	sub	r2, fp, #36	; 0x24
   144c8:	mov	r0, r3
   144cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   144d0:	bl	129ac <MPCS_open>
   144d4:	mov	r3, r0
   144d8:	str	r3, [fp, #-28]	; 0xffffffe4
   144dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   144e0:	ldr	r3, [pc, #152]	; 14580 <MPLIST_open+0x3d4>
   144e4:	cmp	r2, r3
   144e8:	ble	14564 <MPLIST_open+0x3b8>
   144ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   144f0:	cmp	r3, #34048	; 0x8500
   144f4:	bgt	14564 <MPLIST_open+0x3b8>
   144f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   144fc:	mov	r1, #16
   14500:	bl	119d0 <_MEM_USR_calloc>
   14504:	mov	r3, r0
   14508:	str	r3, [fp, #-28]	; 0xffffffe4
   1450c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14510:	ldr	r3, [pc, #104]	; 14580 <MPLIST_open+0x3d4>
   14514:	cmp	r2, r3
   14518:	ble	14564 <MPLIST_open+0x3b8>
   1451c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14520:	cmp	r3, #34048	; 0x8500
   14524:	bgt	14564 <MPLIST_open+0x3b8>
   14528:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1452c:	ldr	r3, [r3]
   14530:	str	r3, [fp, #-12]
   14534:	ldr	r2, [fp, #-12]
   14538:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1453c:	str	r3, [r2]
   14540:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14544:	ldr	r3, [fp, #-12]
   14548:	str	r2, [r3, #4]
   1454c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14550:	ldr	r3, [fp, #-12]
   14554:	str	r2, [r3, #8]
   14558:	ldr	r2, [fp, #-12]
   1455c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14560:	str	r3, [r2, #12]
   14564:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14568:	mov	r0, r3
   1456c:	sub	sp, fp, #4
   14570:	pop	{fp, pc}
   14574:	.word	0x0002daf0
   14578:	.word	0x8000800b
   1457c:	.word	0x80008000
   14580:	.word	0x00007fff
   14584:	.word	0x8000802d

00014588 <MPLIST_close>:
   14588:	push	{fp, lr}
   1458c:	add	fp, sp, #4
   14590:	sub	sp, sp, #32
   14594:	str	r0, [fp, #-32]	; 0xffffffe0
   14598:	mov	r3, #32768	; 0x8000
   1459c:	str	r3, [fp, #-24]	; 0xffffffe8
   145a0:	mov	r3, #32768	; 0x8000
   145a4:	str	r3, [fp, #-20]	; 0xffffffec
   145a8:	mov	r3, #0
   145ac:	str	r3, [fp, #-16]
   145b0:	mov	r3, #0
   145b4:	str	r3, [fp, #-12]
   145b8:	mov	r3, #0
   145bc:	str	r3, [fp, #-8]
   145c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   145c4:	cmp	r3, #0
   145c8:	bne	145d8 <MPLIST_close+0x50>
   145cc:	ldr	r3, [pc, #444]	; 14790 <MPLIST_close+0x208>
   145d0:	str	r3, [fp, #-24]	; 0xffffffe8
   145d4:	b	14610 <MPLIST_close+0x88>
   145d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   145dc:	str	r3, [fp, #-8]
   145e0:	ldr	r3, [fp, #-8]
   145e4:	ldr	r3, [r3]
   145e8:	lsl	r2, r3, #5
   145ec:	ldr	r3, [pc, #416]	; 14794 <MPLIST_close+0x20c>
   145f0:	add	r3, r2, r3
   145f4:	str	r3, [fp, #-12]
   145f8:	ldr	r3, [fp, #-12]
   145fc:	ldr	r3, [r3, #20]
   14600:	cmp	r3, #0
   14604:	bne	14610 <MPLIST_close+0x88>
   14608:	ldr	r3, [pc, #392]	; 14798 <MPLIST_close+0x210>
   1460c:	str	r3, [fp, #-24]	; 0xffffffe8
   14610:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14614:	ldr	r3, [pc, #384]	; 1479c <MPLIST_close+0x214>
   14618:	cmp	r2, r3
   1461c:	ble	14780 <MPLIST_close+0x1f8>
   14620:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14624:	cmp	r3, #34048	; 0x8500
   14628:	bgt	14780 <MPLIST_close+0x1f8>
   1462c:	ldr	r3, [fp, #-12]
   14630:	ldr	r3, [r3, #28]
   14634:	mov	r0, r3
   14638:	bl	12c3c <MPCS_enter>
   1463c:	mov	r3, r0
   14640:	str	r3, [fp, #-20]	; 0xffffffec
   14644:	ldr	r2, [fp, #-8]
   14648:	mov	r3, #0
   1464c:	str	r3, [r2, #4]
   14650:	ldr	r2, [fp, #-8]
   14654:	mov	r3, #0
   14658:	str	r3, [r2, #12]
   1465c:	ldr	r3, [fp, #-8]
   14660:	ldr	r3, [r3, #8]
   14664:	str	r3, [fp, #-16]
   14668:	ldr	r2, [fp, #-8]
   1466c:	mov	r3, #0
   14670:	str	r3, [r2, #8]
   14674:	ldr	r3, [fp, #-12]
   14678:	ldr	r3, [r3, #28]
   1467c:	mov	r0, r3
   14680:	bl	12e98 <MPCS_leave>
   14684:	mov	r3, r0
   14688:	str	r3, [fp, #-20]	; 0xffffffec
   1468c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14690:	ldr	r3, [pc, #260]	; 1479c <MPLIST_close+0x214>
   14694:	cmp	r2, r3
   14698:	ble	146cc <MPLIST_close+0x144>
   1469c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   146a0:	cmp	r3, #34048	; 0x8500
   146a4:	bgt	146cc <MPLIST_close+0x144>
   146a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   146ac:	ldr	r3, [pc, #232]	; 1479c <MPLIST_close+0x214>
   146b0:	cmp	r2, r3
   146b4:	ble	146c4 <MPLIST_close+0x13c>
   146b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   146bc:	cmp	r3, #34048	; 0x8500
   146c0:	ble	146cc <MPLIST_close+0x144>
   146c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   146c8:	str	r3, [fp, #-24]	; 0xffffffe8
   146cc:	ldr	r3, [fp, #-12]
   146d0:	ldr	r3, [r3, #20]
   146d4:	ldr	r3, [r3, #4]
   146d8:	mov	r0, r3
   146dc:	ldr	r1, [fp, #-16]
   146e0:	bl	12ac4 <MPCS_close>
   146e4:	mov	r3, r0
   146e8:	str	r3, [fp, #-20]	; 0xffffffec
   146ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   146f0:	ldr	r3, [pc, #164]	; 1479c <MPLIST_close+0x214>
   146f4:	cmp	r2, r3
   146f8:	ble	1472c <MPLIST_close+0x1a4>
   146fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14700:	cmp	r3, #34048	; 0x8500
   14704:	bgt	1472c <MPLIST_close+0x1a4>
   14708:	ldr	r2, [fp, #-20]	; 0xffffffec
   1470c:	ldr	r3, [pc, #136]	; 1479c <MPLIST_close+0x214>
   14710:	cmp	r2, r3
   14714:	ble	14724 <MPLIST_close+0x19c>
   14718:	ldr	r3, [fp, #-20]	; 0xffffffec
   1471c:	cmp	r3, #34048	; 0x8500
   14720:	ble	1472c <MPLIST_close+0x1a4>
   14724:	ldr	r3, [fp, #-20]	; 0xffffffec
   14728:	str	r3, [fp, #-24]	; 0xffffffe8
   1472c:	sub	r3, fp, #32
   14730:	mov	r0, r3
   14734:	bl	11a5c <_MEM_USR_free>
   14738:	mov	r3, r0
   1473c:	str	r3, [fp, #-20]	; 0xffffffec
   14740:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14744:	ldr	r3, [pc, #80]	; 1479c <MPLIST_close+0x214>
   14748:	cmp	r2, r3
   1474c:	ble	14780 <MPLIST_close+0x1f8>
   14750:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14754:	cmp	r3, #34048	; 0x8500
   14758:	bgt	14780 <MPLIST_close+0x1f8>
   1475c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14760:	ldr	r3, [pc, #52]	; 1479c <MPLIST_close+0x214>
   14764:	cmp	r2, r3
   14768:	ble	14778 <MPLIST_close+0x1f0>
   1476c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14770:	cmp	r3, #34048	; 0x8500
   14774:	ble	14780 <MPLIST_close+0x1f8>
   14778:	ldr	r3, [fp, #-20]	; 0xffffffec
   1477c:	str	r3, [fp, #-24]	; 0xffffffe8
   14780:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14784:	mov	r0, r3
   14788:	sub	sp, fp, #4
   1478c:	pop	{fp, pc}
   14790:	.word	0x8000800b
   14794:	.word	0x0002daf0
   14798:	.word	0x80008000
   1479c:	.word	0x00007fff

000147a0 <MPLIST_isEmpty>:
   147a0:	push	{fp, lr}
   147a4:	add	fp, sp, #4
   147a8:	sub	sp, sp, #40	; 0x28
   147ac:	str	r0, [fp, #-32]	; 0xffffffe0
   147b0:	mov	r3, #0
   147b4:	str	r3, [fp, #-20]	; 0xffffffec
   147b8:	mov	r3, #0
   147bc:	str	r3, [fp, #-16]
   147c0:	mov	r3, #0
   147c4:	str	r3, [fp, #-24]	; 0xffffffe8
   147c8:	mov	r3, #0
   147cc:	strh	r3, [fp, #-10]
   147d0:	mov	r3, #32768	; 0x8000
   147d4:	str	r3, [fp, #-8]
   147d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   147dc:	cmp	r3, #0
   147e0:	bne	147f0 <MPLIST_isEmpty+0x50>
   147e4:	ldr	r3, [pc, #180]	; 148a0 <MPLIST_isEmpty+0x100>
   147e8:	str	r3, [fp, #-8]
   147ec:	b	14888 <MPLIST_isEmpty+0xe8>
   147f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   147f4:	ldr	r3, [r3, #12]
   147f8:	str	r3, [fp, #-20]	; 0xffffffec
   147fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14800:	ldr	r3, [r3, #4]
   14804:	str	r3, [fp, #-16]
   14808:	ldr	r3, [fp, #-20]	; 0xffffffec
   1480c:	ldrh	r2, [r3, #2]
   14810:	sub	r1, fp, #24
   14814:	mov	r3, #0
   14818:	str	r3, [sp]
   1481c:	mov	r0, r2
   14820:	mov	r2, #3
   14824:	ldr	r3, [fp, #-16]
   14828:	bl	17d1c <POOL_translateAddr>
   1482c:	mov	r3, r0
   14830:	str	r3, [fp, #-8]
   14834:	ldr	r2, [fp, #-8]
   14838:	ldr	r3, [pc, #100]	; 148a4 <MPLIST_isEmpty+0x104>
   1483c:	cmp	r2, r3
   14840:	ble	14888 <MPLIST_isEmpty+0xe8>
   14844:	ldr	r3, [fp, #-8]
   14848:	cmp	r3, #34048	; 0x8500
   1484c:	bgt	14888 <MPLIST_isEmpty+0xe8>
   14850:	ldr	r3, [fp, #-20]	; 0xffffffec
   14854:	ldrh	r3, [r3, #2]
   14858:	mov	r0, r3
   1485c:	ldr	r1, [fp, #-16]
   14860:	mov	r2, #8
   14864:	bl	17224 <POOL_invalidate>
   14868:	ldr	r3, [fp, #-16]
   1486c:	ldr	r3, [r3]
   14870:	mov	r2, r3
   14874:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14878:	cmp	r2, r3
   1487c:	bne	14888 <MPLIST_isEmpty+0xe8>
   14880:	mov	r3, #1
   14884:	strh	r3, [fp, #-10]
   14888:	ldrh	r3, [fp, #-10]
   1488c:	lsl	r3, r3, #16
   14890:	asr	r3, r3, #16
   14894:	mov	r0, r3
   14898:	sub	sp, fp, #4
   1489c:	pop	{fp, pc}
   148a0:	.word	0x8000800b
   148a4:	.word	0x00007fff

000148a8 <MPLIST_insertBefore>:
   148a8:	push	{fp, lr}
   148ac:	add	fp, sp, #4
   148b0:	sub	sp, sp, #64	; 0x40
   148b4:	str	r0, [fp, #-48]	; 0xffffffd0
   148b8:	str	r1, [fp, #-52]	; 0xffffffcc
   148bc:	str	r2, [fp, #-56]	; 0xffffffc8
   148c0:	mov	r3, #32768	; 0x8000
   148c4:	str	r3, [fp, #-20]	; 0xffffffec
   148c8:	mov	r3, #32768	; 0x8000
   148cc:	str	r3, [fp, #-16]
   148d0:	mov	r3, #0
   148d4:	str	r3, [fp, #-24]	; 0xffffffe8
   148d8:	mov	r3, #0
   148dc:	str	r3, [fp, #-28]	; 0xffffffe4
   148e0:	mov	r3, #0
   148e4:	str	r3, [fp, #-32]	; 0xffffffe0
   148e8:	mov	r3, #0
   148ec:	str	r3, [fp, #-12]
   148f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   148f4:	cmp	r3, #0
   148f8:	beq	14914 <MPLIST_insertBefore+0x6c>
   148fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14900:	cmp	r3, #0
   14904:	beq	14914 <MPLIST_insertBefore+0x6c>
   14908:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1490c:	cmp	r3, #0
   14910:	bne	14920 <MPLIST_insertBefore+0x78>
   14914:	ldr	r3, [pc, #692]	; 14bd0 <MPLIST_insertBefore+0x328>
   14918:	str	r3, [fp, #-20]	; 0xffffffec
   1491c:	b	14bc0 <MPLIST_insertBefore+0x318>
   14920:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14924:	str	r3, [fp, #-12]
   14928:	ldr	r3, [fp, #-12]
   1492c:	ldr	r3, [r3, #8]
   14930:	str	r3, [fp, #-8]
   14934:	ldr	r0, [fp, #-8]
   14938:	bl	12c3c <MPCS_enter>
   1493c:	mov	r3, r0
   14940:	str	r3, [fp, #-20]	; 0xffffffec
   14944:	ldr	r2, [fp, #-20]	; 0xffffffec
   14948:	ldr	r3, [pc, #644]	; 14bd4 <MPLIST_insertBefore+0x32c>
   1494c:	cmp	r2, r3
   14950:	ble	14bc0 <MPLIST_insertBefore+0x318>
   14954:	ldr	r3, [fp, #-20]	; 0xffffffec
   14958:	cmp	r3, #34048	; 0x8500
   1495c:	bgt	14bc0 <MPLIST_insertBefore+0x318>
   14960:	ldr	r3, [fp, #-12]
   14964:	ldr	r3, [r3]
   14968:	sub	ip, fp, #34	; 0x22
   1496c:	mov	r0, r3
   14970:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14974:	mov	r2, #0
   14978:	mov	r3, ip
   1497c:	bl	17e3c <POOL_getPoolId>
   14980:	mov	r3, r0
   14984:	str	r3, [fp, #-20]	; 0xffffffec
   14988:	ldr	r2, [fp, #-20]	; 0xffffffec
   1498c:	ldr	r3, [pc, #576]	; 14bd4 <MPLIST_insertBefore+0x32c>
   14990:	cmp	r2, r3
   14994:	ble	14b70 <MPLIST_insertBefore+0x2c8>
   14998:	ldr	r3, [fp, #-20]	; 0xffffffec
   1499c:	cmp	r3, #34048	; 0x8500
   149a0:	bgt	14b70 <MPLIST_insertBefore+0x2c8>
   149a4:	ldr	r3, [fp, #-12]
   149a8:	ldr	r3, [r3]
   149ac:	sub	ip, fp, #36	; 0x24
   149b0:	mov	r0, r3
   149b4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   149b8:	mov	r2, #0
   149bc:	mov	r3, ip
   149c0:	bl	17e3c <POOL_getPoolId>
   149c4:	mov	r3, r0
   149c8:	str	r3, [fp, #-20]	; 0xffffffec
   149cc:	ldrh	r3, [fp, #-36]	; 0xffffffdc
   149d0:	mov	r0, r3
   149d4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   149d8:	mov	r2, #8
   149dc:	bl	17224 <POOL_invalidate>
   149e0:	ldr	r3, [fp, #-12]
   149e4:	ldr	r2, [r3]
   149e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   149ec:	ldr	r3, [r3, #4]
   149f0:	sub	ip, fp, #38	; 0x26
   149f4:	mov	r0, r2
   149f8:	mov	r1, r3
   149fc:	mov	r2, #3
   14a00:	mov	r3, ip
   14a04:	bl	17e3c <POOL_getPoolId>
   14a08:	mov	r3, r0
   14a0c:	str	r3, [fp, #-20]	; 0xffffffec
   14a10:	ldrh	r2, [fp, #-38]	; 0xffffffda
   14a14:	sub	r1, fp, #24
   14a18:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14a1c:	ldr	ip, [r3, #4]
   14a20:	mov	r3, #3
   14a24:	str	r3, [sp]
   14a28:	mov	r0, r2
   14a2c:	mov	r2, #0
   14a30:	mov	r3, ip
   14a34:	bl	17d1c <POOL_translateAddr>
   14a38:	mov	r3, r0
   14a3c:	str	r3, [fp, #-20]	; 0xffffffec
   14a40:	ldr	r2, [fp, #-20]	; 0xffffffec
   14a44:	ldr	r3, [pc, #392]	; 14bd4 <MPLIST_insertBefore+0x32c>
   14a48:	cmp	r2, r3
   14a4c:	ble	14b70 <MPLIST_insertBefore+0x2c8>
   14a50:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a54:	cmp	r3, #34048	; 0x8500
   14a58:	bgt	14b70 <MPLIST_insertBefore+0x2c8>
   14a5c:	ldrh	r2, [fp, #-34]	; 0xffffffde
   14a60:	sub	r1, fp, #32
   14a64:	mov	r3, #0
   14a68:	str	r3, [sp]
   14a6c:	mov	r0, r2
   14a70:	mov	r2, #3
   14a74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14a78:	bl	17d1c <POOL_translateAddr>
   14a7c:	mov	r3, r0
   14a80:	str	r3, [fp, #-20]	; 0xffffffec
   14a84:	ldr	r2, [fp, #-20]	; 0xffffffec
   14a88:	ldr	r3, [pc, #324]	; 14bd4 <MPLIST_insertBefore+0x32c>
   14a8c:	cmp	r2, r3
   14a90:	ble	14b70 <MPLIST_insertBefore+0x2c8>
   14a94:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a98:	cmp	r3, #34048	; 0x8500
   14a9c:	bgt	14b70 <MPLIST_insertBefore+0x2c8>
   14aa0:	ldrh	r2, [fp, #-36]	; 0xffffffdc
   14aa4:	sub	r1, fp, #28
   14aa8:	mov	r3, #0
   14aac:	str	r3, [sp]
   14ab0:	mov	r0, r2
   14ab4:	mov	r2, #3
   14ab8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14abc:	bl	17d1c <POOL_translateAddr>
   14ac0:	mov	r3, r0
   14ac4:	str	r3, [fp, #-20]	; 0xffffffec
   14ac8:	ldr	r2, [fp, #-20]	; 0xffffffec
   14acc:	ldr	r3, [pc, #256]	; 14bd4 <MPLIST_insertBefore+0x32c>
   14ad0:	cmp	r2, r3
   14ad4:	ble	14b70 <MPLIST_insertBefore+0x2c8>
   14ad8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14adc:	cmp	r3, #34048	; 0x8500
   14ae0:	bgt	14b70 <MPLIST_insertBefore+0x2c8>
   14ae4:	ldrh	r3, [fp, #-38]	; 0xffffffda
   14ae8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14aec:	mov	r0, r3
   14af0:	mov	r1, r2
   14af4:	mov	r2, #8
   14af8:	bl	17224 <POOL_invalidate>
   14afc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14b00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14b04:	str	r3, [r2]
   14b08:	ldrh	r3, [fp, #-38]	; 0xffffffda
   14b0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14b10:	mov	r0, r3
   14b14:	mov	r1, r2
   14b18:	mov	r2, #8
   14b1c:	bl	170a4 <POOL_writeback>
   14b20:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14b24:	ldr	r2, [r3, #4]
   14b28:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14b2c:	str	r2, [r3, #4]
   14b30:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14b34:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14b38:	str	r2, [r3]
   14b3c:	ldrh	r3, [fp, #-34]	; 0xffffffde
   14b40:	mov	r0, r3
   14b44:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14b48:	mov	r2, #8
   14b4c:	bl	170a4 <POOL_writeback>
   14b50:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14b54:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14b58:	str	r2, [r3, #4]
   14b5c:	ldrh	r3, [fp, #-36]	; 0xffffffdc
   14b60:	mov	r0, r3
   14b64:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14b68:	mov	r2, #8
   14b6c:	bl	170a4 <POOL_writeback>
   14b70:	ldr	r0, [fp, #-8]
   14b74:	bl	12e98 <MPCS_leave>
   14b78:	mov	r3, r0
   14b7c:	str	r3, [fp, #-16]
   14b80:	ldr	r2, [fp, #-16]
   14b84:	ldr	r3, [pc, #72]	; 14bd4 <MPLIST_insertBefore+0x32c>
   14b88:	cmp	r2, r3
   14b8c:	ble	14b9c <MPLIST_insertBefore+0x2f4>
   14b90:	ldr	r3, [fp, #-16]
   14b94:	cmp	r3, #34048	; 0x8500
   14b98:	ble	14bc0 <MPLIST_insertBefore+0x318>
   14b9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14ba0:	ldr	r3, [pc, #44]	; 14bd4 <MPLIST_insertBefore+0x32c>
   14ba4:	cmp	r2, r3
   14ba8:	ble	14bc0 <MPLIST_insertBefore+0x318>
   14bac:	ldr	r3, [fp, #-20]	; 0xffffffec
   14bb0:	cmp	r3, #34048	; 0x8500
   14bb4:	bgt	14bc0 <MPLIST_insertBefore+0x318>
   14bb8:	ldr	r3, [fp, #-16]
   14bbc:	str	r3, [fp, #-20]	; 0xffffffec
   14bc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14bc4:	mov	r0, r3
   14bc8:	sub	sp, fp, #4
   14bcc:	pop	{fp, pc}
   14bd0:	.word	0x8000800b
   14bd4:	.word	0x00007fff

00014bd8 <MPLIST_putTail>:
   14bd8:	push	{fp, lr}
   14bdc:	add	fp, sp, #4
   14be0:	sub	sp, sp, #56	; 0x38
   14be4:	str	r0, [fp, #-48]	; 0xffffffd0
   14be8:	str	r1, [fp, #-52]	; 0xffffffcc
   14bec:	mov	r3, #32768	; 0x8000
   14bf0:	str	r3, [fp, #-28]	; 0xffffffe4
   14bf4:	mov	r3, #32768	; 0x8000
   14bf8:	str	r3, [fp, #-24]	; 0xffffffe8
   14bfc:	mov	r3, #0
   14c00:	str	r3, [fp, #-32]	; 0xffffffe0
   14c04:	mov	r3, #0
   14c08:	str	r3, [fp, #-36]	; 0xffffffdc
   14c0c:	mov	r3, #0
   14c10:	str	r3, [fp, #-40]	; 0xffffffd8
   14c14:	mov	r3, #0
   14c18:	str	r3, [fp, #-20]	; 0xffffffec
   14c1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14c20:	cmp	r3, #0
   14c24:	beq	14c34 <MPLIST_putTail+0x5c>
   14c28:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14c2c:	cmp	r3, #0
   14c30:	bne	14c40 <MPLIST_putTail+0x68>
   14c34:	ldr	r3, [pc, #696]	; 14ef4 <MPLIST_putTail+0x31c>
   14c38:	str	r3, [fp, #-28]	; 0xffffffe4
   14c3c:	b	14ee4 <MPLIST_putTail+0x30c>
   14c40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14c44:	str	r3, [fp, #-20]	; 0xffffffec
   14c48:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c4c:	ldr	r3, [r3, #12]
   14c50:	str	r3, [fp, #-16]
   14c54:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c58:	ldr	r3, [r3, #4]
   14c5c:	str	r3, [fp, #-12]
   14c60:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c64:	ldr	r3, [r3, #8]
   14c68:	str	r3, [fp, #-8]
   14c6c:	ldr	r0, [fp, #-8]
   14c70:	bl	12c3c <MPCS_enter>
   14c74:	mov	r3, r0
   14c78:	str	r3, [fp, #-28]	; 0xffffffe4
   14c7c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14c80:	ldr	r3, [pc, #624]	; 14ef8 <MPLIST_putTail+0x320>
   14c84:	cmp	r2, r3
   14c88:	ble	14ee4 <MPLIST_putTail+0x30c>
   14c8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14c90:	cmp	r3, #34048	; 0x8500
   14c94:	bgt	14ee4 <MPLIST_putTail+0x30c>
   14c98:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c9c:	ldr	r3, [r3]
   14ca0:	sub	ip, fp, #42	; 0x2a
   14ca4:	mov	r0, r3
   14ca8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14cac:	mov	r2, #0
   14cb0:	mov	r3, ip
   14cb4:	bl	17e3c <POOL_getPoolId>
   14cb8:	mov	r3, r0
   14cbc:	str	r3, [fp, #-28]	; 0xffffffe4
   14cc0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14cc4:	ldr	r3, [pc, #556]	; 14ef8 <MPLIST_putTail+0x320>
   14cc8:	cmp	r2, r3
   14ccc:	ble	14e94 <MPLIST_putTail+0x2bc>
   14cd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14cd4:	cmp	r3, #34048	; 0x8500
   14cd8:	bgt	14e94 <MPLIST_putTail+0x2bc>
   14cdc:	ldrh	r2, [fp, #-42]	; 0xffffffd6
   14ce0:	sub	r1, fp, #36	; 0x24
   14ce4:	mov	r3, #0
   14ce8:	str	r3, [sp]
   14cec:	mov	r0, r2
   14cf0:	mov	r2, #3
   14cf4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14cf8:	bl	17d1c <POOL_translateAddr>
   14cfc:	mov	r3, r0
   14d00:	str	r3, [fp, #-28]	; 0xffffffe4
   14d04:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14d08:	ldr	r3, [pc, #488]	; 14ef8 <MPLIST_putTail+0x320>
   14d0c:	cmp	r2, r3
   14d10:	ble	14e94 <MPLIST_putTail+0x2bc>
   14d14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14d18:	cmp	r3, #34048	; 0x8500
   14d1c:	bgt	14e94 <MPLIST_putTail+0x2bc>
   14d20:	ldr	r3, [fp, #-16]
   14d24:	ldrh	r2, [r3, #2]
   14d28:	sub	r1, fp, #40	; 0x28
   14d2c:	mov	r3, #0
   14d30:	str	r3, [sp]
   14d34:	mov	r0, r2
   14d38:	mov	r2, #3
   14d3c:	ldr	r3, [fp, #-12]
   14d40:	bl	17d1c <POOL_translateAddr>
   14d44:	mov	r3, r0
   14d48:	str	r3, [fp, #-28]	; 0xffffffe4
   14d4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14d50:	ldr	r3, [pc, #416]	; 14ef8 <MPLIST_putTail+0x320>
   14d54:	cmp	r2, r3
   14d58:	ble	14e94 <MPLIST_putTail+0x2bc>
   14d5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14d60:	cmp	r3, #34048	; 0x8500
   14d64:	bgt	14e94 <MPLIST_putTail+0x2bc>
   14d68:	ldr	r3, [fp, #-16]
   14d6c:	ldrh	r3, [r3, #2]
   14d70:	mov	r0, r3
   14d74:	ldr	r1, [fp, #-12]
   14d78:	mov	r2, #8
   14d7c:	bl	17224 <POOL_invalidate>
   14d80:	ldr	r3, [fp, #-12]
   14d84:	ldr	r2, [r3, #4]
   14d88:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14d8c:	str	r2, [r3, #4]
   14d90:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14d94:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14d98:	str	r2, [r3]
   14d9c:	ldrh	r3, [fp, #-42]	; 0xffffffd6
   14da0:	mov	r0, r3
   14da4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14da8:	mov	r2, #8
   14dac:	bl	170a4 <POOL_writeback>
   14db0:	mov	r3, r0
   14db4:	str	r3, [fp, #-28]	; 0xffffffe4
   14db8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14dbc:	ldr	r3, [fp, #-12]
   14dc0:	str	r2, [r3, #4]
   14dc4:	ldr	r3, [fp, #-16]
   14dc8:	ldrh	r3, [r3, #2]
   14dcc:	mov	r0, r3
   14dd0:	ldr	r1, [fp, #-12]
   14dd4:	mov	r2, #8
   14dd8:	bl	170a4 <POOL_writeback>
   14ddc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14de0:	ldr	r2, [r3]
   14de4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14de8:	ldr	r3, [r3, #4]
   14dec:	sub	ip, fp, #44	; 0x2c
   14df0:	mov	r0, r2
   14df4:	mov	r1, r3
   14df8:	mov	r2, #3
   14dfc:	mov	r3, ip
   14e00:	bl	17e3c <POOL_getPoolId>
   14e04:	mov	r3, r0
   14e08:	str	r3, [fp, #-28]	; 0xffffffe4
   14e0c:	ldrh	r2, [fp, #-44]	; 0xffffffd4
   14e10:	sub	r1, fp, #32
   14e14:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14e18:	ldr	ip, [r3, #4]
   14e1c:	mov	r3, #3
   14e20:	str	r3, [sp]
   14e24:	mov	r0, r2
   14e28:	mov	r2, #0
   14e2c:	mov	r3, ip
   14e30:	bl	17d1c <POOL_translateAddr>
   14e34:	mov	r3, r0
   14e38:	str	r3, [fp, #-28]	; 0xffffffe4
   14e3c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14e40:	ldr	r3, [pc, #176]	; 14ef8 <MPLIST_putTail+0x320>
   14e44:	cmp	r2, r3
   14e48:	ble	14e94 <MPLIST_putTail+0x2bc>
   14e4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14e50:	cmp	r3, #34048	; 0x8500
   14e54:	bgt	14e94 <MPLIST_putTail+0x2bc>
   14e58:	ldrh	r3, [fp, #-44]	; 0xffffffd4
   14e5c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14e60:	mov	r0, r3
   14e64:	mov	r1, r2
   14e68:	mov	r2, #8
   14e6c:	bl	17224 <POOL_invalidate>
   14e70:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14e74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14e78:	str	r3, [r2]
   14e7c:	ldrh	r3, [fp, #-44]	; 0xffffffd4
   14e80:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14e84:	mov	r0, r3
   14e88:	mov	r1, r2
   14e8c:	mov	r2, #8
   14e90:	bl	170a4 <POOL_writeback>
   14e94:	ldr	r0, [fp, #-8]
   14e98:	bl	12e98 <MPCS_leave>
   14e9c:	mov	r3, r0
   14ea0:	str	r3, [fp, #-24]	; 0xffffffe8
   14ea4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14ea8:	ldr	r3, [pc, #72]	; 14ef8 <MPLIST_putTail+0x320>
   14eac:	cmp	r2, r3
   14eb0:	ble	14ec0 <MPLIST_putTail+0x2e8>
   14eb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14eb8:	cmp	r3, #34048	; 0x8500
   14ebc:	ble	14ee4 <MPLIST_putTail+0x30c>
   14ec0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14ec4:	ldr	r3, [pc, #44]	; 14ef8 <MPLIST_putTail+0x320>
   14ec8:	cmp	r2, r3
   14ecc:	ble	14ee4 <MPLIST_putTail+0x30c>
   14ed0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14ed4:	cmp	r3, #34048	; 0x8500
   14ed8:	bgt	14ee4 <MPLIST_putTail+0x30c>
   14edc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ee0:	str	r3, [fp, #-28]	; 0xffffffe4
   14ee4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14ee8:	mov	r0, r3
   14eec:	sub	sp, fp, #4
   14ef0:	pop	{fp, pc}
   14ef4:	.word	0x8000800b
   14ef8:	.word	0x00007fff

00014efc <MPLIST_removeElement>:
   14efc:	push	{fp, lr}
   14f00:	add	fp, sp, #4
   14f04:	sub	sp, sp, #56	; 0x38
   14f08:	str	r0, [fp, #-48]	; 0xffffffd0
   14f0c:	str	r1, [fp, #-52]	; 0xffffffcc
   14f10:	mov	r3, #32768	; 0x8000
   14f14:	str	r3, [fp, #-24]	; 0xffffffe8
   14f18:	mov	r3, #32768	; 0x8000
   14f1c:	str	r3, [fp, #-20]	; 0xffffffec
   14f20:	mov	r3, #0
   14f24:	str	r3, [fp, #-28]	; 0xffffffe4
   14f28:	mov	r3, #0
   14f2c:	str	r3, [fp, #-32]	; 0xffffffe0
   14f30:	mov	r3, #0
   14f34:	str	r3, [fp, #-16]
   14f38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14f3c:	cmp	r3, #0
   14f40:	beq	14f50 <MPLIST_removeElement+0x54>
   14f44:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14f48:	cmp	r3, #0
   14f4c:	bne	14f5c <MPLIST_removeElement+0x60>
   14f50:	ldr	r3, [pc, #660]	; 151ec <MPLIST_removeElement+0x2f0>
   14f54:	str	r3, [fp, #-24]	; 0xffffffe8
   14f58:	b	151dc <MPLIST_removeElement+0x2e0>
   14f5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14f60:	str	r3, [fp, #-16]
   14f64:	ldr	r3, [fp, #-16]
   14f68:	ldr	r3, [r3, #12]
   14f6c:	str	r3, [fp, #-12]
   14f70:	ldr	r3, [fp, #-16]
   14f74:	ldr	r3, [r3, #8]
   14f78:	str	r3, [fp, #-8]
   14f7c:	ldr	r0, [fp, #-8]
   14f80:	bl	12c3c <MPCS_enter>
   14f84:	mov	r3, r0
   14f88:	str	r3, [fp, #-24]	; 0xffffffe8
   14f8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14f90:	ldr	r3, [pc, #600]	; 151f0 <MPLIST_removeElement+0x2f4>
   14f94:	cmp	r2, r3
   14f98:	ble	151dc <MPLIST_removeElement+0x2e0>
   14f9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14fa0:	cmp	r3, #34048	; 0x8500
   14fa4:	bgt	151dc <MPLIST_removeElement+0x2e0>
   14fa8:	ldr	r3, [fp, #-12]
   14fac:	ldrh	r3, [r3, #2]
   14fb0:	mov	r0, r3
   14fb4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14fb8:	mov	r2, #8
   14fbc:	bl	17224 <POOL_invalidate>
   14fc0:	ldr	r3, [fp, #-16]
   14fc4:	ldr	r2, [r3]
   14fc8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14fcc:	ldr	r3, [r3, #4]
   14fd0:	sub	ip, fp, #36	; 0x24
   14fd4:	mov	r0, r2
   14fd8:	mov	r1, r3
   14fdc:	mov	r2, #3
   14fe0:	mov	r3, ip
   14fe4:	bl	17e3c <POOL_getPoolId>
   14fe8:	mov	r3, r0
   14fec:	str	r3, [fp, #-24]	; 0xffffffe8
   14ff0:	ldrh	r2, [fp, #-36]	; 0xffffffdc
   14ff4:	sub	r1, fp, #28
   14ff8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14ffc:	ldr	ip, [r3, #4]
   15000:	mov	r3, #3
   15004:	str	r3, [sp]
   15008:	mov	r0, r2
   1500c:	mov	r2, #0
   15010:	mov	r3, ip
   15014:	bl	17d1c <POOL_translateAddr>
   15018:	mov	r3, r0
   1501c:	str	r3, [fp, #-24]	; 0xffffffe8
   15020:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15024:	ldr	r3, [pc, #452]	; 151f0 <MPLIST_removeElement+0x2f4>
   15028:	cmp	r2, r3
   1502c:	ble	1518c <MPLIST_removeElement+0x290>
   15030:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15034:	cmp	r3, #34048	; 0x8500
   15038:	bgt	1518c <MPLIST_removeElement+0x290>
   1503c:	ldr	r3, [fp, #-16]
   15040:	ldr	r2, [r3]
   15044:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15048:	ldr	r3, [r3]
   1504c:	sub	ip, fp, #38	; 0x26
   15050:	mov	r0, r2
   15054:	mov	r1, r3
   15058:	mov	r2, #3
   1505c:	mov	r3, ip
   15060:	bl	17e3c <POOL_getPoolId>
   15064:	mov	r3, r0
   15068:	str	r3, [fp, #-24]	; 0xffffffe8
   1506c:	ldrh	r2, [fp, #-38]	; 0xffffffda
   15070:	sub	r1, fp, #32
   15074:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15078:	ldr	ip, [r3]
   1507c:	mov	r3, #3
   15080:	str	r3, [sp]
   15084:	mov	r0, r2
   15088:	mov	r2, #0
   1508c:	mov	r3, ip
   15090:	bl	17d1c <POOL_translateAddr>
   15094:	mov	r3, r0
   15098:	str	r3, [fp, #-24]	; 0xffffffe8
   1509c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   150a0:	ldr	r3, [pc, #328]	; 151f0 <MPLIST_removeElement+0x2f4>
   150a4:	cmp	r2, r3
   150a8:	ble	1518c <MPLIST_removeElement+0x290>
   150ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   150b0:	cmp	r3, #34048	; 0x8500
   150b4:	bgt	1518c <MPLIST_removeElement+0x290>
   150b8:	ldrh	r3, [fp, #-36]	; 0xffffffdc
   150bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   150c0:	mov	r0, r3
   150c4:	mov	r1, r2
   150c8:	mov	r2, #8
   150cc:	bl	17224 <POOL_invalidate>
   150d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   150d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   150d8:	ldr	r3, [r3]
   150dc:	str	r3, [r2]
   150e0:	ldrh	r3, [fp, #-36]	; 0xffffffdc
   150e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   150e8:	mov	r0, r3
   150ec:	mov	r1, r2
   150f0:	mov	r2, #8
   150f4:	bl	170a4 <POOL_writeback>
   150f8:	ldrh	r3, [fp, #-38]	; 0xffffffda
   150fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15100:	mov	r0, r3
   15104:	mov	r1, r2
   15108:	mov	r2, #8
   1510c:	bl	17224 <POOL_invalidate>
   15110:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15114:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15118:	ldr	r3, [r3, #4]
   1511c:	str	r3, [r2, #4]
   15120:	ldrh	r3, [fp, #-38]	; 0xffffffda
   15124:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15128:	mov	r0, r3
   1512c:	mov	r1, r2
   15130:	mov	r2, #8
   15134:	bl	170a4 <POOL_writeback>
   15138:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1513c:	mov	r3, #0
   15140:	str	r3, [r2]
   15144:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15148:	mov	r3, #0
   1514c:	str	r3, [r2, #4]
   15150:	ldr	r3, [fp, #-16]
   15154:	ldr	r3, [r3]
   15158:	sub	ip, fp, #34	; 0x22
   1515c:	mov	r0, r3
   15160:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15164:	mov	r2, #0
   15168:	mov	r3, ip
   1516c:	bl	17e3c <POOL_getPoolId>
   15170:	mov	r3, r0
   15174:	str	r3, [fp, #-24]	; 0xffffffe8
   15178:	ldrh	r3, [fp, #-34]	; 0xffffffde
   1517c:	mov	r0, r3
   15180:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15184:	mov	r2, #8
   15188:	bl	170a4 <POOL_writeback>
   1518c:	ldr	r0, [fp, #-8]
   15190:	bl	12e98 <MPCS_leave>
   15194:	mov	r3, r0
   15198:	str	r3, [fp, #-20]	; 0xffffffec
   1519c:	ldr	r2, [fp, #-20]	; 0xffffffec
   151a0:	ldr	r3, [pc, #72]	; 151f0 <MPLIST_removeElement+0x2f4>
   151a4:	cmp	r2, r3
   151a8:	ble	151b8 <MPLIST_removeElement+0x2bc>
   151ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   151b0:	cmp	r3, #34048	; 0x8500
   151b4:	ble	151dc <MPLIST_removeElement+0x2e0>
   151b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   151bc:	ldr	r3, [pc, #44]	; 151f0 <MPLIST_removeElement+0x2f4>
   151c0:	cmp	r2, r3
   151c4:	ble	151dc <MPLIST_removeElement+0x2e0>
   151c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151cc:	cmp	r3, #34048	; 0x8500
   151d0:	bgt	151dc <MPLIST_removeElement+0x2e0>
   151d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   151d8:	str	r3, [fp, #-24]	; 0xffffffe8
   151dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151e0:	mov	r0, r3
   151e4:	sub	sp, fp, #4
   151e8:	pop	{fp, pc}
   151ec:	.word	0x8000800b
   151f0:	.word	0x00007fff

000151f4 <MPLIST_first>:
   151f4:	push	{fp, lr}
   151f8:	add	fp, sp, #4
   151fc:	sub	sp, sp, #48	; 0x30
   15200:	str	r0, [fp, #-40]	; 0xffffffd8
   15204:	str	r1, [fp, #-44]	; 0xffffffd4
   15208:	mov	r3, #32768	; 0x8000
   1520c:	str	r3, [fp, #-28]	; 0xffffffe4
   15210:	mov	r3, #32768	; 0x8000
   15214:	str	r3, [fp, #-24]	; 0xffffffe8
   15218:	mov	r3, #0
   1521c:	str	r3, [fp, #-32]	; 0xffffffe0
   15220:	mov	r3, #0
   15224:	str	r3, [fp, #-20]	; 0xffffffec
   15228:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1522c:	cmp	r3, #0
   15230:	beq	15240 <MPLIST_first+0x4c>
   15234:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15238:	cmp	r3, #0
   1523c:	bne	1524c <MPLIST_first+0x58>
   15240:	ldr	r3, [pc, #412]	; 153e4 <MPLIST_first+0x1f0>
   15244:	str	r3, [fp, #-28]	; 0xffffffe4
   15248:	b	153d4 <MPLIST_first+0x1e0>
   1524c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15250:	str	r3, [fp, #-20]	; 0xffffffec
   15254:	ldr	r3, [fp, #-20]	; 0xffffffec
   15258:	ldr	r3, [r3, #12]
   1525c:	str	r3, [fp, #-16]
   15260:	ldr	r3, [fp, #-20]	; 0xffffffec
   15264:	ldr	r3, [r3, #4]
   15268:	str	r3, [fp, #-12]
   1526c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15270:	ldr	r3, [r3, #8]
   15274:	str	r3, [fp, #-8]
   15278:	ldr	r0, [fp, #-8]
   1527c:	bl	12c3c <MPCS_enter>
   15280:	mov	r3, r0
   15284:	str	r3, [fp, #-28]	; 0xffffffe4
   15288:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1528c:	ldr	r3, [pc, #340]	; 153e8 <MPLIST_first+0x1f4>
   15290:	cmp	r2, r3
   15294:	ble	153d4 <MPLIST_first+0x1e0>
   15298:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1529c:	cmp	r3, #34048	; 0x8500
   152a0:	bgt	153d4 <MPLIST_first+0x1e0>
   152a4:	ldr	r3, [fp, #-16]
   152a8:	ldrh	r3, [r3, #2]
   152ac:	mov	r0, r3
   152b0:	ldr	r1, [fp, #-12]
   152b4:	mov	r2, #8
   152b8:	bl	17224 <POOL_invalidate>
   152bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   152c0:	ldr	r2, [r3]
   152c4:	ldr	r3, [fp, #-12]
   152c8:	ldr	r3, [r3]
   152cc:	sub	ip, fp, #34	; 0x22
   152d0:	mov	r0, r2
   152d4:	mov	r1, r3
   152d8:	mov	r2, #3
   152dc:	mov	r3, ip
   152e0:	bl	17e3c <POOL_getPoolId>
   152e4:	mov	r3, r0
   152e8:	str	r3, [fp, #-28]	; 0xffffffe4
   152ec:	ldrh	r2, [fp, #-34]	; 0xffffffde
   152f0:	sub	r1, fp, #32
   152f4:	ldr	r3, [fp, #-12]
   152f8:	ldr	ip, [r3]
   152fc:	mov	r3, #3
   15300:	str	r3, [sp]
   15304:	mov	r0, r2
   15308:	mov	r2, #0
   1530c:	mov	r3, ip
   15310:	bl	17d1c <POOL_translateAddr>
   15314:	mov	r3, r0
   15318:	str	r3, [fp, #-28]	; 0xffffffe4
   1531c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15320:	ldr	r3, [pc, #192]	; 153e8 <MPLIST_first+0x1f4>
   15324:	cmp	r2, r3
   15328:	ble	15384 <MPLIST_first+0x190>
   1532c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15330:	cmp	r3, #34048	; 0x8500
   15334:	bgt	15384 <MPLIST_first+0x190>
   15338:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1533c:	mov	r3, #0
   15340:	str	r3, [r2]
   15344:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15348:	bl	147a0 <MPLIST_isEmpty>
   1534c:	mov	r3, r0
   15350:	lsl	r3, r3, #16
   15354:	lsr	r3, r3, #16
   15358:	cmp	r3, #0
   1535c:	bne	15384 <MPLIST_first+0x190>
   15360:	ldrh	r3, [fp, #-34]	; 0xffffffde
   15364:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15368:	mov	r0, r3
   1536c:	mov	r1, r2
   15370:	mov	r2, #8
   15374:	bl	17224 <POOL_invalidate>
   15378:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1537c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15380:	str	r2, [r3]
   15384:	ldr	r0, [fp, #-8]
   15388:	bl	12e98 <MPCS_leave>
   1538c:	mov	r3, r0
   15390:	str	r3, [fp, #-24]	; 0xffffffe8
   15394:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15398:	ldr	r3, [pc, #72]	; 153e8 <MPLIST_first+0x1f4>
   1539c:	cmp	r2, r3
   153a0:	ble	153b0 <MPLIST_first+0x1bc>
   153a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   153a8:	cmp	r3, #34048	; 0x8500
   153ac:	ble	153d4 <MPLIST_first+0x1e0>
   153b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   153b4:	ldr	r3, [pc, #44]	; 153e8 <MPLIST_first+0x1f4>
   153b8:	cmp	r2, r3
   153bc:	ble	153d4 <MPLIST_first+0x1e0>
   153c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   153c4:	cmp	r3, #34048	; 0x8500
   153c8:	bgt	153d4 <MPLIST_first+0x1e0>
   153cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   153d0:	str	r3, [fp, #-28]	; 0xffffffe4
   153d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   153d8:	mov	r0, r3
   153dc:	sub	sp, fp, #4
   153e0:	pop	{fp, pc}
   153e4:	.word	0x8000800b
   153e8:	.word	0x00007fff

000153ec <MPLIST_next>:
   153ec:	push	{fp, lr}
   153f0:	add	fp, sp, #4
   153f4:	sub	sp, sp, #64	; 0x40
   153f8:	str	r0, [fp, #-48]	; 0xffffffd0
   153fc:	str	r1, [fp, #-52]	; 0xffffffcc
   15400:	str	r2, [fp, #-56]	; 0xffffffc8
   15404:	mov	r3, #32768	; 0x8000
   15408:	str	r3, [fp, #-28]	; 0xffffffe4
   1540c:	mov	r3, #32768	; 0x8000
   15410:	str	r3, [fp, #-24]	; 0xffffffe8
   15414:	mov	r3, #0
   15418:	str	r3, [fp, #-32]	; 0xffffffe0
   1541c:	mov	r3, #0
   15420:	str	r3, [fp, #-36]	; 0xffffffdc
   15424:	mov	r3, #0
   15428:	str	r3, [fp, #-20]	; 0xffffffec
   1542c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15430:	cmp	r3, #0
   15434:	beq	15450 <MPLIST_next+0x64>
   15438:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1543c:	cmp	r3, #0
   15440:	beq	15450 <MPLIST_next+0x64>
   15444:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15448:	cmp	r3, #0
   1544c:	bne	1545c <MPLIST_next+0x70>
   15450:	ldr	r3, [pc, #540]	; 15674 <MPLIST_next+0x288>
   15454:	str	r3, [fp, #-28]	; 0xffffffe4
   15458:	b	15664 <MPLIST_next+0x278>
   1545c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15460:	str	r3, [fp, #-20]	; 0xffffffec
   15464:	ldr	r3, [fp, #-20]	; 0xffffffec
   15468:	ldr	r3, [r3, #12]
   1546c:	str	r3, [fp, #-16]
   15470:	ldr	r3, [fp, #-20]	; 0xffffffec
   15474:	ldr	r3, [r3, #4]
   15478:	str	r3, [fp, #-12]
   1547c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15480:	ldr	r3, [r3, #8]
   15484:	str	r3, [fp, #-8]
   15488:	ldr	r0, [fp, #-8]
   1548c:	bl	12c3c <MPCS_enter>
   15490:	mov	r3, r0
   15494:	str	r3, [fp, #-28]	; 0xffffffe4
   15498:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1549c:	ldr	r3, [pc, #468]	; 15678 <MPLIST_next+0x28c>
   154a0:	cmp	r2, r3
   154a4:	ble	15664 <MPLIST_next+0x278>
   154a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   154ac:	cmp	r3, #34048	; 0x8500
   154b0:	bgt	15664 <MPLIST_next+0x278>
   154b4:	ldr	r3, [fp, #-16]
   154b8:	ldrh	r2, [r3, #2]
   154bc:	sub	r1, fp, #36	; 0x24
   154c0:	mov	r3, #0
   154c4:	str	r3, [sp]
   154c8:	mov	r0, r2
   154cc:	mov	r2, #3
   154d0:	ldr	r3, [fp, #-12]
   154d4:	bl	17d1c <POOL_translateAddr>
   154d8:	mov	r3, r0
   154dc:	str	r3, [fp, #-28]	; 0xffffffe4
   154e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   154e4:	ldr	r3, [pc, #396]	; 15678 <MPLIST_next+0x28c>
   154e8:	cmp	r2, r3
   154ec:	ble	15614 <MPLIST_next+0x228>
   154f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   154f4:	cmp	r3, #34048	; 0x8500
   154f8:	bgt	15614 <MPLIST_next+0x228>
   154fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15500:	ldr	r3, [r3]
   15504:	sub	ip, fp, #38	; 0x26
   15508:	mov	r0, r3
   1550c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15510:	mov	r2, #0
   15514:	mov	r3, ip
   15518:	bl	17e3c <POOL_getPoolId>
   1551c:	mov	r3, r0
   15520:	str	r3, [fp, #-28]	; 0xffffffe4
   15524:	ldrh	r3, [fp, #-38]	; 0xffffffda
   15528:	mov	r0, r3
   1552c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15530:	mov	r2, #8
   15534:	bl	17224 <POOL_invalidate>
   15538:	ldr	r3, [fp, #-20]	; 0xffffffec
   1553c:	ldr	r2, [r3]
   15540:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15544:	ldr	r3, [r3]
   15548:	sub	ip, fp, #40	; 0x28
   1554c:	mov	r0, r2
   15550:	mov	r1, r3
   15554:	mov	r2, #3
   15558:	mov	r3, ip
   1555c:	bl	17e3c <POOL_getPoolId>
   15560:	mov	r3, r0
   15564:	str	r3, [fp, #-28]	; 0xffffffe4
   15568:	ldrh	r2, [fp, #-40]	; 0xffffffd8
   1556c:	sub	r1, fp, #32
   15570:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15574:	ldr	ip, [r3]
   15578:	mov	r3, #3
   1557c:	str	r3, [sp]
   15580:	mov	r0, r2
   15584:	mov	r2, #0
   15588:	mov	r3, ip
   1558c:	bl	17d1c <POOL_translateAddr>
   15590:	mov	r3, r0
   15594:	str	r3, [fp, #-28]	; 0xffffffe4
   15598:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1559c:	ldr	r3, [pc, #212]	; 15678 <MPLIST_next+0x28c>
   155a0:	cmp	r2, r3
   155a4:	ble	15614 <MPLIST_next+0x228>
   155a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   155ac:	cmp	r3, #34048	; 0x8500
   155b0:	bgt	15614 <MPLIST_next+0x228>
   155b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   155b8:	mov	r3, #0
   155bc:	str	r3, [r2]
   155c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   155c4:	bl	147a0 <MPLIST_isEmpty>
   155c8:	mov	r3, r0
   155cc:	lsl	r3, r3, #16
   155d0:	lsr	r3, r3, #16
   155d4:	cmp	r3, #0
   155d8:	bne	15614 <MPLIST_next+0x228>
   155dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   155e0:	ldr	r2, [r3]
   155e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   155e8:	cmp	r2, r3
   155ec:	beq	15614 <MPLIST_next+0x228>
   155f0:	ldrh	r3, [fp, #-40]	; 0xffffffd8
   155f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   155f8:	mov	r0, r3
   155fc:	mov	r1, r2
   15600:	mov	r2, #8
   15604:	bl	17224 <POOL_invalidate>
   15608:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1560c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15610:	str	r2, [r3]
   15614:	ldr	r0, [fp, #-8]
   15618:	bl	12e98 <MPCS_leave>
   1561c:	mov	r3, r0
   15620:	str	r3, [fp, #-24]	; 0xffffffe8
   15624:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15628:	ldr	r3, [pc, #72]	; 15678 <MPLIST_next+0x28c>
   1562c:	cmp	r2, r3
   15630:	ble	15640 <MPLIST_next+0x254>
   15634:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15638:	cmp	r3, #34048	; 0x8500
   1563c:	ble	15664 <MPLIST_next+0x278>
   15640:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15644:	ldr	r3, [pc, #44]	; 15678 <MPLIST_next+0x28c>
   15648:	cmp	r2, r3
   1564c:	ble	15664 <MPLIST_next+0x278>
   15650:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15654:	cmp	r3, #34048	; 0x8500
   15658:	bgt	15664 <MPLIST_next+0x278>
   1565c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15660:	str	r3, [fp, #-28]	; 0xffffffe4
   15664:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15668:	mov	r0, r3
   1566c:	sub	sp, fp, #4
   15670:	pop	{fp, pc}
   15674:	.word	0x8000800b
   15678:	.word	0x00007fff

0001567c <MPLIST_getHead>:
   1567c:	push	{fp, lr}
   15680:	add	fp, sp, #4
   15684:	sub	sp, sp, #56	; 0x38
   15688:	str	r0, [fp, #-48]	; 0xffffffd0
   1568c:	str	r1, [fp, #-52]	; 0xffffffcc
   15690:	mov	r3, #32768	; 0x8000
   15694:	str	r3, [fp, #-28]	; 0xffffffe4
   15698:	mov	r3, #32768	; 0x8000
   1569c:	str	r3, [fp, #-24]	; 0xffffffe8
   156a0:	mov	r3, #0
   156a4:	str	r3, [fp, #-32]	; 0xffffffe0
   156a8:	mov	r3, #0
   156ac:	str	r3, [fp, #-36]	; 0xffffffdc
   156b0:	mov	r3, #0
   156b4:	str	r3, [fp, #-40]	; 0xffffffd8
   156b8:	mov	r3, #0
   156bc:	str	r3, [fp, #-20]	; 0xffffffec
   156c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   156c4:	cmp	r3, #0
   156c8:	beq	156d8 <MPLIST_getHead+0x5c>
   156cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   156d0:	cmp	r3, #0
   156d4:	bne	156e4 <MPLIST_getHead+0x68>
   156d8:	ldr	r3, [pc, #720]	; 159b0 <MPLIST_getHead+0x334>
   156dc:	str	r3, [fp, #-28]	; 0xffffffe4
   156e0:	b	159a0 <MPLIST_getHead+0x324>
   156e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   156e8:	str	r3, [fp, #-20]	; 0xffffffec
   156ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   156f0:	ldr	r3, [r3, #12]
   156f4:	str	r3, [fp, #-16]
   156f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   156fc:	ldr	r3, [r3, #4]
   15700:	str	r3, [fp, #-12]
   15704:	ldr	r3, [fp, #-20]	; 0xffffffec
   15708:	ldr	r3, [r3, #8]
   1570c:	str	r3, [fp, #-8]
   15710:	ldr	r0, [fp, #-8]
   15714:	bl	12c3c <MPCS_enter>
   15718:	mov	r3, r0
   1571c:	str	r3, [fp, #-28]	; 0xffffffe4
   15720:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15724:	ldr	r3, [pc, #648]	; 159b4 <MPLIST_getHead+0x338>
   15728:	cmp	r2, r3
   1572c:	ble	159a0 <MPLIST_getHead+0x324>
   15730:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15734:	cmp	r3, #34048	; 0x8500
   15738:	bgt	159a0 <MPLIST_getHead+0x324>
   1573c:	ldr	r3, [fp, #-16]
   15740:	ldrh	r3, [r3, #2]
   15744:	mov	r0, r3
   15748:	ldr	r1, [fp, #-12]
   1574c:	mov	r2, #8
   15750:	bl	17224 <POOL_invalidate>
   15754:	ldr	r3, [fp, #-20]	; 0xffffffec
   15758:	ldr	r2, [r3]
   1575c:	ldr	r3, [fp, #-12]
   15760:	ldr	r3, [r3]
   15764:	sub	ip, fp, #42	; 0x2a
   15768:	mov	r0, r2
   1576c:	mov	r1, r3
   15770:	mov	r2, #3
   15774:	mov	r3, ip
   15778:	bl	17e3c <POOL_getPoolId>
   1577c:	mov	r3, r0
   15780:	str	r3, [fp, #-28]	; 0xffffffe4
   15784:	ldrh	r2, [fp, #-42]	; 0xffffffd6
   15788:	sub	r1, fp, #36	; 0x24
   1578c:	ldr	r3, [fp, #-12]
   15790:	ldr	ip, [r3]
   15794:	mov	r3, #3
   15798:	str	r3, [sp]
   1579c:	mov	r0, r2
   157a0:	mov	r2, #0
   157a4:	mov	r3, ip
   157a8:	bl	17d1c <POOL_translateAddr>
   157ac:	mov	r3, r0
   157b0:	str	r3, [fp, #-28]	; 0xffffffe4
   157b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   157b8:	ldr	r3, [pc, #500]	; 159b4 <MPLIST_getHead+0x338>
   157bc:	cmp	r2, r3
   157c0:	ble	15950 <MPLIST_getHead+0x2d4>
   157c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   157c8:	cmp	r3, #34048	; 0x8500
   157cc:	bgt	15950 <MPLIST_getHead+0x2d4>
   157d0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   157d4:	mov	r3, #0
   157d8:	str	r3, [r2]
   157dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   157e0:	bl	147a0 <MPLIST_isEmpty>
   157e4:	mov	r3, r0
   157e8:	lsl	r3, r3, #16
   157ec:	lsr	r3, r3, #16
   157f0:	cmp	r3, #0
   157f4:	bne	15950 <MPLIST_getHead+0x2d4>
   157f8:	ldrh	r3, [fp, #-42]	; 0xffffffd6
   157fc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15800:	mov	r0, r3
   15804:	mov	r1, r2
   15808:	mov	r2, #8
   1580c:	bl	17224 <POOL_invalidate>
   15810:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15814:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15818:	str	r2, [r3]
   1581c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15820:	ldr	r3, [r3]
   15824:	ldr	r2, [r3]
   15828:	ldr	r3, [fp, #-12]
   1582c:	str	r2, [r3]
   15830:	ldr	r3, [fp, #-16]
   15834:	ldrh	r3, [r3, #2]
   15838:	mov	r0, r3
   1583c:	ldr	r1, [fp, #-12]
   15840:	mov	r2, #8
   15844:	bl	170a4 <POOL_writeback>
   15848:	ldr	r3, [fp, #-20]	; 0xffffffec
   1584c:	ldr	r2, [r3]
   15850:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15854:	ldr	r3, [r3]
   15858:	ldr	r3, [r3]
   1585c:	sub	ip, fp, #42	; 0x2a
   15860:	mov	r0, r2
   15864:	mov	r1, r3
   15868:	mov	r2, #3
   1586c:	mov	r3, ip
   15870:	bl	17e3c <POOL_getPoolId>
   15874:	mov	r3, r0
   15878:	str	r3, [fp, #-28]	; 0xffffffe4
   1587c:	ldrh	r2, [fp, #-42]	; 0xffffffd6
   15880:	sub	r1, fp, #40	; 0x28
   15884:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15888:	ldr	r3, [r3]
   1588c:	ldr	ip, [r3]
   15890:	mov	r3, #3
   15894:	str	r3, [sp]
   15898:	mov	r0, r2
   1589c:	mov	r2, #0
   158a0:	mov	r3, ip
   158a4:	bl	17d1c <POOL_translateAddr>
   158a8:	mov	r3, r0
   158ac:	str	r3, [fp, #-28]	; 0xffffffe4
   158b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   158b4:	ldr	r3, [pc, #248]	; 159b4 <MPLIST_getHead+0x338>
   158b8:	cmp	r2, r3
   158bc:	ble	15950 <MPLIST_getHead+0x2d4>
   158c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   158c4:	cmp	r3, #34048	; 0x8500
   158c8:	bgt	15950 <MPLIST_getHead+0x2d4>
   158cc:	ldr	r3, [fp, #-16]
   158d0:	ldrh	r2, [r3, #2]
   158d4:	sub	r1, fp, #32
   158d8:	mov	r3, #0
   158dc:	str	r3, [sp]
   158e0:	mov	r0, r2
   158e4:	mov	r2, #3
   158e8:	ldr	r3, [fp, #-12]
   158ec:	bl	17d1c <POOL_translateAddr>
   158f0:	mov	r3, r0
   158f4:	str	r3, [fp, #-28]	; 0xffffffe4
   158f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   158fc:	ldr	r3, [pc, #176]	; 159b4 <MPLIST_getHead+0x338>
   15900:	cmp	r2, r3
   15904:	ble	15950 <MPLIST_getHead+0x2d4>
   15908:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1590c:	cmp	r3, #34048	; 0x8500
   15910:	bgt	15950 <MPLIST_getHead+0x2d4>
   15914:	ldrh	r3, [fp, #-42]	; 0xffffffd6
   15918:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1591c:	mov	r0, r3
   15920:	mov	r1, r2
   15924:	mov	r2, #8
   15928:	bl	17224 <POOL_invalidate>
   1592c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15930:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15934:	str	r3, [r2, #4]
   15938:	ldrh	r3, [fp, #-42]	; 0xffffffd6
   1593c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15940:	mov	r0, r3
   15944:	mov	r1, r2
   15948:	mov	r2, #8
   1594c:	bl	170a4 <POOL_writeback>
   15950:	ldr	r0, [fp, #-8]
   15954:	bl	12e98 <MPCS_leave>
   15958:	mov	r3, r0
   1595c:	str	r3, [fp, #-24]	; 0xffffffe8
   15960:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15964:	ldr	r3, [pc, #72]	; 159b4 <MPLIST_getHead+0x338>
   15968:	cmp	r2, r3
   1596c:	ble	159a0 <MPLIST_getHead+0x324>
   15970:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15974:	cmp	r3, #34048	; 0x8500
   15978:	bgt	159a0 <MPLIST_getHead+0x324>
   1597c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15980:	ldr	r3, [pc, #44]	; 159b4 <MPLIST_getHead+0x338>
   15984:	cmp	r2, r3
   15988:	ble	15998 <MPLIST_getHead+0x31c>
   1598c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15990:	cmp	r3, #34048	; 0x8500
   15994:	ble	159a0 <MPLIST_getHead+0x324>
   15998:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1599c:	str	r3, [fp, #-28]	; 0xffffffe4
   159a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   159a4:	mov	r0, r3
   159a8:	sub	sp, fp, #4
   159ac:	pop	{fp, pc}
   159b0:	.word	0x8000800b
   159b4:	.word	0x00007fff

000159b8 <MSGQ_transportOpen>:
   159b8:	push	{r4, fp, lr}
   159bc:	add	fp, sp, #8
   159c0:	sub	sp, sp, #60	; 0x3c
   159c4:	str	r0, [fp, #-56]	; 0xffffffc8
   159c8:	str	r1, [fp, #-60]	; 0xffffffc4
   159cc:	mov	r3, #32768	; 0x8000
   159d0:	str	r3, [fp, #-24]	; 0xffffffe8
   159d4:	mov	r3, #32768	; 0x8000
   159d8:	str	r3, [fp, #-20]	; 0xffffffec
   159dc:	mov	r3, #0
   159e0:	strh	r3, [fp, #-14]
   159e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   159e8:	cmp	r3, #0
   159ec:	beq	159fc <MSGQ_transportOpen+0x44>
   159f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   159f4:	cmp	r3, #0
   159f8:	beq	15a08 <MSGQ_transportOpen+0x50>
   159fc:	ldr	r3, [pc, #468]	; 15bd8 <MSGQ_transportOpen+0x220>
   15a00:	str	r3, [fp, #-24]	; 0xffffffe8
   15a04:	b	15bc8 <MSGQ_transportOpen+0x210>
   15a08:	ldr	r3, [pc, #460]	; 15bdc <MSGQ_transportOpen+0x224>
   15a0c:	ldr	r3, [r3]
   15a10:	cmp	r3, #0
   15a14:	beq	15a38 <MSGQ_transportOpen+0x80>
   15a18:	ldr	r3, [pc, #444]	; 15bdc <MSGQ_transportOpen+0x224>
   15a1c:	ldr	r3, [r3]
   15a20:	mov	r0, r3
   15a24:	bl	22b68 <_SYNC_USR_enterCS>
   15a28:	mov	r3, r0
   15a2c:	str	r3, [fp, #-24]	; 0xffffffe8
   15a30:	mov	r3, #1
   15a34:	strh	r3, [fp, #-14]
   15a38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15a3c:	ldr	r3, [pc, #412]	; 15be0 <MSGQ_transportOpen+0x228>
   15a40:	cmp	r2, r3
   15a44:	ble	15bc8 <MSGQ_transportOpen+0x210>
   15a48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15a4c:	cmp	r3, #34048	; 0x8500
   15a50:	bgt	15bc8 <MSGQ_transportOpen+0x210>
   15a54:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15a58:	ldr	r2, [pc, #380]	; 15bdc <MSGQ_transportOpen+0x224>
   15a5c:	mov	r1, #8
   15a60:	lsl	r3, r3, #2
   15a64:	add	r3, r2, r3
   15a68:	add	r3, r3, r1
   15a6c:	ldr	r4, [r3]
   15a70:	bl	9ee8 <getpid@plt>
   15a74:	mov	r3, r0
   15a78:	cmp	r4, r3
   15a7c:	beq	15a8c <MSGQ_transportOpen+0xd4>
   15a80:	ldr	r3, [pc, #348]	; 15be4 <MSGQ_transportOpen+0x22c>
   15a84:	str	r3, [fp, #-24]	; 0xffffffe8
   15a88:	b	15b64 <MSGQ_transportOpen+0x1ac>
   15a8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15a90:	ldr	r1, [pc, #324]	; 15bdc <MSGQ_transportOpen+0x224>
   15a94:	add	r3, r3, #34	; 0x22
   15a98:	mov	r2, #8
   15a9c:	lsl	r3, r3, #2
   15aa0:	add	r3, r1, r3
   15aa4:	add	r3, r3, r2
   15aa8:	ldr	r4, [r3]
   15aac:	bl	9ee8 <getpid@plt>
   15ab0:	mov	r3, r0
   15ab4:	cmp	r4, r3
   15ab8:	bne	15ac8 <MSGQ_transportOpen+0x110>
   15abc:	mov	r3, #1
   15ac0:	str	r3, [fp, #-64]	; 0xffffffc0
   15ac4:	b	15ad0 <MSGQ_transportOpen+0x118>
   15ac8:	mov	r3, #0
   15acc:	str	r3, [fp, #-64]	; 0xffffffc0
   15ad0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15ad4:	cmp	r3, #0
   15ad8:	beq	15ae8 <MSGQ_transportOpen+0x130>
   15adc:	ldr	r3, [pc, #260]	; 15be8 <MSGQ_transportOpen+0x230>
   15ae0:	str	r3, [fp, #-24]	; 0xffffffe8
   15ae4:	b	15b64 <MSGQ_transportOpen+0x1ac>
   15ae8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15aec:	str	r3, [fp, #-44]	; 0xffffffd4
   15af0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15af4:	str	r3, [fp, #-40]	; 0xffffffd8
   15af8:	ldr	r3, [pc, #236]	; 15bec <MSGQ_transportOpen+0x234>
   15afc:	ldr	r3, [r3]
   15b00:	sub	r2, fp, #48	; 0x30
   15b04:	mov	r0, r3
   15b08:	ldr	r1, [pc, #224]	; 15bf0 <MSGQ_transportOpen+0x238>
   15b0c:	mov	r3, #0
   15b10:	bl	f94c <DRV_Invoke>
   15b14:	mov	r3, r0
   15b18:	str	r3, [fp, #-24]	; 0xffffffe8
   15b1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15b20:	ldr	r3, [pc, #184]	; 15be0 <MSGQ_transportOpen+0x228>
   15b24:	cmp	r2, r3
   15b28:	ble	15b64 <MSGQ_transportOpen+0x1ac>
   15b2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15b30:	cmp	r3, #34048	; 0x8500
   15b34:	bgt	15b64 <MSGQ_transportOpen+0x1ac>
   15b38:	ldr	r4, [fp, #-56]	; 0xffffffc8
   15b3c:	bl	9ee8 <getpid@plt>
   15b40:	mov	r3, r0
   15b44:	mov	r0, r3
   15b48:	ldr	r1, [pc, #140]	; 15bdc <MSGQ_transportOpen+0x224>
   15b4c:	add	r3, r4, #34	; 0x22
   15b50:	mov	r2, #8
   15b54:	lsl	r3, r3, #2
   15b58:	add	r3, r1, r3
   15b5c:	add	r3, r3, r2
   15b60:	str	r0, [r3]
   15b64:	ldrsh	r3, [fp, #-14]
   15b68:	cmp	r3, #1
   15b6c:	bne	15bc8 <MSGQ_transportOpen+0x210>
   15b70:	ldr	r3, [pc, #100]	; 15bdc <MSGQ_transportOpen+0x224>
   15b74:	ldr	r3, [r3]
   15b78:	mov	r0, r3
   15b7c:	bl	22c7c <_SYNC_USR_leaveCS>
   15b80:	mov	r3, r0
   15b84:	str	r3, [fp, #-20]	; 0xffffffec
   15b88:	ldr	r2, [fp, #-20]	; 0xffffffec
   15b8c:	ldr	r3, [pc, #76]	; 15be0 <MSGQ_transportOpen+0x228>
   15b90:	cmp	r2, r3
   15b94:	ble	15ba4 <MSGQ_transportOpen+0x1ec>
   15b98:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b9c:	cmp	r3, #34048	; 0x8500
   15ba0:	ble	15bc8 <MSGQ_transportOpen+0x210>
   15ba4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15ba8:	ldr	r3, [pc, #48]	; 15be0 <MSGQ_transportOpen+0x228>
   15bac:	cmp	r2, r3
   15bb0:	ble	15bc8 <MSGQ_transportOpen+0x210>
   15bb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15bb8:	cmp	r3, #34048	; 0x8500
   15bbc:	bgt	15bc8 <MSGQ_transportOpen+0x210>
   15bc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bc4:	str	r3, [fp, #-24]	; 0xffffffe8
   15bc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15bcc:	mov	r0, r3
   15bd0:	sub	sp, fp, #8
   15bd4:	pop	{r4, fp, pc}
   15bd8:	.word	0x8000800b
   15bdc:	.word	0x0002d3f4
   15be0:	.word	0x00007fff
   15be4:	.word	0x80008002
   15be8:	.word	0x8000801f
   15bec:	.word	0x0002d3ec
   15bf0:	.word	0xc018e030

00015bf4 <MSGQ_transportClose>:
   15bf4:	push	{r4, fp, lr}
   15bf8:	add	fp, sp, #8
   15bfc:	sub	sp, sp, #52	; 0x34
   15c00:	str	r0, [fp, #-56]	; 0xffffffc8
   15c04:	mov	r3, #32768	; 0x8000
   15c08:	str	r3, [fp, #-24]	; 0xffffffe8
   15c0c:	mov	r3, #32768	; 0x8000
   15c10:	str	r3, [fp, #-20]	; 0xffffffec
   15c14:	mov	r3, #0
   15c18:	strh	r3, [fp, #-14]
   15c1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15c20:	cmp	r3, #0
   15c24:	beq	15c34 <MSGQ_transportClose+0x40>
   15c28:	ldr	r3, [pc, #392]	; 15db8 <MSGQ_transportClose+0x1c4>
   15c2c:	str	r3, [fp, #-24]	; 0xffffffe8
   15c30:	b	15da8 <MSGQ_transportClose+0x1b4>
   15c34:	ldr	r3, [pc, #384]	; 15dbc <MSGQ_transportClose+0x1c8>
   15c38:	ldr	r3, [r3]
   15c3c:	cmp	r3, #0
   15c40:	beq	15c64 <MSGQ_transportClose+0x70>
   15c44:	ldr	r3, [pc, #368]	; 15dbc <MSGQ_transportClose+0x1c8>
   15c48:	ldr	r3, [r3]
   15c4c:	mov	r0, r3
   15c50:	bl	22b68 <_SYNC_USR_enterCS>
   15c54:	mov	r3, r0
   15c58:	str	r3, [fp, #-24]	; 0xffffffe8
   15c5c:	mov	r3, #1
   15c60:	strh	r3, [fp, #-14]
   15c64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15c68:	ldr	r3, [pc, #336]	; 15dc0 <MSGQ_transportClose+0x1cc>
   15c6c:	cmp	r2, r3
   15c70:	ble	15da8 <MSGQ_transportClose+0x1b4>
   15c74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15c78:	cmp	r3, #34048	; 0x8500
   15c7c:	bgt	15da8 <MSGQ_transportClose+0x1b4>
   15c80:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15c84:	ldr	r2, [pc, #304]	; 15dbc <MSGQ_transportClose+0x1c8>
   15c88:	mov	r1, #8
   15c8c:	lsl	r3, r3, #2
   15c90:	add	r3, r2, r3
   15c94:	add	r3, r3, r1
   15c98:	ldr	r4, [r3]
   15c9c:	bl	9ee8 <getpid@plt>
   15ca0:	mov	r3, r0
   15ca4:	cmp	r4, r3
   15ca8:	beq	15cb8 <MSGQ_transportClose+0xc4>
   15cac:	ldr	r3, [pc, #272]	; 15dc4 <MSGQ_transportClose+0x1d0>
   15cb0:	str	r3, [fp, #-24]	; 0xffffffe8
   15cb4:	b	15d44 <MSGQ_transportClose+0x150>
   15cb8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15cbc:	ldr	r1, [pc, #248]	; 15dbc <MSGQ_transportClose+0x1c8>
   15cc0:	add	r3, r3, #34	; 0x22
   15cc4:	mov	r2, #8
   15cc8:	lsl	r3, r3, #2
   15ccc:	add	r3, r1, r3
   15cd0:	add	r3, r3, r2
   15cd4:	ldr	r4, [r3]
   15cd8:	bl	9ee8 <getpid@plt>
   15cdc:	mov	r3, r0
   15ce0:	cmp	r4, r3
   15ce4:	beq	15cf4 <MSGQ_transportClose+0x100>
   15ce8:	ldr	r3, [pc, #216]	; 15dc8 <MSGQ_transportClose+0x1d4>
   15cec:	str	r3, [fp, #-24]	; 0xffffffe8
   15cf0:	b	15d44 <MSGQ_transportClose+0x150>
   15cf4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15cf8:	str	r3, [fp, #-44]	; 0xffffffd4
   15cfc:	ldr	r3, [pc, #200]	; 15dcc <MSGQ_transportClose+0x1d8>
   15d00:	ldr	r3, [r3]
   15d04:	sub	r2, fp, #48	; 0x30
   15d08:	mov	r0, r3
   15d0c:	ldr	r1, [pc, #188]	; 15dd0 <MSGQ_transportClose+0x1dc>
   15d10:	mov	r3, #0
   15d14:	bl	f94c <DRV_Invoke>
   15d18:	mov	r3, r0
   15d1c:	str	r3, [fp, #-24]	; 0xffffffe8
   15d20:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15d24:	ldr	r1, [pc, #144]	; 15dbc <MSGQ_transportClose+0x1c8>
   15d28:	add	r3, r3, #34	; 0x22
   15d2c:	mov	r2, #8
   15d30:	lsl	r3, r3, #2
   15d34:	add	r3, r1, r3
   15d38:	add	r2, r3, r2
   15d3c:	mov	r3, #0
   15d40:	str	r3, [r2]
   15d44:	ldrsh	r3, [fp, #-14]
   15d48:	cmp	r3, #1
   15d4c:	bne	15da8 <MSGQ_transportClose+0x1b4>
   15d50:	ldr	r3, [pc, #100]	; 15dbc <MSGQ_transportClose+0x1c8>
   15d54:	ldr	r3, [r3]
   15d58:	mov	r0, r3
   15d5c:	bl	22c7c <_SYNC_USR_leaveCS>
   15d60:	mov	r3, r0
   15d64:	str	r3, [fp, #-20]	; 0xffffffec
   15d68:	ldr	r2, [fp, #-20]	; 0xffffffec
   15d6c:	ldr	r3, [pc, #76]	; 15dc0 <MSGQ_transportClose+0x1cc>
   15d70:	cmp	r2, r3
   15d74:	ble	15d84 <MSGQ_transportClose+0x190>
   15d78:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d7c:	cmp	r3, #34048	; 0x8500
   15d80:	ble	15da8 <MSGQ_transportClose+0x1b4>
   15d84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15d88:	ldr	r3, [pc, #48]	; 15dc0 <MSGQ_transportClose+0x1cc>
   15d8c:	cmp	r2, r3
   15d90:	ble	15da8 <MSGQ_transportClose+0x1b4>
   15d94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15d98:	cmp	r3, #34048	; 0x8500
   15d9c:	bgt	15da8 <MSGQ_transportClose+0x1b4>
   15da0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15da4:	str	r3, [fp, #-24]	; 0xffffffe8
   15da8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15dac:	mov	r0, r3
   15db0:	sub	sp, fp, #8
   15db4:	pop	{r4, fp, pc}
   15db8:	.word	0x8000800b
   15dbc:	.word	0x0002d3f4
   15dc0:	.word	0x00007fff
   15dc4:	.word	0x80008002
   15dc8:	.word	0x80008000
   15dcc:	.word	0x0002d3ec
   15dd0:	.word	0xc018e031

00015dd4 <MSGQ_open>:
   15dd4:	push	{fp, lr}
   15dd8:	add	fp, sp, #4
   15ddc:	sub	sp, sp, #48	; 0x30
   15de0:	str	r0, [fp, #-40]	; 0xffffffd8
   15de4:	str	r1, [fp, #-44]	; 0xffffffd4
   15de8:	str	r2, [fp, #-48]	; 0xffffffd0
   15dec:	mov	r3, #32768	; 0x8000
   15df0:	str	r3, [fp, #-12]
   15df4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15df8:	cmp	r3, #0
   15dfc:	bne	15e0c <MSGQ_open+0x38>
   15e00:	ldr	r3, [pc, #156]	; 15ea4 <MSGQ_open+0xd0>
   15e04:	str	r3, [fp, #-12]
   15e08:	b	15e94 <MSGQ_open+0xc0>
   15e0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15e10:	cmp	r3, #0
   15e14:	beq	15e3c <MSGQ_open+0x68>
   15e18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15e1c:	bl	9ec4 <strlen@plt>
   15e20:	mov	r3, r0
   15e24:	str	r3, [fp, #-8]
   15e28:	ldr	r3, [fp, #-8]
   15e2c:	cmp	r3, #31
   15e30:	bls	15e3c <MSGQ_open+0x68>
   15e34:	ldr	r3, [pc, #104]	; 15ea4 <MSGQ_open+0xd0>
   15e38:	str	r3, [fp, #-12]
   15e3c:	ldr	r2, [fp, #-12]
   15e40:	ldr	r3, [pc, #96]	; 15ea8 <MSGQ_open+0xd4>
   15e44:	cmp	r2, r3
   15e48:	ble	15e94 <MSGQ_open+0xc0>
   15e4c:	ldr	r3, [fp, #-12]
   15e50:	cmp	r3, #34048	; 0x8500
   15e54:	bgt	15e94 <MSGQ_open+0xc0>
   15e58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15e5c:	str	r3, [fp, #-32]	; 0xffffffe0
   15e60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15e64:	str	r3, [fp, #-28]	; 0xffffffe4
   15e68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15e6c:	str	r3, [fp, #-24]	; 0xffffffe8
   15e70:	ldr	r3, [pc, #52]	; 15eac <MSGQ_open+0xd8>
   15e74:	ldr	r3, [r3]
   15e78:	sub	r2, fp, #36	; 0x24
   15e7c:	mov	r0, r3
   15e80:	ldr	r1, [pc, #40]	; 15eb0 <MSGQ_open+0xdc>
   15e84:	mov	r3, #0
   15e88:	bl	f94c <DRV_Invoke>
   15e8c:	mov	r3, r0
   15e90:	str	r3, [fp, #-12]
   15e94:	ldr	r3, [fp, #-12]
   15e98:	mov	r0, r3
   15e9c:	sub	sp, fp, #4
   15ea0:	pop	{fp, pc}
   15ea4:	.word	0x8000800b
   15ea8:	.word	0x00007fff
   15eac:	.word	0x0002d3ec
   15eb0:	.word	0xc018e032

00015eb4 <MSGQ_close>:
   15eb4:	push	{fp, lr}
   15eb8:	add	fp, sp, #4
   15ebc:	sub	sp, sp, #40	; 0x28
   15ec0:	str	r0, [fp, #-40]	; 0xffffffd8
   15ec4:	mov	r3, #32768	; 0x8000
   15ec8:	str	r3, [fp, #-8]
   15ecc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15ed0:	ldr	r3, [pc, #76]	; 15f24 <MSGQ_close+0x70>
   15ed4:	cmp	r2, r3
   15ed8:	bne	15ee8 <MSGQ_close+0x34>
   15edc:	ldr	r3, [pc, #68]	; 15f28 <MSGQ_close+0x74>
   15ee0:	str	r3, [fp, #-8]
   15ee4:	b	15f14 <MSGQ_close+0x60>
   15ee8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15eec:	str	r3, [fp, #-28]	; 0xffffffe4
   15ef0:	ldr	r3, [pc, #52]	; 15f2c <MSGQ_close+0x78>
   15ef4:	ldr	r3, [r3]
   15ef8:	sub	r2, fp, #32
   15efc:	mov	r0, r3
   15f00:	ldr	r1, [pc, #40]	; 15f30 <MSGQ_close+0x7c>
   15f04:	mov	r3, #0
   15f08:	bl	f94c <DRV_Invoke>
   15f0c:	mov	r3, r0
   15f10:	str	r3, [fp, #-8]
   15f14:	ldr	r3, [fp, #-8]
   15f18:	mov	r0, r3
   15f1c:	sub	sp, fp, #4
   15f20:	pop	{fp, pc}
   15f24:	.word	0x0000ffff
   15f28:	.word	0x8000800b
   15f2c:	.word	0x0002d3ec
   15f30:	.word	0xc018e033

00015f34 <MSGQ_locate>:
   15f34:	push	{fp, lr}
   15f38:	add	fp, sp, #4
   15f3c:	sub	sp, sp, #48	; 0x30
   15f40:	str	r0, [fp, #-40]	; 0xffffffd8
   15f44:	str	r1, [fp, #-44]	; 0xffffffd4
   15f48:	str	r2, [fp, #-48]	; 0xffffffd0
   15f4c:	mov	r3, #32768	; 0x8000
   15f50:	str	r3, [fp, #-12]
   15f54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15f58:	cmp	r3, #0
   15f5c:	beq	15f6c <MSGQ_locate+0x38>
   15f60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15f64:	cmp	r3, #0
   15f68:	bne	15f78 <MSGQ_locate+0x44>
   15f6c:	ldr	r3, [pc, #120]	; 15fec <MSGQ_locate+0xb8>
   15f70:	str	r3, [fp, #-12]
   15f74:	b	15fdc <MSGQ_locate+0xa8>
   15f78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15f7c:	bl	9ec4 <strlen@plt>
   15f80:	mov	r3, r0
   15f84:	str	r3, [fp, #-8]
   15f88:	ldr	r3, [fp, #-8]
   15f8c:	cmp	r3, #31
   15f90:	bls	15fa0 <MSGQ_locate+0x6c>
   15f94:	ldr	r3, [pc, #80]	; 15fec <MSGQ_locate+0xb8>
   15f98:	str	r3, [fp, #-12]
   15f9c:	b	15fdc <MSGQ_locate+0xa8>
   15fa0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15fa4:	str	r3, [fp, #-32]	; 0xffffffe0
   15fa8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15fac:	str	r3, [fp, #-28]	; 0xffffffe4
   15fb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15fb4:	str	r3, [fp, #-24]	; 0xffffffe8
   15fb8:	ldr	r3, [pc, #48]	; 15ff0 <MSGQ_locate+0xbc>
   15fbc:	ldr	r3, [r3]
   15fc0:	sub	r2, fp, #36	; 0x24
   15fc4:	mov	r0, r3
   15fc8:	ldr	r1, [pc, #36]	; 15ff4 <MSGQ_locate+0xc0>
   15fcc:	mov	r3, #0
   15fd0:	bl	f94c <DRV_Invoke>
   15fd4:	mov	r3, r0
   15fd8:	str	r3, [fp, #-12]
   15fdc:	ldr	r3, [fp, #-12]
   15fe0:	mov	r0, r3
   15fe4:	sub	sp, fp, #4
   15fe8:	pop	{fp, pc}
   15fec:	.word	0x8000800b
   15ff0:	.word	0x0002d3ec
   15ff4:	.word	0xc018e034

00015ff8 <MSGQ_locateAsync>:
   15ff8:	push	{fp, lr}
   15ffc:	add	fp, sp, #4
   16000:	sub	sp, sp, #48	; 0x30
   16004:	str	r0, [fp, #-40]	; 0xffffffd8
   16008:	str	r1, [fp, #-44]	; 0xffffffd4
   1600c:	str	r2, [fp, #-48]	; 0xffffffd0
   16010:	mov	r3, #32768	; 0x8000
   16014:	str	r3, [fp, #-12]
   16018:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1601c:	cmp	r3, #0
   16020:	beq	16040 <MSGQ_locateAsync+0x48>
   16024:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16028:	ldr	r3, [pc, #144]	; 160c0 <MSGQ_locateAsync+0xc8>
   1602c:	cmp	r2, r3
   16030:	beq	16040 <MSGQ_locateAsync+0x48>
   16034:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16038:	cmp	r3, #0
   1603c:	bne	1604c <MSGQ_locateAsync+0x54>
   16040:	ldr	r3, [pc, #124]	; 160c4 <MSGQ_locateAsync+0xcc>
   16044:	str	r3, [fp, #-12]
   16048:	b	160b0 <MSGQ_locateAsync+0xb8>
   1604c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16050:	bl	9ec4 <strlen@plt>
   16054:	mov	r3, r0
   16058:	str	r3, [fp, #-8]
   1605c:	ldr	r3, [fp, #-8]
   16060:	cmp	r3, #31
   16064:	bls	16074 <MSGQ_locateAsync+0x7c>
   16068:	ldr	r3, [pc, #84]	; 160c4 <MSGQ_locateAsync+0xcc>
   1606c:	str	r3, [fp, #-12]
   16070:	b	160b0 <MSGQ_locateAsync+0xb8>
   16074:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16078:	str	r3, [fp, #-32]	; 0xffffffe0
   1607c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16080:	str	r3, [fp, #-28]	; 0xffffffe4
   16084:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16088:	str	r3, [fp, #-24]	; 0xffffffe8
   1608c:	ldr	r3, [pc, #52]	; 160c8 <MSGQ_locateAsync+0xd0>
   16090:	ldr	r3, [r3]
   16094:	sub	r2, fp, #36	; 0x24
   16098:	mov	r0, r3
   1609c:	ldr	r1, [pc, #40]	; 160cc <MSGQ_locateAsync+0xd4>
   160a0:	mov	r3, #0
   160a4:	bl	f94c <DRV_Invoke>
   160a8:	mov	r3, r0
   160ac:	str	r3, [fp, #-12]
   160b0:	ldr	r3, [fp, #-12]
   160b4:	mov	r0, r3
   160b8:	sub	sp, fp, #4
   160bc:	pop	{fp, pc}
   160c0:	.word	0x0000ffff
   160c4:	.word	0x8000800b
   160c8:	.word	0x0002d3ec
   160cc:	.word	0xc018e035

000160d0 <MSGQ_release>:
   160d0:	push	{fp, lr}
   160d4:	add	fp, sp, #4
   160d8:	sub	sp, sp, #40	; 0x28
   160dc:	str	r0, [fp, #-40]	; 0xffffffd8
   160e0:	mov	r3, #32768	; 0x8000
   160e4:	str	r3, [fp, #-8]
   160e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   160ec:	ldr	r3, [pc, #76]	; 16140 <MSGQ_release+0x70>
   160f0:	cmp	r2, r3
   160f4:	bne	16104 <MSGQ_release+0x34>
   160f8:	ldr	r3, [pc, #68]	; 16144 <MSGQ_release+0x74>
   160fc:	str	r3, [fp, #-8]
   16100:	b	16130 <MSGQ_release+0x60>
   16104:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16108:	str	r3, [fp, #-28]	; 0xffffffe4
   1610c:	ldr	r3, [pc, #52]	; 16148 <MSGQ_release+0x78>
   16110:	ldr	r3, [r3]
   16114:	sub	r2, fp, #32
   16118:	mov	r0, r3
   1611c:	ldr	r1, [pc, #40]	; 1614c <MSGQ_release+0x7c>
   16120:	mov	r3, #0
   16124:	bl	f94c <DRV_Invoke>
   16128:	mov	r3, r0
   1612c:	str	r3, [fp, #-8]
   16130:	ldr	r3, [fp, #-8]
   16134:	mov	r0, r3
   16138:	sub	sp, fp, #4
   1613c:	pop	{fp, pc}
   16140:	.word	0x0000ffff
   16144:	.word	0x8000800b
   16148:	.word	0x0002d3ec
   1614c:	.word	0xc018e036

00016150 <MSGQ_alloc>:
   16150:	push	{fp, lr}
   16154:	add	fp, sp, #4
   16158:	sub	sp, sp, #40	; 0x28
   1615c:	mov	r3, r0
   16160:	str	r2, [fp, #-44]	; 0xffffffd4
   16164:	strh	r3, [fp, #-38]	; 0xffffffda
   16168:	strh	r1, [fp, #-40]	; 0xffffffd8
   1616c:	mov	r3, #32768	; 0x8000
   16170:	str	r3, [fp, #-8]
   16174:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16178:	cmp	r3, #0
   1617c:	beq	1618c <MSGQ_alloc+0x3c>
   16180:	ldrh	r3, [fp, #-40]	; 0xffffffd8
   16184:	cmp	r3, #19
   16188:	bhi	16198 <MSGQ_alloc+0x48>
   1618c:	ldr	r3, [pc, #124]	; 16210 <MSGQ_alloc+0xc0>
   16190:	str	r3, [fp, #-8]
   16194:	b	16200 <MSGQ_alloc+0xb0>
   16198:	ldrh	r3, [fp, #-38]	; 0xffffffda
   1619c:	strh	r3, [fp, #-28]	; 0xffffffe4
   161a0:	ldrh	r3, [fp, #-40]	; 0xffffffd8
   161a4:	strh	r3, [fp, #-26]	; 0xffffffe6
   161a8:	mov	r3, #0
   161ac:	str	r3, [fp, #-24]	; 0xffffffe8
   161b0:	ldr	r3, [pc, #92]	; 16214 <MSGQ_alloc+0xc4>
   161b4:	ldr	r3, [r3]
   161b8:	sub	r2, fp, #32
   161bc:	mov	r0, r3
   161c0:	ldr	r1, [pc, #80]	; 16218 <MSGQ_alloc+0xc8>
   161c4:	mov	r3, #0
   161c8:	bl	f94c <DRV_Invoke>
   161cc:	mov	r3, r0
   161d0:	str	r3, [fp, #-8]
   161d4:	ldr	r2, [fp, #-8]
   161d8:	ldr	r3, [pc, #60]	; 1621c <MSGQ_alloc+0xcc>
   161dc:	cmp	r2, r3
   161e0:	ble	16200 <MSGQ_alloc+0xb0>
   161e4:	ldr	r3, [fp, #-8]
   161e8:	cmp	r3, #34048	; 0x8500
   161ec:	bgt	16200 <MSGQ_alloc+0xb0>
   161f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   161f4:	mov	r2, r3
   161f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   161fc:	str	r2, [r3]
   16200:	ldr	r3, [fp, #-8]
   16204:	mov	r0, r3
   16208:	sub	sp, fp, #4
   1620c:	pop	{fp, pc}
   16210:	.word	0x8000800b
   16214:	.word	0x0002d3ec
   16218:	.word	0xc018e037
   1621c:	.word	0x00007fff

00016220 <MSGQ_free>:
   16220:	push	{fp, lr}
   16224:	add	fp, sp, #4
   16228:	sub	sp, sp, #40	; 0x28
   1622c:	str	r0, [fp, #-40]	; 0xffffffd8
   16230:	mov	r3, #32768	; 0x8000
   16234:	str	r3, [fp, #-8]
   16238:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1623c:	cmp	r3, #0
   16240:	bne	16250 <MSGQ_free+0x30>
   16244:	ldr	r3, [pc, #64]	; 1628c <MSGQ_free+0x6c>
   16248:	str	r3, [fp, #-8]
   1624c:	b	1627c <MSGQ_free+0x5c>
   16250:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16254:	str	r3, [fp, #-28]	; 0xffffffe4
   16258:	ldr	r3, [pc, #48]	; 16290 <MSGQ_free+0x70>
   1625c:	ldr	r3, [r3]
   16260:	sub	r2, fp, #32
   16264:	mov	r0, r3
   16268:	ldr	r1, [pc, #36]	; 16294 <MSGQ_free+0x74>
   1626c:	mov	r3, #0
   16270:	bl	f94c <DRV_Invoke>
   16274:	mov	r3, r0
   16278:	str	r3, [fp, #-8]
   1627c:	ldr	r3, [fp, #-8]
   16280:	mov	r0, r3
   16284:	sub	sp, fp, #4
   16288:	pop	{fp, pc}
   1628c:	.word	0x8000800b
   16290:	.word	0x0002d3ec
   16294:	.word	0xc018e038

00016298 <MSGQ_put>:
   16298:	push	{fp, lr}
   1629c:	add	fp, sp, #4
   162a0:	sub	sp, sp, #40	; 0x28
   162a4:	str	r0, [fp, #-40]	; 0xffffffd8
   162a8:	str	r1, [fp, #-44]	; 0xffffffd4
   162ac:	mov	r3, #32768	; 0x8000
   162b0:	str	r3, [fp, #-8]
   162b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   162b8:	ldr	r3, [pc, #96]	; 16320 <MSGQ_put+0x88>
   162bc:	cmp	r2, r3
   162c0:	beq	162d0 <MSGQ_put+0x38>
   162c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   162c8:	cmp	r3, #0
   162cc:	bne	162dc <MSGQ_put+0x44>
   162d0:	ldr	r3, [pc, #76]	; 16324 <MSGQ_put+0x8c>
   162d4:	str	r3, [fp, #-8]
   162d8:	b	16310 <MSGQ_put+0x78>
   162dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   162e0:	str	r3, [fp, #-28]	; 0xffffffe4
   162e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   162e8:	str	r3, [fp, #-24]	; 0xffffffe8
   162ec:	ldr	r3, [pc, #52]	; 16328 <MSGQ_put+0x90>
   162f0:	ldr	r3, [r3]
   162f4:	sub	r2, fp, #32
   162f8:	mov	r0, r3
   162fc:	ldr	r1, [pc, #40]	; 1632c <MSGQ_put+0x94>
   16300:	mov	r3, #0
   16304:	bl	f94c <DRV_Invoke>
   16308:	mov	r3, r0
   1630c:	str	r3, [fp, #-8]
   16310:	ldr	r3, [fp, #-8]
   16314:	mov	r0, r3
   16318:	sub	sp, fp, #4
   1631c:	pop	{fp, pc}
   16320:	.word	0x0000ffff
   16324:	.word	0x8000800b
   16328:	.word	0x0002d3ec
   1632c:	.word	0xc018e039

00016330 <MSGQ_get>:
   16330:	push	{fp, lr}
   16334:	add	fp, sp, #4
   16338:	sub	sp, sp, #48	; 0x30
   1633c:	str	r0, [fp, #-40]	; 0xffffffd8
   16340:	str	r1, [fp, #-44]	; 0xffffffd4
   16344:	str	r2, [fp, #-48]	; 0xffffffd0
   16348:	mov	r3, #32768	; 0x8000
   1634c:	str	r3, [fp, #-8]
   16350:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16354:	ldr	r3, [pc, #164]	; 16400 <MSGQ_get+0xd0>
   16358:	cmp	r2, r3
   1635c:	beq	1637c <MSGQ_get+0x4c>
   16360:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16364:	lsr	r3, r3, #16
   16368:	cmp	r3, #1
   1636c:	bne	1637c <MSGQ_get+0x4c>
   16370:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16374:	cmp	r3, #0
   16378:	bne	16388 <MSGQ_get+0x58>
   1637c:	ldr	r3, [pc, #128]	; 16404 <MSGQ_get+0xd4>
   16380:	str	r3, [fp, #-8]
   16384:	b	163f0 <MSGQ_get+0xc0>
   16388:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1638c:	str	r3, [fp, #-24]	; 0xffffffe8
   16390:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16394:	str	r3, [fp, #-20]	; 0xffffffec
   16398:	mov	r3, #0
   1639c:	str	r3, [fp, #-16]
   163a0:	ldr	r3, [pc, #96]	; 16408 <MSGQ_get+0xd8>
   163a4:	ldr	r3, [r3]
   163a8:	sub	r2, fp, #32
   163ac:	mov	r0, r3
   163b0:	ldr	r1, [pc, #84]	; 1640c <MSGQ_get+0xdc>
   163b4:	mov	r3, #0
   163b8:	bl	f94c <DRV_Invoke>
   163bc:	mov	r3, r0
   163c0:	str	r3, [fp, #-8]
   163c4:	ldr	r2, [fp, #-8]
   163c8:	ldr	r3, [pc, #64]	; 16410 <MSGQ_get+0xe0>
   163cc:	cmp	r2, r3
   163d0:	ble	163f0 <MSGQ_get+0xc0>
   163d4:	ldr	r3, [fp, #-8]
   163d8:	cmp	r3, #34048	; 0x8500
   163dc:	bgt	163f0 <MSGQ_get+0xc0>
   163e0:	ldr	r3, [fp, #-16]
   163e4:	mov	r2, r3
   163e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   163ec:	str	r2, [r3]
   163f0:	ldr	r3, [fp, #-8]
   163f4:	mov	r0, r3
   163f8:	sub	sp, fp, #4
   163fc:	pop	{fp, pc}
   16400:	.word	0x0000ffff
   16404:	.word	0x8000800b
   16408:	.word	0x0002d3ec
   1640c:	.word	0xc018e03a
   16410:	.word	0x00007fff

00016414 <MSGQ_getSrcQueue>:
   16414:	push	{fp}		; (str fp, [sp, #-4]!)
   16418:	add	fp, sp, #0
   1641c:	sub	sp, sp, #20
   16420:	str	r0, [fp, #-16]
   16424:	str	r1, [fp, #-20]	; 0xffffffec
   16428:	mov	r3, #32768	; 0x8000
   1642c:	str	r3, [fp, #-8]
   16430:	ldr	r3, [fp, #-16]
   16434:	cmp	r3, #0
   16438:	beq	16448 <MSGQ_getSrcQueue+0x34>
   1643c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16440:	cmp	r3, #0
   16444:	bne	16454 <MSGQ_getSrcQueue+0x40>
   16448:	ldr	r3, [pc, #88]	; 164a8 <MSGQ_getSrcQueue+0x94>
   1644c:	str	r3, [fp, #-8]
   16450:	b	16494 <MSGQ_getSrcQueue+0x80>
   16454:	ldr	r3, [fp, #-16]
   16458:	ldrh	r2, [r3, #16]
   1645c:	ldr	r3, [pc, #72]	; 164ac <MSGQ_getSrcQueue+0x98>
   16460:	cmp	r2, r3
   16464:	bne	16474 <MSGQ_getSrcQueue+0x60>
   16468:	ldr	r3, [pc, #64]	; 164b0 <MSGQ_getSrcQueue+0x9c>
   1646c:	str	r3, [fp, #-8]
   16470:	b	16494 <MSGQ_getSrcQueue+0x80>
   16474:	ldr	r3, [fp, #-16]
   16478:	ldrh	r3, [r3, #8]
   1647c:	lsl	r2, r3, #16
   16480:	ldr	r3, [fp, #-16]
   16484:	ldrh	r3, [r3, #16]
   16488:	orr	r2, r2, r3
   1648c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16490:	str	r2, [r3]
   16494:	ldr	r3, [fp, #-8]
   16498:	mov	r0, r3
   1649c:	add	sp, fp, #0
   164a0:	ldmfd	sp!, {fp}
   164a4:	bx	lr
   164a8:	.word	0x8000800b
   164ac:	.word	0x0000ffff
   164b0:	.word	0x8000802d

000164b4 <MSGQ_count>:
   164b4:	push	{fp, lr}
   164b8:	add	fp, sp, #4
   164bc:	sub	sp, sp, #40	; 0x28
   164c0:	str	r0, [fp, #-40]	; 0xffffffd8
   164c4:	str	r1, [fp, #-44]	; 0xffffffd4
   164c8:	mov	r3, #32768	; 0x8000
   164cc:	str	r3, [fp, #-8]
   164d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   164d4:	ldr	r3, [pc, #112]	; 1654c <MSGQ_count+0x98>
   164d8:	cmp	r2, r3
   164dc:	beq	164fc <MSGQ_count+0x48>
   164e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   164e4:	lsr	r3, r3, #16
   164e8:	cmp	r3, #1
   164ec:	bne	164fc <MSGQ_count+0x48>
   164f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   164f4:	cmp	r3, #0
   164f8:	bne	16508 <MSGQ_count+0x54>
   164fc:	ldr	r3, [pc, #76]	; 16550 <MSGQ_count+0x9c>
   16500:	str	r3, [fp, #-8]
   16504:	b	1653c <MSGQ_count+0x88>
   16508:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1650c:	str	r3, [fp, #-28]	; 0xffffffe4
   16510:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16514:	str	r3, [fp, #-24]	; 0xffffffe8
   16518:	ldr	r3, [pc, #52]	; 16554 <MSGQ_count+0xa0>
   1651c:	ldr	r3, [r3]
   16520:	sub	r2, fp, #32
   16524:	mov	r0, r3
   16528:	ldr	r1, [pc, #40]	; 16558 <MSGQ_count+0xa4>
   1652c:	mov	r3, #0
   16530:	bl	f94c <DRV_Invoke>
   16534:	mov	r3, r0
   16538:	str	r3, [fp, #-8]
   1653c:	ldr	r3, [fp, #-8]
   16540:	mov	r0, r3
   16544:	sub	sp, fp, #4
   16548:	pop	{fp, pc}
   1654c:	.word	0x0000ffff
   16550:	.word	0x8000800b
   16554:	.word	0x0002d3ec
   16558:	.word	0xc018e03c

0001655c <MSGQ_setErrorHandler>:
   1655c:	push	{fp, lr}
   16560:	add	fp, sp, #4
   16564:	sub	sp, sp, #40	; 0x28
   16568:	str	r0, [fp, #-40]	; 0xffffffd8
   1656c:	mov	r3, r1
   16570:	strh	r3, [fp, #-42]	; 0xffffffd6
   16574:	mov	r3, #32768	; 0x8000
   16578:	str	r3, [fp, #-8]
   1657c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16580:	str	r3, [fp, #-28]	; 0xffffffe4
   16584:	ldrh	r3, [fp, #-42]	; 0xffffffd6
   16588:	strh	r3, [fp, #-24]	; 0xffffffe8
   1658c:	ldr	r3, [pc, #44]	; 165c0 <MSGQ_setErrorHandler+0x64>
   16590:	ldr	r3, [r3]
   16594:	sub	r2, fp, #32
   16598:	mov	r0, r3
   1659c:	ldr	r1, [pc, #32]	; 165c4 <MSGQ_setErrorHandler+0x68>
   165a0:	mov	r3, #0
   165a4:	bl	f94c <DRV_Invoke>
   165a8:	mov	r3, r0
   165ac:	str	r3, [fp, #-8]
   165b0:	ldr	r3, [fp, #-8]
   165b4:	mov	r0, r3
   165b8:	sub	sp, fp, #4
   165bc:	pop	{fp, pc}
   165c0:	.word	0x0002d3ec
   165c4:	.word	0xc018e03b

000165c8 <_NOTIFY_init>:
   165c8:	push	{fp, lr}
   165cc:	add	fp, sp, #4
   165d0:	sub	sp, sp, #64	; 0x40
   165d4:	str	r0, [fp, #-64]	; 0xffffffc0
   165d8:	mov	r3, #32768	; 0x8000
   165dc:	str	r3, [fp, #-32]	; 0xffffffe0
   165e0:	ldr	r3, [pc, #620]	; 16854 <_NOTIFY_init+0x28c>
   165e4:	ldr	r1, [r3]
   165e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   165ec:	mov	r2, #4
   165f0:	lsl	r3, r3, #2
   165f4:	add	r3, r1, r3
   165f8:	add	r3, r3, r2
   165fc:	ldr	r3, [r3]
   16600:	str	r3, [fp, #-8]
   16604:	ldr	r3, [fp, #-8]
   16608:	ldr	r3, [r3]
   1660c:	str	r3, [fp, #-28]	; 0xffffffe4
   16610:	ldr	r3, [fp, #-8]
   16614:	ldr	r1, [r3, #8]
   16618:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1661c:	ldr	r2, [r3, #144]	; 0x90
   16620:	mov	r3, r2
   16624:	lsl	r3, r3, #2
   16628:	add	r3, r3, r2
   1662c:	lsl	r3, r3, #4
   16630:	add	r3, r1, r3
   16634:	str	r3, [fp, #-24]	; 0xffffffe8
   16638:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1663c:	ldr	r1, [pc, #532]	; 16858 <_NOTIFY_init+0x290>
   16640:	mov	r3, r2
   16644:	lsl	r3, r3, #2
   16648:	add	r3, r3, r2
   1664c:	lsl	r3, r3, #4
   16650:	add	r2, r1, r3
   16654:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16658:	str	r3, [r2]
   1665c:	mov	r3, #0
   16660:	str	r3, [fp, #-16]
   16664:	b	166e8 <_NOTIFY_init+0x120>
   16668:	ldr	r3, [fp, #-8]
   1666c:	ldr	r2, [r3, #24]
   16670:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16674:	ldr	r3, [r3, #40]	; 0x28
   16678:	lsl	r3, r3, #2
   1667c:	add	r3, r2, r3
   16680:	ldr	r1, [r3]
   16684:	ldr	r2, [fp, #-16]
   16688:	mov	r3, r2
   1668c:	lsl	r3, r3, #4
   16690:	rsb	r3, r2, r3
   16694:	lsl	r3, r3, #2
   16698:	add	r3, r1, r3
   1669c:	str	r3, [fp, #-20]	; 0xffffffec
   166a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   166a4:	ldr	r1, [fp, #-16]
   166a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   166ac:	ldr	ip, [r3, #32]
   166b0:	ldr	r0, [pc, #416]	; 16858 <_NOTIFY_init+0x290>
   166b4:	mov	r3, r2
   166b8:	lsl	r3, r3, #2
   166bc:	add	r3, r3, r2
   166c0:	lsl	r3, r3, #2
   166c4:	add	r3, r3, r1
   166c8:	mov	r2, #4
   166cc:	lsl	r3, r3, #2
   166d0:	add	r3, r0, r3
   166d4:	add	r3, r3, r2
   166d8:	str	ip, [r3]
   166dc:	ldr	r3, [fp, #-16]
   166e0:	add	r3, r3, #1
   166e4:	str	r3, [fp, #-16]
   166e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   166ec:	ldr	r2, [r3, #44]	; 0x2c
   166f0:	ldr	r3, [fp, #-16]
   166f4:	cmp	r2, r3
   166f8:	bhi	16668 <_NOTIFY_init+0xa0>
   166fc:	ldr	r3, [fp, #-8]
   16700:	ldr	r1, [r3, #56]	; 0x38
   16704:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16708:	ldr	r2, [r3, #68]	; 0x44
   1670c:	mov	r3, r2
   16710:	lsl	r3, r3, #1
   16714:	add	r3, r3, r2
   16718:	lsl	r3, r3, #4
   1671c:	add	r3, r1, r3
   16720:	str	r3, [fp, #-12]
   16724:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16728:	ldr	r3, [fp, #-12]
   1672c:	ldr	r1, [r3, #40]	; 0x28
   16730:	ldr	r0, [pc, #288]	; 16858 <_NOTIFY_init+0x290>
   16734:	mov	ip, #68	; 0x44
   16738:	mov	r3, r2
   1673c:	lsl	r3, r3, #2
   16740:	add	r3, r3, r2
   16744:	lsl	r3, r3, #4
   16748:	add	r3, r0, r3
   1674c:	add	r3, r3, ip
   16750:	str	r1, [r3]
   16754:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16758:	ldr	r3, [fp, #-12]
   1675c:	ldr	r1, [r3, #44]	; 0x2c
   16760:	ldr	r0, [pc, #240]	; 16858 <_NOTIFY_init+0x290>
   16764:	mov	ip, #72	; 0x48
   16768:	mov	r3, r2
   1676c:	lsl	r3, r3, #2
   16770:	add	r3, r3, r2
   16774:	lsl	r3, r3, #4
   16778:	add	r3, r0, r3
   1677c:	add	r3, r3, ip
   16780:	str	r1, [r3]
   16784:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16788:	str	r3, [fp, #-52]	; 0xffffffcc
   1678c:	ldr	r3, [pc, #200]	; 1685c <_NOTIFY_init+0x294>
   16790:	ldr	r3, [r3]
   16794:	sub	r2, fp, #56	; 0x38
   16798:	mov	r0, r3
   1679c:	ldr	r1, [pc, #188]	; 16860 <_NOTIFY_init+0x298>
   167a0:	mov	r3, #0
   167a4:	bl	f94c <DRV_Invoke>
   167a8:	mov	r3, r0
   167ac:	str	r3, [fp, #-32]	; 0xffffffe0
   167b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   167b4:	ldr	r3, [pc, #168]	; 16864 <_NOTIFY_init+0x29c>
   167b8:	cmp	r2, r3
   167bc:	ble	16844 <_NOTIFY_init+0x27c>
   167c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   167c4:	cmp	r3, #34048	; 0x8500
   167c8:	bgt	16844 <_NOTIFY_init+0x27c>
   167cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   167d0:	mov	r3, r2
   167d4:	lsl	r3, r3, #2
   167d8:	add	r3, r3, r2
   167dc:	lsl	r3, r3, #4
   167e0:	add	r2, r3, #72	; 0x48
   167e4:	ldr	r3, [pc, #108]	; 16858 <_NOTIFY_init+0x290>
   167e8:	add	r3, r2, r3
   167ec:	add	r2, r3, #4
   167f0:	ldr	ip, [pc, #112]	; 16868 <_NOTIFY_init+0x2a0>
   167f4:	ldr	r3, [pc, #96]	; 1685c <_NOTIFY_init+0x294>
   167f8:	ldr	r3, [r3]
   167fc:	mov	r0, r2
   16800:	mov	r1, #0
   16804:	mov	r2, ip
   16808:	bl	9ffc <pthread_create@plt>
   1680c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16810:	ldr	r1, [pc, #64]	; 16858 <_NOTIFY_init+0x290>
   16814:	mov	r0, #76	; 0x4c
   16818:	mov	r3, r2
   1681c:	lsl	r3, r3, #2
   16820:	add	r3, r3, r2
   16824:	lsl	r3, r3, #4
   16828:	add	r3, r1, r3
   1682c:	add	r3, r3, r0
   16830:	ldr	r3, [r3]
   16834:	cmp	r3, #0
   16838:	bne	16844 <_NOTIFY_init+0x27c>
   1683c:	ldr	r3, [pc, #40]	; 1686c <_NOTIFY_init+0x2a4>
   16840:	str	r3, [fp, #-32]	; 0xffffffe0
   16844:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16848:	mov	r0, r3
   1684c:	sub	sp, fp, #4
   16850:	pop	{fp, pc}
   16854:	.word	0x0002d3f0
   16858:	.word	0x0002db10
   1685c:	.word	0x0002d3ec
   16860:	.word	0xc018e049
   16864:	.word	0x00007fff
   16868:	.word	0x00016948
   1686c:	.word	0x80008008

00016870 <_NOTIFY_exit>:
   16870:	push	{fp, lr}
   16874:	add	fp, sp, #4
   16878:	sub	sp, sp, #40	; 0x28
   1687c:	str	r0, [fp, #-40]	; 0xffffffd8
   16880:	mov	r3, #32768	; 0x8000
   16884:	str	r3, [fp, #-8]
   16888:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1688c:	str	r3, [fp, #-28]	; 0xffffffe4
   16890:	ldr	r3, [pc, #160]	; 16938 <_NOTIFY_exit+0xc8>
   16894:	ldr	r3, [r3]
   16898:	sub	r2, fp, #32
   1689c:	mov	r0, r3
   168a0:	ldr	r1, [pc, #148]	; 1693c <_NOTIFY_exit+0xcc>
   168a4:	mov	r3, #0
   168a8:	bl	f94c <DRV_Invoke>
   168ac:	mov	r3, r0
   168b0:	str	r3, [fp, #-8]
   168b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   168b8:	ldr	r1, [pc, #128]	; 16940 <_NOTIFY_exit+0xd0>
   168bc:	mov	r0, #76	; 0x4c
   168c0:	mov	r3, r2
   168c4:	lsl	r3, r3, #2
   168c8:	add	r3, r3, r2
   168cc:	lsl	r3, r3, #4
   168d0:	add	r3, r1, r3
   168d4:	add	r3, r3, r0
   168d8:	ldr	r3, [r3]
   168dc:	cmp	r3, #0
   168e0:	beq	16928 <_NOTIFY_exit+0xb8>
   168e4:	ldr	r3, [pc, #88]	; 16944 <_NOTIFY_exit+0xd4>
   168e8:	ldrh	r3, [r3]
   168ec:	cmp	r3, #0
   168f0:	bne	16928 <_NOTIFY_exit+0xb8>
   168f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   168f8:	ldr	r1, [pc, #64]	; 16940 <_NOTIFY_exit+0xd0>
   168fc:	mov	r0, #76	; 0x4c
   16900:	mov	r3, r2
   16904:	lsl	r3, r3, #2
   16908:	add	r3, r3, r2
   1690c:	lsl	r3, r3, #4
   16910:	add	r3, r1, r3
   16914:	add	r3, r3, r0
   16918:	ldr	r3, [r3]
   1691c:	mov	r0, r3
   16920:	mov	r1, #0
   16924:	bl	9e58 <pthread_join@plt>
   16928:	ldr	r3, [fp, #-8]
   1692c:	mov	r0, r3
   16930:	sub	sp, fp, #4
   16934:	pop	{fp, pc}
   16938:	.word	0x0002d3ec
   1693c:	.word	0xc018e04a
   16940:	.word	0x0002db10
   16944:	.word	0x0002d7cc

00016948 <NOTIFY_eventWorker>:
   16948:	push	{fp, lr}
   1694c:	add	fp, sp, #4
   16950:	sub	sp, sp, #176	; 0xb0
   16954:	str	r0, [fp, #-176]	; 0xffffff50
   16958:	mov	r3, #32768	; 0x8000
   1695c:	str	r3, [fp, #-16]
   16960:	mov	r3, #0
   16964:	str	r3, [fp, #-12]
   16968:	sub	r3, fp, #172	; 0xac
   1696c:	mov	r0, r3
   16970:	bl	9d44 <sigfillset@plt>
   16974:	mov	r3, r0
   16978:	cmp	r3, #0
   1697c:	beq	1698c <NOTIFY_eventWorker+0x44>
   16980:	ldr	r0, [pc, #296]	; 16ab0 <NOTIFY_eventWorker+0x168>
   16984:	bl	9f18 <perror@plt>
   16988:	b	16aa8 <NOTIFY_eventWorker+0x160>
   1698c:	sub	r3, fp, #172	; 0xac
   16990:	mov	r0, #0
   16994:	mov	r1, r3
   16998:	mov	r2, #0
   1699c:	bl	9eb8 <pthread_sigmask@plt>
   169a0:	mov	r3, r0
   169a4:	cmp	r3, #0
   169a8:	beq	169b8 <NOTIFY_eventWorker+0x70>
   169ac:	ldr	r0, [pc, #256]	; 16ab4 <NOTIFY_eventWorker+0x16c>
   169b0:	bl	9f18 <perror@plt>
   169b4:	b	16aa8 <NOTIFY_eventWorker+0x160>
   169b8:	ldr	r0, [pc, #248]	; 16ab8 <NOTIFY_eventWorker+0x170>
   169bc:	ldr	r1, [pc, #248]	; 16abc <NOTIFY_eventWorker+0x174>
   169c0:	bl	9e1c <open@plt>
   169c4:	mov	r3, r0
   169c8:	str	r3, [fp, #-8]
   169cc:	ldr	r3, [fp, #-8]
   169d0:	cmp	r3, #0
   169d4:	bge	16a8c <NOTIFY_eventWorker+0x144>
   169d8:	ldr	r0, [pc, #224]	; 16ac0 <NOTIFY_eventWorker+0x178>
   169dc:	bl	9f18 <perror@plt>
   169e0:	b	16aa8 <NOTIFY_eventWorker+0x160>
   169e4:	sub	r3, fp, #44	; 0x2c
   169e8:	mov	r0, r3
   169ec:	mov	r1, #0
   169f0:	mov	r2, #28
   169f4:	bl	9f6c <memset@plt>
   169f8:	sub	r3, fp, #44	; 0x2c
   169fc:	ldr	r0, [fp, #-8]
   16a00:	mov	r1, r3
   16a04:	mov	r2, #28
   16a08:	bl	a074 <read@plt>
   16a0c:	mov	r3, r0
   16a10:	str	r3, [fp, #-12]
   16a14:	ldr	r3, [fp, #-12]
   16a18:	cmp	r3, #28
   16a1c:	bne	16a8c <NOTIFY_eventWorker+0x144>
   16a20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16a24:	cmn	r3, #1
   16a28:	bne	16a38 <NOTIFY_eventWorker+0xf0>
   16a2c:	ldr	r0, [fp, #-8]
   16a30:	bl	9de0 <close@plt>
   16a34:	b	16aa8 <NOTIFY_eventWorker+0x160>
   16a38:	ldr	r3, [fp, #-20]	; 0xffffffec
   16a3c:	cmp	r3, #1
   16a40:	bne	16a64 <NOTIFY_eventWorker+0x11c>
   16a44:	ldr	r3, [pc, #120]	; 16ac4 <NOTIFY_eventWorker+0x17c>
   16a48:	ldr	r2, [r3, #72]	; 0x48
   16a4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16a54:	mov	r0, r2
   16a58:	mov	r2, r3
   16a5c:	bl	1daf8 <RingIO_notifyCallback>
   16a60:	b	16a8c <NOTIFY_eventWorker+0x144>
   16a64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16a68:	cmp	r3, #0
   16a6c:	beq	16a8c <NOTIFY_eventWorker+0x144>
   16a70:	ldr	ip, [fp, #-28]	; 0xffffffe4
   16a74:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16a78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16a80:	mov	r0, r2
   16a84:	mov	r2, r3
   16a88:	blx	ip
   16a8c:	ldr	r2, [fp, #-16]
   16a90:	ldr	r3, [pc, #48]	; 16ac8 <NOTIFY_eventWorker+0x180>
   16a94:	cmp	r2, r3
   16a98:	ble	16aa8 <NOTIFY_eventWorker+0x160>
   16a9c:	ldr	r3, [fp, #-16]
   16aa0:	cmp	r3, #34048	; 0x8500
   16aa4:	ble	169e4 <NOTIFY_eventWorker+0x9c>
   16aa8:	sub	sp, fp, #4
   16aac:	pop	{fp, pc}
   16ab0:	.word	0x00023854
   16ab4:	.word	0x0002387c
   16ab8:	.word	0x000238ac
   16abc:	.word	0x00001002
   16ac0:	.word	0x000238bc
   16ac4:	.word	0x0002db10
   16ac8:	.word	0x00007fff

00016acc <NOTIFY_register>:
   16acc:	push	{fp, lr}
   16ad0:	add	fp, sp, #4
   16ad4:	sub	sp, sp, #72	; 0x48
   16ad8:	str	r0, [fp, #-64]	; 0xffffffc0
   16adc:	str	r1, [fp, #-68]	; 0xffffffbc
   16ae0:	str	r2, [fp, #-72]	; 0xffffffb8
   16ae4:	str	r3, [fp, #-76]	; 0xffffffb4
   16ae8:	mov	r3, #32768	; 0x8000
   16aec:	str	r3, [fp, #-32]	; 0xffffffe0
   16af0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16af4:	cmp	r3, #0
   16af8:	bne	16b08 <NOTIFY_register+0x3c>
   16afc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   16b00:	cmp	r3, #0
   16b04:	bne	16b10 <NOTIFY_register+0x44>
   16b08:	ldr	r3, [pc, #580]	; 16d54 <NOTIFY_register+0x288>
   16b0c:	str	r3, [fp, #-32]	; 0xffffffe0
   16b10:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16b14:	ldr	r3, [pc, #572]	; 16d58 <NOTIFY_register+0x28c>
   16b18:	cmp	r2, r3
   16b1c:	ble	16d44 <NOTIFY_register+0x278>
   16b20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16b24:	cmp	r3, #34048	; 0x8500
   16b28:	bgt	16d44 <NOTIFY_register+0x278>
   16b2c:	ldr	r3, [pc, #552]	; 16d5c <NOTIFY_register+0x290>
   16b30:	ldr	r1, [r3]
   16b34:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16b38:	mov	r2, #4
   16b3c:	lsl	r3, r3, #2
   16b40:	add	r3, r1, r3
   16b44:	add	r3, r3, r2
   16b48:	ldr	r3, [r3]
   16b4c:	str	r3, [fp, #-8]
   16b50:	ldr	r3, [fp, #-8]
   16b54:	ldr	r3, [r3]
   16b58:	str	r3, [fp, #-28]	; 0xffffffe4
   16b5c:	ldr	r3, [fp, #-8]
   16b60:	ldr	r1, [r3, #8]
   16b64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16b68:	ldr	r2, [r3, #144]	; 0x90
   16b6c:	mov	r3, r2
   16b70:	lsl	r3, r3, #2
   16b74:	add	r3, r3, r2
   16b78:	lsl	r3, r3, #4
   16b7c:	add	r3, r1, r3
   16b80:	str	r3, [fp, #-24]	; 0xffffffe8
   16b84:	ldr	r3, [fp, #-8]
   16b88:	ldr	r2, [r3, #24]
   16b8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16b90:	ldr	r3, [r3, #40]	; 0x28
   16b94:	lsl	r3, r3, #2
   16b98:	add	r3, r2, r3
   16b9c:	ldr	r3, [r3]
   16ba0:	str	r3, [fp, #-20]	; 0xffffffec
   16ba4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16ba8:	ldr	r2, [r3, #44]	; 0x2c
   16bac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16bb0:	cmp	r2, r3
   16bb4:	bhi	16bc4 <NOTIFY_register+0xf8>
   16bb8:	ldr	r3, [pc, #404]	; 16d54 <NOTIFY_register+0x288>
   16bbc:	str	r3, [fp, #-32]	; 0xffffffe0
   16bc0:	b	16d44 <NOTIFY_register+0x278>
   16bc4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16bc8:	mov	r3, r2
   16bcc:	lsl	r3, r3, #4
   16bd0:	rsb	r3, r2, r3
   16bd4:	lsl	r3, r3, #2
   16bd8:	mov	r2, r3
   16bdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   16be0:	add	r3, r3, r2
   16be4:	ldr	r2, [r3, #32]
   16be8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16bec:	cmp	r2, r3
   16bf0:	bhi	16c00 <NOTIFY_register+0x134>
   16bf4:	ldr	r3, [pc, #344]	; 16d54 <NOTIFY_register+0x288>
   16bf8:	str	r3, [fp, #-32]	; 0xffffffe0
   16bfc:	b	16d44 <NOTIFY_register+0x278>
   16c00:	ldr	r3, [fp, #-8]
   16c04:	ldr	r1, [r3, #56]	; 0x38
   16c08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16c0c:	ldr	r2, [r3, #68]	; 0x44
   16c10:	mov	r3, r2
   16c14:	lsl	r3, r3, #1
   16c18:	add	r3, r3, r2
   16c1c:	lsl	r3, r3, #4
   16c20:	add	r3, r1, r3
   16c24:	str	r3, [fp, #-16]
   16c28:	ldr	r3, [fp, #-16]
   16c2c:	ldr	r2, [r3, #40]	; 0x28
   16c30:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16c34:	cmp	r2, r3
   16c38:	bne	16c68 <NOTIFY_register+0x19c>
   16c3c:	ldr	r3, [fp, #-16]
   16c40:	ldr	r2, [r3, #44]	; 0x2c
   16c44:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16c48:	cmp	r2, r3
   16c4c:	bne	16c68 <NOTIFY_register+0x19c>
   16c50:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16c54:	ldr	r3, [pc, #260]	; 16d60 <NOTIFY_register+0x294>
   16c58:	cmp	r2, r3
   16c5c:	beq	16c68 <NOTIFY_register+0x19c>
   16c60:	ldr	r3, [pc, #252]	; 16d64 <NOTIFY_register+0x298>
   16c64:	str	r3, [fp, #-32]	; 0xffffffe0
   16c68:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16c6c:	ldr	r3, [pc, #228]	; 16d58 <NOTIFY_register+0x28c>
   16c70:	cmp	r2, r3
   16c74:	ble	16d44 <NOTIFY_register+0x278>
   16c78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16c7c:	cmp	r3, #34048	; 0x8500
   16c80:	bgt	16d44 <NOTIFY_register+0x278>
   16c84:	ldr	r3, [fp, #-8]
   16c88:	ldr	r1, [r3, #48]	; 0x30
   16c8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16c90:	ldr	r2, [r3, #64]	; 0x40
   16c94:	mov	r3, r2
   16c98:	lsl	r3, r3, #3
   16c9c:	rsb	r3, r2, r3
   16ca0:	lsl	r3, r3, #3
   16ca4:	add	r3, r1, r3
   16ca8:	str	r3, [fp, #-12]
   16cac:	ldr	r3, [fp, #-12]
   16cb0:	ldr	r2, [r3, #40]	; 0x28
   16cb4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16cb8:	cmp	r2, r3
   16cbc:	bne	16cdc <NOTIFY_register+0x210>
   16cc0:	ldr	r3, [fp, #-12]
   16cc4:	ldr	r2, [r3, #44]	; 0x2c
   16cc8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16ccc:	cmp	r2, r3
   16cd0:	bne	16cdc <NOTIFY_register+0x210>
   16cd4:	ldr	r3, [pc, #136]	; 16d64 <NOTIFY_register+0x298>
   16cd8:	str	r3, [fp, #-32]	; 0xffffffe0
   16cdc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16ce0:	ldr	r3, [pc, #112]	; 16d58 <NOTIFY_register+0x28c>
   16ce4:	cmp	r2, r3
   16ce8:	ble	16d44 <NOTIFY_register+0x278>
   16cec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16cf0:	cmp	r3, #34048	; 0x8500
   16cf4:	bgt	16d44 <NOTIFY_register+0x278>
   16cf8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16cfc:	str	r3, [fp, #-44]	; 0xffffffd4
   16d00:	ldr	r3, [fp, #-76]	; 0xffffffb4
   16d04:	str	r3, [fp, #-40]	; 0xffffffd8
   16d08:	ldr	r3, [fp, #4]
   16d0c:	str	r3, [fp, #-36]	; 0xffffffdc
   16d10:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16d14:	str	r3, [fp, #-52]	; 0xffffffcc
   16d18:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16d1c:	str	r3, [fp, #-48]	; 0xffffffd0
   16d20:	ldr	r3, [pc, #64]	; 16d68 <NOTIFY_register+0x29c>
   16d24:	ldr	r3, [r3]
   16d28:	sub	r2, fp, #56	; 0x38
   16d2c:	mov	r0, r3
   16d30:	ldr	r1, [pc, #52]	; 16d6c <NOTIFY_register+0x2a0>
   16d34:	mov	r3, #0
   16d38:	bl	f94c <DRV_Invoke>
   16d3c:	mov	r3, r0
   16d40:	str	r3, [fp, #-32]	; 0xffffffe0
   16d44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16d48:	mov	r0, r3
   16d4c:	sub	sp, fp, #4
   16d50:	pop	{fp, pc}
   16d54:	.word	0x8000800b
   16d58:	.word	0x00007fff
   16d5c:	.word	0x0002d3f0
   16d60:	.word	0x0001daf8
   16d64:	.word	0x80008028
   16d68:	.word	0x0002d3ec
   16d6c:	.word	0xc018e04b

00016d70 <NOTIFY_unregister>:
   16d70:	push	{fp, lr}
   16d74:	add	fp, sp, #4
   16d78:	sub	sp, sp, #64	; 0x40
   16d7c:	str	r0, [fp, #-56]	; 0xffffffc8
   16d80:	str	r1, [fp, #-60]	; 0xffffffc4
   16d84:	str	r2, [fp, #-64]	; 0xffffffc0
   16d88:	str	r3, [fp, #-68]	; 0xffffffbc
   16d8c:	mov	r3, #32768	; 0x8000
   16d90:	str	r3, [fp, #-24]	; 0xffffffe8
   16d94:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16d98:	cmp	r3, #0
   16d9c:	bne	16dac <NOTIFY_unregister+0x3c>
   16da0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16da4:	cmp	r3, #0
   16da8:	bne	16db4 <NOTIFY_unregister+0x44>
   16dac:	ldr	r3, [pc, #332]	; 16f00 <NOTIFY_unregister+0x190>
   16db0:	str	r3, [fp, #-24]	; 0xffffffe8
   16db4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16db8:	ldr	r3, [pc, #324]	; 16f04 <NOTIFY_unregister+0x194>
   16dbc:	cmp	r2, r3
   16dc0:	ble	16ef0 <NOTIFY_unregister+0x180>
   16dc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16dc8:	cmp	r3, #34048	; 0x8500
   16dcc:	bgt	16ef0 <NOTIFY_unregister+0x180>
   16dd0:	ldr	r3, [pc, #304]	; 16f08 <NOTIFY_unregister+0x198>
   16dd4:	ldr	r1, [r3]
   16dd8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16ddc:	mov	r2, #4
   16de0:	lsl	r3, r3, #2
   16de4:	add	r3, r1, r3
   16de8:	add	r3, r3, r2
   16dec:	ldr	r3, [r3]
   16df0:	str	r3, [fp, #-8]
   16df4:	ldr	r3, [fp, #-8]
   16df8:	ldr	r3, [r3]
   16dfc:	str	r3, [fp, #-20]	; 0xffffffec
   16e00:	ldr	r3, [fp, #-8]
   16e04:	ldr	r1, [r3, #8]
   16e08:	ldr	r3, [fp, #-20]	; 0xffffffec
   16e0c:	ldr	r2, [r3, #144]	; 0x90
   16e10:	mov	r3, r2
   16e14:	lsl	r3, r3, #2
   16e18:	add	r3, r3, r2
   16e1c:	lsl	r3, r3, #4
   16e20:	add	r3, r1, r3
   16e24:	str	r3, [fp, #-16]
   16e28:	ldr	r3, [fp, #-8]
   16e2c:	ldr	r2, [r3, #24]
   16e30:	ldr	r3, [fp, #-16]
   16e34:	ldr	r3, [r3, #40]	; 0x28
   16e38:	lsl	r3, r3, #2
   16e3c:	add	r3, r2, r3
   16e40:	ldr	r3, [r3]
   16e44:	str	r3, [fp, #-12]
   16e48:	ldr	r3, [fp, #-16]
   16e4c:	ldr	r2, [r3, #44]	; 0x2c
   16e50:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16e54:	cmp	r2, r3
   16e58:	bhi	16e68 <NOTIFY_unregister+0xf8>
   16e5c:	ldr	r3, [pc, #156]	; 16f00 <NOTIFY_unregister+0x190>
   16e60:	str	r3, [fp, #-24]	; 0xffffffe8
   16e64:	b	16ef0 <NOTIFY_unregister+0x180>
   16e68:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16e6c:	mov	r3, r2
   16e70:	lsl	r3, r3, #4
   16e74:	rsb	r3, r2, r3
   16e78:	lsl	r3, r3, #2
   16e7c:	mov	r2, r3
   16e80:	ldr	r3, [fp, #-12]
   16e84:	add	r3, r3, r2
   16e88:	ldr	r2, [r3, #32]
   16e8c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16e90:	cmp	r2, r3
   16e94:	bhi	16ea4 <NOTIFY_unregister+0x134>
   16e98:	ldr	r3, [pc, #96]	; 16f00 <NOTIFY_unregister+0x190>
   16e9c:	str	r3, [fp, #-24]	; 0xffffffe8
   16ea0:	b	16ef0 <NOTIFY_unregister+0x180>
   16ea4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16ea8:	str	r3, [fp, #-36]	; 0xffffffdc
   16eac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16eb0:	str	r3, [fp, #-32]	; 0xffffffe0
   16eb4:	ldr	r3, [fp, #4]
   16eb8:	str	r3, [fp, #-28]	; 0xffffffe4
   16ebc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16ec0:	str	r3, [fp, #-44]	; 0xffffffd4
   16ec4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16ec8:	str	r3, [fp, #-40]	; 0xffffffd8
   16ecc:	ldr	r3, [pc, #56]	; 16f0c <NOTIFY_unregister+0x19c>
   16ed0:	ldr	r3, [r3]
   16ed4:	sub	r2, fp, #48	; 0x30
   16ed8:	mov	r0, r3
   16edc:	ldr	r1, [pc, #44]	; 16f10 <NOTIFY_unregister+0x1a0>
   16ee0:	mov	r3, #0
   16ee4:	bl	f94c <DRV_Invoke>
   16ee8:	mov	r3, r0
   16eec:	str	r3, [fp, #-24]	; 0xffffffe8
   16ef0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16ef4:	mov	r0, r3
   16ef8:	sub	sp, fp, #4
   16efc:	pop	{fp, pc}
   16f00:	.word	0x8000800b
   16f04:	.word	0x00007fff
   16f08:	.word	0x0002d3f0
   16f0c:	.word	0x0002d3ec
   16f10:	.word	0xc018e04c

00016f14 <NOTIFY_notify>:
   16f14:	push	{fp, lr}
   16f18:	add	fp, sp, #4
   16f1c:	sub	sp, sp, #64	; 0x40
   16f20:	str	r0, [fp, #-56]	; 0xffffffc8
   16f24:	str	r1, [fp, #-60]	; 0xffffffc4
   16f28:	str	r2, [fp, #-64]	; 0xffffffc0
   16f2c:	str	r3, [fp, #-68]	; 0xffffffbc
   16f30:	mov	r3, #32768	; 0x8000
   16f34:	str	r3, [fp, #-24]	; 0xffffffe8
   16f38:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16f3c:	cmp	r3, #0
   16f40:	beq	16f4c <NOTIFY_notify+0x38>
   16f44:	ldr	r3, [pc, #324]	; 17090 <NOTIFY_notify+0x17c>
   16f48:	str	r3, [fp, #-24]	; 0xffffffe8
   16f4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16f50:	ldr	r3, [pc, #316]	; 17094 <NOTIFY_notify+0x180>
   16f54:	cmp	r2, r3
   16f58:	ble	17080 <NOTIFY_notify+0x16c>
   16f5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16f60:	cmp	r3, #34048	; 0x8500
   16f64:	bgt	17080 <NOTIFY_notify+0x16c>
   16f68:	ldr	r3, [pc, #296]	; 17098 <NOTIFY_notify+0x184>
   16f6c:	ldr	r1, [r3]
   16f70:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16f74:	mov	r2, #4
   16f78:	lsl	r3, r3, #2
   16f7c:	add	r3, r1, r3
   16f80:	add	r3, r3, r2
   16f84:	ldr	r3, [r3]
   16f88:	str	r3, [fp, #-8]
   16f8c:	ldr	r3, [fp, #-8]
   16f90:	ldr	r3, [r3]
   16f94:	str	r3, [fp, #-20]	; 0xffffffec
   16f98:	ldr	r3, [fp, #-8]
   16f9c:	ldr	r1, [r3, #8]
   16fa0:	ldr	r3, [fp, #-20]	; 0xffffffec
   16fa4:	ldr	r2, [r3, #144]	; 0x90
   16fa8:	mov	r3, r2
   16fac:	lsl	r3, r3, #2
   16fb0:	add	r3, r3, r2
   16fb4:	lsl	r3, r3, #4
   16fb8:	add	r3, r1, r3
   16fbc:	str	r3, [fp, #-16]
   16fc0:	ldr	r3, [fp, #-8]
   16fc4:	ldr	r2, [r3, #24]
   16fc8:	ldr	r3, [fp, #-16]
   16fcc:	ldr	r3, [r3, #40]	; 0x28
   16fd0:	lsl	r3, r3, #2
   16fd4:	add	r3, r2, r3
   16fd8:	ldr	r3, [r3]
   16fdc:	str	r3, [fp, #-12]
   16fe0:	ldr	r3, [fp, #-16]
   16fe4:	ldr	r2, [r3, #44]	; 0x2c
   16fe8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16fec:	cmp	r2, r3
   16ff0:	bhi	17000 <NOTIFY_notify+0xec>
   16ff4:	ldr	r3, [pc, #148]	; 17090 <NOTIFY_notify+0x17c>
   16ff8:	str	r3, [fp, #-24]	; 0xffffffe8
   16ffc:	b	17080 <NOTIFY_notify+0x16c>
   17000:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17004:	mov	r3, r2
   17008:	lsl	r3, r3, #4
   1700c:	rsb	r3, r2, r3
   17010:	lsl	r3, r3, #2
   17014:	mov	r2, r3
   17018:	ldr	r3, [fp, #-12]
   1701c:	add	r3, r3, r2
   17020:	ldr	r2, [r3, #32]
   17024:	ldr	r3, [fp, #-64]	; 0xffffffc0
   17028:	cmp	r2, r3
   1702c:	bhi	1703c <NOTIFY_notify+0x128>
   17030:	ldr	r3, [pc, #88]	; 17090 <NOTIFY_notify+0x17c>
   17034:	str	r3, [fp, #-24]	; 0xffffffe8
   17038:	b	17080 <NOTIFY_notify+0x16c>
   1703c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   17040:	str	r3, [fp, #-36]	; 0xffffffdc
   17044:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17048:	str	r3, [fp, #-32]	; 0xffffffe0
   1704c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17050:	str	r3, [fp, #-44]	; 0xffffffd4
   17054:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17058:	str	r3, [fp, #-40]	; 0xffffffd8
   1705c:	ldr	r3, [pc, #56]	; 1709c <NOTIFY_notify+0x188>
   17060:	ldr	r3, [r3]
   17064:	sub	r2, fp, #48	; 0x30
   17068:	mov	r0, r3
   1706c:	ldr	r1, [pc, #44]	; 170a0 <NOTIFY_notify+0x18c>
   17070:	mov	r3, #0
   17074:	bl	f94c <DRV_Invoke>
   17078:	mov	r3, r0
   1707c:	str	r3, [fp, #-24]	; 0xffffffe8
   17080:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17084:	mov	r0, r3
   17088:	sub	sp, fp, #4
   1708c:	pop	{fp, pc}
   17090:	.word	0x8000800b
   17094:	.word	0x00007fff
   17098:	.word	0x0002d3f0
   1709c:	.word	0x0002d3ec
   170a0:	.word	0xc018e04d

000170a4 <POOL_writeback>:
   170a4:	push	{fp, lr}
   170a8:	add	fp, sp, #4
   170ac:	sub	sp, sp, #72	; 0x48
   170b0:	mov	r3, r0
   170b4:	str	r1, [fp, #-68]	; 0xffffffbc
   170b8:	str	r2, [fp, #-72]	; 0xffffffb8
   170bc:	strh	r3, [fp, #-62]	; 0xffffffc2
   170c0:	mov	r3, #32768	; 0x8000
   170c4:	str	r3, [fp, #-8]
   170c8:	ldrh	r3, [fp, #-62]	; 0xffffffc2
   170cc:	and	r3, r3, #255	; 0xff
   170d0:	cmp	r3, #31
   170d4:	bhi	170f0 <POOL_writeback+0x4c>
   170d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   170dc:	cmp	r3, #0
   170e0:	beq	170f0 <POOL_writeback+0x4c>
   170e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   170e8:	cmp	r3, #0
   170ec:	bne	170fc <POOL_writeback+0x58>
   170f0:	ldr	r3, [pc, #280]	; 17210 <POOL_writeback+0x16c>
   170f4:	str	r3, [fp, #-8]
   170f8:	b	17200 <POOL_writeback+0x15c>
   170fc:	ldrh	r3, [fp, #-62]	; 0xffffffc2
   17100:	lsr	r3, r3, #8
   17104:	lsl	r3, r3, #16
   17108:	lsr	r3, r3, #16
   1710c:	str	r3, [fp, #-16]
   17110:	ldrh	r3, [fp, #-62]	; 0xffffffc2
   17114:	strb	r3, [fp, #-9]
   17118:	ldr	r3, [pc, #244]	; 17214 <POOL_writeback+0x170>
   1711c:	ldr	r1, [r3]
   17120:	ldr	r3, [fp, #-16]
   17124:	mov	r2, #4
   17128:	lsl	r3, r3, #2
   1712c:	add	r3, r1, r3
   17130:	add	r3, r3, r2
   17134:	ldr	r3, [r3]
   17138:	str	r3, [fp, #-20]	; 0xffffffec
   1713c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17140:	ldr	r3, [r3]
   17144:	str	r3, [fp, #-32]	; 0xffffffe0
   17148:	ldr	r3, [fp, #-20]	; 0xffffffec
   1714c:	ldr	r1, [r3, #8]
   17150:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17154:	ldr	r2, [r3, #144]	; 0x90
   17158:	mov	r3, r2
   1715c:	lsl	r3, r3, #2
   17160:	add	r3, r3, r2
   17164:	lsl	r3, r3, #4
   17168:	add	r3, r1, r3
   1716c:	str	r3, [fp, #-28]	; 0xffffffe4
   17170:	ldr	r3, [fp, #-20]	; 0xffffffec
   17174:	ldr	r2, [r3, #32]
   17178:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1717c:	ldr	r3, [r3, #48]	; 0x30
   17180:	lsl	r3, r3, #2
   17184:	add	r3, r2, r3
   17188:	ldr	r1, [r3]
   1718c:	ldrb	r2, [fp, #-9]
   17190:	mov	r3, r2
   17194:	lsl	r3, r3, #4
   17198:	rsb	r3, r2, r3
   1719c:	lsl	r3, r3, #2
   171a0:	add	r3, r1, r3
   171a4:	str	r3, [fp, #-24]	; 0xffffffe8
   171a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   171ac:	mov	r0, r3
   171b0:	ldr	r1, [pc, #96]	; 17218 <POOL_writeback+0x174>
   171b4:	bl	9f3c <strcmp@plt>
   171b8:	mov	r3, r0
   171bc:	cmp	r3, #0
   171c0:	bne	17200 <POOL_writeback+0x15c>
   171c4:	ldrh	r3, [fp, #-62]	; 0xffffffc2
   171c8:	strh	r3, [fp, #-52]	; 0xffffffcc
   171cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   171d0:	str	r3, [fp, #-44]	; 0xffffffd4
   171d4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   171d8:	str	r3, [fp, #-48]	; 0xffffffd0
   171dc:	ldr	r3, [pc, #56]	; 1721c <POOL_writeback+0x178>
   171e0:	ldr	r3, [r3]
   171e4:	sub	r2, fp, #56	; 0x38
   171e8:	mov	r0, r3
   171ec:	ldr	r1, [pc, #44]	; 17220 <POOL_writeback+0x17c>
   171f0:	mov	r3, #0
   171f4:	bl	f94c <DRV_Invoke>
   171f8:	mov	r3, r0
   171fc:	str	r3, [fp, #-8]
   17200:	ldr	r3, [fp, #-8]
   17204:	mov	r0, r3
   17208:	sub	sp, fp, #4
   1720c:	pop	{fp, pc}
   17210:	.word	0x8000800b
   17214:	.word	0x0002d3f0
   17218:	.word	0x000238d0
   1721c:	.word	0x0002d3ec
   17220:	.word	0xc018e045

00017224 <POOL_invalidate>:
   17224:	push	{fp, lr}
   17228:	add	fp, sp, #4
   1722c:	sub	sp, sp, #72	; 0x48
   17230:	mov	r3, r0
   17234:	str	r1, [fp, #-68]	; 0xffffffbc
   17238:	str	r2, [fp, #-72]	; 0xffffffb8
   1723c:	strh	r3, [fp, #-62]	; 0xffffffc2
   17240:	mov	r3, #32768	; 0x8000
   17244:	str	r3, [fp, #-8]
   17248:	ldrh	r3, [fp, #-62]	; 0xffffffc2
   1724c:	and	r3, r3, #255	; 0xff
   17250:	cmp	r3, #31
   17254:	bhi	17270 <POOL_invalidate+0x4c>
   17258:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1725c:	cmp	r3, #0
   17260:	beq	17270 <POOL_invalidate+0x4c>
   17264:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17268:	cmp	r3, #0
   1726c:	bne	1727c <POOL_invalidate+0x58>
   17270:	ldr	r3, [pc, #280]	; 17390 <POOL_invalidate+0x16c>
   17274:	str	r3, [fp, #-8]
   17278:	b	17380 <POOL_invalidate+0x15c>
   1727c:	ldrh	r3, [fp, #-62]	; 0xffffffc2
   17280:	lsr	r3, r3, #8
   17284:	lsl	r3, r3, #16
   17288:	lsr	r3, r3, #16
   1728c:	str	r3, [fp, #-16]
   17290:	ldrh	r3, [fp, #-62]	; 0xffffffc2
   17294:	strb	r3, [fp, #-9]
   17298:	ldr	r3, [pc, #244]	; 17394 <POOL_invalidate+0x170>
   1729c:	ldr	r1, [r3]
   172a0:	ldr	r3, [fp, #-16]
   172a4:	mov	r2, #4
   172a8:	lsl	r3, r3, #2
   172ac:	add	r3, r1, r3
   172b0:	add	r3, r3, r2
   172b4:	ldr	r3, [r3]
   172b8:	str	r3, [fp, #-20]	; 0xffffffec
   172bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   172c0:	ldr	r3, [r3]
   172c4:	str	r3, [fp, #-32]	; 0xffffffe0
   172c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   172cc:	ldr	r1, [r3, #8]
   172d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   172d4:	ldr	r2, [r3, #144]	; 0x90
   172d8:	mov	r3, r2
   172dc:	lsl	r3, r3, #2
   172e0:	add	r3, r3, r2
   172e4:	lsl	r3, r3, #4
   172e8:	add	r3, r1, r3
   172ec:	str	r3, [fp, #-28]	; 0xffffffe4
   172f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   172f4:	ldr	r2, [r3, #32]
   172f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   172fc:	ldr	r3, [r3, #48]	; 0x30
   17300:	lsl	r3, r3, #2
   17304:	add	r3, r2, r3
   17308:	ldr	r1, [r3]
   1730c:	ldrb	r2, [fp, #-9]
   17310:	mov	r3, r2
   17314:	lsl	r3, r3, #4
   17318:	rsb	r3, r2, r3
   1731c:	lsl	r3, r3, #2
   17320:	add	r3, r1, r3
   17324:	str	r3, [fp, #-24]	; 0xffffffe8
   17328:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1732c:	mov	r0, r3
   17330:	ldr	r1, [pc, #96]	; 17398 <POOL_invalidate+0x174>
   17334:	bl	9f3c <strcmp@plt>
   17338:	mov	r3, r0
   1733c:	cmp	r3, #0
   17340:	bne	17380 <POOL_invalidate+0x15c>
   17344:	ldrh	r3, [fp, #-62]	; 0xffffffc2
   17348:	strh	r3, [fp, #-52]	; 0xffffffcc
   1734c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17350:	str	r3, [fp, #-44]	; 0xffffffd4
   17354:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17358:	str	r3, [fp, #-48]	; 0xffffffd0
   1735c:	ldr	r3, [pc, #56]	; 1739c <POOL_invalidate+0x178>
   17360:	ldr	r3, [r3]
   17364:	sub	r2, fp, #56	; 0x38
   17368:	mov	r0, r3
   1736c:	ldr	r1, [pc, #44]	; 173a0 <POOL_invalidate+0x17c>
   17370:	mov	r3, #0
   17374:	bl	f94c <DRV_Invoke>
   17378:	mov	r3, r0
   1737c:	str	r3, [fp, #-8]
   17380:	ldr	r3, [fp, #-8]
   17384:	mov	r0, r3
   17388:	sub	sp, fp, #4
   1738c:	pop	{fp, pc}
   17390:	.word	0x8000800b
   17394:	.word	0x0002d3f0
   17398:	.word	0x000238d0
   1739c:	.word	0x0002d3ec
   173a0:	.word	0xc018e046

000173a4 <_POOL_init>:
   173a4:	push	{fp}		; (str fp, [sp, #-4]!)
   173a8:	add	fp, sp, #0
   173ac:	sub	sp, sp, #12
   173b0:	mov	r3, #0
   173b4:	str	r3, [fp, #-12]
   173b8:	b	1746c <_POOL_init+0xc8>
   173bc:	mov	r3, #0
   173c0:	str	r3, [fp, #-8]
   173c4:	b	17454 <_POOL_init+0xb0>
   173c8:	ldr	r1, [fp, #-12]
   173cc:	ldr	r2, [fp, #-8]
   173d0:	ldr	r0, [pc, #172]	; 17484 <_POOL_init+0xe0>
   173d4:	mov	r3, r2
   173d8:	lsl	r3, r3, #1
   173dc:	add	r3, r3, r2
   173e0:	lsl	r2, r3, #3
   173e4:	mov	r3, r1
   173e8:	lsl	r3, r3, #1
   173ec:	add	r3, r3, r1
   173f0:	lsl	r3, r3, #8
   173f4:	add	r3, r2, r3
   173f8:	add	r2, r0, r3
   173fc:	mov	r3, #0
   17400:	strh	r3, [r2]
   17404:	ldr	r1, [fp, #-12]
   17408:	ldr	r2, [fp, #-8]
   1740c:	ldr	r0, [pc, #112]	; 17484 <_POOL_init+0xe0>
   17410:	mov	ip, #4
   17414:	mov	r3, r2
   17418:	lsl	r3, r3, #1
   1741c:	add	r3, r3, r2
   17420:	lsl	r2, r3, #3
   17424:	mov	r3, r1
   17428:	lsl	r3, r3, #1
   1742c:	add	r3, r3, r1
   17430:	lsl	r3, r3, #8
   17434:	add	r3, r2, r3
   17438:	add	r3, r0, r3
   1743c:	add	r2, r3, ip
   17440:	mov	r3, #0
   17444:	str	r3, [r2]
   17448:	ldr	r3, [fp, #-8]
   1744c:	add	r3, r3, #1
   17450:	str	r3, [fp, #-8]
   17454:	ldr	r3, [fp, #-8]
   17458:	cmp	r3, #31
   1745c:	bls	173c8 <_POOL_init+0x24>
   17460:	ldr	r3, [fp, #-12]
   17464:	add	r3, r3, #1
   17468:	str	r3, [fp, #-12]
   1746c:	ldr	r3, [fp, #-12]
   17470:	cmp	r3, #0
   17474:	beq	173bc <_POOL_init+0x18>
   17478:	add	sp, fp, #0
   1747c:	ldmfd	sp!, {fp}
   17480:	bx	lr
   17484:	.word	0x0002d7f0

00017488 <_POOL_exit>:
   17488:	push	{fp}		; (str fp, [sp, #-4]!)
   1748c:	add	fp, sp, #0
   17490:	sub	sp, sp, #12
   17494:	mov	r3, #0
   17498:	str	r3, [fp, #-12]
   1749c:	b	17550 <_POOL_exit+0xc8>
   174a0:	mov	r3, #0
   174a4:	str	r3, [fp, #-8]
   174a8:	b	17538 <_POOL_exit+0xb0>
   174ac:	ldr	r1, [fp, #-12]
   174b0:	ldr	r2, [fp, #-8]
   174b4:	ldr	r0, [pc, #172]	; 17568 <_POOL_exit+0xe0>
   174b8:	mov	r3, r2
   174bc:	lsl	r3, r3, #1
   174c0:	add	r3, r3, r2
   174c4:	lsl	r2, r3, #3
   174c8:	mov	r3, r1
   174cc:	lsl	r3, r3, #1
   174d0:	add	r3, r3, r1
   174d4:	lsl	r3, r3, #8
   174d8:	add	r3, r2, r3
   174dc:	add	r2, r0, r3
   174e0:	mov	r3, #0
   174e4:	strh	r3, [r2]
   174e8:	ldr	r1, [fp, #-12]
   174ec:	ldr	r2, [fp, #-8]
   174f0:	ldr	r0, [pc, #112]	; 17568 <_POOL_exit+0xe0>
   174f4:	mov	ip, #4
   174f8:	mov	r3, r2
   174fc:	lsl	r3, r3, #1
   17500:	add	r3, r3, r2
   17504:	lsl	r2, r3, #3
   17508:	mov	r3, r1
   1750c:	lsl	r3, r3, #1
   17510:	add	r3, r3, r1
   17514:	lsl	r3, r3, #8
   17518:	add	r3, r2, r3
   1751c:	add	r3, r0, r3
   17520:	add	r2, r3, ip
   17524:	mov	r3, #0
   17528:	str	r3, [r2]
   1752c:	ldr	r3, [fp, #-8]
   17530:	add	r3, r3, #1
   17534:	str	r3, [fp, #-8]
   17538:	ldr	r3, [fp, #-8]
   1753c:	cmp	r3, #31
   17540:	bls	174ac <_POOL_exit+0x24>
   17544:	ldr	r3, [fp, #-12]
   17548:	add	r3, r3, #1
   1754c:	str	r3, [fp, #-12]
   17550:	ldr	r3, [fp, #-12]
   17554:	cmp	r3, #0
   17558:	beq	174a0 <_POOL_exit+0x18>
   1755c:	add	sp, fp, #0
   17560:	ldmfd	sp!, {fp}
   17564:	bx	lr
   17568:	.word	0x0002d7f0

0001756c <_POOL_xltBuf>:
   1756c:	push	{fp}		; (str fp, [sp, #-4]!)
   17570:	add	fp, sp, #0
   17574:	sub	sp, sp, #60	; 0x3c
   17578:	mov	r3, r0
   1757c:	str	r1, [fp, #-52]	; 0xffffffcc
   17580:	str	r2, [fp, #-56]	; 0xffffffc8
   17584:	strh	r3, [fp, #-46]	; 0xffffffd2
   17588:	mov	r3, #32768	; 0x8000
   1758c:	str	r3, [fp, #-40]	; 0xffffffd8
   17590:	mov	r3, #0
   17594:	str	r3, [fp, #-36]	; 0xffffffdc
   17598:	mov	r3, #0
   1759c:	str	r3, [fp, #-32]	; 0xffffffe0
   175a0:	ldrh	r3, [fp, #-46]	; 0xffffffd2
   175a4:	strb	r3, [fp, #-25]	; 0xffffffe7
   175a8:	ldrh	r3, [fp, #-46]	; 0xffffffd2
   175ac:	lsr	r3, r3, #8
   175b0:	lsl	r3, r3, #16
   175b4:	lsr	r3, r3, #16
   175b8:	str	r3, [fp, #-24]	; 0xffffffe8
   175bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   175c0:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   175c4:	ldr	r0, [pc, #460]	; 17798 <_POOL_xltBuf+0x22c>
   175c8:	mov	r3, r2
   175cc:	lsl	r3, r3, #1
   175d0:	add	r3, r3, r2
   175d4:	lsl	r2, r3, #3
   175d8:	mov	r3, r1
   175dc:	lsl	r3, r3, #1
   175e0:	add	r3, r3, r1
   175e4:	lsl	r3, r3, #8
   175e8:	add	r3, r2, r3
   175ec:	add	r3, r0, r3
   175f0:	ldrh	r3, [r3]
   175f4:	cmp	r3, #0
   175f8:	beq	17768 <_POOL_xltBuf+0x1fc>
   175fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17600:	ldr	r3, [r3]
   17604:	str	r3, [fp, #-16]
   17608:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1760c:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   17610:	ldr	r0, [pc, #384]	; 17798 <_POOL_xltBuf+0x22c>
   17614:	mov	ip, #20
   17618:	mov	r3, r2
   1761c:	lsl	r3, r3, #1
   17620:	add	r3, r3, r2
   17624:	lsl	r2, r3, #3
   17628:	mov	r3, r1
   1762c:	lsl	r3, r3, #1
   17630:	add	r3, r3, r1
   17634:	lsl	r3, r3, #8
   17638:	add	r3, r2, r3
   1763c:	add	r3, r0, r3
   17640:	add	r3, r3, ip
   17644:	ldr	r3, [r3]
   17648:	str	r3, [fp, #-20]	; 0xffffffec
   1764c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17650:	and	r3, r3, #255	; 0xff
   17654:	str	r3, [fp, #-8]
   17658:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1765c:	lsr	r3, r3, #8
   17660:	str	r3, [fp, #-12]
   17664:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17668:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   1766c:	ldr	r0, [fp, #-8]
   17670:	ldr	ip, [pc, #288]	; 17798 <_POOL_xltBuf+0x22c>
   17674:	mov	r3, r2
   17678:	lsl	r3, r3, #1
   1767c:	add	r3, r3, r2
   17680:	lsl	r2, r3, #1
   17684:	mov	r3, r1
   17688:	lsl	r3, r3, #1
   1768c:	add	r3, r3, r1
   17690:	lsl	r3, r3, #6
   17694:	add	r3, r2, r3
   17698:	add	r3, r3, r0
   1769c:	mov	r2, #4
   176a0:	lsl	r3, r3, #2
   176a4:	add	r3, ip, r3
   176a8:	add	r3, r3, r2
   176ac:	ldr	r3, [r3]
   176b0:	str	r3, [fp, #-36]	; 0xffffffdc
   176b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   176b8:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   176bc:	ldr	r0, [fp, #-12]
   176c0:	ldr	ip, [pc, #208]	; 17798 <_POOL_xltBuf+0x22c>
   176c4:	mov	r3, r2
   176c8:	lsl	r3, r3, #1
   176cc:	add	r3, r3, r2
   176d0:	lsl	r2, r3, #1
   176d4:	mov	r3, r1
   176d8:	lsl	r3, r3, #1
   176dc:	add	r3, r3, r1
   176e0:	lsl	r3, r3, #6
   176e4:	add	r3, r2, r3
   176e8:	add	r3, r3, r0
   176ec:	mov	r2, #4
   176f0:	lsl	r3, r3, #2
   176f4:	add	r3, ip, r3
   176f8:	add	r3, r3, r2
   176fc:	ldr	r3, [r3]
   17700:	str	r3, [fp, #-32]	; 0xffffffe0
   17704:	ldr	r2, [fp, #-16]
   17708:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1770c:	cmp	r2, r3
   17710:	bcc	1772c <_POOL_xltBuf+0x1c0>
   17714:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17718:	ldr	r3, [fp, #-20]	; 0xffffffec
   1771c:	add	r2, r2, r3
   17720:	ldr	r3, [fp, #-16]
   17724:	cmp	r2, r3
   17728:	bhi	17744 <_POOL_xltBuf+0x1d8>
   1772c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17730:	mov	r2, #0
   17734:	str	r2, [r3]
   17738:	ldr	r3, [pc, #92]	; 1779c <_POOL_xltBuf+0x230>
   1773c:	str	r3, [fp, #-40]	; 0xffffffd8
   17740:	b	17784 <_POOL_xltBuf+0x218>
   17744:	ldr	r2, [fp, #-16]
   17748:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1774c:	rsb	r2, r3, r2
   17750:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17754:	add	r3, r2, r3
   17758:	mov	r2, r3
   1775c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17760:	str	r2, [r3]
   17764:	b	17784 <_POOL_xltBuf+0x218>
   17768:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1776c:	mov	r3, #0
   17770:	str	r3, [r2]
   17774:	mov	r3, #0
   17778:	str	r3, [fp, #-20]	; 0xffffffec
   1777c:	ldr	r3, [pc, #28]	; 177a0 <_POOL_xltBuf+0x234>
   17780:	str	r3, [fp, #-40]	; 0xffffffd8
   17784:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17788:	mov	r0, r3
   1778c:	add	sp, fp, #0
   17790:	ldmfd	sp!, {fp}
   17794:	bx	lr
   17798:	.word	0x0002d7f0
   1779c:	.word	0x80008013
   177a0:	.word	0x80008008

000177a4 <POOL_open>:
   177a4:	push	{r4, r5, fp, lr}
   177a8:	add	fp, sp, #12
   177ac:	sub	sp, sp, #80	; 0x50
   177b0:	mov	r3, r0
   177b4:	str	r1, [fp, #-84]	; 0xffffffac
   177b8:	strh	r3, [fp, #-78]	; 0xffffffb2
   177bc:	mov	r3, #32768	; 0x8000
   177c0:	str	r3, [fp, #-28]	; 0xffffffe4
   177c4:	mov	r3, #32768	; 0x8000
   177c8:	str	r3, [fp, #-24]	; 0xffffffe8
   177cc:	mov	r3, #0
   177d0:	strh	r3, [fp, #-20]	; 0xffffffec
   177d4:	ldrh	r3, [fp, #-78]	; 0xffffffb2
   177d8:	strb	r3, [fp, #-17]	; 0xffffffef
   177dc:	ldrh	r3, [fp, #-78]	; 0xffffffb2
   177e0:	lsr	r3, r3, #8
   177e4:	lsl	r3, r3, #16
   177e8:	lsr	r3, r3, #16
   177ec:	str	r3, [fp, #-16]
   177f0:	ldrh	r3, [fp, #-78]	; 0xffffffb2
   177f4:	and	r3, r3, #255	; 0xff
   177f8:	cmp	r3, #31
   177fc:	bls	1780c <POOL_open+0x68>
   17800:	ldr	r3, [pc, #444]	; 179c4 <POOL_open+0x220>
   17804:	str	r3, [fp, #-28]	; 0xffffffe4
   17808:	b	179b4 <POOL_open+0x210>
   1780c:	ldr	r3, [pc, #436]	; 179c8 <POOL_open+0x224>
   17810:	ldr	r3, [r3]
   17814:	cmp	r3, #0
   17818:	beq	1783c <POOL_open+0x98>
   1781c:	ldr	r3, [pc, #420]	; 179c8 <POOL_open+0x224>
   17820:	ldr	r3, [r3]
   17824:	mov	r0, r3
   17828:	bl	22b68 <_SYNC_USR_enterCS>
   1782c:	mov	r3, r0
   17830:	str	r3, [fp, #-28]	; 0xffffffe4
   17834:	mov	r3, #1
   17838:	strh	r3, [fp, #-20]	; 0xffffffec
   1783c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17840:	ldr	r3, [pc, #388]	; 179cc <POOL_open+0x228>
   17844:	cmp	r2, r3
   17848:	ble	179b4 <POOL_open+0x210>
   1784c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17850:	cmp	r3, #34048	; 0x8500
   17854:	bgt	179b4 <POOL_open+0x210>
   17858:	ldr	r3, [fp, #-16]
   1785c:	ldrb	r2, [fp, #-17]	; 0xffffffef
   17860:	ldr	r1, [pc, #352]	; 179c8 <POOL_open+0x224>
   17864:	lsl	r3, r3, #5
   17868:	add	r3, r3, r2
   1786c:	add	r3, r3, #2
   17870:	mov	r2, #8
   17874:	lsl	r3, r3, #2
   17878:	add	r3, r1, r3
   1787c:	add	r3, r3, r2
   17880:	ldr	r4, [r3]
   17884:	bl	9ee8 <getpid@plt>
   17888:	mov	r3, r0
   1788c:	cmp	r4, r3
   17890:	bne	178a0 <POOL_open+0xfc>
   17894:	mov	r3, #1
   17898:	str	r3, [fp, #-88]	; 0xffffffa8
   1789c:	b	178a8 <POOL_open+0x104>
   178a0:	mov	r3, #0
   178a4:	str	r3, [fp, #-88]	; 0xffffffa8
   178a8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   178ac:	cmp	r3, #0
   178b0:	beq	178c0 <POOL_open+0x11c>
   178b4:	ldr	r3, [pc, #276]	; 179d0 <POOL_open+0x22c>
   178b8:	str	r3, [fp, #-28]	; 0xffffffe4
   178bc:	b	17950 <POOL_open+0x1ac>
   178c0:	ldrh	r3, [fp, #-78]	; 0xffffffb2
   178c4:	strh	r3, [fp, #-48]	; 0xffffffd0
   178c8:	ldr	r3, [fp, #-84]	; 0xffffffac
   178cc:	str	r3, [fp, #-72]	; 0xffffffb8
   178d0:	sub	r3, fp, #72	; 0x48
   178d4:	str	r3, [fp, #-44]	; 0xffffffd4
   178d8:	ldr	r3, [pc, #244]	; 179d4 <POOL_open+0x230>
   178dc:	ldr	r3, [r3]
   178e0:	sub	r2, fp, #52	; 0x34
   178e4:	mov	r0, r3
   178e8:	ldr	r1, [pc, #232]	; 179d8 <POOL_open+0x234>
   178ec:	mov	r3, #0
   178f0:	bl	f94c <DRV_Invoke>
   178f4:	mov	r3, r0
   178f8:	str	r3, [fp, #-28]	; 0xffffffe4
   178fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17900:	ldr	r3, [pc, #196]	; 179cc <POOL_open+0x228>
   17904:	cmp	r2, r3
   17908:	ble	17950 <POOL_open+0x1ac>
   1790c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17910:	cmp	r3, #34048	; 0x8500
   17914:	bgt	17950 <POOL_open+0x1ac>
   17918:	ldr	r4, [fp, #-16]
   1791c:	ldrb	r5, [fp, #-17]	; 0xffffffef
   17920:	bl	9ee8 <getpid@plt>
   17924:	mov	r3, r0
   17928:	mov	r1, r3
   1792c:	ldr	r0, [pc, #148]	; 179c8 <POOL_open+0x224>
   17930:	lsl	r3, r4, #5
   17934:	add	r3, r3, r5
   17938:	add	r3, r3, #2
   1793c:	mov	r2, #8
   17940:	lsl	r3, r3, #2
   17944:	add	r3, r0, r3
   17948:	add	r3, r3, r2
   1794c:	str	r1, [r3]
   17950:	ldrsh	r3, [fp, #-20]	; 0xffffffec
   17954:	cmp	r3, #1
   17958:	bne	179b4 <POOL_open+0x210>
   1795c:	ldr	r3, [pc, #100]	; 179c8 <POOL_open+0x224>
   17960:	ldr	r3, [r3]
   17964:	mov	r0, r3
   17968:	bl	22c7c <_SYNC_USR_leaveCS>
   1796c:	mov	r3, r0
   17970:	str	r3, [fp, #-24]	; 0xffffffe8
   17974:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17978:	ldr	r3, [pc, #76]	; 179cc <POOL_open+0x228>
   1797c:	cmp	r2, r3
   17980:	ble	17990 <POOL_open+0x1ec>
   17984:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17988:	cmp	r3, #34048	; 0x8500
   1798c:	ble	179b4 <POOL_open+0x210>
   17990:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17994:	ldr	r3, [pc, #48]	; 179cc <POOL_open+0x228>
   17998:	cmp	r2, r3
   1799c:	ble	179b4 <POOL_open+0x210>
   179a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   179a4:	cmp	r3, #34048	; 0x8500
   179a8:	bgt	179b4 <POOL_open+0x210>
   179ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   179b0:	str	r3, [fp, #-28]	; 0xffffffe4
   179b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   179b8:	mov	r0, r3
   179bc:	sub	sp, fp, #12
   179c0:	pop	{r4, r5, fp, pc}
   179c4:	.word	0x8000800b
   179c8:	.word	0x0002d3f4
   179cc:	.word	0x00007fff
   179d0:	.word	0x8000801f
   179d4:	.word	0x0002d3ec
   179d8:	.word	0xc018e03f

000179dc <POOL_close>:
   179dc:	push	{r4, fp, lr}
   179e0:	add	fp, sp, #8
   179e4:	sub	sp, sp, #52	; 0x34
   179e8:	mov	r3, r0
   179ec:	strh	r3, [fp, #-54]	; 0xffffffca
   179f0:	mov	r3, #32768	; 0x8000
   179f4:	str	r3, [fp, #-28]	; 0xffffffe4
   179f8:	mov	r3, #32768	; 0x8000
   179fc:	str	r3, [fp, #-24]	; 0xffffffe8
   17a00:	mov	r3, #0
   17a04:	strh	r3, [fp, #-20]	; 0xffffffec
   17a08:	ldrh	r3, [fp, #-54]	; 0xffffffca
   17a0c:	strb	r3, [fp, #-17]	; 0xffffffef
   17a10:	ldrh	r3, [fp, #-54]	; 0xffffffca
   17a14:	lsr	r3, r3, #8
   17a18:	lsl	r3, r3, #16
   17a1c:	lsr	r3, r3, #16
   17a20:	str	r3, [fp, #-16]
   17a24:	ldrh	r3, [fp, #-54]	; 0xffffffca
   17a28:	and	r3, r3, #255	; 0xff
   17a2c:	cmp	r3, #31
   17a30:	bls	17a40 <POOL_close+0x64>
   17a34:	ldr	r3, [pc, #360]	; 17ba4 <POOL_close+0x1c8>
   17a38:	str	r3, [fp, #-28]	; 0xffffffe4
   17a3c:	b	17b94 <POOL_close+0x1b8>
   17a40:	ldr	r3, [pc, #352]	; 17ba8 <POOL_close+0x1cc>
   17a44:	ldr	r3, [r3]
   17a48:	cmp	r3, #0
   17a4c:	beq	17a70 <POOL_close+0x94>
   17a50:	ldr	r3, [pc, #336]	; 17ba8 <POOL_close+0x1cc>
   17a54:	ldr	r3, [r3]
   17a58:	mov	r0, r3
   17a5c:	bl	22b68 <_SYNC_USR_enterCS>
   17a60:	mov	r3, r0
   17a64:	str	r3, [fp, #-28]	; 0xffffffe4
   17a68:	mov	r3, #1
   17a6c:	strh	r3, [fp, #-20]	; 0xffffffec
   17a70:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17a74:	ldr	r3, [pc, #304]	; 17bac <POOL_close+0x1d0>
   17a78:	cmp	r2, r3
   17a7c:	ble	17b94 <POOL_close+0x1b8>
   17a80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17a84:	cmp	r3, #34048	; 0x8500
   17a88:	bgt	17b94 <POOL_close+0x1b8>
   17a8c:	ldr	r3, [fp, #-16]
   17a90:	ldrb	r2, [fp, #-17]	; 0xffffffef
   17a94:	ldr	r1, [pc, #268]	; 17ba8 <POOL_close+0x1cc>
   17a98:	lsl	r3, r3, #5
   17a9c:	add	r3, r3, r2
   17aa0:	add	r3, r3, #2
   17aa4:	mov	r2, #8
   17aa8:	lsl	r3, r3, #2
   17aac:	add	r3, r1, r3
   17ab0:	add	r3, r3, r2
   17ab4:	ldr	r4, [r3]
   17ab8:	bl	9ee8 <getpid@plt>
   17abc:	mov	r3, r0
   17ac0:	cmp	r4, r3
   17ac4:	beq	17ad4 <POOL_close+0xf8>
   17ac8:	ldr	r3, [pc, #224]	; 17bb0 <POOL_close+0x1d4>
   17acc:	str	r3, [fp, #-28]	; 0xffffffe4
   17ad0:	b	17b30 <POOL_close+0x154>
   17ad4:	ldrh	r3, [fp, #-54]	; 0xffffffca
   17ad8:	strh	r3, [fp, #-48]	; 0xffffffd0
   17adc:	ldr	r3, [pc, #208]	; 17bb4 <POOL_close+0x1d8>
   17ae0:	ldr	r3, [r3]
   17ae4:	sub	r2, fp, #52	; 0x34
   17ae8:	mov	r0, r3
   17aec:	ldr	r1, [pc, #196]	; 17bb8 <POOL_close+0x1dc>
   17af0:	mov	r3, #0
   17af4:	bl	f94c <DRV_Invoke>
   17af8:	mov	r3, r0
   17afc:	str	r3, [fp, #-28]	; 0xffffffe4
   17b00:	ldr	r3, [fp, #-16]
   17b04:	ldrb	r2, [fp, #-17]	; 0xffffffef
   17b08:	ldr	r1, [pc, #152]	; 17ba8 <POOL_close+0x1cc>
   17b0c:	lsl	r3, r3, #5
   17b10:	add	r3, r3, r2
   17b14:	add	r3, r3, #2
   17b18:	mov	r2, #8
   17b1c:	lsl	r3, r3, #2
   17b20:	add	r3, r1, r3
   17b24:	add	r2, r3, r2
   17b28:	mov	r3, #0
   17b2c:	str	r3, [r2]
   17b30:	ldrsh	r3, [fp, #-20]	; 0xffffffec
   17b34:	cmp	r3, #1
   17b38:	bne	17b94 <POOL_close+0x1b8>
   17b3c:	ldr	r3, [pc, #100]	; 17ba8 <POOL_close+0x1cc>
   17b40:	ldr	r3, [r3]
   17b44:	mov	r0, r3
   17b48:	bl	22c7c <_SYNC_USR_leaveCS>
   17b4c:	mov	r3, r0
   17b50:	str	r3, [fp, #-24]	; 0xffffffe8
   17b54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17b58:	ldr	r3, [pc, #76]	; 17bac <POOL_close+0x1d0>
   17b5c:	cmp	r2, r3
   17b60:	ble	17b70 <POOL_close+0x194>
   17b64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17b68:	cmp	r3, #34048	; 0x8500
   17b6c:	ble	17b94 <POOL_close+0x1b8>
   17b70:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17b74:	ldr	r3, [pc, #48]	; 17bac <POOL_close+0x1d0>
   17b78:	cmp	r2, r3
   17b7c:	ble	17b94 <POOL_close+0x1b8>
   17b80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17b84:	cmp	r3, #34048	; 0x8500
   17b88:	bgt	17b94 <POOL_close+0x1b8>
   17b8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17b90:	str	r3, [fp, #-28]	; 0xffffffe4
   17b94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17b98:	mov	r0, r3
   17b9c:	sub	sp, fp, #8
   17ba0:	pop	{r4, fp, pc}
   17ba4:	.word	0x8000800b
   17ba8:	.word	0x0002d3f4
   17bac:	.word	0x00007fff
   17bb0:	.word	0x80008000
   17bb4:	.word	0x0002d3ec
   17bb8:	.word	0xc018e040

00017bbc <POOL_alloc>:
   17bbc:	push	{fp, lr}
   17bc0:	add	fp, sp, #4
   17bc4:	sub	sp, sp, #48	; 0x30
   17bc8:	mov	r3, r0
   17bcc:	str	r1, [fp, #-44]	; 0xffffffd4
   17bd0:	str	r2, [fp, #-48]	; 0xffffffd0
   17bd4:	strh	r3, [fp, #-38]	; 0xffffffda
   17bd8:	mov	r3, #32768	; 0x8000
   17bdc:	str	r3, [fp, #-8]
   17be0:	ldrh	r3, [fp, #-38]	; 0xffffffda
   17be4:	and	r3, r3, #255	; 0xff
   17be8:	cmp	r3, #31
   17bec:	bhi	17c08 <POOL_alloc+0x4c>
   17bf0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17bf4:	cmp	r3, #0
   17bf8:	beq	17c08 <POOL_alloc+0x4c>
   17bfc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17c00:	cmp	r3, #0
   17c04:	bne	17c14 <POOL_alloc+0x58>
   17c08:	ldr	r3, [pc, #80]	; 17c60 <POOL_alloc+0xa4>
   17c0c:	str	r3, [fp, #-8]
   17c10:	b	17c50 <POOL_alloc+0x94>
   17c14:	ldrh	r3, [fp, #-38]	; 0xffffffda
   17c18:	strh	r3, [fp, #-28]	; 0xffffffe4
   17c1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17c20:	str	r3, [fp, #-20]	; 0xffffffec
   17c24:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17c28:	str	r3, [fp, #-24]	; 0xffffffe8
   17c2c:	ldr	r3, [pc, #48]	; 17c64 <POOL_alloc+0xa8>
   17c30:	ldr	r3, [r3]
   17c34:	sub	r2, fp, #32
   17c38:	mov	r0, r3
   17c3c:	ldr	r1, [pc, #36]	; 17c68 <POOL_alloc+0xac>
   17c40:	mov	r3, #0
   17c44:	bl	f94c <DRV_Invoke>
   17c48:	mov	r3, r0
   17c4c:	str	r3, [fp, #-8]
   17c50:	ldr	r3, [fp, #-8]
   17c54:	mov	r0, r3
   17c58:	sub	sp, fp, #4
   17c5c:	pop	{fp, pc}
   17c60:	.word	0x8000800b
   17c64:	.word	0x0002d3ec
   17c68:	.word	0xc018e041

00017c6c <POOL_free>:
   17c6c:	push	{fp, lr}
   17c70:	add	fp, sp, #4
   17c74:	sub	sp, sp, #48	; 0x30
   17c78:	mov	r3, r0
   17c7c:	str	r1, [fp, #-44]	; 0xffffffd4
   17c80:	str	r2, [fp, #-48]	; 0xffffffd0
   17c84:	strh	r3, [fp, #-38]	; 0xffffffda
   17c88:	mov	r3, #32768	; 0x8000
   17c8c:	str	r3, [fp, #-8]
   17c90:	ldrh	r3, [fp, #-38]	; 0xffffffda
   17c94:	and	r3, r3, #255	; 0xff
   17c98:	cmp	r3, #31
   17c9c:	bhi	17cb8 <POOL_free+0x4c>
   17ca0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17ca4:	cmp	r3, #0
   17ca8:	beq	17cb8 <POOL_free+0x4c>
   17cac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17cb0:	cmp	r3, #0
   17cb4:	bne	17cc4 <POOL_free+0x58>
   17cb8:	ldr	r3, [pc, #80]	; 17d10 <POOL_free+0xa4>
   17cbc:	str	r3, [fp, #-8]
   17cc0:	b	17d00 <POOL_free+0x94>
   17cc4:	ldrh	r3, [fp, #-38]	; 0xffffffda
   17cc8:	strh	r3, [fp, #-28]	; 0xffffffe4
   17ccc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17cd0:	str	r3, [fp, #-20]	; 0xffffffec
   17cd4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17cd8:	str	r3, [fp, #-24]	; 0xffffffe8
   17cdc:	ldr	r3, [pc, #48]	; 17d14 <POOL_free+0xa8>
   17ce0:	ldr	r3, [r3]
   17ce4:	sub	r2, fp, #32
   17ce8:	mov	r0, r3
   17cec:	ldr	r1, [pc, #36]	; 17d18 <POOL_free+0xac>
   17cf0:	mov	r3, #0
   17cf4:	bl	f94c <DRV_Invoke>
   17cf8:	mov	r3, r0
   17cfc:	str	r3, [fp, #-8]
   17d00:	ldr	r3, [fp, #-8]
   17d04:	mov	r0, r3
   17d08:	sub	sp, fp, #4
   17d0c:	pop	{fp, pc}
   17d10:	.word	0x8000800b
   17d14:	.word	0x0002d3ec
   17d18:	.word	0xc018e042

00017d1c <POOL_translateAddr>:
   17d1c:	push	{fp, lr}
   17d20:	add	fp, sp, #4
   17d24:	sub	sp, sp, #48	; 0x30
   17d28:	str	r1, [fp, #-44]	; 0xffffffd4
   17d2c:	str	r2, [fp, #-48]	; 0xffffffd0
   17d30:	str	r3, [fp, #-52]	; 0xffffffcc
   17d34:	strh	r0, [fp, #-38]	; 0xffffffda
   17d38:	mov	r3, #32768	; 0x8000
   17d3c:	str	r3, [fp, #-8]
   17d40:	ldrh	r3, [fp, #-38]	; 0xffffffda
   17d44:	and	r3, r3, #255	; 0xff
   17d48:	cmp	r3, #31
   17d4c:	bhi	17dc8 <POOL_translateAddr+0xac>
   17d50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17d54:	cmp	r3, #0
   17d58:	beq	17dc8 <POOL_translateAddr+0xac>
   17d5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17d60:	cmp	r3, #0
   17d64:	beq	17d8c <POOL_translateAddr+0x70>
   17d68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17d6c:	cmp	r3, #1
   17d70:	beq	17d8c <POOL_translateAddr+0x70>
   17d74:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17d78:	cmp	r3, #2
   17d7c:	beq	17d8c <POOL_translateAddr+0x70>
   17d80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17d84:	cmp	r3, #3
   17d88:	bne	17dc8 <POOL_translateAddr+0xac>
   17d8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17d90:	cmp	r3, #0
   17d94:	beq	17dc8 <POOL_translateAddr+0xac>
   17d98:	ldr	r3, [fp, #4]
   17d9c:	cmp	r3, #0
   17da0:	beq	17dd4 <POOL_translateAddr+0xb8>
   17da4:	ldr	r3, [fp, #4]
   17da8:	cmp	r3, #1
   17dac:	beq	17dd4 <POOL_translateAddr+0xb8>
   17db0:	ldr	r3, [fp, #4]
   17db4:	cmp	r3, #2
   17db8:	beq	17dd4 <POOL_translateAddr+0xb8>
   17dbc:	ldr	r3, [fp, #4]
   17dc0:	cmp	r3, #3
   17dc4:	beq	17dd4 <POOL_translateAddr+0xb8>
   17dc8:	ldr	r3, [pc, #96]	; 17e30 <POOL_translateAddr+0x114>
   17dcc:	str	r3, [fp, #-8]
   17dd0:	b	17e20 <POOL_translateAddr+0x104>
   17dd4:	ldrh	r3, [fp, #-38]	; 0xffffffda
   17dd8:	strh	r3, [fp, #-28]	; 0xffffffe4
   17ddc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17de0:	str	r3, [fp, #-24]	; 0xffffffe8
   17de4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17de8:	str	r3, [fp, #-20]	; 0xffffffec
   17dec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17df0:	str	r3, [fp, #-16]
   17df4:	ldr	r3, [fp, #4]
   17df8:	str	r3, [fp, #-12]
   17dfc:	ldr	r3, [pc, #48]	; 17e34 <POOL_translateAddr+0x118>
   17e00:	ldr	r3, [r3]
   17e04:	sub	r2, fp, #32
   17e08:	mov	r0, r3
   17e0c:	ldr	r1, [pc, #36]	; 17e38 <POOL_translateAddr+0x11c>
   17e10:	mov	r3, #0
   17e14:	bl	f94c <DRV_Invoke>
   17e18:	mov	r3, r0
   17e1c:	str	r3, [fp, #-8]
   17e20:	ldr	r3, [fp, #-8]
   17e24:	mov	r0, r3
   17e28:	sub	sp, fp, #4
   17e2c:	pop	{fp, pc}
   17e30:	.word	0x8000800b
   17e34:	.word	0x0002d3ec
   17e38:	.word	0xc018e043

00017e3c <POOL_getPoolId>:
   17e3c:	push	{fp}		; (str fp, [sp, #-4]!)
   17e40:	add	fp, sp, #0
   17e44:	sub	sp, sp, #44	; 0x2c
   17e48:	str	r0, [fp, #-32]	; 0xffffffe0
   17e4c:	str	r1, [fp, #-36]	; 0xffffffdc
   17e50:	str	r2, [fp, #-40]	; 0xffffffd8
   17e54:	str	r3, [fp, #-44]	; 0xffffffd4
   17e58:	ldr	r3, [pc, #492]	; 1804c <POOL_getPoolId+0x210>
   17e5c:	str	r3, [fp, #-24]	; 0xffffffe8
   17e60:	mov	r3, #0
   17e64:	str	r3, [fp, #-20]	; 0xffffffec
   17e68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17e6c:	cmp	r3, #0
   17e70:	beq	17eb0 <POOL_getPoolId+0x74>
   17e74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17e78:	cmp	r3, #0
   17e7c:	beq	17eb0 <POOL_getPoolId+0x74>
   17e80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17e84:	cmp	r3, #0
   17e88:	beq	17ebc <POOL_getPoolId+0x80>
   17e8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17e90:	cmp	r3, #1
   17e94:	beq	17ebc <POOL_getPoolId+0x80>
   17e98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17e9c:	cmp	r3, #2
   17ea0:	beq	17ebc <POOL_getPoolId+0x80>
   17ea4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17ea8:	cmp	r3, #3
   17eac:	beq	17ebc <POOL_getPoolId+0x80>
   17eb0:	ldr	r3, [pc, #408]	; 18050 <POOL_getPoolId+0x214>
   17eb4:	str	r3, [fp, #-24]	; 0xffffffe8
   17eb8:	b	18038 <POOL_getPoolId+0x1fc>
   17ebc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17ec0:	mov	r3, #32
   17ec4:	strh	r3, [r2]
   17ec8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17ecc:	str	r3, [fp, #-12]
   17ed0:	mov	r3, #0
   17ed4:	strh	r3, [fp, #-6]
   17ed8:	b	1802c <POOL_getPoolId+0x1f0>
   17edc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17ee0:	ldrh	r2, [fp, #-6]
   17ee4:	ldr	r0, [pc, #360]	; 18054 <POOL_getPoolId+0x218>
   17ee8:	mov	ip, #4
   17eec:	mov	r3, r2
   17ef0:	lsl	r3, r3, #1
   17ef4:	add	r3, r3, r2
   17ef8:	lsl	r2, r3, #3
   17efc:	mov	r3, r1
   17f00:	lsl	r3, r3, #1
   17f04:	add	r3, r3, r1
   17f08:	lsl	r3, r3, #8
   17f0c:	add	r3, r2, r3
   17f10:	add	r3, r0, r3
   17f14:	add	r3, r3, ip
   17f18:	ldr	r3, [r3]
   17f1c:	cmp	r3, #0
   17f20:	beq	18020 <POOL_getPoolId+0x1e4>
   17f24:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17f28:	ldrh	r2, [fp, #-6]
   17f2c:	ldr	r0, [pc, #288]	; 18054 <POOL_getPoolId+0x218>
   17f30:	mov	ip, #20
   17f34:	mov	r3, r2
   17f38:	lsl	r3, r3, #1
   17f3c:	add	r3, r3, r2
   17f40:	lsl	r2, r3, #3
   17f44:	mov	r3, r1
   17f48:	lsl	r3, r3, #1
   17f4c:	add	r3, r3, r1
   17f50:	lsl	r3, r3, #8
   17f54:	add	r3, r2, r3
   17f58:	add	r3, r0, r3
   17f5c:	add	r3, r3, ip
   17f60:	ldr	r3, [r3]
   17f64:	str	r3, [fp, #-16]
   17f68:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17f6c:	ldrh	r2, [fp, #-6]
   17f70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17f74:	ldr	ip, [pc, #216]	; 18054 <POOL_getPoolId+0x218>
   17f78:	mov	r3, r2
   17f7c:	lsl	r3, r3, #1
   17f80:	add	r3, r3, r2
   17f84:	lsl	r2, r3, #1
   17f88:	mov	r3, r1
   17f8c:	lsl	r3, r3, #1
   17f90:	add	r3, r3, r1
   17f94:	lsl	r3, r3, #6
   17f98:	add	r3, r2, r3
   17f9c:	add	r3, r3, r0
   17fa0:	mov	r2, #4
   17fa4:	lsl	r3, r3, #2
   17fa8:	add	r3, ip, r3
   17fac:	add	r3, r3, r2
   17fb0:	ldr	r3, [r3]
   17fb4:	str	r3, [fp, #-20]	; 0xffffffec
   17fb8:	ldr	r2, [fp, #-12]
   17fbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   17fc0:	cmp	r2, r3
   17fc4:	bcc	18020 <POOL_getPoolId+0x1e4>
   17fc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   17fcc:	ldr	r3, [fp, #-16]
   17fd0:	add	r2, r2, r3
   17fd4:	ldr	r3, [fp, #-12]
   17fd8:	cmp	r2, r3
   17fdc:	bls	18020 <POOL_getPoolId+0x1e4>
   17fe0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17fe4:	lsl	r3, r3, #16
   17fe8:	lsr	r3, r3, #16
   17fec:	lsl	r3, r3, #8
   17ff0:	lsl	r3, r3, #16
   17ff4:	lsr	r2, r3, #16
   17ff8:	ldrh	r3, [fp, #-6]
   17ffc:	and	r3, r3, #255	; 0xff
   18000:	orr	r3, r2, r3
   18004:	lsl	r3, r3, #16
   18008:	lsr	r2, r3, #16
   1800c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18010:	strh	r2, [r3]
   18014:	mov	r3, #32768	; 0x8000
   18018:	str	r3, [fp, #-24]	; 0xffffffe8
   1801c:	b	18038 <POOL_getPoolId+0x1fc>
   18020:	ldrh	r3, [fp, #-6]
   18024:	add	r3, r3, #1
   18028:	strh	r3, [fp, #-6]
   1802c:	ldrh	r3, [fp, #-6]
   18030:	cmp	r3, #31
   18034:	bls	17edc <POOL_getPoolId+0xa0>
   18038:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1803c:	mov	r0, r3
   18040:	add	sp, fp, #0
   18044:	ldmfd	sp!, {fp}
   18048:	bx	lr
   1804c:	.word	0x8000802d
   18050:	.word	0x8000800b
   18054:	.word	0x0002d7f0

00018058 <PROC_setup>:
   18058:	push	{r4, fp, lr}
   1805c:	add	fp, sp, #8
   18060:	sub	sp, sp, #44	; 0x2c
   18064:	str	r0, [fp, #-48]	; 0xffffffd0
   18068:	mov	r3, #32768	; 0x8000
   1806c:	str	r3, [fp, #-20]	; 0xffffffec
   18070:	mov	r3, #32768	; 0x8000
   18074:	str	r3, [fp, #-16]
   18078:	ldr	r3, [pc, #964]	; 18444 <PROC_setup+0x3ec>
   1807c:	ldr	r4, [r3, #4]
   18080:	bl	9ee8 <getpid@plt>
   18084:	mov	r3, r0
   18088:	cmp	r4, r3
   1808c:	bne	1809c <PROC_setup+0x44>
   18090:	mov	r3, #1
   18094:	str	r3, [fp, #-52]	; 0xffffffcc
   18098:	b	180a4 <PROC_setup+0x4c>
   1809c:	mov	r3, #0
   180a0:	str	r3, [fp, #-52]	; 0xffffffcc
   180a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   180a8:	cmp	r3, #0
   180ac:	beq	180bc <PROC_setup+0x64>
   180b0:	ldr	r3, [pc, #912]	; 18448 <PROC_setup+0x3f0>
   180b4:	str	r3, [fp, #-20]	; 0xffffffec
   180b8:	b	18128 <PROC_setup+0xd0>
   180bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   180c0:	cmp	r3, #0
   180c4:	beq	180d8 <PROC_setup+0x80>
   180c8:	ldr	r2, [pc, #892]	; 1844c <PROC_setup+0x3f4>
   180cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   180d0:	str	r3, [r2]
   180d4:	b	180e4 <PROC_setup+0x8c>
   180d8:	ldr	r2, [pc, #876]	; 1844c <PROC_setup+0x3f4>
   180dc:	ldr	r3, [pc, #876]	; 18450 <PROC_setup+0x3f8>
   180e0:	str	r3, [r2]
   180e4:	ldr	r0, [pc, #872]	; 18454 <PROC_setup+0x3fc>
   180e8:	mov	r1, #0
   180ec:	bl	f4d0 <DRV_Initialize>
   180f0:	mov	r3, r0
   180f4:	str	r3, [fp, #-20]	; 0xffffffec
   180f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   180fc:	ldr	r3, [pc, #852]	; 18458 <PROC_setup+0x400>
   18100:	cmp	r2, r3
   18104:	ble	18128 <PROC_setup+0xd0>
   18108:	ldr	r3, [fp, #-20]	; 0xffffffec
   1810c:	cmp	r3, #34048	; 0x8500
   18110:	bgt	18128 <PROC_setup+0xd0>
   18114:	ldr	r2, [pc, #832]	; 1845c <PROC_setup+0x404>
   18118:	mov	r3, #0
   1811c:	strh	r3, [r2]
   18120:	mov	r3, #0
   18124:	str	r3, [fp, #-16]
   18128:	ldr	r2, [fp, #-20]	; 0xffffffec
   1812c:	ldr	r3, [pc, #804]	; 18458 <PROC_setup+0x400>
   18130:	cmp	r2, r3
   18134:	ble	18434 <PROC_setup+0x3dc>
   18138:	ldr	r3, [fp, #-20]	; 0xffffffec
   1813c:	cmp	r3, #34048	; 0x8500
   18140:	bgt	18434 <PROC_setup+0x3dc>
   18144:	ldr	r3, [pc, #776]	; 18454 <PROC_setup+0x3fc>
   18148:	ldr	r3, [r3]
   1814c:	mov	r0, r3
   18150:	bl	11088 <DRV_ProtectInit>
   18154:	mov	r3, r0
   18158:	str	r3, [fp, #-20]	; 0xffffffec
   1815c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18160:	ldr	r3, [pc, #752]	; 18458 <PROC_setup+0x400>
   18164:	cmp	r2, r3
   18168:	ble	18400 <PROC_setup+0x3a8>
   1816c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18170:	cmp	r3, #34048	; 0x8500
   18174:	bgt	18400 <PROC_setup+0x3a8>
   18178:	ldr	r3, [pc, #724]	; 18454 <PROC_setup+0x3fc>
   1817c:	ldr	r3, [r3]
   18180:	mov	r0, r3
   18184:	bl	1125c <DRV_ProtectEnter>
   18188:	mov	r3, r0
   1818c:	str	r3, [fp, #-20]	; 0xffffffec
   18190:	ldr	r2, [fp, #-20]	; 0xffffffec
   18194:	ldr	r3, [pc, #700]	; 18458 <PROC_setup+0x400>
   18198:	cmp	r2, r3
   1819c:	ble	18400 <PROC_setup+0x3a8>
   181a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   181a4:	cmp	r3, #34048	; 0x8500
   181a8:	bgt	18400 <PROC_setup+0x3a8>
   181ac:	ldr	r3, [pc, #664]	; 1844c <PROC_setup+0x3f4>
   181b0:	ldr	r3, [r3]
   181b4:	str	r3, [fp, #-40]	; 0xffffffd8
   181b8:	ldr	r3, [pc, #660]	; 18454 <PROC_setup+0x3fc>
   181bc:	ldr	r3, [r3]
   181c0:	sub	r2, fp, #44	; 0x2c
   181c4:	mov	r0, r3
   181c8:	ldr	r1, [pc, #656]	; 18460 <PROC_setup+0x408>
   181cc:	mov	r3, #0
   181d0:	bl	f94c <DRV_Invoke>
   181d4:	mov	r3, r0
   181d8:	str	r3, [fp, #-20]	; 0xffffffec
   181dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   181e0:	cmp	r3, #32768	; 0x8000
   181e4:	bne	18300 <PROC_setup+0x2a8>
   181e8:	bl	118f8 <_MEM_USR_init>
   181ec:	mov	r3, r0
   181f0:	str	r3, [fp, #-16]
   181f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   181f8:	ldr	r3, [pc, #600]	; 18458 <PROC_setup+0x400>
   181fc:	cmp	r2, r3
   18200:	ble	18238 <PROC_setup+0x1e0>
   18204:	ldr	r3, [fp, #-20]	; 0xffffffec
   18208:	cmp	r3, #34048	; 0x8500
   1820c:	bgt	18238 <PROC_setup+0x1e0>
   18210:	ldr	r2, [fp, #-16]
   18214:	ldr	r3, [pc, #572]	; 18458 <PROC_setup+0x400>
   18218:	cmp	r2, r3
   1821c:	ble	1822c <PROC_setup+0x1d4>
   18220:	ldr	r3, [fp, #-16]
   18224:	cmp	r3, #34048	; 0x8500
   18228:	ble	18238 <PROC_setup+0x1e0>
   1822c:	ldr	r3, [fp, #-16]
   18230:	str	r3, [fp, #-20]	; 0xffffffec
   18234:	b	182d4 <PROC_setup+0x27c>
   18238:	bl	11674 <_IDM_USR_init>
   1823c:	mov	r3, r0
   18240:	str	r3, [fp, #-16]
   18244:	ldr	r2, [fp, #-20]	; 0xffffffec
   18248:	ldr	r3, [pc, #520]	; 18458 <PROC_setup+0x400>
   1824c:	cmp	r2, r3
   18250:	ble	18288 <PROC_setup+0x230>
   18254:	ldr	r3, [fp, #-20]	; 0xffffffec
   18258:	cmp	r3, #34048	; 0x8500
   1825c:	bgt	18288 <PROC_setup+0x230>
   18260:	ldr	r2, [fp, #-16]
   18264:	ldr	r3, [pc, #492]	; 18458 <PROC_setup+0x400>
   18268:	cmp	r2, r3
   1826c:	ble	1827c <PROC_setup+0x224>
   18270:	ldr	r3, [fp, #-16]
   18274:	cmp	r3, #34048	; 0x8500
   18278:	ble	18288 <PROC_setup+0x230>
   1827c:	ldr	r3, [fp, #-16]
   18280:	str	r3, [fp, #-20]	; 0xffffffec
   18284:	b	182d4 <PROC_setup+0x27c>
   18288:	bl	224d8 <_SYNC_USR_init>
   1828c:	mov	r3, r0
   18290:	str	r3, [fp, #-16]
   18294:	ldr	r2, [fp, #-20]	; 0xffffffec
   18298:	ldr	r3, [pc, #440]	; 18458 <PROC_setup+0x400>
   1829c:	cmp	r2, r3
   182a0:	ble	182d4 <PROC_setup+0x27c>
   182a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   182a8:	cmp	r3, #34048	; 0x8500
   182ac:	bgt	182d4 <PROC_setup+0x27c>
   182b0:	ldr	r2, [fp, #-16]
   182b4:	ldr	r3, [pc, #412]	; 18458 <PROC_setup+0x400>
   182b8:	cmp	r2, r3
   182bc:	ble	182cc <PROC_setup+0x274>
   182c0:	ldr	r3, [fp, #-16]
   182c4:	cmp	r3, #34048	; 0x8500
   182c8:	ble	182d4 <PROC_setup+0x27c>
   182cc:	ldr	r3, [fp, #-16]
   182d0:	str	r3, [fp, #-20]	; 0xffffffec
   182d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   182d8:	ldr	r3, [pc, #376]	; 18458 <PROC_setup+0x400>
   182dc:	cmp	r2, r3
   182e0:	ble	182f0 <PROC_setup+0x298>
   182e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   182e8:	cmp	r3, #34048	; 0x8500
   182ec:	ble	18304 <PROC_setup+0x2ac>
   182f0:	bl	22674 <_SYNC_USR_exit>
   182f4:	bl	116c4 <_IDM_USR_exit>
   182f8:	bl	11920 <_MEM_USR_exit>
   182fc:	b	18304 <PROC_setup+0x2ac>
   18300:	bl	22e40 <_SYNC_USR_stateObjInit>
   18304:	ldr	r2, [fp, #-20]	; 0xffffffec
   18308:	ldr	r3, [pc, #328]	; 18458 <PROC_setup+0x400>
   1830c:	cmp	r2, r3
   18310:	ble	18374 <PROC_setup+0x31c>
   18314:	ldr	r3, [fp, #-20]	; 0xffffffec
   18318:	cmp	r3, #34048	; 0x8500
   1831c:	bgt	18374 <PROC_setup+0x31c>
   18320:	ldr	r0, [pc, #316]	; 18464 <PROC_setup+0x40c>
   18324:	ldr	r1, [pc, #280]	; 18444 <PROC_setup+0x3ec>
   18328:	bl	227e4 <_SYNC_USR_createCS>
   1832c:	mov	r3, r0
   18330:	str	r3, [fp, #-16]
   18334:	ldr	r2, [fp, #-20]	; 0xffffffec
   18338:	ldr	r3, [pc, #280]	; 18458 <PROC_setup+0x400>
   1833c:	cmp	r2, r3
   18340:	ble	18374 <PROC_setup+0x31c>
   18344:	ldr	r3, [fp, #-20]	; 0xffffffec
   18348:	cmp	r3, #34048	; 0x8500
   1834c:	bgt	18374 <PROC_setup+0x31c>
   18350:	ldr	r2, [fp, #-16]
   18354:	ldr	r3, [pc, #252]	; 18458 <PROC_setup+0x400>
   18358:	cmp	r2, r3
   1835c:	ble	1836c <PROC_setup+0x314>
   18360:	ldr	r3, [fp, #-16]
   18364:	cmp	r3, #34048	; 0x8500
   18368:	ble	18374 <PROC_setup+0x31c>
   1836c:	ldr	r3, [fp, #-16]
   18370:	str	r3, [fp, #-20]	; 0xffffffec
   18374:	ldr	r3, [pc, #216]	; 18454 <PROC_setup+0x3fc>
   18378:	ldr	r3, [r3]
   1837c:	mov	r0, r3
   18380:	bl	11374 <DRV_ProtectLeave>
   18384:	mov	r3, r0
   18388:	str	r3, [fp, #-16]
   1838c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18390:	ldr	r3, [pc, #192]	; 18458 <PROC_setup+0x400>
   18394:	cmp	r2, r3
   18398:	ble	183cc <PROC_setup+0x374>
   1839c:	ldr	r3, [fp, #-20]	; 0xffffffec
   183a0:	cmp	r3, #34048	; 0x8500
   183a4:	bgt	183cc <PROC_setup+0x374>
   183a8:	ldr	r2, [fp, #-16]
   183ac:	ldr	r3, [pc, #164]	; 18458 <PROC_setup+0x400>
   183b0:	cmp	r2, r3
   183b4:	ble	183c4 <PROC_setup+0x36c>
   183b8:	ldr	r3, [fp, #-16]
   183bc:	cmp	r3, #34048	; 0x8500
   183c0:	ble	183cc <PROC_setup+0x374>
   183c4:	ldr	r3, [fp, #-16]
   183c8:	str	r3, [fp, #-20]	; 0xffffffec
   183cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   183d0:	ldr	r3, [pc, #128]	; 18458 <PROC_setup+0x400>
   183d4:	cmp	r2, r3
   183d8:	ble	183e8 <PROC_setup+0x390>
   183dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   183e0:	cmp	r3, #34048	; 0x8500
   183e4:	ble	18400 <PROC_setup+0x3a8>
   183e8:	ldr	r3, [pc, #100]	; 18454 <PROC_setup+0x3fc>
   183ec:	ldr	r3, [r3]
   183f0:	mov	r0, r3
   183f4:	bl	111c8 <DRV_ProtectExit>
   183f8:	mov	r3, r0
   183fc:	str	r3, [fp, #-16]
   18400:	ldr	r2, [fp, #-20]	; 0xffffffec
   18404:	ldr	r3, [pc, #76]	; 18458 <PROC_setup+0x400>
   18408:	cmp	r2, r3
   1840c:	ble	18434 <PROC_setup+0x3dc>
   18410:	ldr	r3, [fp, #-20]	; 0xffffffec
   18414:	cmp	r3, #34048	; 0x8500
   18418:	bgt	18434 <PROC_setup+0x3dc>
   1841c:	bl	9ee8 <getpid@plt>
   18420:	mov	r3, r0
   18424:	mov	r2, r3
   18428:	ldr	r3, [pc, #20]	; 18444 <PROC_setup+0x3ec>
   1842c:	str	r2, [r3, #4]
   18430:	bl	19ce0 <PROC_resetCurStatus>
   18434:	ldr	r3, [fp, #-20]	; 0xffffffec
   18438:	mov	r0, r3
   1843c:	sub	sp, fp, #8
   18440:	pop	{r4, fp, pc}
   18444:	.word	0x0002d3f4
   18448:	.word	0x8000801c
   1844c:	.word	0x0002d3f0
   18450:	.word	0x0002d248
   18454:	.word	0x0002d3ec
   18458:	.word	0x00007fff
   1845c:	.word	0x0002d7cc
   18460:	.word	0xc018e011
   18464:	.word	0x000238d8

00018468 <PROC_destroy>:
   18468:	push	{r4, fp, lr}
   1846c:	add	fp, sp, #8
   18470:	sub	sp, sp, #44	; 0x2c
   18474:	mov	r3, #32768	; 0x8000
   18478:	str	r3, [fp, #-24]	; 0xffffffe8
   1847c:	mov	r3, #32768	; 0x8000
   18480:	str	r3, [fp, #-20]	; 0xffffffec
   18484:	mov	r3, #0
   18488:	strh	r3, [fp, #-14]
   1848c:	ldr	r3, [pc, #928]	; 18834 <PROC_destroy+0x3cc>
   18490:	ldr	r4, [r3, #4]
   18494:	bl	9ee8 <getpid@plt>
   18498:	mov	r3, r0
   1849c:	cmp	r4, r3
   184a0:	beq	184b0 <PROC_destroy+0x48>
   184a4:	ldr	r3, [pc, #908]	; 18838 <PROC_destroy+0x3d0>
   184a8:	str	r3, [fp, #-24]	; 0xffffffe8
   184ac:	b	184d4 <PROC_destroy+0x6c>
   184b0:	ldr	r3, [pc, #900]	; 1883c <PROC_destroy+0x3d4>
   184b4:	ldr	r3, [r3]
   184b8:	cmp	r3, #0
   184bc:	bne	184d4 <PROC_destroy+0x6c>
   184c0:	ldr	r0, [pc, #884]	; 1883c <PROC_destroy+0x3d4>
   184c4:	mov	r1, #0
   184c8:	bl	f4d0 <DRV_Initialize>
   184cc:	mov	r3, r0
   184d0:	str	r3, [fp, #-24]	; 0xffffffe8
   184d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   184d8:	ldr	r3, [pc, #864]	; 18840 <PROC_destroy+0x3d8>
   184dc:	cmp	r2, r3
   184e0:	ble	18824 <PROC_destroy+0x3bc>
   184e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   184e8:	cmp	r3, #34048	; 0x8500
   184ec:	bgt	18824 <PROC_destroy+0x3bc>
   184f0:	ldr	r3, [pc, #836]	; 1883c <PROC_destroy+0x3d4>
   184f4:	ldr	r3, [r3]
   184f8:	mov	r0, r3
   184fc:	bl	1125c <DRV_ProtectEnter>
   18500:	mov	r3, r0
   18504:	str	r3, [fp, #-24]	; 0xffffffe8
   18508:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1850c:	ldr	r3, [pc, #812]	; 18840 <PROC_destroy+0x3d8>
   18510:	cmp	r2, r3
   18514:	ble	1856c <PROC_destroy+0x104>
   18518:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1851c:	cmp	r3, #34048	; 0x8500
   18520:	bgt	1856c <PROC_destroy+0x104>
   18524:	ldr	r3, [pc, #784]	; 1883c <PROC_destroy+0x3d4>
   18528:	ldr	r3, [r3]
   1852c:	sub	r2, fp, #48	; 0x30
   18530:	mov	r0, r3
   18534:	ldr	r1, [pc, #776]	; 18844 <PROC_destroy+0x3dc>
   18538:	mov	r3, #0
   1853c:	bl	f94c <DRV_Invoke>
   18540:	mov	r3, r0
   18544:	str	r3, [fp, #-24]	; 0xffffffe8
   18548:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1854c:	ldr	r3, [pc, #748]	; 18840 <PROC_destroy+0x3d8>
   18550:	cmp	r2, r3
   18554:	ble	1856c <PROC_destroy+0x104>
   18558:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1855c:	cmp	r3, #34048	; 0x8500
   18560:	bgt	1856c <PROC_destroy+0x104>
   18564:	ldrh	r3, [fp, #-44]	; 0xffffffd4
   18568:	strh	r3, [fp, #-14]
   1856c:	ldr	r0, [pc, #704]	; 18834 <PROC_destroy+0x3cc>
   18570:	bl	22a74 <_SYNC_USR_deleteCS>
   18574:	mov	r3, r0
   18578:	str	r3, [fp, #-20]	; 0xffffffec
   1857c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18580:	ldr	r3, [pc, #696]	; 18840 <PROC_destroy+0x3d8>
   18584:	cmp	r2, r3
   18588:	ble	18598 <PROC_destroy+0x130>
   1858c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18590:	cmp	r3, #34048	; 0x8500
   18594:	ble	185bc <PROC_destroy+0x154>
   18598:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1859c:	ldr	r3, [pc, #668]	; 18840 <PROC_destroy+0x3d8>
   185a0:	cmp	r2, r3
   185a4:	ble	185bc <PROC_destroy+0x154>
   185a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   185ac:	cmp	r3, #34048	; 0x8500
   185b0:	bgt	185bc <PROC_destroy+0x154>
   185b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   185b8:	str	r3, [fp, #-24]	; 0xffffffe8
   185bc:	ldrsh	r3, [fp, #-14]
   185c0:	cmp	r3, #1
   185c4:	bne	186ac <PROC_destroy+0x244>
   185c8:	bl	22674 <_SYNC_USR_exit>
   185cc:	mov	r3, r0
   185d0:	str	r3, [fp, #-20]	; 0xffffffec
   185d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   185d8:	ldr	r3, [pc, #608]	; 18840 <PROC_destroy+0x3d8>
   185dc:	cmp	r2, r3
   185e0:	ble	185f0 <PROC_destroy+0x188>
   185e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   185e8:	cmp	r3, #34048	; 0x8500
   185ec:	ble	18614 <PROC_destroy+0x1ac>
   185f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   185f4:	ldr	r3, [pc, #580]	; 18840 <PROC_destroy+0x3d8>
   185f8:	cmp	r2, r3
   185fc:	ble	18614 <PROC_destroy+0x1ac>
   18600:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18604:	cmp	r3, #34048	; 0x8500
   18608:	bgt	18614 <PROC_destroy+0x1ac>
   1860c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18610:	str	r3, [fp, #-24]	; 0xffffffe8
   18614:	bl	116c4 <_IDM_USR_exit>
   18618:	mov	r3, r0
   1861c:	str	r3, [fp, #-20]	; 0xffffffec
   18620:	ldr	r2, [fp, #-20]	; 0xffffffec
   18624:	ldr	r3, [pc, #532]	; 18840 <PROC_destroy+0x3d8>
   18628:	cmp	r2, r3
   1862c:	ble	1863c <PROC_destroy+0x1d4>
   18630:	ldr	r3, [fp, #-20]	; 0xffffffec
   18634:	cmp	r3, #34048	; 0x8500
   18638:	ble	18660 <PROC_destroy+0x1f8>
   1863c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18640:	ldr	r3, [pc, #504]	; 18840 <PROC_destroy+0x3d8>
   18644:	cmp	r2, r3
   18648:	ble	18660 <PROC_destroy+0x1f8>
   1864c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18650:	cmp	r3, #34048	; 0x8500
   18654:	bgt	18660 <PROC_destroy+0x1f8>
   18658:	ldr	r3, [fp, #-20]	; 0xffffffec
   1865c:	str	r3, [fp, #-24]	; 0xffffffe8
   18660:	bl	11920 <_MEM_USR_exit>
   18664:	mov	r3, r0
   18668:	str	r3, [fp, #-20]	; 0xffffffec
   1866c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18670:	ldr	r3, [pc, #456]	; 18840 <PROC_destroy+0x3d8>
   18674:	cmp	r2, r3
   18678:	ble	18688 <PROC_destroy+0x220>
   1867c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18680:	cmp	r3, #34048	; 0x8500
   18684:	ble	186ac <PROC_destroy+0x244>
   18688:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1868c:	ldr	r3, [pc, #428]	; 18840 <PROC_destroy+0x3d8>
   18690:	cmp	r2, r3
   18694:	ble	186ac <PROC_destroy+0x244>
   18698:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1869c:	cmp	r3, #34048	; 0x8500
   186a0:	bgt	186ac <PROC_destroy+0x244>
   186a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   186a8:	str	r3, [fp, #-24]	; 0xffffffe8
   186ac:	ldr	r3, [pc, #392]	; 1883c <PROC_destroy+0x3d4>
   186b0:	ldr	r3, [r3]
   186b4:	sub	r2, fp, #48	; 0x30
   186b8:	mov	r0, r3
   186bc:	ldr	r1, [pc, #388]	; 18848 <PROC_destroy+0x3e0>
   186c0:	mov	r3, #0
   186c4:	bl	f94c <DRV_Invoke>
   186c8:	mov	r3, r0
   186cc:	str	r3, [fp, #-20]	; 0xffffffec
   186d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   186d4:	ldr	r3, [pc, #356]	; 18840 <PROC_destroy+0x3d8>
   186d8:	cmp	r2, r3
   186dc:	ble	186f4 <PROC_destroy+0x28c>
   186e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   186e4:	cmp	r3, #34048	; 0x8500
   186e8:	bgt	186f4 <PROC_destroy+0x28c>
   186ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   186f0:	str	r3, [fp, #-24]	; 0xffffffe8
   186f4:	ldr	r3, [pc, #320]	; 1883c <PROC_destroy+0x3d4>
   186f8:	ldr	r3, [r3]
   186fc:	mov	r0, r3
   18700:	bl	11374 <DRV_ProtectLeave>
   18704:	mov	r3, r0
   18708:	str	r3, [fp, #-20]	; 0xffffffec
   1870c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18710:	ldr	r3, [pc, #296]	; 18840 <PROC_destroy+0x3d8>
   18714:	cmp	r2, r3
   18718:	ble	1874c <PROC_destroy+0x2e4>
   1871c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18720:	cmp	r3, #34048	; 0x8500
   18724:	bgt	1874c <PROC_destroy+0x2e4>
   18728:	ldr	r2, [fp, #-20]	; 0xffffffec
   1872c:	ldr	r3, [pc, #268]	; 18840 <PROC_destroy+0x3d8>
   18730:	cmp	r2, r3
   18734:	ble	18744 <PROC_destroy+0x2dc>
   18738:	ldr	r3, [fp, #-20]	; 0xffffffec
   1873c:	cmp	r3, #34048	; 0x8500
   18740:	ble	1874c <PROC_destroy+0x2e4>
   18744:	ldr	r3, [fp, #-20]	; 0xffffffec
   18748:	str	r3, [fp, #-24]	; 0xffffffe8
   1874c:	ldrsh	r3, [fp, #-14]
   18750:	cmp	r3, #1
   18754:	bne	187b0 <PROC_destroy+0x348>
   18758:	ldr	r3, [pc, #220]	; 1883c <PROC_destroy+0x3d4>
   1875c:	ldr	r3, [r3]
   18760:	mov	r0, r3
   18764:	bl	111c8 <DRV_ProtectExit>
   18768:	mov	r3, r0
   1876c:	str	r3, [fp, #-20]	; 0xffffffec
   18770:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18774:	ldr	r3, [pc, #196]	; 18840 <PROC_destroy+0x3d8>
   18778:	cmp	r2, r3
   1877c:	ble	187b0 <PROC_destroy+0x348>
   18780:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18784:	cmp	r3, #34048	; 0x8500
   18788:	bgt	187b0 <PROC_destroy+0x348>
   1878c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18790:	ldr	r3, [pc, #168]	; 18840 <PROC_destroy+0x3d8>
   18794:	cmp	r2, r3
   18798:	ble	187a8 <PROC_destroy+0x340>
   1879c:	ldr	r3, [fp, #-20]	; 0xffffffec
   187a0:	cmp	r3, #34048	; 0x8500
   187a4:	ble	187b0 <PROC_destroy+0x348>
   187a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   187ac:	str	r3, [fp, #-24]	; 0xffffffe8
   187b0:	ldr	r2, [pc, #124]	; 18834 <PROC_destroy+0x3cc>
   187b4:	mov	r3, #0
   187b8:	str	r3, [r2, #4]
   187bc:	ldr	r3, [pc, #120]	; 1883c <PROC_destroy+0x3d4>
   187c0:	ldr	r3, [r3]
   187c4:	mov	r0, r3
   187c8:	mov	r1, #0
   187cc:	bl	f7d8 <DRV_Finalize>
   187d0:	mov	r3, r0
   187d4:	str	r3, [fp, #-20]	; 0xffffffec
   187d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   187dc:	ldr	r3, [pc, #92]	; 18840 <PROC_destroy+0x3d8>
   187e0:	cmp	r2, r3
   187e4:	ble	187f4 <PROC_destroy+0x38c>
   187e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   187ec:	cmp	r3, #34048	; 0x8500
   187f0:	ble	18818 <PROC_destroy+0x3b0>
   187f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   187f8:	ldr	r3, [pc, #64]	; 18840 <PROC_destroy+0x3d8>
   187fc:	cmp	r2, r3
   18800:	ble	18818 <PROC_destroy+0x3b0>
   18804:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18808:	cmp	r3, #34048	; 0x8500
   1880c:	bgt	18818 <PROC_destroy+0x3b0>
   18810:	ldr	r3, [fp, #-20]	; 0xffffffec
   18814:	str	r3, [fp, #-24]	; 0xffffffe8
   18818:	ldr	r2, [pc, #28]	; 1883c <PROC_destroy+0x3d4>
   1881c:	mov	r3, #0
   18820:	str	r3, [r2]
   18824:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18828:	mov	r0, r3
   1882c:	sub	sp, fp, #8
   18830:	pop	{r4, fp, pc}
   18834:	.word	0x0002d3f4
   18838:	.word	0x80008000
   1883c:	.word	0x0002d3ec
   18840:	.word	0x00007fff
   18844:	.word	0xc018e01e
   18848:	.word	0xc018e012

0001884c <PROC_attach>:
   1884c:	push	{r4, fp, lr}
   18850:	add	fp, sp, #8
   18854:	sub	sp, sp, #52	; 0x34
   18858:	str	r0, [fp, #-56]	; 0xffffffc8
   1885c:	str	r1, [fp, #-60]	; 0xffffffc4
   18860:	mov	r3, #32768	; 0x8000
   18864:	str	r3, [fp, #-24]	; 0xffffffe8
   18868:	mov	r3, #32768	; 0x8000
   1886c:	str	r3, [fp, #-20]	; 0xffffffec
   18870:	mov	r3, #0
   18874:	strh	r3, [fp, #-14]
   18878:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1887c:	cmp	r3, #0
   18880:	beq	18890 <PROC_attach+0x44>
   18884:	ldr	r3, [pc, #1296]	; 18d9c <PROC_attach+0x550>
   18888:	str	r3, [fp, #-24]	; 0xffffffe8
   1888c:	b	18d8c <PROC_attach+0x540>
   18890:	ldr	r0, [pc, #1288]	; 18da0 <PROC_attach+0x554>
   18894:	mov	r1, #0
   18898:	bl	f4d0 <DRV_Initialize>
   1889c:	mov	r3, r0
   188a0:	str	r3, [fp, #-24]	; 0xffffffe8
   188a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   188a8:	ldr	r3, [pc, #1268]	; 18da4 <PROC_attach+0x558>
   188ac:	cmp	r2, r3
   188b0:	ble	188d4 <PROC_attach+0x88>
   188b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   188b8:	cmp	r3, #34048	; 0x8500
   188bc:	bgt	188d4 <PROC_attach+0x88>
   188c0:	ldr	r2, [pc, #1248]	; 18da8 <PROC_attach+0x55c>
   188c4:	mov	r3, #0
   188c8:	strh	r3, [r2]
   188cc:	mov	r3, #0
   188d0:	str	r3, [fp, #-20]	; 0xffffffec
   188d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   188d8:	ldr	r3, [pc, #1220]	; 18da4 <PROC_attach+0x558>
   188dc:	cmp	r2, r3
   188e0:	ble	1893c <PROC_attach+0xf0>
   188e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   188e8:	cmp	r3, #34048	; 0x8500
   188ec:	bgt	1893c <PROC_attach+0xf0>
   188f0:	ldr	r3, [pc, #1204]	; 18dac <PROC_attach+0x560>
   188f4:	ldr	r3, [r3]
   188f8:	cmp	r3, #0
   188fc:	bne	1893c <PROC_attach+0xf0>
   18900:	bl	22e40 <_SYNC_USR_stateObjInit>
   18904:	mov	r3, r0
   18908:	str	r3, [fp, #-24]	; 0xffffffe8
   1890c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18910:	ldr	r3, [pc, #1164]	; 18da4 <PROC_attach+0x558>
   18914:	cmp	r2, r3
   18918:	ble	1893c <PROC_attach+0xf0>
   1891c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18920:	cmp	r3, #34048	; 0x8500
   18924:	bgt	1893c <PROC_attach+0xf0>
   18928:	ldr	r0, [pc, #1152]	; 18db0 <PROC_attach+0x564>
   1892c:	ldr	r1, [pc, #1144]	; 18dac <PROC_attach+0x560>
   18930:	bl	227e4 <_SYNC_USR_createCS>
   18934:	mov	r3, r0
   18938:	str	r3, [fp, #-24]	; 0xffffffe8
   1893c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18940:	ldr	r3, [pc, #1116]	; 18da4 <PROC_attach+0x558>
   18944:	cmp	r2, r3
   18948:	ble	18d8c <PROC_attach+0x540>
   1894c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18950:	cmp	r3, #34048	; 0x8500
   18954:	bgt	18d8c <PROC_attach+0x540>
   18958:	ldr	r3, [pc, #1100]	; 18dac <PROC_attach+0x560>
   1895c:	ldr	r3, [r3]
   18960:	mov	r0, r3
   18964:	bl	22b68 <_SYNC_USR_enterCS>
   18968:	mov	r3, r0
   1896c:	str	r3, [fp, #-24]	; 0xffffffe8
   18970:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18974:	ldr	r3, [pc, #1064]	; 18da4 <PROC_attach+0x558>
   18978:	cmp	r2, r3
   1897c:	ble	18d8c <PROC_attach+0x540>
   18980:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18984:	cmp	r3, #34048	; 0x8500
   18988:	bgt	18d8c <PROC_attach+0x540>
   1898c:	ldr	r3, [pc, #1056]	; 18db4 <PROC_attach+0x568>
   18990:	ldr	r3, [r3]
   18994:	cmp	r3, #0
   18998:	bne	189a8 <PROC_attach+0x15c>
   1899c:	ldr	r2, [pc, #1040]	; 18db4 <PROC_attach+0x568>
   189a0:	ldr	r3, [pc, #1040]	; 18db8 <PROC_attach+0x56c>
   189a4:	str	r3, [r2]
   189a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   189ac:	cmp	r3, #0
   189b0:	beq	189ec <PROC_attach+0x1a0>
   189b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   189b8:	ldr	r3, [r3, #4]
   189bc:	cmp	r3, #0
   189c0:	beq	189ec <PROC_attach+0x1a0>
   189c4:	ldr	r3, [pc, #1000]	; 18db4 <PROC_attach+0x568>
   189c8:	ldr	ip, [r3]
   189cc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   189d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   189d4:	ldr	r0, [r3, #4]
   189d8:	mov	r2, #4
   189dc:	lsl	r3, r1, #2
   189e0:	add	r3, ip, r3
   189e4:	add	r3, r3, r2
   189e8:	str	r0, [r3]
   189ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   189f0:	str	r3, [fp, #-44]	; 0xffffffd4
   189f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   189f8:	str	r3, [fp, #-40]	; 0xffffffd8
   189fc:	ldr	r3, [pc, #924]	; 18da0 <PROC_attach+0x554>
   18a00:	ldr	r3, [r3]
   18a04:	sub	r2, fp, #48	; 0x30
   18a08:	mov	r0, r3
   18a0c:	ldr	r1, [pc, #936]	; 18dbc <PROC_attach+0x570>
   18a10:	mov	r3, #0
   18a14:	bl	f94c <DRV_Invoke>
   18a18:	mov	r3, r0
   18a1c:	str	r3, [fp, #-24]	; 0xffffffe8
   18a20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a24:	cmp	r3, #32768	; 0x8000
   18a28:	bne	18a34 <PROC_attach+0x1e8>
   18a2c:	mov	r3, #1
   18a30:	strh	r3, [fp, #-14]
   18a34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18a38:	ldr	r3, [pc, #868]	; 18da4 <PROC_attach+0x558>
   18a3c:	cmp	r2, r3
   18a40:	ble	18d34 <PROC_attach+0x4e8>
   18a44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a48:	cmp	r3, #34048	; 0x8500
   18a4c:	bgt	18d34 <PROC_attach+0x4e8>
   18a50:	ldr	r3, [pc, #852]	; 18dac <PROC_attach+0x560>
   18a54:	ldr	r4, [r3, #4]
   18a58:	bl	9ee8 <getpid@plt>
   18a5c:	mov	r3, r0
   18a60:	cmp	r4, r3
   18a64:	beq	18a78 <PROC_attach+0x22c>
   18a68:	ldr	r2, [pc, #828]	; 18dac <PROC_attach+0x560>
   18a6c:	mov	r3, #0
   18a70:	str	r3, [r2, #4]
   18a74:	bl	19ce0 <PROC_resetCurStatus>
   18a78:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18a7c:	bl	165c8 <_NOTIFY_init>
   18a80:	mov	r3, r0
   18a84:	str	r3, [fp, #-20]	; 0xffffffec
   18a88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18a8c:	ldr	r3, [pc, #784]	; 18da4 <PROC_attach+0x558>
   18a90:	cmp	r2, r3
   18a94:	ble	18ac8 <PROC_attach+0x27c>
   18a98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a9c:	cmp	r3, #34048	; 0x8500
   18aa0:	bgt	18ac8 <PROC_attach+0x27c>
   18aa4:	ldr	r2, [fp, #-20]	; 0xffffffec
   18aa8:	ldr	r3, [pc, #756]	; 18da4 <PROC_attach+0x558>
   18aac:	cmp	r2, r3
   18ab0:	ble	18ac0 <PROC_attach+0x274>
   18ab4:	ldr	r3, [fp, #-20]	; 0xffffffec
   18ab8:	cmp	r3, #34048	; 0x8500
   18abc:	ble	18ac8 <PROC_attach+0x27c>
   18ac0:	ldr	r3, [fp, #-20]	; 0xffffffec
   18ac4:	str	r3, [fp, #-24]	; 0xffffffe8
   18ac8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18acc:	ldr	r3, [pc, #720]	; 18da4 <PROC_attach+0x558>
   18ad0:	cmp	r2, r3
   18ad4:	ble	18b34 <PROC_attach+0x2e8>
   18ad8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18adc:	cmp	r3, #34048	; 0x8500
   18ae0:	bgt	18b34 <PROC_attach+0x2e8>
   18ae4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18ae8:	bl	11abc <_MPCS_init>
   18aec:	mov	r3, r0
   18af0:	str	r3, [fp, #-20]	; 0xffffffec
   18af4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18af8:	ldr	r3, [pc, #676]	; 18da4 <PROC_attach+0x558>
   18afc:	cmp	r2, r3
   18b00:	ble	18b34 <PROC_attach+0x2e8>
   18b04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b08:	cmp	r3, #34048	; 0x8500
   18b0c:	bgt	18b34 <PROC_attach+0x2e8>
   18b10:	ldr	r2, [fp, #-20]	; 0xffffffec
   18b14:	ldr	r3, [pc, #648]	; 18da4 <PROC_attach+0x558>
   18b18:	cmp	r2, r3
   18b1c:	ble	18b2c <PROC_attach+0x2e0>
   18b20:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b24:	cmp	r3, #34048	; 0x8500
   18b28:	ble	18b34 <PROC_attach+0x2e8>
   18b2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b30:	str	r3, [fp, #-24]	; 0xffffffe8
   18b34:	ldrsh	r3, [fp, #-14]
   18b38:	cmp	r3, #1
   18b3c:	bne	18c18 <PROC_attach+0x3cc>
   18b40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18b44:	ldr	r3, [pc, #600]	; 18da4 <PROC_attach+0x558>
   18b48:	cmp	r2, r3
   18b4c:	ble	18bac <PROC_attach+0x360>
   18b50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b54:	cmp	r3, #34048	; 0x8500
   18b58:	bgt	18bac <PROC_attach+0x360>
   18b5c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18b60:	bl	13224 <_MPLIST_moduleInit>
   18b64:	mov	r3, r0
   18b68:	str	r3, [fp, #-20]	; 0xffffffec
   18b6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18b70:	ldr	r3, [pc, #556]	; 18da4 <PROC_attach+0x558>
   18b74:	cmp	r2, r3
   18b78:	ble	18bac <PROC_attach+0x360>
   18b7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b80:	cmp	r3, #34048	; 0x8500
   18b84:	bgt	18bac <PROC_attach+0x360>
   18b88:	ldr	r2, [fp, #-20]	; 0xffffffec
   18b8c:	ldr	r3, [pc, #528]	; 18da4 <PROC_attach+0x558>
   18b90:	cmp	r2, r3
   18b94:	ble	18ba4 <PROC_attach+0x358>
   18b98:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b9c:	cmp	r3, #34048	; 0x8500
   18ba0:	ble	18bac <PROC_attach+0x360>
   18ba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   18ba8:	str	r3, [fp, #-24]	; 0xffffffe8
   18bac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18bb0:	ldr	r3, [pc, #492]	; 18da4 <PROC_attach+0x558>
   18bb4:	cmp	r2, r3
   18bb8:	ble	18c18 <PROC_attach+0x3cc>
   18bbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18bc0:	cmp	r3, #34048	; 0x8500
   18bc4:	bgt	18c18 <PROC_attach+0x3cc>
   18bc8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18bcc:	bl	19df8 <_RingIO_moduleInit>
   18bd0:	mov	r3, r0
   18bd4:	str	r3, [fp, #-20]	; 0xffffffec
   18bd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18bdc:	ldr	r3, [pc, #448]	; 18da4 <PROC_attach+0x558>
   18be0:	cmp	r2, r3
   18be4:	ble	18c18 <PROC_attach+0x3cc>
   18be8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18bec:	cmp	r3, #34048	; 0x8500
   18bf0:	bgt	18c18 <PROC_attach+0x3cc>
   18bf4:	ldr	r2, [fp, #-20]	; 0xffffffec
   18bf8:	ldr	r3, [pc, #420]	; 18da4 <PROC_attach+0x558>
   18bfc:	cmp	r2, r3
   18c00:	ble	18c10 <PROC_attach+0x3c4>
   18c04:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c08:	cmp	r3, #34048	; 0x8500
   18c0c:	ble	18c18 <PROC_attach+0x3cc>
   18c10:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c14:	str	r3, [fp, #-24]	; 0xffffffe8
   18c18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18c1c:	ldr	r3, [pc, #384]	; 18da4 <PROC_attach+0x558>
   18c20:	cmp	r2, r3
   18c24:	ble	18c84 <PROC_attach+0x438>
   18c28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c2c:	cmp	r3, #34048	; 0x8500
   18c30:	bgt	18c84 <PROC_attach+0x438>
   18c34:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18c38:	bl	1361c <_MPLIST_init>
   18c3c:	mov	r3, r0
   18c40:	str	r3, [fp, #-20]	; 0xffffffec
   18c44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18c48:	ldr	r3, [pc, #340]	; 18da4 <PROC_attach+0x558>
   18c4c:	cmp	r2, r3
   18c50:	ble	18c84 <PROC_attach+0x438>
   18c54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c58:	cmp	r3, #34048	; 0x8500
   18c5c:	bgt	18c84 <PROC_attach+0x438>
   18c60:	ldr	r2, [fp, #-20]	; 0xffffffec
   18c64:	ldr	r3, [pc, #312]	; 18da4 <PROC_attach+0x558>
   18c68:	cmp	r2, r3
   18c6c:	ble	18c7c <PROC_attach+0x430>
   18c70:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c74:	cmp	r3, #34048	; 0x8500
   18c78:	ble	18c84 <PROC_attach+0x438>
   18c7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c80:	str	r3, [fp, #-24]	; 0xffffffe8
   18c84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18c88:	ldr	r3, [pc, #276]	; 18da4 <PROC_attach+0x558>
   18c8c:	cmp	r2, r3
   18c90:	ble	18cf0 <PROC_attach+0x4a4>
   18c94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c98:	cmp	r3, #34048	; 0x8500
   18c9c:	bgt	18cf0 <PROC_attach+0x4a4>
   18ca0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18ca4:	bl	1a268 <_RingIO_init>
   18ca8:	mov	r3, r0
   18cac:	str	r3, [fp, #-20]	; 0xffffffec
   18cb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18cb4:	ldr	r3, [pc, #232]	; 18da4 <PROC_attach+0x558>
   18cb8:	cmp	r2, r3
   18cbc:	ble	18cf0 <PROC_attach+0x4a4>
   18cc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18cc4:	cmp	r3, #34048	; 0x8500
   18cc8:	bgt	18cf0 <PROC_attach+0x4a4>
   18ccc:	ldr	r2, [fp, #-20]	; 0xffffffec
   18cd0:	ldr	r3, [pc, #204]	; 18da4 <PROC_attach+0x558>
   18cd4:	cmp	r2, r3
   18cd8:	ble	18ce8 <PROC_attach+0x49c>
   18cdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   18ce0:	cmp	r3, #34048	; 0x8500
   18ce4:	ble	18cf0 <PROC_attach+0x4a4>
   18ce8:	ldr	r3, [fp, #-20]	; 0xffffffec
   18cec:	str	r3, [fp, #-24]	; 0xffffffe8
   18cf0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18cf4:	ldr	r3, [pc, #168]	; 18da4 <PROC_attach+0x558>
   18cf8:	cmp	r2, r3
   18cfc:	ble	18d34 <PROC_attach+0x4e8>
   18d00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18d04:	cmp	r3, #34048	; 0x8500
   18d08:	bgt	18d34 <PROC_attach+0x4e8>
   18d0c:	ldr	r4, [fp, #-56]	; 0xffffffc8
   18d10:	bl	9ee8 <getpid@plt>
   18d14:	mov	r3, r0
   18d18:	mov	r0, r3
   18d1c:	ldr	r2, [pc, #136]	; 18dac <PROC_attach+0x560>
   18d20:	mov	r1, #8
   18d24:	lsl	r3, r4, #2
   18d28:	add	r3, r2, r3
   18d2c:	add	r3, r3, r1
   18d30:	str	r0, [r3]
   18d34:	ldr	r3, [pc, #112]	; 18dac <PROC_attach+0x560>
   18d38:	ldr	r3, [r3]
   18d3c:	mov	r0, r3
   18d40:	bl	22c7c <_SYNC_USR_leaveCS>
   18d44:	mov	r3, r0
   18d48:	str	r3, [fp, #-20]	; 0xffffffec
   18d4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18d50:	ldr	r3, [pc, #76]	; 18da4 <PROC_attach+0x558>
   18d54:	cmp	r2, r3
   18d58:	ble	18d68 <PROC_attach+0x51c>
   18d5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18d60:	cmp	r3, #34048	; 0x8500
   18d64:	ble	18d8c <PROC_attach+0x540>
   18d68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18d6c:	ldr	r3, [pc, #48]	; 18da4 <PROC_attach+0x558>
   18d70:	cmp	r2, r3
   18d74:	ble	18d8c <PROC_attach+0x540>
   18d78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18d7c:	cmp	r3, #34048	; 0x8500
   18d80:	bgt	18d8c <PROC_attach+0x540>
   18d84:	ldr	r3, [fp, #-20]	; 0xffffffec
   18d88:	str	r3, [fp, #-24]	; 0xffffffe8
   18d8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18d90:	mov	r0, r3
   18d94:	sub	sp, fp, #8
   18d98:	pop	{r4, fp, pc}
   18d9c:	.word	0x8000800b
   18da0:	.word	0x0002d3ec
   18da4:	.word	0x00007fff
   18da8:	.word	0x0002d7cc
   18dac:	.word	0x0002d3f4
   18db0:	.word	0x000238d8
   18db4:	.word	0x0002d3f0
   18db8:	.word	0x0002d248
   18dbc:	.word	0xc018e018

00018dc0 <PROC_detach>:
   18dc0:	push	{r4, fp, lr}
   18dc4:	add	fp, sp, #8
   18dc8:	sub	sp, sp, #52	; 0x34
   18dcc:	str	r0, [fp, #-56]	; 0xffffffc8
   18dd0:	mov	r3, #32768	; 0x8000
   18dd4:	str	r3, [fp, #-24]	; 0xffffffe8
   18dd8:	mov	r3, #32768	; 0x8000
   18ddc:	str	r3, [fp, #-20]	; 0xffffffec
   18de0:	mov	r3, #0
   18de4:	strh	r3, [fp, #-14]
   18de8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18dec:	cmp	r3, #0
   18df0:	beq	18e00 <PROC_detach+0x40>
   18df4:	ldr	r3, [pc, #1020]	; 191f8 <PROC_detach+0x438>
   18df8:	str	r3, [fp, #-24]	; 0xffffffe8
   18dfc:	b	191e8 <PROC_detach+0x428>
   18e00:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18e04:	ldr	r2, [pc, #1008]	; 191fc <PROC_detach+0x43c>
   18e08:	mov	r1, #8
   18e0c:	lsl	r3, r3, #2
   18e10:	add	r3, r2, r3
   18e14:	add	r3, r3, r1
   18e18:	ldr	r4, [r3]
   18e1c:	bl	9ee8 <getpid@plt>
   18e20:	mov	r3, r0
   18e24:	cmp	r4, r3
   18e28:	beq	18e38 <PROC_detach+0x78>
   18e2c:	ldr	r3, [pc, #972]	; 19200 <PROC_detach+0x440>
   18e30:	str	r3, [fp, #-24]	; 0xffffffe8
   18e34:	b	191e8 <PROC_detach+0x428>
   18e38:	ldr	r3, [pc, #956]	; 191fc <PROC_detach+0x43c>
   18e3c:	ldr	r3, [r3]
   18e40:	mov	r0, r3
   18e44:	bl	22b68 <_SYNC_USR_enterCS>
   18e48:	mov	r3, r0
   18e4c:	str	r3, [fp, #-24]	; 0xffffffe8
   18e50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18e54:	ldr	r3, [pc, #936]	; 19204 <PROC_detach+0x444>
   18e58:	cmp	r2, r3
   18e5c:	ble	191e8 <PROC_detach+0x428>
   18e60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e64:	cmp	r3, #34048	; 0x8500
   18e68:	bgt	191e8 <PROC_detach+0x428>
   18e6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18e70:	str	r3, [fp, #-44]	; 0xffffffd4
   18e74:	ldr	r3, [pc, #908]	; 19208 <PROC_detach+0x448>
   18e78:	ldr	r3, [r3]
   18e7c:	sub	r2, fp, #48	; 0x30
   18e80:	mov	r0, r3
   18e84:	ldr	r1, [pc, #896]	; 1920c <PROC_detach+0x44c>
   18e88:	mov	r3, #0
   18e8c:	bl	f94c <DRV_Invoke>
   18e90:	mov	r3, r0
   18e94:	str	r3, [fp, #-24]	; 0xffffffe8
   18e98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18e9c:	ldr	r3, [pc, #864]	; 19204 <PROC_detach+0x444>
   18ea0:	cmp	r2, r3
   18ea4:	ble	18ebc <PROC_detach+0xfc>
   18ea8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18eac:	cmp	r3, #34048	; 0x8500
   18eb0:	bgt	18ebc <PROC_detach+0xfc>
   18eb4:	ldrh	r3, [fp, #-40]	; 0xffffffd8
   18eb8:	strh	r3, [fp, #-14]
   18ebc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18ec0:	bl	1a3f0 <_RingIO_exit>
   18ec4:	mov	r3, r0
   18ec8:	str	r3, [fp, #-20]	; 0xffffffec
   18ecc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18ed0:	ldr	r3, [pc, #812]	; 19204 <PROC_detach+0x444>
   18ed4:	cmp	r2, r3
   18ed8:	ble	18f0c <PROC_detach+0x14c>
   18edc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18ee0:	cmp	r3, #34048	; 0x8500
   18ee4:	bgt	18f0c <PROC_detach+0x14c>
   18ee8:	ldr	r2, [fp, #-20]	; 0xffffffec
   18eec:	ldr	r3, [pc, #784]	; 19204 <PROC_detach+0x444>
   18ef0:	cmp	r2, r3
   18ef4:	ble	18f04 <PROC_detach+0x144>
   18ef8:	ldr	r3, [fp, #-20]	; 0xffffffec
   18efc:	cmp	r3, #34048	; 0x8500
   18f00:	ble	18f0c <PROC_detach+0x14c>
   18f04:	ldr	r3, [fp, #-20]	; 0xffffffec
   18f08:	str	r3, [fp, #-24]	; 0xffffffe8
   18f0c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18f10:	bl	13784 <_MPLIST_exit>
   18f14:	mov	r3, r0
   18f18:	str	r3, [fp, #-20]	; 0xffffffec
   18f1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18f20:	ldr	r3, [pc, #732]	; 19204 <PROC_detach+0x444>
   18f24:	cmp	r2, r3
   18f28:	ble	18f5c <PROC_detach+0x19c>
   18f2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f30:	cmp	r3, #34048	; 0x8500
   18f34:	bgt	18f5c <PROC_detach+0x19c>
   18f38:	ldr	r2, [fp, #-20]	; 0xffffffec
   18f3c:	ldr	r3, [pc, #704]	; 19204 <PROC_detach+0x444>
   18f40:	cmp	r2, r3
   18f44:	ble	18f54 <PROC_detach+0x194>
   18f48:	ldr	r3, [fp, #-20]	; 0xffffffec
   18f4c:	cmp	r3, #34048	; 0x8500
   18f50:	ble	18f5c <PROC_detach+0x19c>
   18f54:	ldr	r3, [fp, #-20]	; 0xffffffec
   18f58:	str	r3, [fp, #-24]	; 0xffffffe8
   18f5c:	ldrsh	r3, [fp, #-14]
   18f60:	cmp	r3, #1
   18f64:	bne	19008 <PROC_detach+0x248>
   18f68:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18f6c:	bl	1a090 <_RingIO_moduleExit>
   18f70:	mov	r3, r0
   18f74:	str	r3, [fp, #-20]	; 0xffffffec
   18f78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18f7c:	ldr	r3, [pc, #640]	; 19204 <PROC_detach+0x444>
   18f80:	cmp	r2, r3
   18f84:	ble	18fb8 <PROC_detach+0x1f8>
   18f88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f8c:	cmp	r3, #34048	; 0x8500
   18f90:	bgt	18fb8 <PROC_detach+0x1f8>
   18f94:	ldr	r2, [fp, #-20]	; 0xffffffec
   18f98:	ldr	r3, [pc, #612]	; 19204 <PROC_detach+0x444>
   18f9c:	cmp	r2, r3
   18fa0:	ble	18fb0 <PROC_detach+0x1f0>
   18fa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   18fa8:	cmp	r3, #34048	; 0x8500
   18fac:	ble	18fb8 <PROC_detach+0x1f8>
   18fb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   18fb4:	str	r3, [fp, #-24]	; 0xffffffe8
   18fb8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18fbc:	bl	13480 <_MPLIST_moduleExit>
   18fc0:	mov	r3, r0
   18fc4:	str	r3, [fp, #-20]	; 0xffffffec
   18fc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18fcc:	ldr	r3, [pc, #560]	; 19204 <PROC_detach+0x444>
   18fd0:	cmp	r2, r3
   18fd4:	ble	19008 <PROC_detach+0x248>
   18fd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18fdc:	cmp	r3, #34048	; 0x8500
   18fe0:	bgt	19008 <PROC_detach+0x248>
   18fe4:	ldr	r2, [fp, #-20]	; 0xffffffec
   18fe8:	ldr	r3, [pc, #532]	; 19204 <PROC_detach+0x444>
   18fec:	cmp	r2, r3
   18ff0:	ble	19000 <PROC_detach+0x240>
   18ff4:	ldr	r3, [fp, #-20]	; 0xffffffec
   18ff8:	cmp	r3, #34048	; 0x8500
   18ffc:	ble	19008 <PROC_detach+0x248>
   19000:	ldr	r3, [fp, #-20]	; 0xffffffec
   19004:	str	r3, [fp, #-24]	; 0xffffffe8
   19008:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1900c:	bl	11c08 <_MPCS_exit>
   19010:	mov	r3, r0
   19014:	str	r3, [fp, #-20]	; 0xffffffec
   19018:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1901c:	ldr	r3, [pc, #480]	; 19204 <PROC_detach+0x444>
   19020:	cmp	r2, r3
   19024:	ble	19058 <PROC_detach+0x298>
   19028:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1902c:	cmp	r3, #34048	; 0x8500
   19030:	bgt	19058 <PROC_detach+0x298>
   19034:	ldr	r2, [fp, #-20]	; 0xffffffec
   19038:	ldr	r3, [pc, #452]	; 19204 <PROC_detach+0x444>
   1903c:	cmp	r2, r3
   19040:	ble	19050 <PROC_detach+0x290>
   19044:	ldr	r3, [fp, #-20]	; 0xffffffec
   19048:	cmp	r3, #34048	; 0x8500
   1904c:	ble	19058 <PROC_detach+0x298>
   19050:	ldr	r3, [fp, #-20]	; 0xffffffec
   19054:	str	r3, [fp, #-24]	; 0xffffffe8
   19058:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1905c:	bl	16870 <_NOTIFY_exit>
   19060:	mov	r3, r0
   19064:	str	r3, [fp, #-20]	; 0xffffffec
   19068:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1906c:	ldr	r3, [pc, #400]	; 19204 <PROC_detach+0x444>
   19070:	cmp	r2, r3
   19074:	ble	190a8 <PROC_detach+0x2e8>
   19078:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1907c:	cmp	r3, #34048	; 0x8500
   19080:	bgt	190a8 <PROC_detach+0x2e8>
   19084:	ldr	r2, [fp, #-20]	; 0xffffffec
   19088:	ldr	r3, [pc, #372]	; 19204 <PROC_detach+0x444>
   1908c:	cmp	r2, r3
   19090:	ble	190a0 <PROC_detach+0x2e0>
   19094:	ldr	r3, [fp, #-20]	; 0xffffffec
   19098:	cmp	r3, #34048	; 0x8500
   1909c:	ble	190a8 <PROC_detach+0x2e8>
   190a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   190a4:	str	r3, [fp, #-24]	; 0xffffffe8
   190a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   190ac:	str	r3, [fp, #-44]	; 0xffffffd4
   190b0:	ldr	r3, [pc, #336]	; 19208 <PROC_detach+0x448>
   190b4:	ldr	r3, [r3]
   190b8:	sub	r2, fp, #48	; 0x30
   190bc:	mov	r0, r3
   190c0:	ldr	r1, [pc, #328]	; 19210 <PROC_detach+0x450>
   190c4:	mov	r3, #0
   190c8:	bl	f94c <DRV_Invoke>
   190cc:	mov	r3, r0
   190d0:	str	r3, [fp, #-20]	; 0xffffffec
   190d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   190d8:	ldr	r3, [pc, #292]	; 19204 <PROC_detach+0x444>
   190dc:	cmp	r2, r3
   190e0:	ble	190f8 <PROC_detach+0x338>
   190e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   190e8:	cmp	r3, #34048	; 0x8500
   190ec:	bgt	190f8 <PROC_detach+0x338>
   190f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   190f4:	str	r3, [fp, #-24]	; 0xffffffe8
   190f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   190fc:	ldr	r2, [pc, #248]	; 191fc <PROC_detach+0x43c>
   19100:	mov	r1, #8
   19104:	lsl	r3, r3, #2
   19108:	add	r3, r2, r3
   1910c:	add	r2, r3, r1
   19110:	mov	r3, #0
   19114:	str	r3, [r2]
   19118:	ldr	r3, [pc, #232]	; 19208 <PROC_detach+0x448>
   1911c:	ldr	r3, [r3]
   19120:	mov	r0, r3
   19124:	mov	r1, #0
   19128:	bl	f7d8 <DRV_Finalize>
   1912c:	mov	r3, r0
   19130:	str	r3, [fp, #-20]	; 0xffffffec
   19134:	ldr	r2, [fp, #-20]	; 0xffffffec
   19138:	ldr	r3, [pc, #196]	; 19204 <PROC_detach+0x444>
   1913c:	cmp	r2, r3
   19140:	ble	19150 <PROC_detach+0x390>
   19144:	ldr	r3, [fp, #-20]	; 0xffffffec
   19148:	cmp	r3, #34048	; 0x8500
   1914c:	ble	19174 <PROC_detach+0x3b4>
   19150:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19154:	ldr	r3, [pc, #168]	; 19204 <PROC_detach+0x444>
   19158:	cmp	r2, r3
   1915c:	ble	19174 <PROC_detach+0x3b4>
   19160:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19164:	cmp	r3, #34048	; 0x8500
   19168:	bgt	19174 <PROC_detach+0x3b4>
   1916c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19170:	str	r3, [fp, #-24]	; 0xffffffe8
   19174:	ldr	r2, [fp, #-20]	; 0xffffffec
   19178:	ldr	r3, [pc, #148]	; 19214 <PROC_detach+0x454>
   1917c:	cmp	r2, r3
   19180:	bne	19190 <PROC_detach+0x3d0>
   19184:	ldr	r2, [pc, #124]	; 19208 <PROC_detach+0x448>
   19188:	mov	r3, #0
   1918c:	str	r3, [r2]
   19190:	ldr	r3, [pc, #100]	; 191fc <PROC_detach+0x43c>
   19194:	ldr	r3, [r3]
   19198:	mov	r0, r3
   1919c:	bl	22c7c <_SYNC_USR_leaveCS>
   191a0:	mov	r3, r0
   191a4:	str	r3, [fp, #-20]	; 0xffffffec
   191a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   191ac:	ldr	r3, [pc, #80]	; 19204 <PROC_detach+0x444>
   191b0:	cmp	r2, r3
   191b4:	ble	191c4 <PROC_detach+0x404>
   191b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   191bc:	cmp	r3, #34048	; 0x8500
   191c0:	ble	191e8 <PROC_detach+0x428>
   191c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   191c8:	ldr	r3, [pc, #52]	; 19204 <PROC_detach+0x444>
   191cc:	cmp	r2, r3
   191d0:	ble	191e8 <PROC_detach+0x428>
   191d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   191d8:	cmp	r3, #34048	; 0x8500
   191dc:	bgt	191e8 <PROC_detach+0x428>
   191e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   191e4:	str	r3, [fp, #-24]	; 0xffffffe8
   191e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   191ec:	mov	r0, r3
   191f0:	sub	sp, fp, #8
   191f4:	pop	{r4, fp, pc}
   191f8:	.word	0x8000800b
   191fc:	.word	0x0002d3f4
   19200:	.word	0x80008000
   19204:	.word	0x00007fff
   19208:	.word	0x0002d3ec
   1920c:	.word	0xc018e01f
   19210:	.word	0xc018e017
   19214:	.word	0x00008003

00019218 <PROC_getState>:
   19218:	push	{fp, lr}
   1921c:	add	fp, sp, #4
   19220:	sub	sp, sp, #48	; 0x30
   19224:	str	r0, [fp, #-48]	; 0xffffffd0
   19228:	str	r1, [fp, #-52]	; 0xffffffcc
   1922c:	mov	r3, #32768	; 0x8000
   19230:	str	r3, [fp, #-16]
   19234:	mov	r3, #32768	; 0x8000
   19238:	str	r3, [fp, #-12]
   1923c:	mov	r3, #0
   19240:	strh	r3, [fp, #-6]
   19244:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19248:	cmp	r3, #0
   1924c:	bne	1925c <PROC_getState+0x44>
   19250:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19254:	cmp	r3, #0
   19258:	bne	19268 <PROC_getState+0x50>
   1925c:	ldr	r3, [pc, #424]	; 1940c <PROC_getState+0x1f4>
   19260:	str	r3, [fp, #-16]
   19264:	b	193fc <PROC_getState+0x1e4>
   19268:	ldr	r3, [pc, #416]	; 19410 <PROC_getState+0x1f8>
   1926c:	ldr	r3, [r3]
   19270:	cmp	r3, #0
   19274:	bne	19294 <PROC_getState+0x7c>
   19278:	ldr	r0, [pc, #400]	; 19410 <PROC_getState+0x1f8>
   1927c:	mov	r1, #0
   19280:	bl	f4d0 <DRV_Initialize>
   19284:	mov	r3, r0
   19288:	str	r3, [fp, #-16]
   1928c:	mov	r3, #1
   19290:	strh	r3, [fp, #-6]
   19294:	ldr	r2, [fp, #-16]
   19298:	ldr	r3, [pc, #372]	; 19414 <PROC_getState+0x1fc>
   1929c:	cmp	r2, r3
   192a0:	ble	19388 <PROC_getState+0x170>
   192a4:	ldr	r3, [fp, #-16]
   192a8:	cmp	r3, #34048	; 0x8500
   192ac:	bgt	19388 <PROC_getState+0x170>
   192b0:	ldrsh	r3, [fp, #-6]
   192b4:	cmp	r3, #0
   192b8:	bne	192d4 <PROC_getState+0xbc>
   192bc:	ldr	r3, [pc, #340]	; 19418 <PROC_getState+0x200>
   192c0:	ldr	r3, [r3]
   192c4:	mov	r0, r3
   192c8:	bl	22b68 <_SYNC_USR_enterCS>
   192cc:	mov	r3, r0
   192d0:	str	r3, [fp, #-16]
   192d4:	ldr	r2, [fp, #-16]
   192d8:	ldr	r3, [pc, #308]	; 19414 <PROC_getState+0x1fc>
   192dc:	cmp	r2, r3
   192e0:	ble	19388 <PROC_getState+0x170>
   192e4:	ldr	r3, [fp, #-16]
   192e8:	cmp	r3, #34048	; 0x8500
   192ec:	bgt	19388 <PROC_getState+0x170>
   192f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   192f4:	str	r3, [fp, #-36]	; 0xffffffdc
   192f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   192fc:	str	r3, [fp, #-32]	; 0xffffffe0
   19300:	ldr	r3, [pc, #264]	; 19410 <PROC_getState+0x1f8>
   19304:	ldr	r3, [r3]
   19308:	sub	r2, fp, #40	; 0x28
   1930c:	mov	r0, r3
   19310:	ldr	r1, [pc, #260]	; 1941c <PROC_getState+0x204>
   19314:	mov	r3, #0
   19318:	bl	f94c <DRV_Invoke>
   1931c:	mov	r3, r0
   19320:	str	r3, [fp, #-16]
   19324:	ldrsh	r3, [fp, #-6]
   19328:	cmp	r3, #0
   1932c:	bne	19388 <PROC_getState+0x170>
   19330:	ldr	r3, [pc, #224]	; 19418 <PROC_getState+0x200>
   19334:	ldr	r3, [r3]
   19338:	mov	r0, r3
   1933c:	bl	22c7c <_SYNC_USR_leaveCS>
   19340:	mov	r3, r0
   19344:	str	r3, [fp, #-12]
   19348:	ldr	r2, [fp, #-12]
   1934c:	ldr	r3, [pc, #192]	; 19414 <PROC_getState+0x1fc>
   19350:	cmp	r2, r3
   19354:	ble	19364 <PROC_getState+0x14c>
   19358:	ldr	r3, [fp, #-12]
   1935c:	cmp	r3, #34048	; 0x8500
   19360:	ble	19388 <PROC_getState+0x170>
   19364:	ldr	r2, [fp, #-16]
   19368:	ldr	r3, [pc, #164]	; 19414 <PROC_getState+0x1fc>
   1936c:	cmp	r2, r3
   19370:	ble	19388 <PROC_getState+0x170>
   19374:	ldr	r3, [fp, #-16]
   19378:	cmp	r3, #34048	; 0x8500
   1937c:	bgt	19388 <PROC_getState+0x170>
   19380:	ldr	r3, [fp, #-12]
   19384:	str	r3, [fp, #-16]
   19388:	ldrsh	r3, [fp, #-6]
   1938c:	cmp	r3, #1
   19390:	bne	193fc <PROC_getState+0x1e4>
   19394:	ldr	r3, [pc, #116]	; 19410 <PROC_getState+0x1f8>
   19398:	ldr	r3, [r3]
   1939c:	mov	r0, r3
   193a0:	mov	r1, #0
   193a4:	bl	f7d8 <DRV_Finalize>
   193a8:	mov	r3, r0
   193ac:	str	r3, [fp, #-12]
   193b0:	ldr	r2, [fp, #-12]
   193b4:	ldr	r3, [pc, #88]	; 19414 <PROC_getState+0x1fc>
   193b8:	cmp	r2, r3
   193bc:	ble	193cc <PROC_getState+0x1b4>
   193c0:	ldr	r3, [fp, #-12]
   193c4:	cmp	r3, #34048	; 0x8500
   193c8:	ble	193f0 <PROC_getState+0x1d8>
   193cc:	ldr	r2, [fp, #-16]
   193d0:	ldr	r3, [pc, #60]	; 19414 <PROC_getState+0x1fc>
   193d4:	cmp	r2, r3
   193d8:	ble	193f0 <PROC_getState+0x1d8>
   193dc:	ldr	r3, [fp, #-16]
   193e0:	cmp	r3, #34048	; 0x8500
   193e4:	bgt	193f0 <PROC_getState+0x1d8>
   193e8:	ldr	r3, [fp, #-12]
   193ec:	str	r3, [fp, #-16]
   193f0:	ldr	r2, [pc, #24]	; 19410 <PROC_getState+0x1f8>
   193f4:	mov	r3, #0
   193f8:	str	r3, [r2]
   193fc:	ldr	r3, [fp, #-16]
   19400:	mov	r0, r3
   19404:	sub	sp, fp, #4
   19408:	pop	{fp, pc}
   1940c:	.word	0x8000800b
   19410:	.word	0x0002d3ec
   19414:	.word	0x00007fff
   19418:	.word	0x0002d3f4
   1941c:	.word	0xc018e019

00019420 <PROC_load>:
   19420:	push	{r4, fp, lr}
   19424:	add	fp, sp, #8
   19428:	sub	sp, sp, #60	; 0x3c
   1942c:	str	r0, [fp, #-56]	; 0xffffffc8
   19430:	str	r1, [fp, #-60]	; 0xffffffc4
   19434:	str	r2, [fp, #-64]	; 0xffffffc0
   19438:	str	r3, [fp, #-68]	; 0xffffffbc
   1943c:	mov	r3, #32768	; 0x8000
   19440:	str	r3, [fp, #-24]	; 0xffffffe8
   19444:	mov	r3, #32768	; 0x8000
   19448:	str	r3, [fp, #-20]	; 0xffffffec
   1944c:	mov	r3, #0
   19450:	strh	r3, [fp, #-14]
   19454:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19458:	cmp	r3, #0
   1945c:	bne	1949c <PROC_load+0x7c>
   19460:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19464:	cmp	r3, #0
   19468:	beq	1949c <PROC_load+0x7c>
   1946c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19470:	cmp	r3, #0
   19474:	bne	19484 <PROC_load+0x64>
   19478:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1947c:	cmp	r3, #0
   19480:	bne	1949c <PROC_load+0x7c>
   19484:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19488:	cmp	r3, #0
   1948c:	beq	194a8 <PROC_load+0x88>
   19490:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19494:	cmp	r3, #0
   19498:	bne	194a8 <PROC_load+0x88>
   1949c:	ldr	r3, [pc, #320]	; 195e4 <PROC_load+0x1c4>
   194a0:	str	r3, [fp, #-24]	; 0xffffffe8
   194a4:	b	195d4 <PROC_load+0x1b4>
   194a8:	ldr	r3, [pc, #312]	; 195e8 <PROC_load+0x1c8>
   194ac:	ldr	r3, [r3]
   194b0:	cmp	r3, #0
   194b4:	beq	194d8 <PROC_load+0xb8>
   194b8:	ldr	r3, [pc, #296]	; 195e8 <PROC_load+0x1c8>
   194bc:	ldr	r3, [r3]
   194c0:	mov	r0, r3
   194c4:	bl	22b68 <_SYNC_USR_enterCS>
   194c8:	mov	r3, r0
   194cc:	str	r3, [fp, #-24]	; 0xffffffe8
   194d0:	mov	r3, #1
   194d4:	strh	r3, [fp, #-14]
   194d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   194dc:	ldr	r3, [pc, #264]	; 195ec <PROC_load+0x1cc>
   194e0:	cmp	r2, r3
   194e4:	ble	195d4 <PROC_load+0x1b4>
   194e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   194ec:	cmp	r3, #34048	; 0x8500
   194f0:	bgt	195d4 <PROC_load+0x1b4>
   194f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   194f8:	ldr	r2, [pc, #232]	; 195e8 <PROC_load+0x1c8>
   194fc:	mov	r1, #8
   19500:	lsl	r3, r3, #2
   19504:	add	r3, r2, r3
   19508:	add	r3, r3, r1
   1950c:	ldr	r4, [r3]
   19510:	bl	9ee8 <getpid@plt>
   19514:	mov	r3, r0
   19518:	cmp	r4, r3
   1951c:	beq	1952c <PROC_load+0x10c>
   19520:	ldr	r3, [pc, #200]	; 195f0 <PROC_load+0x1d0>
   19524:	str	r3, [fp, #-24]	; 0xffffffe8
   19528:	b	19570 <PROC_load+0x150>
   1952c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19530:	str	r3, [fp, #-44]	; 0xffffffd4
   19534:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19538:	str	r3, [fp, #-40]	; 0xffffffd8
   1953c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19540:	str	r3, [fp, #-36]	; 0xffffffdc
   19544:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19548:	str	r3, [fp, #-32]	; 0xffffffe0
   1954c:	ldr	r3, [pc, #160]	; 195f4 <PROC_load+0x1d4>
   19550:	ldr	r3, [r3]
   19554:	sub	r2, fp, #48	; 0x30
   19558:	mov	r0, r3
   1955c:	ldr	r1, [pc, #148]	; 195f8 <PROC_load+0x1d8>
   19560:	mov	r3, #0
   19564:	bl	f94c <DRV_Invoke>
   19568:	mov	r3, r0
   1956c:	str	r3, [fp, #-24]	; 0xffffffe8
   19570:	ldrsh	r3, [fp, #-14]
   19574:	cmp	r3, #1
   19578:	bne	195d4 <PROC_load+0x1b4>
   1957c:	ldr	r3, [pc, #100]	; 195e8 <PROC_load+0x1c8>
   19580:	ldr	r3, [r3]
   19584:	mov	r0, r3
   19588:	bl	22c7c <_SYNC_USR_leaveCS>
   1958c:	mov	r3, r0
   19590:	str	r3, [fp, #-20]	; 0xffffffec
   19594:	ldr	r2, [fp, #-20]	; 0xffffffec
   19598:	ldr	r3, [pc, #76]	; 195ec <PROC_load+0x1cc>
   1959c:	cmp	r2, r3
   195a0:	ble	195b0 <PROC_load+0x190>
   195a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   195a8:	cmp	r3, #34048	; 0x8500
   195ac:	ble	195d4 <PROC_load+0x1b4>
   195b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   195b4:	ldr	r3, [pc, #48]	; 195ec <PROC_load+0x1cc>
   195b8:	cmp	r2, r3
   195bc:	ble	195d4 <PROC_load+0x1b4>
   195c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   195c4:	cmp	r3, #34048	; 0x8500
   195c8:	bgt	195d4 <PROC_load+0x1b4>
   195cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   195d0:	str	r3, [fp, #-24]	; 0xffffffe8
   195d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   195d8:	mov	r0, r3
   195dc:	sub	sp, fp, #8
   195e0:	pop	{r4, fp, pc}
   195e4:	.word	0x8000800b
   195e8:	.word	0x0002d3f4
   195ec:	.word	0x00007fff
   195f0:	.word	0x80008002
   195f4:	.word	0x0002d3ec
   195f8:	.word	0xc018e015

000195fc <PROC_loadSection>:
   195fc:	push	{fp}		; (str fp, [sp, #-4]!)
   19600:	add	fp, sp, #0
   19604:	sub	sp, sp, #28
   19608:	str	r0, [fp, #-16]
   1960c:	str	r1, [fp, #-20]	; 0xffffffec
   19610:	str	r2, [fp, #-24]	; 0xffffffe8
   19614:	mov	r3, #32768	; 0x8000
   19618:	str	r3, [fp, #-8]
   1961c:	ldr	r3, [pc, #20]	; 19638 <PROC_loadSection+0x3c>
   19620:	str	r3, [fp, #-8]
   19624:	ldr	r3, [fp, #-8]
   19628:	mov	r0, r3
   1962c:	add	sp, fp, #0
   19630:	ldmfd	sp!, {fp}
   19634:	bx	lr
   19638:	.word	0x80008010

0001963c <PROC_read>:
   1963c:	push	{fp, lr}
   19640:	add	fp, sp, #4
   19644:	sub	sp, sp, #48	; 0x30
   19648:	str	r0, [fp, #-40]	; 0xffffffd8
   1964c:	str	r1, [fp, #-44]	; 0xffffffd4
   19650:	str	r2, [fp, #-48]	; 0xffffffd0
   19654:	str	r3, [fp, #-52]	; 0xffffffcc
   19658:	mov	r3, #32768	; 0x8000
   1965c:	str	r3, [fp, #-8]
   19660:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19664:	cmp	r3, #0
   19668:	bne	19684 <PROC_read+0x48>
   1966c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19670:	cmp	r3, #0
   19674:	beq	19684 <PROC_read+0x48>
   19678:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1967c:	cmp	r3, #0
   19680:	bne	19690 <PROC_read+0x54>
   19684:	ldr	r3, [pc, #88]	; 196e4 <PROC_read+0xa8>
   19688:	str	r3, [fp, #-8]
   1968c:	b	196d4 <PROC_read+0x98>
   19690:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19694:	str	r3, [fp, #-28]	; 0xffffffe4
   19698:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1969c:	str	r3, [fp, #-24]	; 0xffffffe8
   196a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   196a4:	str	r3, [fp, #-20]	; 0xffffffec
   196a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   196ac:	str	r3, [fp, #-16]
   196b0:	ldr	r3, [pc, #48]	; 196e8 <PROC_read+0xac>
   196b4:	ldr	r3, [r3]
   196b8:	sub	r2, fp, #32
   196bc:	mov	r0, r3
   196c0:	ldr	r1, [pc, #36]	; 196ec <PROC_read+0xb0>
   196c4:	mov	r3, #0
   196c8:	bl	f94c <DRV_Invoke>
   196cc:	mov	r3, r0
   196d0:	str	r3, [fp, #-8]
   196d4:	ldr	r3, [fp, #-8]
   196d8:	mov	r0, r3
   196dc:	sub	sp, fp, #4
   196e0:	pop	{fp, pc}
   196e4:	.word	0x8000800b
   196e8:	.word	0x0002d3ec
   196ec:	.word	0xc018e01b

000196f0 <PROC_write>:
   196f0:	push	{fp, lr}
   196f4:	add	fp, sp, #4
   196f8:	sub	sp, sp, #48	; 0x30
   196fc:	str	r0, [fp, #-40]	; 0xffffffd8
   19700:	str	r1, [fp, #-44]	; 0xffffffd4
   19704:	str	r2, [fp, #-48]	; 0xffffffd0
   19708:	str	r3, [fp, #-52]	; 0xffffffcc
   1970c:	mov	r3, #32768	; 0x8000
   19710:	str	r3, [fp, #-8]
   19714:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19718:	cmp	r3, #0
   1971c:	bne	19738 <PROC_write+0x48>
   19720:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19724:	cmp	r3, #0
   19728:	beq	19738 <PROC_write+0x48>
   1972c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19730:	cmp	r3, #0
   19734:	bne	19744 <PROC_write+0x54>
   19738:	ldr	r3, [pc, #88]	; 19798 <PROC_write+0xa8>
   1973c:	str	r3, [fp, #-8]
   19740:	b	19788 <PROC_write+0x98>
   19744:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19748:	str	r3, [fp, #-28]	; 0xffffffe4
   1974c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19750:	str	r3, [fp, #-24]	; 0xffffffe8
   19754:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19758:	str	r3, [fp, #-20]	; 0xffffffec
   1975c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19760:	str	r3, [fp, #-16]
   19764:	ldr	r3, [pc, #48]	; 1979c <PROC_write+0xac>
   19768:	ldr	r3, [r3]
   1976c:	sub	r2, fp, #32
   19770:	mov	r0, r3
   19774:	ldr	r1, [pc, #36]	; 197a0 <PROC_write+0xb0>
   19778:	mov	r3, #0
   1977c:	bl	f94c <DRV_Invoke>
   19780:	mov	r3, r0
   19784:	str	r3, [fp, #-8]
   19788:	ldr	r3, [fp, #-8]
   1978c:	mov	r0, r3
   19790:	sub	sp, fp, #4
   19794:	pop	{fp, pc}
   19798:	.word	0x8000800b
   1979c:	.word	0x0002d3ec
   197a0:	.word	0xc018e01c

000197a4 <PROC_start>:
   197a4:	push	{r4, fp, lr}
   197a8:	add	fp, sp, #8
   197ac:	sub	sp, sp, #52	; 0x34
   197b0:	str	r0, [fp, #-56]	; 0xffffffc8
   197b4:	mov	r3, #32768	; 0x8000
   197b8:	str	r3, [fp, #-24]	; 0xffffffe8
   197bc:	mov	r3, #32768	; 0x8000
   197c0:	str	r3, [fp, #-20]	; 0xffffffec
   197c4:	mov	r3, #0
   197c8:	strh	r3, [fp, #-14]
   197cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   197d0:	cmp	r3, #0
   197d4:	beq	197e4 <PROC_start+0x40>
   197d8:	ldr	r3, [pc, #460]	; 199ac <PROC_start+0x208>
   197dc:	str	r3, [fp, #-24]	; 0xffffffe8
   197e0:	b	1999c <PROC_start+0x1f8>
   197e4:	ldr	r3, [pc, #452]	; 199b0 <PROC_start+0x20c>
   197e8:	ldr	r3, [r3]
   197ec:	cmp	r3, #0
   197f0:	beq	19814 <PROC_start+0x70>
   197f4:	ldr	r3, [pc, #436]	; 199b0 <PROC_start+0x20c>
   197f8:	ldr	r3, [r3]
   197fc:	mov	r0, r3
   19800:	bl	22b68 <_SYNC_USR_enterCS>
   19804:	mov	r3, r0
   19808:	str	r3, [fp, #-24]	; 0xffffffe8
   1980c:	mov	r3, #1
   19810:	strh	r3, [fp, #-14]
   19814:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19818:	ldr	r3, [pc, #404]	; 199b4 <PROC_start+0x210>
   1981c:	cmp	r2, r3
   19820:	ble	1999c <PROC_start+0x1f8>
   19824:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19828:	cmp	r3, #34048	; 0x8500
   1982c:	bgt	1999c <PROC_start+0x1f8>
   19830:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19834:	ldr	r2, [pc, #372]	; 199b0 <PROC_start+0x20c>
   19838:	mov	r1, #8
   1983c:	lsl	r3, r3, #2
   19840:	add	r3, r2, r3
   19844:	add	r3, r3, r1
   19848:	ldr	r4, [r3]
   1984c:	bl	9ee8 <getpid@plt>
   19850:	mov	r3, r0
   19854:	cmp	r4, r3
   19858:	beq	19868 <PROC_start+0xc4>
   1985c:	ldr	r3, [pc, #340]	; 199b8 <PROC_start+0x214>
   19860:	str	r3, [fp, #-24]	; 0xffffffe8
   19864:	b	19938 <PROC_start+0x194>
   19868:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1986c:	ldr	r1, [pc, #316]	; 199b0 <PROC_start+0x20c>
   19870:	add	r3, r3, #2
   19874:	mov	r2, #4
   19878:	lsl	r3, r3, #2
   1987c:	add	r3, r1, r3
   19880:	add	r3, r3, r2
   19884:	ldr	r4, [r3]
   19888:	bl	9ee8 <getpid@plt>
   1988c:	mov	r3, r0
   19890:	cmp	r4, r3
   19894:	bne	198a4 <PROC_start+0x100>
   19898:	mov	r3, #1
   1989c:	str	r3, [fp, #-60]	; 0xffffffc4
   198a0:	b	198ac <PROC_start+0x108>
   198a4:	mov	r3, #0
   198a8:	str	r3, [fp, #-60]	; 0xffffffc4
   198ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   198b0:	cmp	r3, #0
   198b4:	beq	198c4 <PROC_start+0x120>
   198b8:	ldr	r3, [pc, #252]	; 199bc <PROC_start+0x218>
   198bc:	str	r3, [fp, #-24]	; 0xffffffe8
   198c0:	b	19938 <PROC_start+0x194>
   198c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   198c8:	str	r3, [fp, #-44]	; 0xffffffd4
   198cc:	ldr	r3, [pc, #236]	; 199c0 <PROC_start+0x21c>
   198d0:	ldr	r3, [r3]
   198d4:	sub	r2, fp, #48	; 0x30
   198d8:	mov	r0, r3
   198dc:	ldr	r1, [pc, #224]	; 199c4 <PROC_start+0x220>
   198e0:	mov	r3, #0
   198e4:	bl	f94c <DRV_Invoke>
   198e8:	mov	r3, r0
   198ec:	str	r3, [fp, #-24]	; 0xffffffe8
   198f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   198f4:	ldr	r3, [pc, #184]	; 199b4 <PROC_start+0x210>
   198f8:	cmp	r2, r3
   198fc:	ble	19938 <PROC_start+0x194>
   19900:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19904:	cmp	r3, #34048	; 0x8500
   19908:	bgt	19938 <PROC_start+0x194>
   1990c:	ldr	r4, [fp, #-56]	; 0xffffffc8
   19910:	bl	9ee8 <getpid@plt>
   19914:	mov	r3, r0
   19918:	mov	r0, r3
   1991c:	ldr	r1, [pc, #140]	; 199b0 <PROC_start+0x20c>
   19920:	add	r3, r4, #2
   19924:	mov	r2, #4
   19928:	lsl	r3, r3, #2
   1992c:	add	r3, r1, r3
   19930:	add	r3, r3, r2
   19934:	str	r0, [r3]
   19938:	ldrsh	r3, [fp, #-14]
   1993c:	cmp	r3, #1
   19940:	bne	1999c <PROC_start+0x1f8>
   19944:	ldr	r3, [pc, #100]	; 199b0 <PROC_start+0x20c>
   19948:	ldr	r3, [r3]
   1994c:	mov	r0, r3
   19950:	bl	22c7c <_SYNC_USR_leaveCS>
   19954:	mov	r3, r0
   19958:	str	r3, [fp, #-20]	; 0xffffffec
   1995c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19960:	ldr	r3, [pc, #76]	; 199b4 <PROC_start+0x210>
   19964:	cmp	r2, r3
   19968:	ble	19978 <PROC_start+0x1d4>
   1996c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19970:	cmp	r3, #34048	; 0x8500
   19974:	ble	1999c <PROC_start+0x1f8>
   19978:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1997c:	ldr	r3, [pc, #48]	; 199b4 <PROC_start+0x210>
   19980:	cmp	r2, r3
   19984:	ble	1999c <PROC_start+0x1f8>
   19988:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1998c:	cmp	r3, #34048	; 0x8500
   19990:	bgt	1999c <PROC_start+0x1f8>
   19994:	ldr	r3, [fp, #-20]	; 0xffffffec
   19998:	str	r3, [fp, #-24]	; 0xffffffe8
   1999c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   199a0:	mov	r0, r3
   199a4:	sub	sp, fp, #8
   199a8:	pop	{r4, fp, pc}
   199ac:	.word	0x8000800b
   199b0:	.word	0x0002d3f4
   199b4:	.word	0x00007fff
   199b8:	.word	0x80008002
   199bc:	.word	0x8000801e
   199c0:	.word	0x0002d3ec
   199c4:	.word	0xc018e013

000199c8 <PROC_stop>:
   199c8:	push	{r4, fp, lr}
   199cc:	add	fp, sp, #8
   199d0:	sub	sp, sp, #52	; 0x34
   199d4:	str	r0, [fp, #-56]	; 0xffffffc8
   199d8:	mov	r3, #32768	; 0x8000
   199dc:	str	r3, [fp, #-24]	; 0xffffffe8
   199e0:	mov	r3, #32768	; 0x8000
   199e4:	str	r3, [fp, #-20]	; 0xffffffec
   199e8:	mov	r3, #0
   199ec:	strh	r3, [fp, #-14]
   199f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   199f4:	cmp	r3, #0
   199f8:	beq	19a08 <PROC_stop+0x40>
   199fc:	ldr	r3, [pc, #392]	; 19b8c <PROC_stop+0x1c4>
   19a00:	str	r3, [fp, #-24]	; 0xffffffe8
   19a04:	b	19b7c <PROC_stop+0x1b4>
   19a08:	ldr	r3, [pc, #384]	; 19b90 <PROC_stop+0x1c8>
   19a0c:	ldr	r3, [r3]
   19a10:	cmp	r3, #0
   19a14:	beq	19a38 <PROC_stop+0x70>
   19a18:	ldr	r3, [pc, #368]	; 19b90 <PROC_stop+0x1c8>
   19a1c:	ldr	r3, [r3]
   19a20:	mov	r0, r3
   19a24:	bl	22b68 <_SYNC_USR_enterCS>
   19a28:	mov	r3, r0
   19a2c:	str	r3, [fp, #-24]	; 0xffffffe8
   19a30:	mov	r3, #1
   19a34:	strh	r3, [fp, #-14]
   19a38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19a3c:	ldr	r3, [pc, #336]	; 19b94 <PROC_stop+0x1cc>
   19a40:	cmp	r2, r3
   19a44:	ble	19b7c <PROC_stop+0x1b4>
   19a48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19a4c:	cmp	r3, #34048	; 0x8500
   19a50:	bgt	19b7c <PROC_stop+0x1b4>
   19a54:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19a58:	ldr	r2, [pc, #304]	; 19b90 <PROC_stop+0x1c8>
   19a5c:	mov	r1, #8
   19a60:	lsl	r3, r3, #2
   19a64:	add	r3, r2, r3
   19a68:	add	r3, r3, r1
   19a6c:	ldr	r4, [r3]
   19a70:	bl	9ee8 <getpid@plt>
   19a74:	mov	r3, r0
   19a78:	cmp	r4, r3
   19a7c:	beq	19a8c <PROC_stop+0xc4>
   19a80:	ldr	r3, [pc, #272]	; 19b98 <PROC_stop+0x1d0>
   19a84:	str	r3, [fp, #-24]	; 0xffffffe8
   19a88:	b	19b18 <PROC_stop+0x150>
   19a8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19a90:	ldr	r1, [pc, #248]	; 19b90 <PROC_stop+0x1c8>
   19a94:	add	r3, r3, #2
   19a98:	mov	r2, #4
   19a9c:	lsl	r3, r3, #2
   19aa0:	add	r3, r1, r3
   19aa4:	add	r3, r3, r2
   19aa8:	ldr	r4, [r3]
   19aac:	bl	9ee8 <getpid@plt>
   19ab0:	mov	r3, r0
   19ab4:	cmp	r4, r3
   19ab8:	beq	19ac8 <PROC_stop+0x100>
   19abc:	ldr	r3, [pc, #216]	; 19b9c <PROC_stop+0x1d4>
   19ac0:	str	r3, [fp, #-24]	; 0xffffffe8
   19ac4:	b	19b18 <PROC_stop+0x150>
   19ac8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19acc:	str	r3, [fp, #-44]	; 0xffffffd4
   19ad0:	ldr	r3, [pc, #200]	; 19ba0 <PROC_stop+0x1d8>
   19ad4:	ldr	r3, [r3]
   19ad8:	sub	r2, fp, #48	; 0x30
   19adc:	mov	r0, r3
   19ae0:	ldr	r1, [pc, #188]	; 19ba4 <PROC_stop+0x1dc>
   19ae4:	mov	r3, #0
   19ae8:	bl	f94c <DRV_Invoke>
   19aec:	mov	r3, r0
   19af0:	str	r3, [fp, #-24]	; 0xffffffe8
   19af4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19af8:	ldr	r1, [pc, #144]	; 19b90 <PROC_stop+0x1c8>
   19afc:	add	r3, r3, #2
   19b00:	mov	r2, #4
   19b04:	lsl	r3, r3, #2
   19b08:	add	r3, r1, r3
   19b0c:	add	r2, r3, r2
   19b10:	mov	r3, #0
   19b14:	str	r3, [r2]
   19b18:	ldrsh	r3, [fp, #-14]
   19b1c:	cmp	r3, #1
   19b20:	bne	19b7c <PROC_stop+0x1b4>
   19b24:	ldr	r3, [pc, #100]	; 19b90 <PROC_stop+0x1c8>
   19b28:	ldr	r3, [r3]
   19b2c:	mov	r0, r3
   19b30:	bl	22c7c <_SYNC_USR_leaveCS>
   19b34:	mov	r3, r0
   19b38:	str	r3, [fp, #-20]	; 0xffffffec
   19b3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19b40:	ldr	r3, [pc, #76]	; 19b94 <PROC_stop+0x1cc>
   19b44:	cmp	r2, r3
   19b48:	ble	19b58 <PROC_stop+0x190>
   19b4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19b50:	cmp	r3, #34048	; 0x8500
   19b54:	ble	19b7c <PROC_stop+0x1b4>
   19b58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b5c:	ldr	r3, [pc, #48]	; 19b94 <PROC_stop+0x1cc>
   19b60:	cmp	r2, r3
   19b64:	ble	19b7c <PROC_stop+0x1b4>
   19b68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b6c:	cmp	r3, #34048	; 0x8500
   19b70:	bgt	19b7c <PROC_stop+0x1b4>
   19b74:	ldr	r3, [fp, #-20]	; 0xffffffec
   19b78:	str	r3, [fp, #-24]	; 0xffffffe8
   19b7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b80:	mov	r0, r3
   19b84:	sub	sp, fp, #8
   19b88:	pop	{r4, fp, pc}
   19b8c:	.word	0x8000800b
   19b90:	.word	0x0002d3f4
   19b94:	.word	0x00007fff
   19b98:	.word	0x80008002
   19b9c:	.word	0x80008000
   19ba0:	.word	0x0002d3ec
   19ba4:	.word	0xc018e014

00019ba8 <PROC_GetSymbolAddress>:
   19ba8:	push	{fp, lr}
   19bac:	add	fp, sp, #4
   19bb0:	sub	sp, sp, #48	; 0x30
   19bb4:	str	r0, [fp, #-40]	; 0xffffffd8
   19bb8:	str	r1, [fp, #-44]	; 0xffffffd4
   19bbc:	str	r2, [fp, #-48]	; 0xffffffd0
   19bc0:	mov	r3, #32768	; 0x8000
   19bc4:	str	r3, [fp, #-8]
   19bc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19bcc:	cmp	r3, #0
   19bd0:	bne	19bec <PROC_GetSymbolAddress+0x44>
   19bd4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19bd8:	cmp	r3, #0
   19bdc:	beq	19bec <PROC_GetSymbolAddress+0x44>
   19be0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19be4:	cmp	r3, #0
   19be8:	bne	19bf8 <PROC_GetSymbolAddress+0x50>
   19bec:	ldr	r3, [pc, #80]	; 19c44 <PROC_GetSymbolAddress+0x9c>
   19bf0:	str	r3, [fp, #-8]
   19bf4:	b	19c34 <PROC_GetSymbolAddress+0x8c>
   19bf8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19bfc:	str	r3, [fp, #-28]	; 0xffffffe4
   19c00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19c04:	str	r3, [fp, #-24]	; 0xffffffe8
   19c08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19c0c:	str	r3, [fp, #-20]	; 0xffffffec
   19c10:	ldr	r3, [pc, #48]	; 19c48 <PROC_GetSymbolAddress+0xa0>
   19c14:	ldr	r3, [r3]
   19c18:	sub	r2, fp, #32
   19c1c:	mov	r0, r3
   19c20:	ldr	r1, [pc, #36]	; 19c4c <PROC_GetSymbolAddress+0xa4>
   19c24:	mov	r3, #0
   19c28:	bl	f94c <DRV_Invoke>
   19c2c:	mov	r3, r0
   19c30:	str	r3, [fp, #-8]
   19c34:	ldr	r3, [fp, #-8]
   19c38:	mov	r0, r3
   19c3c:	sub	sp, fp, #4
   19c40:	pop	{fp, pc}
   19c44:	.word	0x8000800b
   19c48:	.word	0x0002d3ec
   19c4c:	.word	0xc018e01d

00019c50 <PROC_control>:
   19c50:	push	{fp, lr}
   19c54:	add	fp, sp, #4
   19c58:	sub	sp, sp, #48	; 0x30
   19c5c:	str	r0, [fp, #-40]	; 0xffffffd8
   19c60:	str	r1, [fp, #-44]	; 0xffffffd4
   19c64:	str	r2, [fp, #-48]	; 0xffffffd0
   19c68:	mov	r3, #32768	; 0x8000
   19c6c:	str	r3, [fp, #-8]
   19c70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19c74:	cmp	r3, #0
   19c78:	beq	19c88 <PROC_control+0x38>
   19c7c:	ldr	r3, [pc, #80]	; 19cd4 <PROC_control+0x84>
   19c80:	str	r3, [fp, #-8]
   19c84:	b	19cc4 <PROC_control+0x74>
   19c88:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19c8c:	str	r3, [fp, #-28]	; 0xffffffe4
   19c90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19c94:	str	r3, [fp, #-24]	; 0xffffffe8
   19c98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19c9c:	str	r3, [fp, #-20]	; 0xffffffec
   19ca0:	ldr	r3, [pc, #48]	; 19cd8 <PROC_control+0x88>
   19ca4:	ldr	r3, [r3]
   19ca8:	sub	r2, fp, #32
   19cac:	mov	r0, r3
   19cb0:	ldr	r1, [pc, #36]	; 19cdc <PROC_control+0x8c>
   19cb4:	mov	r3, #0
   19cb8:	bl	f94c <DRV_Invoke>
   19cbc:	mov	r3, r0
   19cc0:	str	r3, [fp, #-8]
   19cc4:	ldr	r3, [fp, #-8]
   19cc8:	mov	r0, r3
   19ccc:	sub	sp, fp, #4
   19cd0:	pop	{fp, pc}
   19cd4:	.word	0x8000800b
   19cd8:	.word	0x0002d3ec
   19cdc:	.word	0xc018e01a

00019ce0 <PROC_resetCurStatus>:
   19ce0:	push	{fp}		; (str fp, [sp, #-4]!)
   19ce4:	add	fp, sp, #0
   19ce8:	sub	sp, sp, #12
   19cec:	mov	r3, #0
   19cf0:	str	r3, [fp, #-12]
   19cf4:	b	19dc0 <PROC_resetCurStatus+0xe0>
   19cf8:	ldr	r3, [fp, #-12]
   19cfc:	ldr	r2, [pc, #212]	; 19dd8 <PROC_resetCurStatus+0xf8>
   19d00:	mov	r1, #8
   19d04:	lsl	r3, r3, #2
   19d08:	add	r3, r2, r3
   19d0c:	add	r2, r3, r1
   19d10:	mov	r3, #0
   19d14:	str	r3, [r2]
   19d18:	ldr	r3, [fp, #-12]
   19d1c:	ldr	r1, [pc, #180]	; 19dd8 <PROC_resetCurStatus+0xf8>
   19d20:	add	r3, r3, #2
   19d24:	mov	r2, #4
   19d28:	lsl	r3, r3, #2
   19d2c:	add	r3, r1, r3
   19d30:	add	r2, r3, r2
   19d34:	mov	r3, #0
   19d38:	str	r3, [r2]
   19d3c:	ldr	r3, [fp, #-12]
   19d40:	ldr	r1, [pc, #144]	; 19dd8 <PROC_resetCurStatus+0xf8>
   19d44:	add	r3, r3, #34	; 0x22
   19d48:	mov	r2, #8
   19d4c:	lsl	r3, r3, #2
   19d50:	add	r3, r1, r3
   19d54:	add	r2, r3, r2
   19d58:	mov	r3, #0
   19d5c:	str	r3, [r2]
   19d60:	mov	r3, #0
   19d64:	str	r3, [fp, #-8]
   19d68:	b	19da8 <PROC_resetCurStatus+0xc8>
   19d6c:	ldr	r3, [fp, #-12]
   19d70:	ldr	r2, [fp, #-8]
   19d74:	ldr	r1, [pc, #92]	; 19dd8 <PROC_resetCurStatus+0xf8>
   19d78:	lsl	r3, r3, #5
   19d7c:	add	r3, r3, r2
   19d80:	add	r3, r3, #2
   19d84:	mov	r2, #8
   19d88:	lsl	r3, r3, #2
   19d8c:	add	r3, r1, r3
   19d90:	add	r2, r3, r2
   19d94:	mov	r3, #0
   19d98:	str	r3, [r2]
   19d9c:	ldr	r3, [fp, #-8]
   19da0:	add	r3, r3, #1
   19da4:	str	r3, [fp, #-8]
   19da8:	ldr	r3, [fp, #-8]
   19dac:	cmp	r3, #31
   19db0:	bls	19d6c <PROC_resetCurStatus+0x8c>
   19db4:	ldr	r3, [fp, #-12]
   19db8:	add	r3, r3, #1
   19dbc:	str	r3, [fp, #-12]
   19dc0:	ldr	r3, [fp, #-12]
   19dc4:	cmp	r3, #0
   19dc8:	beq	19cf8 <PROC_resetCurStatus+0x18>
   19dcc:	add	sp, fp, #0
   19dd0:	ldmfd	sp!, {fp}
   19dd4:	bx	lr
   19dd8:	.word	0x0002d3f4

00019ddc <PROC_Setup>:
   19ddc:	push	{fp, lr}
   19de0:	add	fp, sp, #4
   19de4:	mov	r0, #0
   19de8:	bl	18058 <PROC_setup>
   19dec:	mov	r3, r0
   19df0:	mov	r0, r3
   19df4:	pop	{fp, pc}

00019df8 <_RingIO_moduleInit>:
   19df8:	push	{fp, lr}
   19dfc:	add	fp, sp, #4
   19e00:	sub	sp, sp, #72	; 0x48
   19e04:	str	r0, [fp, #-72]	; 0xffffffb8
   19e08:	mov	r3, #32768	; 0x8000
   19e0c:	str	r3, [fp, #-36]	; 0xffffffdc
   19e10:	mov	r3, #32768	; 0x8000
   19e14:	str	r3, [fp, #-32]	; 0xffffffe0
   19e18:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19e1c:	cmp	r3, #0
   19e20:	beq	19e30 <_RingIO_moduleInit+0x38>
   19e24:	ldr	r3, [pc, #580]	; 1a070 <_RingIO_moduleInit+0x278>
   19e28:	str	r3, [fp, #-36]	; 0xffffffdc
   19e2c:	b	1a028 <_RingIO_moduleInit+0x230>
   19e30:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19e34:	str	r3, [fp, #-56]	; 0xffffffc8
   19e38:	ldr	r3, [pc, #564]	; 1a074 <_RingIO_moduleInit+0x27c>
   19e3c:	ldr	r3, [r3]
   19e40:	sub	r2, fp, #60	; 0x3c
   19e44:	mov	r0, r3
   19e48:	ldr	r1, [pc, #552]	; 1a078 <_RingIO_moduleInit+0x280>
   19e4c:	mov	r3, #0
   19e50:	bl	f94c <DRV_Invoke>
   19e54:	mov	r3, r0
   19e58:	str	r3, [fp, #-36]	; 0xffffffdc
   19e5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19e60:	ldr	r3, [pc, #532]	; 1a07c <_RingIO_moduleInit+0x284>
   19e64:	cmp	r2, r3
   19e68:	ble	1a028 <_RingIO_moduleInit+0x230>
   19e6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19e70:	cmp	r3, #34048	; 0x8500
   19e74:	bgt	1a028 <_RingIO_moduleInit+0x230>
   19e78:	ldr	r3, [pc, #512]	; 1a080 <_RingIO_moduleInit+0x288>
   19e7c:	ldr	r1, [r3]
   19e80:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19e84:	mov	r2, #4
   19e88:	lsl	r3, r3, #2
   19e8c:	add	r3, r1, r3
   19e90:	add	r3, r3, r2
   19e94:	ldr	r3, [r3]
   19e98:	str	r3, [fp, #-20]	; 0xffffffec
   19e9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19ea0:	ldr	r3, [r3]
   19ea4:	str	r3, [fp, #-24]	; 0xffffffe8
   19ea8:	ldr	r3, [fp, #-20]	; 0xffffffec
   19eac:	ldr	r1, [r3, #8]
   19eb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19eb4:	ldr	r2, [r3, #144]	; 0x90
   19eb8:	mov	r3, r2
   19ebc:	lsl	r3, r3, #2
   19ec0:	add	r3, r3, r2
   19ec4:	lsl	r3, r3, #4
   19ec8:	add	r3, r1, r3
   19ecc:	str	r3, [fp, #-16]
   19ed0:	ldr	r3, [fp, #-20]	; 0xffffffec
   19ed4:	ldr	r1, [r3, #56]	; 0x38
   19ed8:	ldr	r3, [fp, #-16]
   19edc:	ldr	r2, [r3, #68]	; 0x44
   19ee0:	mov	r3, r2
   19ee4:	lsl	r3, r3, #1
   19ee8:	add	r3, r3, r2
   19eec:	lsl	r3, r3, #4
   19ef0:	add	r3, r1, r3
   19ef4:	str	r3, [fp, #-28]	; 0xffffffe4
   19ef8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19efc:	str	r3, [fp, #-12]
   19f00:	ldr	r3, [fp, #-12]
   19f04:	add	r3, r3, #512	; 0x200
   19f08:	str	r3, [fp, #-8]
   19f0c:	ldr	r2, [fp, #-12]
   19f10:	mov	r3, #1
   19f14:	str	r3, [r2]
   19f18:	ldr	r2, [fp, #-12]
   19f1c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19f20:	str	r3, [r2, #4]
   19f24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19f28:	ldr	r2, [r3, #36]	; 0x24
   19f2c:	ldr	r3, [fp, #-12]
   19f30:	str	r2, [r3, #8]
   19f34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19f38:	ldr	r2, [r3, #40]	; 0x28
   19f3c:	ldr	r3, [fp, #-12]
   19f40:	str	r2, [r3, #12]
   19f44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19f48:	ldr	r2, [r3, #44]	; 0x2c
   19f4c:	ldr	r3, [fp, #-12]
   19f50:	str	r2, [r3, #16]
   19f54:	ldr	r3, [fp, #-12]
   19f58:	ldr	r3, [r3, #8]
   19f5c:	lsl	r3, r3, #7
   19f60:	ldr	r0, [fp, #-8]
   19f64:	mov	r1, #0
   19f68:	mov	r2, r3
   19f6c:	bl	9f6c <memset@plt>
   19f70:	mov	r3, #32
   19f74:	strh	r3, [fp, #-62]	; 0xffffffc2
   19f78:	ldr	r3, [fp, #-12]
   19f7c:	add	r3, r3, #128	; 0x80
   19f80:	sub	ip, fp, #62	; 0x3e
   19f84:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19f88:	ldr	r1, [pc, #244]	; 1a084 <_RingIO_moduleInit+0x28c>
   19f8c:	mov	r2, r3
   19f90:	mov	r3, ip
   19f94:	bl	1214c <MPCS_create>
   19f98:	mov	r3, r0
   19f9c:	str	r3, [fp, #-36]	; 0xffffffdc
   19fa0:	ldr	r3, [pc, #204]	; 1a074 <_RingIO_moduleInit+0x27c>
   19fa4:	ldr	r3, [r3]
   19fa8:	sub	r2, fp, #60	; 0x3c
   19fac:	mov	r0, r3
   19fb0:	ldr	r1, [pc, #208]	; 1a088 <_RingIO_moduleInit+0x290>
   19fb4:	mov	r3, #0
   19fb8:	bl	f94c <DRV_Invoke>
   19fbc:	mov	r3, r0
   19fc0:	str	r3, [fp, #-32]	; 0xffffffe0
   19fc4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19fc8:	ldr	r3, [pc, #172]	; 1a07c <_RingIO_moduleInit+0x284>
   19fcc:	cmp	r2, r3
   19fd0:	ble	19fe0 <_RingIO_moduleInit+0x1e8>
   19fd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19fd8:	cmp	r3, #34048	; 0x8500
   19fdc:	ble	1a004 <_RingIO_moduleInit+0x20c>
   19fe0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19fe4:	ldr	r3, [pc, #144]	; 1a07c <_RingIO_moduleInit+0x284>
   19fe8:	cmp	r2, r3
   19fec:	ble	1a004 <_RingIO_moduleInit+0x20c>
   19ff0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19ff4:	cmp	r3, #34048	; 0x8500
   19ff8:	bgt	1a004 <_RingIO_moduleInit+0x20c>
   19ffc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a000:	str	r3, [fp, #-36]	; 0xffffffdc
   1a004:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a008:	ldr	r3, [pc, #108]	; 1a07c <_RingIO_moduleInit+0x284>
   1a00c:	cmp	r2, r3
   1a010:	ble	1a020 <_RingIO_moduleInit+0x228>
   1a014:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a018:	cmp	r3, #34048	; 0x8500
   1a01c:	ble	1a028 <_RingIO_moduleInit+0x230>
   1a020:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a024:	bl	1a090 <_RingIO_moduleExit>
   1a028:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a02c:	ldr	r3, [pc, #72]	; 1a07c <_RingIO_moduleInit+0x284>
   1a030:	cmp	r2, r3
   1a034:	ble	1a050 <_RingIO_moduleInit+0x258>
   1a038:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a03c:	cmp	r3, #34048	; 0x8500
   1a040:	bgt	1a050 <_RingIO_moduleInit+0x258>
   1a044:	mov	r3, #33024	; 0x8100
   1a048:	str	r3, [fp, #-76]	; 0xffffffb4
   1a04c:	b	1a058 <_RingIO_moduleInit+0x260>
   1a050:	ldr	r3, [pc, #52]	; 1a08c <_RingIO_moduleInit+0x294>
   1a054:	str	r3, [fp, #-76]	; 0xffffffb4
   1a058:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a05c:	str	r3, [fp, #-36]	; 0xffffffdc
   1a060:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a064:	mov	r0, r3
   1a068:	sub	sp, fp, #4
   1a06c:	pop	{fp, pc}
   1a070:	.word	0x8000800b
   1a074:	.word	0x0002d3ec
   1a078:	.word	0xc018e04f
   1a07c:	.word	0x00007fff
   1a080:	.word	0x0002d3f0
   1a084:	.word	0x000238e4
   1a088:	.word	0xc018e050
   1a08c:	.word	0x80008055

0001a090 <_RingIO_moduleExit>:
   1a090:	push	{fp, lr}
   1a094:	add	fp, sp, #4
   1a098:	sub	sp, sp, #48	; 0x30
   1a09c:	str	r0, [fp, #-48]	; 0xffffffd0
   1a0a0:	mov	r3, #32768	; 0x8000
   1a0a4:	str	r3, [fp, #-20]	; 0xffffffec
   1a0a8:	mov	r3, #32768	; 0x8000
   1a0ac:	str	r3, [fp, #-16]
   1a0b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a0b4:	cmp	r3, #0
   1a0b8:	beq	1a0c8 <_RingIO_moduleExit+0x38>
   1a0bc:	ldr	r3, [pc, #392]	; 1a24c <_RingIO_moduleExit+0x1bc>
   1a0c0:	str	r3, [fp, #-20]	; 0xffffffec
   1a0c4:	b	1a204 <_RingIO_moduleExit+0x174>
   1a0c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a0cc:	str	r3, [fp, #-40]	; 0xffffffd8
   1a0d0:	ldr	r3, [pc, #376]	; 1a250 <_RingIO_moduleExit+0x1c0>
   1a0d4:	ldr	r3, [r3]
   1a0d8:	sub	r2, fp, #44	; 0x2c
   1a0dc:	mov	r0, r3
   1a0e0:	ldr	r1, [pc, #364]	; 1a254 <_RingIO_moduleExit+0x1c4>
   1a0e4:	mov	r3, #0
   1a0e8:	bl	f94c <DRV_Invoke>
   1a0ec:	mov	r3, r0
   1a0f0:	str	r3, [fp, #-20]	; 0xffffffec
   1a0f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a0f8:	ldr	r3, [pc, #344]	; 1a258 <_RingIO_moduleExit+0x1c8>
   1a0fc:	cmp	r2, r3
   1a100:	ble	1a204 <_RingIO_moduleExit+0x174>
   1a104:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a108:	cmp	r3, #34048	; 0x8500
   1a10c:	bgt	1a204 <_RingIO_moduleExit+0x174>
   1a110:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a114:	ldr	r1, [pc, #320]	; 1a25c <_RingIO_moduleExit+0x1cc>
   1a118:	bl	12620 <MPCS_delete>
   1a11c:	mov	r3, r0
   1a120:	str	r3, [fp, #-16]
   1a124:	ldr	r2, [fp, #-16]
   1a128:	ldr	r3, [pc, #296]	; 1a258 <_RingIO_moduleExit+0x1c8>
   1a12c:	cmp	r2, r3
   1a130:	ble	1a140 <_RingIO_moduleExit+0xb0>
   1a134:	ldr	r3, [fp, #-16]
   1a138:	cmp	r3, #34048	; 0x8500
   1a13c:	ble	1a164 <_RingIO_moduleExit+0xd4>
   1a140:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a144:	ldr	r3, [pc, #268]	; 1a258 <_RingIO_moduleExit+0x1c8>
   1a148:	cmp	r2, r3
   1a14c:	ble	1a164 <_RingIO_moduleExit+0xd4>
   1a150:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a154:	cmp	r3, #34048	; 0x8500
   1a158:	bgt	1a164 <_RingIO_moduleExit+0xd4>
   1a15c:	ldr	r3, [fp, #-16]
   1a160:	str	r3, [fp, #-20]	; 0xffffffec
   1a164:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a168:	str	r3, [fp, #-12]
   1a16c:	ldr	r3, [fp, #-12]
   1a170:	add	r3, r3, #512	; 0x200
   1a174:	str	r3, [fp, #-8]
   1a178:	ldr	r3, [fp, #-12]
   1a17c:	ldr	r3, [r3, #8]
   1a180:	lsl	r3, r3, #7
   1a184:	ldr	r0, [fp, #-8]
   1a188:	mov	r1, #0
   1a18c:	mov	r2, r3
   1a190:	bl	9f6c <memset@plt>
   1a194:	ldr	r2, [fp, #-12]
   1a198:	mov	r3, #0
   1a19c:	str	r3, [r2]
   1a1a0:	ldr	r3, [pc, #168]	; 1a250 <_RingIO_moduleExit+0x1c0>
   1a1a4:	ldr	r3, [r3]
   1a1a8:	sub	r2, fp, #44	; 0x2c
   1a1ac:	mov	r0, r3
   1a1b0:	ldr	r1, [pc, #168]	; 1a260 <_RingIO_moduleExit+0x1d0>
   1a1b4:	mov	r3, #0
   1a1b8:	bl	f94c <DRV_Invoke>
   1a1bc:	mov	r3, r0
   1a1c0:	str	r3, [fp, #-16]
   1a1c4:	ldr	r2, [fp, #-16]
   1a1c8:	ldr	r3, [pc, #136]	; 1a258 <_RingIO_moduleExit+0x1c8>
   1a1cc:	cmp	r2, r3
   1a1d0:	ble	1a1e0 <_RingIO_moduleExit+0x150>
   1a1d4:	ldr	r3, [fp, #-16]
   1a1d8:	cmp	r3, #34048	; 0x8500
   1a1dc:	ble	1a204 <_RingIO_moduleExit+0x174>
   1a1e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a1e4:	ldr	r3, [pc, #108]	; 1a258 <_RingIO_moduleExit+0x1c8>
   1a1e8:	cmp	r2, r3
   1a1ec:	ble	1a204 <_RingIO_moduleExit+0x174>
   1a1f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a1f4:	cmp	r3, #34048	; 0x8500
   1a1f8:	bgt	1a204 <_RingIO_moduleExit+0x174>
   1a1fc:	ldr	r3, [fp, #-16]
   1a200:	str	r3, [fp, #-20]	; 0xffffffec
   1a204:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a208:	ldr	r3, [pc, #72]	; 1a258 <_RingIO_moduleExit+0x1c8>
   1a20c:	cmp	r2, r3
   1a210:	ble	1a22c <_RingIO_moduleExit+0x19c>
   1a214:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a218:	cmp	r3, #34048	; 0x8500
   1a21c:	bgt	1a22c <_RingIO_moduleExit+0x19c>
   1a220:	mov	r3, #33024	; 0x8100
   1a224:	str	r3, [fp, #-52]	; 0xffffffcc
   1a228:	b	1a234 <_RingIO_moduleExit+0x1a4>
   1a22c:	ldr	r3, [pc, #48]	; 1a264 <_RingIO_moduleExit+0x1d4>
   1a230:	str	r3, [fp, #-52]	; 0xffffffcc
   1a234:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a238:	str	r3, [fp, #-20]	; 0xffffffec
   1a23c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a240:	mov	r0, r3
   1a244:	sub	sp, fp, #4
   1a248:	pop	{fp, pc}
   1a24c:	.word	0x8000800b
   1a250:	.word	0x0002d3ec
   1a254:	.word	0xc018e04f
   1a258:	.word	0x00007fff
   1a25c:	.word	0x000238e4
   1a260:	.word	0xc018e050
   1a264:	.word	0x80008055

0001a268 <_RingIO_init>:
   1a268:	push	{fp, lr}
   1a26c:	add	fp, sp, #4
   1a270:	sub	sp, sp, #40	; 0x28
   1a274:	str	r0, [fp, #-40]	; 0xffffffd8
   1a278:	mov	r3, #32768	; 0x8000
   1a27c:	str	r3, [fp, #-12]
   1a280:	mov	r3, #0
   1a284:	str	r3, [fp, #-8]
   1a288:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a28c:	cmp	r3, #0
   1a290:	beq	1a2a0 <_RingIO_init+0x38>
   1a294:	ldr	r3, [pc, #312]	; 1a3d4 <_RingIO_init+0x16c>
   1a298:	str	r3, [fp, #-12]
   1a29c:	b	1a38c <_RingIO_init+0x124>
   1a2a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a2a4:	str	r3, [fp, #-32]	; 0xffffffe0
   1a2a8:	ldr	r3, [pc, #296]	; 1a3d8 <_RingIO_init+0x170>
   1a2ac:	ldr	r3, [r3]
   1a2b0:	sub	r2, fp, #36	; 0x24
   1a2b4:	mov	r0, r3
   1a2b8:	ldr	r1, [pc, #284]	; 1a3dc <_RingIO_init+0x174>
   1a2bc:	mov	r3, #0
   1a2c0:	bl	f94c <DRV_Invoke>
   1a2c4:	mov	r3, r0
   1a2c8:	str	r3, [fp, #-12]
   1a2cc:	ldr	r2, [fp, #-12]
   1a2d0:	ldr	r3, [pc, #264]	; 1a3e0 <_RingIO_init+0x178>
   1a2d4:	cmp	r2, r3
   1a2d8:	ble	1a38c <_RingIO_init+0x124>
   1a2dc:	ldr	r3, [fp, #-12]
   1a2e0:	cmp	r3, #34048	; 0x8500
   1a2e4:	bgt	1a38c <_RingIO_init+0x124>
   1a2e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a2ec:	lsl	r2, r3, #5
   1a2f0:	ldr	r3, [pc, #236]	; 1a3e4 <_RingIO_init+0x17c>
   1a2f4:	add	r3, r2, r3
   1a2f8:	str	r3, [fp, #-8]
   1a2fc:	ldr	r3, [fp, #-8]
   1a300:	mov	lr, r3
   1a304:	sub	ip, fp, #32
   1a308:	ldm	ip!, {r0, r1, r2, r3}
   1a30c:	stmia	lr!, {r0, r1, r2, r3}
   1a310:	ldr	r3, [ip]
   1a314:	str	r3, [lr]
   1a318:	ldr	r3, [fp, #-8]
   1a31c:	ldr	r3, [r3, #12]
   1a320:	mov	r2, r3
   1a324:	ldr	r3, [fp, #-8]
   1a328:	str	r2, [r3, #20]
   1a32c:	ldr	r3, [fp, #-8]
   1a330:	ldr	r3, [r3, #20]
   1a334:	add	r2, r3, #512	; 0x200
   1a338:	ldr	r3, [fp, #-8]
   1a33c:	str	r2, [r3, #24]
   1a340:	ldr	r3, [fp, #-8]
   1a344:	add	r2, r3, #28
   1a348:	ldr	r3, [fp, #-8]
   1a34c:	ldr	r3, [r3, #20]
   1a350:	add	r3, r3, #128	; 0x80
   1a354:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a358:	ldr	r1, [pc, #136]	; 1a3e8 <_RingIO_init+0x180>
   1a35c:	bl	11d90 <_MPCS_open>
   1a360:	mov	r3, r0
   1a364:	str	r3, [fp, #-12]
   1a368:	ldr	r2, [fp, #-12]
   1a36c:	ldr	r3, [pc, #108]	; 1a3e0 <_RingIO_init+0x178>
   1a370:	cmp	r2, r3
   1a374:	ble	1a384 <_RingIO_init+0x11c>
   1a378:	ldr	r3, [fp, #-12]
   1a37c:	cmp	r3, #34048	; 0x8500
   1a380:	ble	1a38c <_RingIO_init+0x124>
   1a384:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a388:	bl	1a3f0 <_RingIO_exit>
   1a38c:	ldr	r2, [fp, #-12]
   1a390:	ldr	r3, [pc, #72]	; 1a3e0 <_RingIO_init+0x178>
   1a394:	cmp	r2, r3
   1a398:	ble	1a3b4 <_RingIO_init+0x14c>
   1a39c:	ldr	r3, [fp, #-12]
   1a3a0:	cmp	r3, #34048	; 0x8500
   1a3a4:	bgt	1a3b4 <_RingIO_init+0x14c>
   1a3a8:	mov	r3, #33024	; 0x8100
   1a3ac:	str	r3, [fp, #-44]	; 0xffffffd4
   1a3b0:	b	1a3bc <_RingIO_init+0x154>
   1a3b4:	ldr	r3, [pc, #48]	; 1a3ec <_RingIO_init+0x184>
   1a3b8:	str	r3, [fp, #-44]	; 0xffffffd4
   1a3bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a3c0:	str	r3, [fp, #-12]
   1a3c4:	ldr	r3, [fp, #-12]
   1a3c8:	mov	r0, r3
   1a3cc:	sub	sp, fp, #4
   1a3d0:	pop	{fp, pc}
   1a3d4:	.word	0x8000800b
   1a3d8:	.word	0x0002d3ec
   1a3dc:	.word	0xc018e04f
   1a3e0:	.word	0x00007fff
   1a3e4:	.word	0x0002d7ac
   1a3e8:	.word	0x000238e4
   1a3ec:	.word	0x80008055

0001a3f0 <_RingIO_exit>:
   1a3f0:	push	{fp, lr}
   1a3f4:	add	fp, sp, #4
   1a3f8:	sub	sp, sp, #48	; 0x30
   1a3fc:	str	r0, [fp, #-48]	; 0xffffffd0
   1a400:	mov	r3, #32768	; 0x8000
   1a404:	str	r3, [fp, #-16]
   1a408:	mov	r3, #32768	; 0x8000
   1a40c:	str	r3, [fp, #-12]
   1a410:	mov	r3, #0
   1a414:	str	r3, [fp, #-8]
   1a418:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a41c:	cmp	r3, #0
   1a420:	beq	1a430 <_RingIO_exit+0x40>
   1a424:	ldr	r3, [pc, #352]	; 1a58c <_RingIO_exit+0x19c>
   1a428:	str	r3, [fp, #-16]
   1a42c:	b	1a45c <_RingIO_exit+0x6c>
   1a430:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a434:	lsl	r2, r3, #5
   1a438:	ldr	r3, [pc, #336]	; 1a590 <_RingIO_exit+0x1a0>
   1a43c:	add	r3, r2, r3
   1a440:	str	r3, [fp, #-8]
   1a444:	ldr	r3, [fp, #-8]
   1a448:	ldr	r3, [r3, #20]
   1a44c:	cmp	r3, #0
   1a450:	bne	1a45c <_RingIO_exit+0x6c>
   1a454:	ldr	r3, [pc, #312]	; 1a594 <_RingIO_exit+0x1a4>
   1a458:	str	r3, [fp, #-16]
   1a45c:	ldr	r2, [fp, #-16]
   1a460:	ldr	r3, [pc, #304]	; 1a598 <_RingIO_exit+0x1a8>
   1a464:	cmp	r2, r3
   1a468:	ble	1a544 <_RingIO_exit+0x154>
   1a46c:	ldr	r3, [fp, #-16]
   1a470:	cmp	r3, #34048	; 0x8500
   1a474:	bgt	1a544 <_RingIO_exit+0x154>
   1a478:	ldr	r3, [fp, #-8]
   1a47c:	ldr	r3, [r3, #28]
   1a480:	cmp	r3, #0
   1a484:	beq	1a4b0 <_RingIO_exit+0xc0>
   1a488:	ldr	r3, [fp, #-8]
   1a48c:	ldr	r3, [r3, #28]
   1a490:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a494:	mov	r1, r3
   1a498:	bl	12ac4 <MPCS_close>
   1a49c:	mov	r3, r0
   1a4a0:	str	r3, [fp, #-16]
   1a4a4:	ldr	r2, [fp, #-8]
   1a4a8:	mov	r3, #0
   1a4ac:	str	r3, [r2, #28]
   1a4b0:	ldr	r3, [fp, #-8]
   1a4b4:	ldr	r3, [r3, #12]
   1a4b8:	str	r3, [fp, #-24]	; 0xffffffe8
   1a4bc:	ldr	r3, [fp, #-8]
   1a4c0:	ldr	r3, [r3, #16]
   1a4c4:	str	r3, [fp, #-20]	; 0xffffffec
   1a4c8:	ldr	r3, [pc, #204]	; 1a59c <_RingIO_exit+0x1ac>
   1a4cc:	ldr	r3, [r3]
   1a4d0:	sub	r2, fp, #40	; 0x28
   1a4d4:	mov	r0, r3
   1a4d8:	ldr	r1, [pc, #192]	; 1a5a0 <_RingIO_exit+0x1b0>
   1a4dc:	mov	r3, #0
   1a4e0:	bl	f94c <DRV_Invoke>
   1a4e4:	mov	r3, r0
   1a4e8:	str	r3, [fp, #-12]
   1a4ec:	ldr	r2, [fp, #-12]
   1a4f0:	ldr	r3, [pc, #160]	; 1a598 <_RingIO_exit+0x1a8>
   1a4f4:	cmp	r2, r3
   1a4f8:	ble	1a508 <_RingIO_exit+0x118>
   1a4fc:	ldr	r3, [fp, #-12]
   1a500:	cmp	r3, #34048	; 0x8500
   1a504:	ble	1a52c <_RingIO_exit+0x13c>
   1a508:	ldr	r2, [fp, #-16]
   1a50c:	ldr	r3, [pc, #132]	; 1a598 <_RingIO_exit+0x1a8>
   1a510:	cmp	r2, r3
   1a514:	ble	1a52c <_RingIO_exit+0x13c>
   1a518:	ldr	r3, [fp, #-16]
   1a51c:	cmp	r3, #34048	; 0x8500
   1a520:	bgt	1a52c <_RingIO_exit+0x13c>
   1a524:	ldr	r3, [fp, #-12]
   1a528:	str	r3, [fp, #-16]
   1a52c:	ldr	r2, [fp, #-8]
   1a530:	mov	r3, #0
   1a534:	str	r3, [r2, #20]
   1a538:	ldr	r2, [fp, #-8]
   1a53c:	mov	r3, #0
   1a540:	str	r3, [r2, #24]
   1a544:	ldr	r2, [fp, #-16]
   1a548:	ldr	r3, [pc, #72]	; 1a598 <_RingIO_exit+0x1a8>
   1a54c:	cmp	r2, r3
   1a550:	ble	1a56c <_RingIO_exit+0x17c>
   1a554:	ldr	r3, [fp, #-16]
   1a558:	cmp	r3, #34048	; 0x8500
   1a55c:	bgt	1a56c <_RingIO_exit+0x17c>
   1a560:	mov	r3, #33024	; 0x8100
   1a564:	str	r3, [fp, #-52]	; 0xffffffcc
   1a568:	b	1a574 <_RingIO_exit+0x184>
   1a56c:	ldr	r3, [pc, #48]	; 1a5a4 <_RingIO_exit+0x1b4>
   1a570:	str	r3, [fp, #-52]	; 0xffffffcc
   1a574:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a578:	str	r3, [fp, #-16]
   1a57c:	ldr	r3, [fp, #-16]
   1a580:	mov	r0, r3
   1a584:	sub	sp, fp, #4
   1a588:	pop	{fp, pc}
   1a58c:	.word	0x8000800b
   1a590:	.word	0x0002d7ac
   1a594:	.word	0x80008000
   1a598:	.word	0x00007fff
   1a59c:	.word	0x0002d3ec
   1a5a0:	.word	0xc018e050
   1a5a4:	.word	0x80008055

0001a5a8 <_RingIO_writerAcquire>:
   1a5a8:	push	{r4, fp, lr}
   1a5ac:	add	fp, sp, #8
   1a5b0:	sub	sp, sp, #44	; 0x2c
   1a5b4:	str	r0, [fp, #-40]	; 0xffffffd8
   1a5b8:	str	r1, [fp, #-44]	; 0xffffffd4
   1a5bc:	str	r2, [fp, #-48]	; 0xffffffd0
   1a5c0:	mov	r3, #33024	; 0x8100
   1a5c4:	str	r3, [fp, #-36]	; 0xffffffdc
   1a5c8:	mov	r3, #0
   1a5cc:	str	r3, [fp, #-32]	; 0xffffffe0
   1a5d0:	mov	r3, #0
   1a5d4:	str	r3, [fp, #-28]	; 0xffffffe4
   1a5d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a5dc:	ldr	r3, [r3, #52]	; 0x34
   1a5e0:	str	r3, [fp, #-32]	; 0xffffffe0
   1a5e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a5e8:	ldr	r3, [r3, #40]	; 0x28
   1a5ec:	cmp	r3, #0
   1a5f0:	bne	1a618 <_RingIO_writerAcquire+0x70>
   1a5f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a5f8:	mov	r3, #0
   1a5fc:	str	r3, [r2]
   1a600:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a604:	mov	r3, #0
   1a608:	str	r3, [r2]
   1a60c:	ldr	r3, [pc, #760]	; 1a90c <_RingIO_writerAcquire+0x364>
   1a610:	str	r3, [fp, #-36]	; 0xffffffdc
   1a614:	b	1a80c <_RingIO_writerAcquire+0x264>
   1a618:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a61c:	ldr	r3, [r3, #20]
   1a620:	add	r3, r3, #1
   1a624:	str	r3, [fp, #-24]	; 0xffffffe8
   1a628:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a62c:	ldr	r3, [r3, #40]	; 0x28
   1a630:	str	r3, [fp, #-28]	; 0xffffffe4
   1a634:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a638:	ldr	r2, [r3, #16]
   1a63c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a640:	ldr	r3, [r3, #20]
   1a644:	add	r3, r2, r3
   1a648:	mov	r0, r3
   1a64c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a650:	bl	a05c <__aeabi_uidivmod@plt>
   1a654:	mov	r3, r1
   1a658:	mov	r2, r3
   1a65c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a660:	rsb	r3, r2, r3
   1a664:	str	r3, [fp, #-20]	; 0xffffffec
   1a668:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a66c:	ldr	r2, [r3, #40]	; 0x28
   1a670:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a674:	cmp	r2, r3
   1a678:	movcc	r3, r2
   1a67c:	str	r3, [fp, #-16]
   1a680:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a684:	ldr	r2, [r3]
   1a688:	ldr	r3, [fp, #-16]
   1a68c:	cmp	r2, r3
   1a690:	bls	1a758 <_RingIO_writerAcquire+0x1b0>
   1a694:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a698:	ldr	r3, [r3, #48]	; 0x30
   1a69c:	and	r3, r3, #8
   1a6a0:	cmp	r3, #0
   1a6a4:	beq	1a720 <_RingIO_writerAcquire+0x178>
   1a6a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a6ac:	ldr	r2, [r3, #40]	; 0x28
   1a6b0:	ldr	r3, [fp, #-16]
   1a6b4:	rsb	r2, r3, r2
   1a6b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a6bc:	ldr	r3, [r3]
   1a6c0:	cmp	r2, r3
   1a6c4:	bcs	1a6ec <_RingIO_writerAcquire+0x144>
   1a6c8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a6cc:	mov	r3, #0
   1a6d0:	str	r3, [r2]
   1a6d4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a6d8:	mov	r3, #0
   1a6dc:	str	r3, [r2]
   1a6e0:	ldr	r3, [pc, #552]	; 1a910 <_RingIO_writerAcquire+0x368>
   1a6e4:	str	r3, [fp, #-36]	; 0xffffffdc
   1a6e8:	b	1a758 <_RingIO_writerAcquire+0x1b0>
   1a6ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a6f0:	ldr	r2, [r3, #20]
   1a6f4:	ldr	r3, [fp, #-16]
   1a6f8:	rsb	r2, r3, r2
   1a6fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a700:	str	r2, [r3, #20]
   1a704:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a708:	ldr	r2, [r3, #40]	; 0x28
   1a70c:	ldr	r3, [fp, #-16]
   1a710:	rsb	r2, r3, r2
   1a714:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a718:	str	r2, [r3, #40]	; 0x28
   1a71c:	b	1a758 <_RingIO_writerAcquire+0x1b0>
   1a720:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a724:	ldr	r2, [r3]
   1a728:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a72c:	ldr	r3, [r3, #40]	; 0x28
   1a730:	cmp	r2, r3
   1a734:	bls	1a744 <_RingIO_writerAcquire+0x19c>
   1a738:	ldr	r3, [pc, #460]	; 1a90c <_RingIO_writerAcquire+0x364>
   1a73c:	str	r3, [fp, #-36]	; 0xffffffdc
   1a740:	b	1a74c <_RingIO_writerAcquire+0x1a4>
   1a744:	ldr	r3, [pc, #456]	; 1a914 <_RingIO_writerAcquire+0x36c>
   1a748:	str	r3, [fp, #-36]	; 0xffffffdc
   1a74c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a750:	ldr	r3, [fp, #-16]
   1a754:	str	r3, [r2]
   1a758:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a75c:	ldr	r3, [pc, #428]	; 1a910 <_RingIO_writerAcquire+0x368>
   1a760:	cmp	r2, r3
   1a764:	beq	1a80c <_RingIO_writerAcquire+0x264>
   1a768:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a76c:	ldr	r3, [r3, #20]
   1a770:	add	r3, r3, #1
   1a774:	str	r3, [fp, #-24]	; 0xffffffe8
   1a778:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a77c:	ldr	r3, [r3, #16]
   1a780:	mov	r0, r3
   1a784:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a788:	bl	a05c <__aeabi_uidivmod@plt>
   1a78c:	mov	r3, r1
   1a790:	mov	r2, r3
   1a794:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a798:	str	r2, [r3, #16]
   1a79c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a7a0:	ldr	r4, [r3, #8]
   1a7a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a7a8:	ldr	r2, [r3, #16]
   1a7ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a7b0:	ldr	r3, [r3, #20]
   1a7b4:	add	r3, r2, r3
   1a7b8:	mov	r0, r3
   1a7bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a7c0:	bl	a05c <__aeabi_uidivmod@plt>
   1a7c4:	mov	r3, r1
   1a7c8:	add	r2, r4, r3
   1a7cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a7d0:	str	r2, [r3]
   1a7d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a7d8:	ldr	r2, [r3, #20]
   1a7dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a7e0:	ldr	r3, [r3]
   1a7e4:	add	r2, r2, r3
   1a7e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a7ec:	str	r2, [r3, #20]
   1a7f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a7f4:	ldr	r2, [r3, #40]	; 0x28
   1a7f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a7fc:	ldr	r3, [r3]
   1a800:	rsb	r2, r3, r2
   1a804:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a808:	str	r2, [r3, #40]	; 0x28
   1a80c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a810:	ldr	r3, [pc, #248]	; 1a910 <_RingIO_writerAcquire+0x368>
   1a814:	cmp	r2, r3
   1a818:	beq	1a82c <_RingIO_writerAcquire+0x284>
   1a81c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a820:	ldr	r3, [pc, #228]	; 1a90c <_RingIO_writerAcquire+0x364>
   1a824:	cmp	r2, r3
   1a828:	bne	1a84c <_RingIO_writerAcquire+0x2a4>
   1a82c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a830:	ldr	r3, [r3, #32]
   1a834:	cmp	r3, #0
   1a838:	beq	1a84c <_RingIO_writerAcquire+0x2a4>
   1a83c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a840:	mov	r2, #1
   1a844:	strh	r2, [r3, #68]	; 0x44
   1a848:	b	1a8fc <_RingIO_writerAcquire+0x354>
   1a84c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a850:	ldr	r3, [r3]
   1a854:	cmp	r3, #0
   1a858:	beq	1a8fc <_RingIO_writerAcquire+0x354>
   1a85c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a860:	ldrh	r3, [r3, #68]	; 0x44
   1a864:	cmp	r3, #1
   1a868:	bne	1a8b8 <_RingIO_writerAcquire+0x310>
   1a86c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a870:	ldr	r3, [r3, #32]
   1a874:	cmp	r3, #1
   1a878:	bne	1a8b8 <_RingIO_writerAcquire+0x310>
   1a87c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a880:	ldr	r2, [r3, #44]	; 0x2c
   1a884:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a888:	cmp	r2, r3
   1a88c:	bhi	1a8fc <_RingIO_writerAcquire+0x354>
   1a890:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a894:	ldr	r2, [r3, #40]	; 0x28
   1a898:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a89c:	ldr	r3, [r3, #44]	; 0x2c
   1a8a0:	cmp	r2, r3
   1a8a4:	bcs	1a8fc <_RingIO_writerAcquire+0x354>
   1a8a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a8ac:	mov	r2, #0
   1a8b0:	strh	r2, [r3, #68]	; 0x44
   1a8b4:	b	1a8fc <_RingIO_writerAcquire+0x354>
   1a8b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a8bc:	ldr	r3, [r3, #32]
   1a8c0:	cmp	r3, #4
   1a8c4:	bne	1a8fc <_RingIO_writerAcquire+0x354>
   1a8c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a8cc:	ldr	r2, [r3, #40]	; 0x28
   1a8d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a8d4:	ldr	r3, [r3, #44]	; 0x2c
   1a8d8:	cmp	r2, r3
   1a8dc:	bcs	1a8fc <_RingIO_writerAcquire+0x354>
   1a8e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a8e4:	ldrh	r3, [r3, #68]	; 0x44
   1a8e8:	cmp	r3, #0
   1a8ec:	bne	1a8fc <_RingIO_writerAcquire+0x354>
   1a8f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a8f4:	mov	r2, #1
   1a8f8:	strh	r2, [r3, #68]	; 0x44
   1a8fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a900:	mov	r0, r3
   1a904:	sub	sp, fp, #8
   1a908:	pop	{r4, fp, pc}
   1a90c:	.word	0x80008058
   1a910:	.word	0x80008055
   1a914:	.word	0x80008056

0001a918 <_RingIO_readerAcquire>:
   1a918:	push	{fp, lr}
   1a91c:	add	fp, sp, #4
   1a920:	sub	sp, sp, #72	; 0x48
   1a924:	str	r0, [fp, #-64]	; 0xffffffc0
   1a928:	str	r1, [fp, #-68]	; 0xffffffbc
   1a92c:	str	r2, [fp, #-72]	; 0xffffffb8
   1a930:	mov	r3, #33024	; 0x8100
   1a934:	str	r3, [fp, #-56]	; 0xffffffc8
   1a938:	mov	r3, #0
   1a93c:	str	r3, [fp, #-52]	; 0xffffffcc
   1a940:	mov	r3, #0
   1a944:	str	r3, [fp, #-48]	; 0xffffffd0
   1a948:	mov	r3, #0
   1a94c:	str	r3, [fp, #-44]	; 0xffffffd4
   1a950:	mov	r3, #0
   1a954:	str	r3, [fp, #-40]	; 0xffffffd8
   1a958:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a95c:	ldr	r3, [r3, #52]	; 0x34
   1a960:	str	r3, [fp, #-52]	; 0xffffffcc
   1a964:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a968:	ldr	r3, [r3, #4]
   1a96c:	str	r3, [fp, #-16]
   1a970:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a974:	ldr	r3, [r3, #20]
   1a978:	add	r3, r3, #1
   1a97c:	str	r3, [fp, #-36]	; 0xffffffdc
   1a980:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a984:	ldr	r3, [r3]
   1a988:	lsl	r2, r3, #5
   1a98c:	ldr	r3, [pc, #1452]	; 1af40 <_RingIO_readerAcquire+0x628>
   1a990:	add	r3, r2, r3
   1a994:	str	r3, [fp, #-44]	; 0xffffffd4
   1a998:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a99c:	ldr	r3, [r3, #36]	; 0x24
   1a9a0:	cmp	r3, #0
   1a9a4:	bne	1a9e8 <_RingIO_readerAcquire+0xd0>
   1a9a8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1a9ac:	mov	r3, #0
   1a9b0:	str	r3, [r2]
   1a9b4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a9b8:	mov	r3, #0
   1a9bc:	str	r3, [r2]
   1a9c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a9c4:	ldr	r3, [r3, #56]	; 0x38
   1a9c8:	cmp	r3, #0
   1a9cc:	bne	1a9dc <_RingIO_readerAcquire+0xc4>
   1a9d0:	ldr	r3, [pc, #1388]	; 1af44 <_RingIO_readerAcquire+0x62c>
   1a9d4:	str	r3, [fp, #-56]	; 0xffffffc8
   1a9d8:	b	1ae40 <_RingIO_readerAcquire+0x528>
   1a9dc:	ldr	r3, [pc, #1380]	; 1af48 <_RingIO_readerAcquire+0x630>
   1a9e0:	str	r3, [fp, #-56]	; 0xffffffc8
   1a9e4:	b	1ae40 <_RingIO_readerAcquire+0x528>
   1a9e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a9ec:	ldr	r3, [r3, #36]	; 0x24
   1a9f0:	str	r3, [fp, #-40]	; 0xffffffd8
   1a9f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a9f8:	ldr	r2, [r3, #16]
   1a9fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1aa00:	ldr	r3, [r3, #20]
   1aa04:	add	r3, r2, r3
   1aa08:	mov	r0, r3
   1aa0c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1aa10:	bl	a05c <__aeabi_uidivmod@plt>
   1aa14:	mov	r3, r1
   1aa18:	str	r3, [fp, #-32]	; 0xffffffe0
   1aa1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1aa20:	ldr	r3, [r3, #56]	; 0x38
   1aa24:	cmp	r3, #0
   1aa28:	beq	1aa90 <_RingIO_readerAcquire+0x178>
   1aa2c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1aa30:	bl	1d48c <_RingIO_getFirstAttr>
   1aa34:	mov	r3, r0
   1aa38:	str	r3, [fp, #-48]	; 0xffffffd0
   1aa3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aa40:	cmp	r3, #0
   1aa44:	bne	1aa5c <_RingIO_readerAcquire+0x144>
   1aa48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1aa4c:	ldr	r2, [r3]
   1aa50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1aa54:	cmp	r2, r3
   1aa58:	beq	1aa70 <_RingIO_readerAcquire+0x158>
   1aa5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1aa60:	ldr	r2, [r3]
   1aa64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aa68:	cmp	r2, r3
   1aa6c:	bne	1aa90 <_RingIO_readerAcquire+0x178>
   1aa70:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1aa74:	mov	r3, #0
   1aa78:	str	r3, [r2]
   1aa7c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1aa80:	mov	r3, #0
   1aa84:	str	r3, [r2]
   1aa88:	ldr	r3, [pc, #1208]	; 1af48 <_RingIO_readerAcquire+0x630>
   1aa8c:	str	r3, [fp, #-56]	; 0xffffffc8
   1aa90:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1aa94:	ldr	r3, [pc, #1196]	; 1af48 <_RingIO_readerAcquire+0x630>
   1aa98:	cmp	r2, r3
   1aa9c:	beq	1ae40 <_RingIO_readerAcquire+0x528>
   1aaa0:	sub	r3, fp, #60	; 0x3c
   1aaa4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1aaa8:	mov	r1, r3
   1aaac:	bl	1d858 <_RingIO_getContiguousDataSize>
   1aab0:	mov	r3, r0
   1aab4:	str	r3, [fp, #-56]	; 0xffffffc8
   1aab8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1aabc:	ldr	r2, [r3]
   1aac0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1aac4:	cmp	r2, r3
   1aac8:	bls	1ab2c <_RingIO_readerAcquire+0x214>
   1aacc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1aad0:	ldr	r3, [r3, #48]	; 0x30
   1aad4:	and	r3, r3, #8
   1aad8:	cmp	r3, #0
   1aadc:	beq	1ab04 <_RingIO_readerAcquire+0x1ec>
   1aae0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1aae4:	mov	r3, #0
   1aae8:	str	r3, [r2]
   1aaec:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1aaf0:	mov	r3, #0
   1aaf4:	str	r3, [r2]
   1aaf8:	ldr	r3, [pc, #1100]	; 1af4c <_RingIO_readerAcquire+0x634>
   1aafc:	str	r3, [fp, #-56]	; 0xffffffc8
   1ab00:	b	1ab34 <_RingIO_readerAcquire+0x21c>
   1ab04:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1ab08:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1ab0c:	str	r2, [r3]
   1ab10:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ab14:	ldr	r3, [pc, #1068]	; 1af48 <_RingIO_readerAcquire+0x630>
   1ab18:	cmp	r2, r3
   1ab1c:	beq	1ab34 <_RingIO_readerAcquire+0x21c>
   1ab20:	ldr	r3, [pc, #1064]	; 1af50 <_RingIO_readerAcquire+0x638>
   1ab24:	str	r3, [fp, #-56]	; 0xffffffc8
   1ab28:	b	1ab34 <_RingIO_readerAcquire+0x21c>
   1ab2c:	mov	r3, #33024	; 0x8100
   1ab30:	str	r3, [fp, #-56]	; 0xffffffc8
   1ab34:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ab38:	ldr	r3, [pc, #1036]	; 1af4c <_RingIO_readerAcquire+0x634>
   1ab3c:	cmp	r2, r3
   1ab40:	beq	1ae40 <_RingIO_readerAcquire+0x528>
   1ab44:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1ab48:	ldr	r1, [r3]
   1ab4c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ab50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ab54:	rsb	r3, r3, r2
   1ab58:	cmp	r1, r3
   1ab5c:	bls	1ad28 <_RingIO_readerAcquire+0x410>
   1ab60:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ab64:	ldr	r3, [r3, #8]
   1ab68:	str	r3, [fp, #-24]	; 0xffffffe8
   1ab6c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ab70:	ldr	r3, [r3, #8]
   1ab74:	mov	r2, r3
   1ab78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ab7c:	add	r3, r2, r3
   1ab80:	str	r3, [fp, #-20]	; 0xffffffec
   1ab84:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ab88:	str	r3, [fp, #-12]
   1ab8c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1ab90:	ldr	r1, [r3]
   1ab94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ab98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ab9c:	rsb	r3, r3, r2
   1aba0:	add	r3, r1, r3
   1aba4:	str	r3, [fp, #-8]
   1aba8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1abac:	ldr	r2, [r3, #24]
   1abb0:	ldr	r3, [fp, #-16]
   1abb4:	lsl	r3, r3, #7
   1abb8:	add	r3, r2, r3
   1abbc:	ldrh	r3, [r3, #44]	; 0x2c
   1abc0:	and	r2, r3, #255	; 0xff
   1abc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1abc8:	ldr	r3, [r3]
   1abcc:	lsl	r3, r3, #8
   1abd0:	lsl	r3, r3, #16
   1abd4:	lsr	r3, r3, #16
   1abd8:	orr	r3, r2, r3
   1abdc:	and	r3, r3, #255	; 0xff
   1abe0:	cmp	r3, #32
   1abe4:	beq	1ac40 <_RingIO_readerAcquire+0x328>
   1abe8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1abec:	ldr	r2, [r3, #24]
   1abf0:	ldr	r3, [fp, #-16]
   1abf4:	lsl	r3, r3, #7
   1abf8:	add	r3, r2, r3
   1abfc:	ldrh	r3, [r3, #44]	; 0x2c
   1ac00:	mov	r2, r3
   1ac04:	and	r2, r2, #255	; 0xff
   1ac08:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ac0c:	ldr	r3, [r3]
   1ac10:	lsl	r3, r3, #16
   1ac14:	lsr	r3, r3, #16
   1ac18:	lsl	r3, r3, #8
   1ac1c:	lsl	r3, r3, #16
   1ac20:	lsr	r3, r3, #16
   1ac24:	orr	r3, r2, r3
   1ac28:	lsl	r3, r3, #16
   1ac2c:	lsr	r3, r3, #16
   1ac30:	mov	r0, r3
   1ac34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ac38:	ldr	r2, [fp, #-8]
   1ac3c:	bl	17224 <POOL_invalidate>
   1ac40:	mov	r3, #0
   1ac44:	str	r3, [fp, #-28]	; 0xffffffe4
   1ac48:	b	1ac80 <_RingIO_readerAcquire+0x368>
   1ac4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ac50:	ldrb	r3, [r3]
   1ac54:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ac58:	strb	r3, [r2]
   1ac5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ac60:	add	r3, r3, #1
   1ac64:	str	r3, [fp, #-20]	; 0xffffffec
   1ac68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ac6c:	add	r3, r3, #1
   1ac70:	str	r3, [fp, #-24]	; 0xffffffe8
   1ac74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ac78:	add	r3, r3, #1
   1ac7c:	str	r3, [fp, #-28]	; 0xffffffe4
   1ac80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ac84:	ldr	r3, [fp, #-8]
   1ac88:	cmp	r2, r3
   1ac8c:	bcc	1ac4c <_RingIO_readerAcquire+0x334>
   1ac90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ac94:	ldr	r2, [r3, #24]
   1ac98:	ldr	r3, [fp, #-16]
   1ac9c:	lsl	r3, r3, #7
   1aca0:	add	r3, r2, r3
   1aca4:	ldrh	r3, [r3, #44]	; 0x2c
   1aca8:	and	r2, r3, #255	; 0xff
   1acac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1acb0:	ldr	r3, [r3]
   1acb4:	lsl	r3, r3, #8
   1acb8:	lsl	r3, r3, #16
   1acbc:	lsr	r3, r3, #16
   1acc0:	orr	r3, r2, r3
   1acc4:	and	r3, r3, #255	; 0xff
   1acc8:	cmp	r3, #32
   1accc:	beq	1ad28 <_RingIO_readerAcquire+0x410>
   1acd0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1acd4:	ldr	r2, [r3, #24]
   1acd8:	ldr	r3, [fp, #-16]
   1acdc:	lsl	r3, r3, #7
   1ace0:	add	r3, r2, r3
   1ace4:	ldrh	r3, [r3, #44]	; 0x2c
   1ace8:	mov	r2, r3
   1acec:	and	r2, r2, #255	; 0xff
   1acf0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1acf4:	ldr	r3, [r3]
   1acf8:	lsl	r3, r3, #16
   1acfc:	lsr	r3, r3, #16
   1ad00:	lsl	r3, r3, #8
   1ad04:	lsl	r3, r3, #16
   1ad08:	lsr	r3, r3, #16
   1ad0c:	orr	r3, r2, r3
   1ad10:	lsl	r3, r3, #16
   1ad14:	lsr	r3, r3, #16
   1ad18:	mov	r0, r3
   1ad1c:	ldr	r1, [fp, #-12]
   1ad20:	ldr	r2, [fp, #-8]
   1ad24:	bl	170a4 <POOL_writeback>
   1ad28:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ad2c:	ldr	r3, [r3, #16]
   1ad30:	mov	r0, r3
   1ad34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ad38:	bl	a05c <__aeabi_uidivmod@plt>
   1ad3c:	mov	r3, r1
   1ad40:	mov	r2, r3
   1ad44:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ad48:	str	r2, [r3, #16]
   1ad4c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ad50:	ldr	r2, [r3, #8]
   1ad54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ad58:	add	r2, r2, r3
   1ad5c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ad60:	str	r2, [r3]
   1ad64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ad68:	ldr	r2, [r3, #24]
   1ad6c:	ldr	r3, [fp, #-16]
   1ad70:	lsl	r3, r3, #7
   1ad74:	add	r3, r2, r3
   1ad78:	ldrh	r3, [r3, #44]	; 0x2c
   1ad7c:	and	r2, r3, #255	; 0xff
   1ad80:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ad84:	ldr	r3, [r3]
   1ad88:	lsl	r3, r3, #8
   1ad8c:	lsl	r3, r3, #16
   1ad90:	lsr	r3, r3, #16
   1ad94:	orr	r3, r2, r3
   1ad98:	and	r3, r3, #255	; 0xff
   1ad9c:	cmp	r3, #32
   1ada0:	beq	1ae08 <_RingIO_readerAcquire+0x4f0>
   1ada4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ada8:	ldr	r2, [r3, #24]
   1adac:	ldr	r3, [fp, #-16]
   1adb0:	lsl	r3, r3, #7
   1adb4:	add	r3, r2, r3
   1adb8:	ldrh	r3, [r3, #44]	; 0x2c
   1adbc:	mov	r2, r3
   1adc0:	and	r2, r2, #255	; 0xff
   1adc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1adc8:	ldr	r3, [r3]
   1adcc:	lsl	r3, r3, #16
   1add0:	lsr	r3, r3, #16
   1add4:	lsl	r3, r3, #8
   1add8:	lsl	r3, r3, #16
   1addc:	lsr	r3, r3, #16
   1ade0:	orr	r3, r2, r3
   1ade4:	lsl	r3, r3, #16
   1ade8:	lsr	r2, r3, #16
   1adec:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1adf0:	ldr	r1, [r3]
   1adf4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1adf8:	ldr	r3, [r3]
   1adfc:	mov	r0, r2
   1ae00:	mov	r2, r3
   1ae04:	bl	17224 <POOL_invalidate>
   1ae08:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ae0c:	ldr	r2, [r3, #20]
   1ae10:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1ae14:	ldr	r3, [r3]
   1ae18:	add	r2, r2, r3
   1ae1c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ae20:	str	r2, [r3, #20]
   1ae24:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ae28:	ldr	r2, [r3, #36]	; 0x24
   1ae2c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1ae30:	ldr	r3, [r3]
   1ae34:	rsb	r2, r3, r2
   1ae38:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ae3c:	str	r2, [r3, #36]	; 0x24
   1ae40:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ae44:	ldr	r3, [pc, #256]	; 1af4c <_RingIO_readerAcquire+0x634>
   1ae48:	cmp	r2, r3
   1ae4c:	beq	1ae60 <_RingIO_readerAcquire+0x548>
   1ae50:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ae54:	ldr	r3, [pc, #232]	; 1af44 <_RingIO_readerAcquire+0x62c>
   1ae58:	cmp	r2, r3
   1ae5c:	bne	1ae80 <_RingIO_readerAcquire+0x568>
   1ae60:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ae64:	ldr	r3, [r3, #32]
   1ae68:	cmp	r3, #0
   1ae6c:	beq	1ae80 <_RingIO_readerAcquire+0x568>
   1ae70:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ae74:	mov	r2, #1
   1ae78:	strh	r2, [r3, #68]	; 0x44
   1ae7c:	b	1af30 <_RingIO_readerAcquire+0x618>
   1ae80:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1ae84:	ldr	r3, [r3]
   1ae88:	cmp	r3, #0
   1ae8c:	beq	1af30 <_RingIO_readerAcquire+0x618>
   1ae90:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ae94:	ldrh	r3, [r3, #68]	; 0x44
   1ae98:	cmp	r3, #1
   1ae9c:	bne	1aeec <_RingIO_readerAcquire+0x5d4>
   1aea0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1aea4:	ldr	r3, [r3, #32]
   1aea8:	cmp	r3, #1
   1aeac:	bne	1aeec <_RingIO_readerAcquire+0x5d4>
   1aeb0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1aeb4:	ldr	r2, [r3, #44]	; 0x2c
   1aeb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1aebc:	cmp	r2, r3
   1aec0:	bhi	1af30 <_RingIO_readerAcquire+0x618>
   1aec4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1aec8:	ldr	r2, [r3, #36]	; 0x24
   1aecc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1aed0:	ldr	r3, [r3, #44]	; 0x2c
   1aed4:	cmp	r2, r3
   1aed8:	bcs	1af30 <_RingIO_readerAcquire+0x618>
   1aedc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1aee0:	mov	r2, #0
   1aee4:	strh	r2, [r3, #68]	; 0x44
   1aee8:	b	1af30 <_RingIO_readerAcquire+0x618>
   1aeec:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1aef0:	ldr	r3, [r3, #32]
   1aef4:	cmp	r3, #4
   1aef8:	bne	1af30 <_RingIO_readerAcquire+0x618>
   1aefc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1af00:	ldr	r2, [r3, #36]	; 0x24
   1af04:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1af08:	ldr	r3, [r3, #44]	; 0x2c
   1af0c:	cmp	r2, r3
   1af10:	bcs	1af30 <_RingIO_readerAcquire+0x618>
   1af14:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1af18:	ldrh	r3, [r3, #68]	; 0x44
   1af1c:	cmp	r3, #0
   1af20:	bne	1af30 <_RingIO_readerAcquire+0x618>
   1af24:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1af28:	mov	r2, #1
   1af2c:	strh	r2, [r3, #68]	; 0x44
   1af30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1af34:	mov	r0, r3
   1af38:	sub	sp, fp, #4
   1af3c:	pop	{fp, pc}
   1af40:	.word	0x0002d7ac
   1af44:	.word	0x80008057
   1af48:	.word	0x00008101
   1af4c:	.word	0x80008055
   1af50:	.word	0x8000805c

0001af54 <_RingIO_writerRelease>:
   1af54:	push	{fp, lr}
   1af58:	add	fp, sp, #4
   1af5c:	sub	sp, sp, #48	; 0x30
   1af60:	str	r0, [fp, #-48]	; 0xffffffd0
   1af64:	str	r1, [fp, #-52]	; 0xffffffcc
   1af68:	mov	r3, #33024	; 0x8100
   1af6c:	str	r3, [fp, #-40]	; 0xffffffd8
   1af70:	mov	r3, #0
   1af74:	str	r3, [fp, #-36]	; 0xffffffdc
   1af78:	mov	r3, #0
   1af7c:	str	r3, [fp, #-32]	; 0xffffffe0
   1af80:	mov	r3, #0
   1af84:	strh	r3, [fp, #-26]	; 0xffffffe6
   1af88:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1af8c:	ldr	r3, [r3, #52]	; 0x34
   1af90:	str	r3, [fp, #-36]	; 0xffffffdc
   1af94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1af98:	ldr	r3, [r3]
   1af9c:	lsl	r2, r3, #5
   1afa0:	ldr	r3, [pc, #536]	; 1b1c0 <_RingIO_writerRelease+0x26c>
   1afa4:	add	r3, r2, r3
   1afa8:	str	r3, [fp, #-32]	; 0xffffffe0
   1afac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1afb0:	ldr	r3, [r3, #4]
   1afb4:	str	r3, [fp, #-8]
   1afb8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1afbc:	ldr	r2, [r3, #20]
   1afc0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1afc4:	cmp	r2, r3
   1afc8:	bcs	1afd8 <_RingIO_writerRelease+0x84>
   1afcc:	ldr	r3, [pc, #496]	; 1b1c4 <_RingIO_writerRelease+0x270>
   1afd0:	str	r3, [fp, #-40]	; 0xffffffd8
   1afd4:	b	1b1b0 <_RingIO_writerRelease+0x25c>
   1afd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1afdc:	ldr	r3, [r3, #20]
   1afe0:	add	r3, r3, #1
   1afe4:	str	r3, [fp, #-24]	; 0xffffffe8
   1afe8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1afec:	ldr	r3, [r3, #12]
   1aff0:	cmp	r3, #0
   1aff4:	beq	1b0a0 <_RingIO_writerRelease+0x14c>
   1aff8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1affc:	ldr	r2, [r3, #16]
   1b000:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b004:	add	r3, r2, r3
   1b008:	mov	r0, r3
   1b00c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b010:	bl	a05c <__aeabi_uidivmod@plt>
   1b014:	mov	r3, r1
   1b018:	str	r3, [fp, #-20]	; 0xffffffec
   1b01c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b020:	ldr	r2, [r3, #16]
   1b024:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b028:	cmp	r2, r3
   1b02c:	bne	1b038 <_RingIO_writerRelease+0xe4>
   1b030:	mov	r3, #1
   1b034:	strh	r3, [fp, #-26]	; 0xffffffe6
   1b038:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b03c:	bl	1d48c <_RingIO_getFirstAttr>
   1b040:	mov	r3, r0
   1b044:	str	r3, [fp, #-16]
   1b048:	ldr	r3, [fp, #-16]
   1b04c:	cmp	r3, #0
   1b050:	beq	1b0a0 <_RingIO_writerRelease+0x14c>
   1b054:	ldr	r3, [fp, #-16]
   1b058:	ldr	r2, [r3]
   1b05c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b060:	ldr	r3, [r3, #16]
   1b064:	ldrsh	ip, [fp, #-26]	; 0xffffffe6
   1b068:	mov	r0, r2
   1b06c:	mov	r1, r3
   1b070:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b074:	mov	r3, ip
   1b078:	bl	1da1c <_RingIO_isOffsetInBetween>
   1b07c:	mov	r3, r0
   1b080:	lsl	r3, r3, #16
   1b084:	lsr	r3, r3, #16
   1b088:	cmp	r3, #0
   1b08c:	beq	1b0a0 <_RingIO_writerRelease+0x14c>
   1b090:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b094:	ldr	r1, [fp, #-16]
   1b098:	bl	1d654 <_RingIO_releaseAttribute>
   1b09c:	b	1b038 <_RingIO_writerRelease+0xe4>
   1b0a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b0a4:	ldr	r2, [r3, #24]
   1b0a8:	ldr	r3, [fp, #-8]
   1b0ac:	lsl	r3, r3, #7
   1b0b0:	add	r3, r2, r3
   1b0b4:	ldrh	r3, [r3, #44]	; 0x2c
   1b0b8:	and	r2, r3, #255	; 0xff
   1b0bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b0c0:	ldr	r3, [r3]
   1b0c4:	lsl	r3, r3, #8
   1b0c8:	lsl	r3, r3, #16
   1b0cc:	lsr	r3, r3, #16
   1b0d0:	orr	r3, r2, r3
   1b0d4:	and	r3, r3, #255	; 0xff
   1b0d8:	cmp	r3, #32
   1b0dc:	beq	1b154 <_RingIO_writerRelease+0x200>
   1b0e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b0e4:	ldr	r2, [r3, #8]
   1b0e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b0ec:	ldr	r3, [r3, #16]
   1b0f0:	add	r3, r2, r3
   1b0f4:	str	r3, [fp, #-12]
   1b0f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b0fc:	ldr	r2, [r3, #24]
   1b100:	ldr	r3, [fp, #-8]
   1b104:	lsl	r3, r3, #7
   1b108:	add	r3, r2, r3
   1b10c:	ldrh	r3, [r3, #44]	; 0x2c
   1b110:	mov	r2, r3
   1b114:	and	r2, r2, #255	; 0xff
   1b118:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b11c:	ldr	r3, [r3]
   1b120:	lsl	r3, r3, #16
   1b124:	lsr	r3, r3, #16
   1b128:	lsl	r3, r3, #8
   1b12c:	lsl	r3, r3, #16
   1b130:	lsr	r3, r3, #16
   1b134:	orr	r3, r2, r3
   1b138:	lsl	r3, r3, #16
   1b13c:	lsr	r3, r3, #16
   1b140:	ldr	r2, [fp, #-12]
   1b144:	mov	r0, r3
   1b148:	mov	r1, r2
   1b14c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1b150:	bl	170a4 <POOL_writeback>
   1b154:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b158:	ldr	r2, [r3, #16]
   1b15c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b160:	add	r3, r2, r3
   1b164:	mov	r0, r3
   1b168:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b16c:	bl	a05c <__aeabi_uidivmod@plt>
   1b170:	mov	r3, r1
   1b174:	mov	r2, r3
   1b178:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b17c:	str	r2, [r3, #16]
   1b180:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b184:	ldr	r2, [r3, #20]
   1b188:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b18c:	rsb	r2, r3, r2
   1b190:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b194:	str	r2, [r3, #20]
   1b198:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b19c:	ldr	r2, [r3, #36]	; 0x24
   1b1a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b1a4:	add	r2, r2, r3
   1b1a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b1ac:	str	r2, [r3, #36]	; 0x24
   1b1b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b1b4:	mov	r0, r3
   1b1b8:	sub	sp, fp, #4
   1b1bc:	pop	{fp, pc}
   1b1c0:	.word	0x0002d7ac
   1b1c4:	.word	0x80008055

0001b1c8 <_RingIO_readerRelease>:
   1b1c8:	push	{fp, lr}
   1b1cc:	add	fp, sp, #4
   1b1d0:	sub	sp, sp, #40	; 0x28
   1b1d4:	str	r0, [fp, #-40]	; 0xffffffd8
   1b1d8:	str	r1, [fp, #-44]	; 0xffffffd4
   1b1dc:	mov	r3, #33024	; 0x8100
   1b1e0:	str	r3, [fp, #-36]	; 0xffffffdc
   1b1e4:	mov	r3, #0
   1b1e8:	str	r3, [fp, #-32]	; 0xffffffe0
   1b1ec:	mov	r3, #0
   1b1f0:	strh	r3, [fp, #-26]	; 0xffffffe6
   1b1f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b1f8:	ldr	r3, [r3, #52]	; 0x34
   1b1fc:	str	r3, [fp, #-32]	; 0xffffffe0
   1b200:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b204:	ldr	r2, [r3, #20]
   1b208:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b20c:	cmp	r2, r3
   1b210:	bcs	1b220 <_RingIO_readerRelease+0x58>
   1b214:	ldr	r3, [pc, #560]	; 1b44c <_RingIO_readerRelease+0x284>
   1b218:	str	r3, [fp, #-36]	; 0xffffffdc
   1b21c:	b	1b43c <_RingIO_readerRelease+0x274>
   1b220:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b224:	ldr	r3, [r3, #16]
   1b228:	str	r3, [fp, #-20]	; 0xffffffec
   1b22c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b230:	ldr	r3, [r3, #24]
   1b234:	str	r3, [fp, #-16]
   1b238:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b23c:	ldr	r3, [r3, #20]
   1b240:	add	r3, r3, #1
   1b244:	str	r3, [fp, #-24]	; 0xffffffe8
   1b248:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b24c:	ldr	r3, [r3, #12]
   1b250:	cmp	r3, #0
   1b254:	beq	1b300 <_RingIO_readerRelease+0x138>
   1b258:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b25c:	ldr	r2, [r3, #16]
   1b260:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b264:	add	r3, r2, r3
   1b268:	mov	r0, r3
   1b26c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b270:	bl	a05c <__aeabi_uidivmod@plt>
   1b274:	mov	r3, r1
   1b278:	str	r3, [fp, #-12]
   1b27c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b280:	ldr	r2, [r3, #16]
   1b284:	ldr	r3, [fp, #-12]
   1b288:	cmp	r2, r3
   1b28c:	bne	1b298 <_RingIO_readerRelease+0xd0>
   1b290:	mov	r3, #1
   1b294:	strh	r3, [fp, #-26]	; 0xffffffe6
   1b298:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b29c:	bl	1d310 <_RingIO_getFirstAcquiredAttr>
   1b2a0:	mov	r3, r0
   1b2a4:	str	r3, [fp, #-8]
   1b2a8:	ldr	r3, [fp, #-8]
   1b2ac:	cmp	r3, #0
   1b2b0:	beq	1b300 <_RingIO_readerRelease+0x138>
   1b2b4:	ldr	r3, [fp, #-8]
   1b2b8:	ldr	r2, [r3]
   1b2bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b2c0:	ldr	r3, [r3, #16]
   1b2c4:	ldrsh	ip, [fp, #-26]	; 0xffffffe6
   1b2c8:	mov	r0, r2
   1b2cc:	mov	r1, r3
   1b2d0:	ldr	r2, [fp, #-12]
   1b2d4:	mov	r3, ip
   1b2d8:	bl	1da1c <_RingIO_isOffsetInBetween>
   1b2dc:	mov	r3, r0
   1b2e0:	lsl	r3, r3, #16
   1b2e4:	lsr	r3, r3, #16
   1b2e8:	cmp	r3, #0
   1b2ec:	beq	1b300 <_RingIO_readerRelease+0x138>
   1b2f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b2f4:	ldr	r1, [fp, #-8]
   1b2f8:	bl	1d654 <_RingIO_releaseAttribute>
   1b2fc:	b	1b298 <_RingIO_readerRelease+0xd0>
   1b300:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b304:	ldr	r2, [r3, #16]
   1b308:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b30c:	add	r3, r2, r3
   1b310:	mov	r0, r3
   1b314:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b318:	bl	a05c <__aeabi_uidivmod@plt>
   1b31c:	mov	r3, r1
   1b320:	mov	r2, r3
   1b324:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b328:	str	r2, [r3, #16]
   1b32c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b330:	ldr	r2, [r3, #20]
   1b334:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b338:	rsb	r2, r3, r2
   1b33c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b340:	str	r2, [r3, #20]
   1b344:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b348:	ldr	r2, [r3, #40]	; 0x28
   1b34c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b350:	add	r2, r2, r3
   1b354:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b358:	str	r2, [r3, #40]	; 0x28
   1b35c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b360:	ldr	r3, [r3, #20]
   1b364:	add	r2, r3, #1
   1b368:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b36c:	ldr	r3, [r3, #28]
   1b370:	cmp	r2, r3
   1b374:	beq	1b3e8 <_RingIO_readerRelease+0x220>
   1b378:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b37c:	ldr	r3, [r3, #20]
   1b380:	add	r1, r3, #1
   1b384:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b388:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b38c:	add	r3, r2, r3
   1b390:	cmp	r1, r3
   1b394:	bhi	1b3e8 <_RingIO_readerRelease+0x220>
   1b398:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b39c:	ldr	r3, [r3, #20]
   1b3a0:	add	r3, r3, #1
   1b3a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b3a8:	mov	r1, r3
   1b3ac:	bl	1db98 <_RingIO_updateAttributes>
   1b3b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b3b4:	ldr	r1, [r3, #40]	; 0x28
   1b3b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b3bc:	ldr	r2, [r3, #24]
   1b3c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b3c4:	ldr	r3, [r3, #20]
   1b3c8:	rsb	r3, r3, r2
   1b3cc:	add	r2, r1, r3
   1b3d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b3d4:	str	r2, [r3, #40]	; 0x28
   1b3d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b3dc:	ldr	r2, [r3, #24]
   1b3e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b3e4:	str	r2, [r3, #20]
   1b3e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b3ec:	ldr	r2, [r3, #24]
   1b3f0:	ldr	r3, [fp, #-16]
   1b3f4:	cmp	r2, r3
   1b3f8:	bcs	1b434 <_RingIO_readerRelease+0x26c>
   1b3fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b400:	ldr	r1, [r3, #60]	; 0x3c
   1b404:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b408:	ldr	r2, [r3, #48]	; 0x30
   1b40c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b410:	ldr	r3, [r3, #52]	; 0x34
   1b414:	rsb	r3, r3, r2
   1b418:	add	r2, r1, r3
   1b41c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b420:	str	r2, [r3, #60]	; 0x3c
   1b424:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b428:	ldr	r2, [r3, #48]	; 0x30
   1b42c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b430:	str	r2, [r3, #52]	; 0x34
   1b434:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b438:	bl	1d1b0 <_RingIO_initInstance>
   1b43c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b440:	mov	r0, r3
   1b444:	sub	sp, fp, #4
   1b448:	pop	{fp, pc}
   1b44c:	.word	0x80008055

0001b450 <_RingIO_writerSetvAttribute>:
   1b450:	push	{fp, lr}
   1b454:	add	fp, sp, #4
   1b458:	sub	sp, sp, #56	; 0x38
   1b45c:	str	r0, [fp, #-48]	; 0xffffffd0
   1b460:	str	r1, [fp, #-52]	; 0xffffffcc
   1b464:	str	r3, [fp, #-60]	; 0xffffffc4
   1b468:	strh	r2, [fp, #-54]	; 0xffffffca
   1b46c:	mov	r3, #33024	; 0x8100
   1b470:	str	r3, [fp, #-44]	; 0xffffffd4
   1b474:	mov	r3, #0
   1b478:	str	r3, [fp, #-40]	; 0xffffffd8
   1b47c:	mvn	r3, #0
   1b480:	str	r3, [fp, #-36]	; 0xffffffdc
   1b484:	mov	r3, #0
   1b488:	str	r3, [fp, #-32]	; 0xffffffe0
   1b48c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b490:	ldr	r3, [r3, #12]
   1b494:	cmp	r3, #0
   1b498:	bne	1b4a8 <_RingIO_writerSetvAttribute+0x58>
   1b49c:	ldr	r3, [pc, #1056]	; 1b8c4 <_RingIO_writerSetvAttribute+0x474>
   1b4a0:	str	r3, [fp, #-44]	; 0xffffffd4
   1b4a4:	b	1b4d8 <_RingIO_writerSetvAttribute+0x88>
   1b4a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b4ac:	ldr	r3, [r3, #52]	; 0x34
   1b4b0:	str	r3, [fp, #-40]	; 0xffffffd8
   1b4b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b4b8:	ldr	r3, [r3]
   1b4bc:	lsl	r2, r3, #5
   1b4c0:	ldr	r3, [pc, #1024]	; 1b8c8 <_RingIO_writerSetvAttribute+0x478>
   1b4c4:	add	r3, r2, r3
   1b4c8:	str	r3, [fp, #-32]	; 0xffffffe0
   1b4cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b4d0:	ldr	r3, [r3, #4]
   1b4d4:	str	r3, [fp, #-36]	; 0xffffffdc
   1b4d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1b4dc:	ldr	r3, [pc, #1000]	; 1b8cc <_RingIO_writerSetvAttribute+0x47c>
   1b4e0:	cmp	r2, r3
   1b4e4:	ble	1b670 <_RingIO_writerSetvAttribute+0x220>
   1b4e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b4ec:	cmp	r3, #34048	; 0x8500
   1b4f0:	bgt	1b670 <_RingIO_writerSetvAttribute+0x220>
   1b4f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b4f8:	ldr	r3, [r3, #20]
   1b4fc:	add	r3, r3, #1
   1b500:	str	r3, [fp, #-16]
   1b504:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b508:	ldr	r2, [r3, #36]	; 0x24
   1b50c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b510:	ldr	r3, [r3, #20]
   1b514:	add	r3, r3, #1
   1b518:	cmp	r2, r3
   1b51c:	beq	1b544 <_RingIO_writerSetvAttribute+0xf4>
   1b520:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b524:	ldr	r3, [r3, #40]	; 0x28
   1b528:	cmp	r3, #0
   1b52c:	bne	1b550 <_RingIO_writerSetvAttribute+0x100>
   1b530:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b534:	ldr	r2, [r3, #20]
   1b538:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b53c:	cmp	r2, r3
   1b540:	bne	1b550 <_RingIO_writerSetvAttribute+0x100>
   1b544:	ldr	r3, [pc, #900]	; 1b8d0 <_RingIO_writerSetvAttribute+0x480>
   1b548:	str	r3, [fp, #-44]	; 0xffffffd4
   1b54c:	b	1b588 <_RingIO_writerSetvAttribute+0x138>
   1b550:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b554:	ldr	r3, [r3, #20]
   1b558:	cmp	r3, #0
   1b55c:	beq	1b580 <_RingIO_writerSetvAttribute+0x130>
   1b560:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b564:	ldr	r2, [r3, #20]
   1b568:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b56c:	cmp	r2, r3
   1b570:	bcs	1b588 <_RingIO_writerSetvAttribute+0x138>
   1b574:	ldr	r3, [pc, #840]	; 1b8c4 <_RingIO_writerSetvAttribute+0x474>
   1b578:	str	r3, [fp, #-44]	; 0xffffffd4
   1b57c:	b	1b588 <_RingIO_writerSetvAttribute+0x138>
   1b580:	mov	r3, #0
   1b584:	str	r3, [fp, #-52]	; 0xffffffcc
   1b588:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1b58c:	ldr	r3, [pc, #824]	; 1b8cc <_RingIO_writerSetvAttribute+0x47c>
   1b590:	cmp	r2, r3
   1b594:	ble	1b670 <_RingIO_writerSetvAttribute+0x220>
   1b598:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b59c:	cmp	r3, #34048	; 0x8500
   1b5a0:	bgt	1b670 <_RingIO_writerSetvAttribute+0x220>
   1b5a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b5a8:	ldr	r3, [r3, #52]	; 0x34
   1b5ac:	add	r3, r3, #1
   1b5b0:	str	r3, [fp, #-12]
   1b5b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b5b8:	ldr	r2, [r3, #24]
   1b5bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b5c0:	ldr	r3, [r3, #28]
   1b5c4:	add	r3, r2, r3
   1b5c8:	mov	r0, r3
   1b5cc:	ldr	r1, [fp, #-12]
   1b5d0:	bl	a05c <__aeabi_uidivmod@plt>
   1b5d4:	mov	r3, r1
   1b5d8:	mov	r2, r3
   1b5dc:	ldr	r3, [fp, #-12]
   1b5e0:	rsb	r3, r2, r3
   1b5e4:	str	r3, [fp, #-24]	; 0xffffffe8
   1b5e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b5ec:	ldr	r2, [r3, #60]	; 0x3c
   1b5f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b5f4:	cmp	r2, r3
   1b5f8:	movcc	r3, r2
   1b5fc:	str	r3, [fp, #-20]	; 0xffffffec
   1b600:	ldr	r3, [fp, #8]
   1b604:	add	r2, r3, #16
   1b608:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b60c:	cmp	r2, r3
   1b610:	bls	1b670 <_RingIO_writerSetvAttribute+0x220>
   1b614:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b618:	ldr	r2, [r3, #60]	; 0x3c
   1b61c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b620:	rsb	r2, r3, r2
   1b624:	ldr	r3, [fp, #8]
   1b628:	add	r3, r3, #16
   1b62c:	cmp	r2, r3
   1b630:	bcs	1b640 <_RingIO_writerSetvAttribute+0x1f0>
   1b634:	ldr	r3, [pc, #648]	; 1b8c4 <_RingIO_writerSetvAttribute+0x474>
   1b638:	str	r3, [fp, #-44]	; 0xffffffd4
   1b63c:	b	1b670 <_RingIO_writerSetvAttribute+0x220>
   1b640:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b644:	ldr	r2, [r3, #52]	; 0x34
   1b648:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b64c:	rsb	r2, r3, r2
   1b650:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b654:	str	r2, [r3, #52]	; 0x34
   1b658:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b65c:	ldr	r2, [r3, #60]	; 0x3c
   1b660:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b664:	rsb	r2, r3, r2
   1b668:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b66c:	str	r2, [r3, #60]	; 0x3c
   1b670:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1b674:	ldr	r3, [pc, #592]	; 1b8cc <_RingIO_writerSetvAttribute+0x47c>
   1b678:	cmp	r2, r3
   1b67c:	ble	1b8b4 <_RingIO_writerSetvAttribute+0x464>
   1b680:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b684:	cmp	r3, #34048	; 0x8500
   1b688:	bgt	1b8b4 <_RingIO_writerSetvAttribute+0x464>
   1b68c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b690:	ldr	r3, [r3, #52]	; 0x34
   1b694:	add	r3, r3, #1
   1b698:	str	r3, [fp, #-12]
   1b69c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b6a0:	ldr	r2, [r3, #24]
   1b6a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b6a8:	ldr	r3, [r3, #28]
   1b6ac:	add	r3, r2, r3
   1b6b0:	mov	r0, r3
   1b6b4:	ldr	r1, [fp, #-12]
   1b6b8:	bl	a05c <__aeabi_uidivmod@plt>
   1b6bc:	mov	r3, r1
   1b6c0:	str	r3, [fp, #-8]
   1b6c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b6c8:	ldr	r3, [r3, #12]
   1b6cc:	mov	r2, r3
   1b6d0:	ldr	r3, [fp, #-8]
   1b6d4:	add	r3, r2, r3
   1b6d8:	str	r3, [fp, #-28]	; 0xffffffe4
   1b6dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b6e0:	ldr	r2, [r3, #16]
   1b6e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b6e8:	add	r3, r2, r3
   1b6ec:	mov	r0, r3
   1b6f0:	ldr	r1, [fp, #-16]
   1b6f4:	bl	a05c <__aeabi_uidivmod@plt>
   1b6f8:	mov	r3, r1
   1b6fc:	mov	r2, r3
   1b700:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b704:	str	r2, [r3]
   1b708:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b70c:	ldr	r2, [r3, #64]	; 0x40
   1b710:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b714:	str	r2, [r3, #4]
   1b718:	ldr	r3, [fp, #8]
   1b71c:	lsl	r3, r3, #16
   1b720:	lsr	r2, r3, #16
   1b724:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b728:	strh	r2, [r3, #10]
   1b72c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b730:	ldrh	r3, [fp, #-54]	; 0xffffffca
   1b734:	strh	r3, [r2, #8]
   1b738:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b73c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b740:	str	r3, [r2, #12]
   1b744:	ldr	r3, [fp, #8]
   1b748:	cmp	r3, #0
   1b74c:	beq	1b768 <_RingIO_writerSetvAttribute+0x318>
   1b750:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b754:	add	r3, r3, #16
   1b758:	mov	r0, r3
   1b75c:	ldr	r1, [fp, #4]
   1b760:	ldr	r2, [fp, #8]
   1b764:	bl	9dec <memcpy@plt>
   1b768:	ldr	r2, [fp, #-8]
   1b76c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b770:	str	r2, [r3, #64]	; 0x40
   1b774:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b778:	ldr	r2, [r3, #60]	; 0x3c
   1b77c:	ldr	r3, [fp, #8]
   1b780:	rsb	r3, r3, r2
   1b784:	sub	r2, r3, #16
   1b788:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b78c:	str	r2, [r3, #60]	; 0x3c
   1b790:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b794:	ldr	r2, [r3, #28]
   1b798:	ldr	r3, [fp, #8]
   1b79c:	add	r3, r2, r3
   1b7a0:	add	r2, r3, #16
   1b7a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b7a8:	str	r2, [r3, #28]
   1b7ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b7b0:	ldr	r3, [r3, #20]
   1b7b4:	cmp	r3, #0
   1b7b8:	bne	1b814 <_RingIO_writerSetvAttribute+0x3c4>
   1b7bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b7c0:	ldr	r2, [r3, #24]
   1b7c4:	ldr	r3, [fp, #8]
   1b7c8:	add	r3, r2, r3
   1b7cc:	add	r3, r3, #16
   1b7d0:	mov	r0, r3
   1b7d4:	ldr	r1, [fp, #-12]
   1b7d8:	bl	a05c <__aeabi_uidivmod@plt>
   1b7dc:	mov	r3, r1
   1b7e0:	mov	r2, r3
   1b7e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b7e8:	str	r2, [r3, #24]
   1b7ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b7f0:	mov	r3, #0
   1b7f4:	str	r3, [r2, #28]
   1b7f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b7fc:	ldr	r2, [r3, #56]	; 0x38
   1b800:	ldr	r3, [fp, #8]
   1b804:	add	r3, r2, r3
   1b808:	add	r2, r3, #16
   1b80c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b810:	str	r2, [r3, #56]	; 0x38
   1b814:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b818:	ldr	r2, [r3, #24]
   1b81c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b820:	lsl	r3, r3, #7
   1b824:	add	r3, r2, r3
   1b828:	ldrh	r3, [r3, #46]	; 0x2e
   1b82c:	and	r2, r3, #255	; 0xff
   1b830:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b834:	ldr	r3, [r3]
   1b838:	lsl	r3, r3, #8
   1b83c:	lsl	r3, r3, #16
   1b840:	lsr	r3, r3, #16
   1b844:	orr	r3, r2, r3
   1b848:	and	r3, r3, #255	; 0xff
   1b84c:	cmp	r3, #32
   1b850:	beq	1b8b4 <_RingIO_writerSetvAttribute+0x464>
   1b854:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b858:	ldr	r2, [r3, #24]
   1b85c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b860:	lsl	r3, r3, #7
   1b864:	add	r3, r2, r3
   1b868:	ldrh	r3, [r3, #46]	; 0x2e
   1b86c:	mov	r2, r3
   1b870:	and	r2, r2, #255	; 0xff
   1b874:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b878:	ldr	r3, [r3]
   1b87c:	lsl	r3, r3, #16
   1b880:	lsr	r3, r3, #16
   1b884:	lsl	r3, r3, #8
   1b888:	lsl	r3, r3, #16
   1b88c:	lsr	r3, r3, #16
   1b890:	orr	r3, r2, r3
   1b894:	lsl	r3, r3, #16
   1b898:	lsr	r2, r3, #16
   1b89c:	ldr	r3, [fp, #8]
   1b8a0:	add	r3, r3, #16
   1b8a4:	mov	r0, r2
   1b8a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b8ac:	mov	r2, r3
   1b8b0:	bl	170a4 <POOL_writeback>
   1b8b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b8b8:	mov	r0, r3
   1b8bc:	sub	sp, fp, #4
   1b8c0:	pop	{fp, pc}
   1b8c4:	.word	0x80008055
   1b8c8:	.word	0x0002d7ac
   1b8cc:	.word	0x00007fff
   1b8d0:	.word	0x8000805d

0001b8d4 <_RingIO_readerGetvAttribute>:
   1b8d4:	push	{fp, lr}
   1b8d8:	add	fp, sp, #4
   1b8dc:	sub	sp, sp, #48	; 0x30
   1b8e0:	str	r0, [fp, #-40]	; 0xffffffd8
   1b8e4:	str	r1, [fp, #-44]	; 0xffffffd4
   1b8e8:	str	r2, [fp, #-48]	; 0xffffffd0
   1b8ec:	str	r3, [fp, #-52]	; 0xffffffcc
   1b8f0:	mov	r3, #33024	; 0x8100
   1b8f4:	str	r3, [fp, #-32]	; 0xffffffe0
   1b8f8:	mov	r3, #0
   1b8fc:	str	r3, [fp, #-28]	; 0xffffffe4
   1b900:	mov	r3, #0
   1b904:	str	r3, [fp, #-24]	; 0xffffffe8
   1b908:	mvn	r3, #0
   1b90c:	str	r3, [fp, #-20]	; 0xffffffec
   1b910:	mov	r3, #0
   1b914:	str	r3, [fp, #-16]
   1b918:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b91c:	ldr	r3, [r3, #12]
   1b920:	cmp	r3, #0
   1b924:	bne	1b934 <_RingIO_readerGetvAttribute+0x60>
   1b928:	ldr	r3, [pc, #1128]	; 1bd98 <_RingIO_readerGetvAttribute+0x4c4>
   1b92c:	str	r3, [fp, #-32]	; 0xffffffe0
   1b930:	b	1b97c <_RingIO_readerGetvAttribute+0xa8>
   1b934:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b938:	ldr	r3, [r3, #52]	; 0x34
   1b93c:	str	r3, [fp, #-28]	; 0xffffffe4
   1b940:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b944:	ldr	r3, [r3]
   1b948:	lsl	r2, r3, #5
   1b94c:	ldr	r3, [pc, #1096]	; 1bd9c <_RingIO_readerGetvAttribute+0x4c8>
   1b950:	add	r3, r2, r3
   1b954:	str	r3, [fp, #-24]	; 0xffffffe8
   1b958:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b95c:	ldr	r3, [r3, #4]
   1b960:	str	r3, [fp, #-20]	; 0xffffffec
   1b964:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b968:	ldr	r3, [r3, #56]	; 0x38
   1b96c:	cmp	r3, #0
   1b970:	bne	1b97c <_RingIO_readerGetvAttribute+0xa8>
   1b974:	ldr	r3, [pc, #1052]	; 1bd98 <_RingIO_readerGetvAttribute+0x4c4>
   1b978:	str	r3, [fp, #-32]	; 0xffffffe0
   1b97c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b980:	ldr	r3, [pc, #1048]	; 1bda0 <_RingIO_readerGetvAttribute+0x4cc>
   1b984:	cmp	r2, r3
   1b988:	ble	1bd88 <_RingIO_readerGetvAttribute+0x4b4>
   1b98c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b990:	cmp	r3, #34048	; 0x8500
   1b994:	bgt	1bd88 <_RingIO_readerGetvAttribute+0x4b4>
   1b998:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b99c:	ldr	r3, [r3, #20]
   1b9a0:	add	r3, r3, #1
   1b9a4:	str	r3, [fp, #-8]
   1b9a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b9ac:	bl	1d48c <_RingIO_getFirstAttr>
   1b9b0:	mov	r3, r0
   1b9b4:	str	r3, [fp, #-12]
   1b9b8:	ldr	r3, [fp, #-12]
   1b9bc:	ldr	r1, [r3]
   1b9c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b9c4:	ldr	r2, [r3, #16]
   1b9c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b9cc:	ldr	r3, [r3, #20]
   1b9d0:	add	r3, r2, r3
   1b9d4:	cmp	r1, r3
   1b9d8:	beq	1ba14 <_RingIO_readerGetvAttribute+0x140>
   1b9dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b9e0:	ldr	r2, [r3, #16]
   1b9e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b9e8:	ldr	r3, [r3, #20]
   1b9ec:	add	r3, r2, r3
   1b9f0:	mov	r0, r3
   1b9f4:	ldr	r1, [fp, #-8]
   1b9f8:	bl	a05c <__aeabi_uidivmod@plt>
   1b9fc:	mov	r3, r1
   1ba00:	mov	r2, r3
   1ba04:	ldr	r3, [fp, #-12]
   1ba08:	ldr	r3, [r3]
   1ba0c:	cmp	r2, r3
   1ba10:	bne	1bd78 <_RingIO_readerGetvAttribute+0x4a4>
   1ba14:	ldr	r3, [fp, #-12]
   1ba18:	ldrh	r2, [r3, #8]
   1ba1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ba20:	strh	r2, [r3]
   1ba24:	ldr	r3, [fp, #-12]
   1ba28:	ldr	r2, [r3, #12]
   1ba2c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ba30:	str	r2, [r3]
   1ba34:	ldr	r3, [fp, #4]
   1ba38:	cmp	r3, #0
   1ba3c:	bne	1ba5c <_RingIO_readerGetvAttribute+0x188>
   1ba40:	ldr	r3, [fp, #-12]
   1ba44:	ldrh	r3, [r3, #10]
   1ba48:	cmp	r3, #0
   1ba4c:	beq	1bb6c <_RingIO_readerGetvAttribute+0x298>
   1ba50:	ldr	r3, [pc, #844]	; 1bda4 <_RingIO_readerGetvAttribute+0x4d0>
   1ba54:	str	r3, [fp, #-32]	; 0xffffffe0
   1ba58:	b	1bb6c <_RingIO_readerGetvAttribute+0x298>
   1ba5c:	ldr	r3, [fp, #4]
   1ba60:	ldr	r2, [r3]
   1ba64:	ldr	r3, [fp, #-12]
   1ba68:	ldrh	r3, [r3, #10]
   1ba6c:	cmp	r2, r3
   1ba70:	bcs	1ba94 <_RingIO_readerGetvAttribute+0x1c0>
   1ba74:	ldr	r3, [fp, #-12]
   1ba78:	ldrh	r3, [r3, #10]
   1ba7c:	mov	r2, r3
   1ba80:	ldr	r3, [fp, #4]
   1ba84:	str	r2, [r3]
   1ba88:	ldr	r3, [pc, #776]	; 1bd98 <_RingIO_readerGetvAttribute+0x4c4>
   1ba8c:	str	r3, [fp, #-32]	; 0xffffffe0
   1ba90:	b	1bb6c <_RingIO_readerGetvAttribute+0x298>
   1ba94:	ldr	r3, [fp, #-12]
   1ba98:	ldrh	r3, [r3, #10]
   1ba9c:	mov	r2, r3
   1baa0:	ldr	r3, [fp, #4]
   1baa4:	str	r2, [r3]
   1baa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1baac:	ldr	r2, [r3, #24]
   1bab0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bab4:	lsl	r3, r3, #7
   1bab8:	add	r3, r2, r3
   1babc:	ldrh	r3, [r3, #46]	; 0x2e
   1bac0:	and	r2, r3, #255	; 0xff
   1bac4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bac8:	ldr	r3, [r3]
   1bacc:	lsl	r3, r3, #8
   1bad0:	lsl	r3, r3, #16
   1bad4:	lsr	r3, r3, #16
   1bad8:	orr	r3, r2, r3
   1badc:	and	r3, r3, #255	; 0xff
   1bae0:	cmp	r3, #32
   1bae4:	beq	1bb4c <_RingIO_readerGetvAttribute+0x278>
   1bae8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1baec:	ldr	r2, [r3, #24]
   1baf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1baf4:	lsl	r3, r3, #7
   1baf8:	add	r3, r2, r3
   1bafc:	ldrh	r3, [r3, #46]	; 0x2e
   1bb00:	mov	r2, r3
   1bb04:	and	r2, r2, #255	; 0xff
   1bb08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bb0c:	ldr	r3, [r3]
   1bb10:	lsl	r3, r3, #16
   1bb14:	lsr	r3, r3, #16
   1bb18:	lsl	r3, r3, #8
   1bb1c:	lsl	r3, r3, #16
   1bb20:	lsr	r3, r3, #16
   1bb24:	orr	r3, r2, r3
   1bb28:	lsl	r3, r3, #16
   1bb2c:	lsr	r2, r3, #16
   1bb30:	ldr	r3, [fp, #-12]
   1bb34:	add	r1, r3, #16
   1bb38:	ldr	r3, [fp, #4]
   1bb3c:	ldr	r3, [r3]
   1bb40:	mov	r0, r2
   1bb44:	mov	r2, r3
   1bb48:	bl	17224 <POOL_invalidate>
   1bb4c:	ldr	r3, [fp, #-12]
   1bb50:	add	r2, r3, #16
   1bb54:	ldr	r3, [fp, #4]
   1bb58:	ldr	r3, [r3]
   1bb5c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1bb60:	mov	r1, r2
   1bb64:	mov	r2, r3
   1bb68:	bl	9dec <memcpy@plt>
   1bb6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1bb70:	ldr	r3, [pc, #552]	; 1bda0 <_RingIO_readerGetvAttribute+0x4cc>
   1bb74:	cmp	r2, r3
   1bb78:	ble	1bd80 <_RingIO_readerGetvAttribute+0x4ac>
   1bb7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bb80:	cmp	r3, #34048	; 0x8500
   1bb84:	bgt	1bd80 <_RingIO_readerGetvAttribute+0x4ac>
   1bb88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bb8c:	ldr	r2, [r3, #56]	; 0x38
   1bb90:	ldr	r3, [fp, #-12]
   1bb94:	ldrh	r3, [r3, #10]
   1bb98:	rsb	r3, r3, r2
   1bb9c:	sub	r2, r3, #16
   1bba0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bba4:	str	r2, [r3, #56]	; 0x38
   1bba8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bbac:	ldr	r3, [r3, #20]
   1bbb0:	cmp	r3, #0
   1bbb4:	bne	1bc28 <_RingIO_readerGetvAttribute+0x354>
   1bbb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bbbc:	ldr	r2, [r3, #60]	; 0x3c
   1bbc0:	ldr	r3, [fp, #-12]
   1bbc4:	ldrh	r3, [r3, #10]
   1bbc8:	add	r3, r2, r3
   1bbcc:	add	r2, r3, #16
   1bbd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bbd4:	str	r2, [r3, #60]	; 0x3c
   1bbd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bbdc:	ldr	r2, [r3, #24]
   1bbe0:	ldr	r3, [fp, #-12]
   1bbe4:	ldrh	r3, [r3, #10]
   1bbe8:	add	r3, r2, r3
   1bbec:	add	r2, r3, #16
   1bbf0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bbf4:	ldr	r3, [r3, #52]	; 0x34
   1bbf8:	add	r3, r3, #1
   1bbfc:	mov	r0, r2
   1bc00:	mov	r1, r3
   1bc04:	bl	a05c <__aeabi_uidivmod@plt>
   1bc08:	mov	r3, r1
   1bc0c:	mov	r2, r3
   1bc10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bc14:	str	r2, [r3, #24]
   1bc18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bc1c:	mov	r3, #0
   1bc20:	str	r3, [r2, #28]
   1bc24:	b	1bc48 <_RingIO_readerGetvAttribute+0x374>
   1bc28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bc2c:	ldr	r2, [r3, #28]
   1bc30:	ldr	r3, [fp, #-12]
   1bc34:	ldrh	r3, [r3, #10]
   1bc38:	add	r3, r2, r3
   1bc3c:	add	r2, r3, #16
   1bc40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bc44:	str	r2, [r3, #28]
   1bc48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bc4c:	bl	1d48c <_RingIO_getFirstAttr>
   1bc50:	mov	r3, r0
   1bc54:	str	r3, [fp, #-12]
   1bc58:	ldr	r3, [fp, #-12]
   1bc5c:	cmp	r3, #0
   1bc60:	beq	1bd4c <_RingIO_readerGetvAttribute+0x478>
   1bc64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bc68:	ldr	r2, [r3, #16]
   1bc6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bc70:	ldr	r3, [r3, #20]
   1bc74:	add	r3, r2, r3
   1bc78:	mov	r0, r3
   1bc7c:	ldr	r1, [fp, #-8]
   1bc80:	bl	a05c <__aeabi_uidivmod@plt>
   1bc84:	mov	r3, r1
   1bc88:	mov	r2, r3
   1bc8c:	ldr	r3, [fp, #-12]
   1bc90:	ldr	r3, [r3]
   1bc94:	cmp	r2, r3
   1bc98:	bne	1bca4 <_RingIO_readerGetvAttribute+0x3d0>
   1bc9c:	ldr	r3, [pc, #260]	; 1bda8 <_RingIO_readerGetvAttribute+0x4d4>
   1bca0:	str	r3, [fp, #-32]	; 0xffffffe0
   1bca4:	ldr	r2, [fp, #-12]
   1bca8:	mvn	r3, #0
   1bcac:	str	r3, [r2, #4]
   1bcb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bcb4:	ldr	r2, [r3, #24]
   1bcb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bcbc:	lsl	r3, r3, #7
   1bcc0:	add	r3, r2, r3
   1bcc4:	ldrh	r3, [r3, #46]	; 0x2e
   1bcc8:	and	r2, r3, #255	; 0xff
   1bccc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bcd0:	ldr	r3, [r3]
   1bcd4:	lsl	r3, r3, #8
   1bcd8:	lsl	r3, r3, #16
   1bcdc:	lsr	r3, r3, #16
   1bce0:	orr	r3, r2, r3
   1bce4:	and	r3, r3, #255	; 0xff
   1bce8:	cmp	r3, #32
   1bcec:	beq	1bd80 <_RingIO_readerGetvAttribute+0x4ac>
   1bcf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bcf4:	ldr	r2, [r3, #24]
   1bcf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bcfc:	lsl	r3, r3, #7
   1bd00:	add	r3, r2, r3
   1bd04:	ldrh	r3, [r3, #46]	; 0x2e
   1bd08:	mov	r2, r3
   1bd0c:	and	r2, r2, #255	; 0xff
   1bd10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bd14:	ldr	r3, [r3]
   1bd18:	lsl	r3, r3, #16
   1bd1c:	lsr	r3, r3, #16
   1bd20:	lsl	r3, r3, #8
   1bd24:	lsl	r3, r3, #16
   1bd28:	lsr	r3, r3, #16
   1bd2c:	orr	r3, r2, r3
   1bd30:	lsl	r3, r3, #16
   1bd34:	lsr	r3, r3, #16
   1bd38:	mov	r0, r3
   1bd3c:	ldr	r1, [fp, #-12]
   1bd40:	mov	r2, #16
   1bd44:	bl	170a4 <POOL_writeback>
   1bd48:	b	1bd80 <_RingIO_readerGetvAttribute+0x4ac>
   1bd4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bd50:	add	r3, r3, #128	; 0x80
   1bd54:	str	r3, [fp, #-16]
   1bd58:	ldr	r3, [fp, #-16]
   1bd5c:	ldr	r3, [r3, #28]
   1bd60:	cmp	r3, #0
   1bd64:	bne	1bd80 <_RingIO_readerGetvAttribute+0x4ac>
   1bd68:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1bd6c:	mvn	r3, #0
   1bd70:	str	r3, [r2, #64]	; 0x40
   1bd74:	b	1bd80 <_RingIO_readerGetvAttribute+0x4ac>
   1bd78:	ldr	r3, [pc, #44]	; 1bdac <_RingIO_readerGetvAttribute+0x4d8>
   1bd7c:	str	r3, [fp, #-32]	; 0xffffffe0
   1bd80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bd84:	bl	1d1b0 <_RingIO_initInstance>
   1bd88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bd8c:	mov	r0, r3
   1bd90:	sub	sp, fp, #4
   1bd94:	pop	{fp, pc}
   1bd98:	.word	0x80008055
   1bd9c:	.word	0x0002d7ac
   1bda0:	.word	0x00007fff
   1bda4:	.word	0x8000805a
   1bda8:	.word	0x00008101
   1bdac:	.word	0x80008059

0001bdb0 <_RingIO_writerFlush>:
   1bdb0:	push	{fp, lr}
   1bdb4:	add	fp, sp, #4
   1bdb8:	sub	sp, sp, #72	; 0x48
   1bdbc:	str	r0, [fp, #-64]	; 0xffffffc0
   1bdc0:	str	r2, [fp, #-72]	; 0xffffffb8
   1bdc4:	str	r3, [fp, #-76]	; 0xffffffb4
   1bdc8:	strh	r1, [fp, #-66]	; 0xffffffbe
   1bdcc:	mov	r3, #33024	; 0x8100
   1bdd0:	str	r3, [fp, #-60]	; 0xffffffc4
   1bdd4:	mov	r3, #0
   1bdd8:	str	r3, [fp, #-56]	; 0xffffffc8
   1bddc:	mov	r3, #0
   1bde0:	str	r3, [fp, #-52]	; 0xffffffcc
   1bde4:	mov	r3, #0
   1bde8:	str	r3, [fp, #-48]	; 0xffffffd0
   1bdec:	mov	r3, #0
   1bdf0:	str	r3, [fp, #-44]	; 0xffffffd4
   1bdf4:	mov	r3, #0
   1bdf8:	str	r3, [fp, #-40]	; 0xffffffd8
   1bdfc:	mov	r3, #0
   1be00:	str	r3, [fp, #-36]	; 0xffffffdc
   1be04:	mov	r3, #0
   1be08:	strh	r3, [fp, #-30]	; 0xffffffe2
   1be0c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1be10:	ldr	r3, [r3, #52]	; 0x34
   1be14:	str	r3, [fp, #-56]	; 0xffffffc8
   1be18:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1be1c:	ldr	r3, [r3]
   1be20:	lsl	r2, r3, #5
   1be24:	ldr	r3, [pc, #1500]	; 1c408 <_RingIO_writerFlush+0x658>
   1be28:	add	r3, r2, r3
   1be2c:	str	r3, [fp, #-44]	; 0xffffffd4
   1be30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1be34:	ldr	r3, [r3, #4]
   1be38:	str	r3, [fp, #-8]
   1be3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1be40:	ldr	r3, [r3, #56]	; 0x38
   1be44:	cmp	r3, #0
   1be48:	bne	1be7c <_RingIO_writerFlush+0xcc>
   1be4c:	ldrsh	r3, [fp, #-66]	; 0xffffffbe
   1be50:	cmp	r3, #0
   1be54:	bne	1be7c <_RingIO_writerFlush+0xcc>
   1be58:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1be5c:	mvn	r3, #0
   1be60:	strh	r3, [r2]
   1be64:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1be68:	mov	r3, #0
   1be6c:	str	r3, [r2]
   1be70:	ldr	r3, [pc, #1428]	; 1c40c <_RingIO_writerFlush+0x65c>
   1be74:	str	r3, [fp, #-60]	; 0xffffffc4
   1be78:	b	1c3f8 <_RingIO_writerFlush+0x648>
   1be7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1be80:	ldr	r3, [r3, #20]
   1be84:	add	r3, r3, #1
   1be88:	str	r3, [fp, #-20]	; 0xffffffec
   1be8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1be90:	ldr	r3, [r3, #56]	; 0x38
   1be94:	cmp	r3, #0
   1be98:	beq	1c0fc <_RingIO_writerFlush+0x34c>
   1be9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bea0:	ldr	r3, [r3, #64]	; 0x40
   1bea4:	str	r3, [fp, #-28]	; 0xffffffe4
   1bea8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1beac:	ldr	r3, [r3, #12]
   1beb0:	mov	r2, r3
   1beb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1beb8:	add	r3, r2, r3
   1bebc:	str	r3, [fp, #-52]	; 0xffffffcc
   1bec0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bec4:	ldr	r2, [r3, #24]
   1bec8:	ldr	r3, [fp, #-8]
   1becc:	lsl	r3, r3, #7
   1bed0:	add	r3, r2, r3
   1bed4:	ldrh	r3, [r3, #46]	; 0x2e
   1bed8:	and	r2, r3, #255	; 0xff
   1bedc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bee0:	ldr	r3, [r3]
   1bee4:	lsl	r3, r3, #8
   1bee8:	lsl	r3, r3, #16
   1beec:	lsr	r3, r3, #16
   1bef0:	orr	r3, r2, r3
   1bef4:	and	r3, r3, #255	; 0xff
   1bef8:	cmp	r3, #32
   1befc:	beq	1bf58 <_RingIO_writerFlush+0x1a8>
   1bf00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bf04:	ldr	r2, [r3, #24]
   1bf08:	ldr	r3, [fp, #-8]
   1bf0c:	lsl	r3, r3, #7
   1bf10:	add	r3, r2, r3
   1bf14:	ldrh	r3, [r3, #46]	; 0x2e
   1bf18:	mov	r2, r3
   1bf1c:	and	r2, r2, #255	; 0xff
   1bf20:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bf24:	ldr	r3, [r3]
   1bf28:	lsl	r3, r3, #16
   1bf2c:	lsr	r3, r3, #16
   1bf30:	lsl	r3, r3, #8
   1bf34:	lsl	r3, r3, #16
   1bf38:	lsr	r3, r3, #16
   1bf3c:	orr	r3, r2, r3
   1bf40:	lsl	r3, r3, #16
   1bf44:	lsr	r3, r3, #16
   1bf48:	mov	r0, r3
   1bf4c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1bf50:	mov	r2, #16
   1bf54:	bl	17224 <POOL_invalidate>
   1bf58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bf5c:	ldrh	r3, [r3, #10]
   1bf60:	mov	r2, r3
   1bf64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bf68:	add	r3, r2, r3
   1bf6c:	add	r3, r3, #16
   1bf70:	str	r3, [fp, #-40]	; 0xffffffd8
   1bf74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bf78:	ldr	r3, [r3, #4]
   1bf7c:	str	r3, [fp, #-28]	; 0xffffffe4
   1bf80:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bf84:	ldr	r3, [r3, #4]
   1bf88:	cmn	r3, #1
   1bf8c:	bne	1bea8 <_RingIO_writerFlush+0xf8>
   1bf90:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bf94:	ldr	r2, [r3, #60]	; 0x3c
   1bf98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bf9c:	add	r2, r2, r3
   1bfa0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bfa4:	str	r2, [r3, #60]	; 0x3c
   1bfa8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bfac:	mvn	r3, #0
   1bfb0:	str	r3, [r2, #64]	; 0x40
   1bfb4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bfb8:	ldr	r3, [r3, #52]	; 0x34
   1bfbc:	add	r3, r3, #1
   1bfc0:	str	r3, [fp, #-24]	; 0xffffffe8
   1bfc4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1bfc8:	ldr	r3, [r3, #24]
   1bfcc:	str	r3, [fp, #-12]
   1bfd0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1bfd4:	ldr	r1, [r3, #24]
   1bfd8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1bfdc:	ldr	r2, [r3, #28]
   1bfe0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bfe4:	rsb	r3, r3, r2
   1bfe8:	add	r2, r1, r3
   1bfec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bff0:	add	r3, r2, r3
   1bff4:	mov	r0, r3
   1bff8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bffc:	bl	a05c <__aeabi_uidivmod@plt>
   1c000:	mov	r3, r1
   1c004:	mov	r2, r3
   1c008:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c00c:	str	r2, [r3, #24]
   1c010:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c014:	ldr	r2, [r3, #24]
   1c018:	ldr	r3, [fp, #-12]
   1c01c:	cmp	r2, r3
   1c020:	bne	1c040 <_RingIO_writerFlush+0x290>
   1c024:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c028:	ldr	r2, [r3, #56]	; 0x38
   1c02c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c030:	cmp	r2, r3
   1c034:	bne	1c040 <_RingIO_writerFlush+0x290>
   1c038:	mov	r3, #1
   1c03c:	strh	r3, [fp, #-30]	; 0xffffffe2
   1c040:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c044:	ldr	r1, [r3, #56]	; 0x38
   1c048:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c04c:	ldr	r2, [r3, #28]
   1c050:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c054:	rsb	r3, r3, r2
   1c058:	add	r2, r1, r3
   1c05c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c060:	str	r2, [r3, #56]	; 0x38
   1c064:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1c068:	mov	r3, #0
   1c06c:	str	r3, [r2, #28]
   1c070:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c074:	ldr	r2, [r3, #52]	; 0x34
   1c078:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c07c:	ldr	r3, [r3, #48]	; 0x30
   1c080:	cmp	r2, r3
   1c084:	beq	1c0fc <_RingIO_writerFlush+0x34c>
   1c088:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c08c:	ldr	r2, [r3, #52]	; 0x34
   1c090:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c094:	ldr	r3, [r3, #24]
   1c098:	ldrsh	ip, [fp, #-30]	; 0xffffffe2
   1c09c:	mov	r0, r2
   1c0a0:	mov	r1, r3
   1c0a4:	ldr	r2, [fp, #-12]
   1c0a8:	mov	r3, ip
   1c0ac:	bl	1da1c <_RingIO_isOffsetInBetween>
   1c0b0:	mov	r3, r0
   1c0b4:	lsl	r3, r3, #16
   1c0b8:	lsr	r3, r3, #16
   1c0bc:	cmp	r3, #0
   1c0c0:	beq	1c0fc <_RingIO_writerFlush+0x34c>
   1c0c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c0c8:	ldr	r1, [r3, #60]	; 0x3c
   1c0cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c0d0:	ldr	r2, [r3, #48]	; 0x30
   1c0d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c0d8:	ldr	r3, [r3, #52]	; 0x34
   1c0dc:	rsb	r3, r3, r2
   1c0e0:	add	r2, r1, r3
   1c0e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c0e8:	str	r2, [r3, #60]	; 0x3c
   1c0ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c0f0:	ldr	r2, [r3, #48]	; 0x30
   1c0f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c0f8:	str	r2, [r3, #52]	; 0x34
   1c0fc:	ldrsh	r3, [fp, #-66]	; 0xffffffbe
   1c100:	cmp	r3, #0
   1c104:	bne	1c1b0 <_RingIO_writerFlush+0x400>
   1c108:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c10c:	ldr	r2, [r3]
   1c110:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c114:	ldr	r3, [r3, #16]
   1c118:	cmp	r2, r3
   1c11c:	bne	1c150 <_RingIO_writerFlush+0x3a0>
   1c120:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c124:	ldr	r2, [r3, #36]	; 0x24
   1c128:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c12c:	cmp	r2, r3
   1c130:	bne	1c144 <_RingIO_writerFlush+0x394>
   1c134:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c138:	ldr	r3, [r3, #36]	; 0x24
   1c13c:	str	r3, [fp, #-36]	; 0xffffffdc
   1c140:	b	1c1bc <_RingIO_writerFlush+0x40c>
   1c144:	mov	r3, #0
   1c148:	str	r3, [fp, #-36]	; 0xffffffdc
   1c14c:	b	1c1bc <_RingIO_writerFlush+0x40c>
   1c150:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c154:	ldr	r2, [r3]
   1c158:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c15c:	ldr	r3, [r3, #16]
   1c160:	cmp	r2, r3
   1c164:	bcs	1c184 <_RingIO_writerFlush+0x3d4>
   1c168:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c16c:	ldr	r2, [r3, #16]
   1c170:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c174:	ldr	r3, [r3]
   1c178:	rsb	r3, r3, r2
   1c17c:	str	r3, [fp, #-36]	; 0xffffffdc
   1c180:	b	1c1bc <_RingIO_writerFlush+0x40c>
   1c184:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c188:	ldr	r2, [r3, #16]
   1c18c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c190:	ldr	r3, [r3]
   1c194:	rsb	r2, r3, r2
   1c198:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c19c:	ldr	r3, [r3, #20]
   1c1a0:	add	r3, r2, r3
   1c1a4:	add	r3, r3, #1
   1c1a8:	str	r3, [fp, #-36]	; 0xffffffdc
   1c1ac:	b	1c1bc <_RingIO_writerFlush+0x40c>
   1c1b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c1b4:	ldr	r3, [r3, #36]	; 0x24
   1c1b8:	str	r3, [fp, #-36]	; 0xffffffdc
   1c1bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c1c0:	ldr	r2, [r3, #40]	; 0x28
   1c1c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c1c8:	add	r2, r2, r3
   1c1cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c1d0:	str	r2, [r3, #40]	; 0x28
   1c1d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c1d8:	ldr	r2, [r3, #36]	; 0x24
   1c1dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c1e0:	rsb	r2, r3, r2
   1c1e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c1e8:	str	r2, [r3, #36]	; 0x24
   1c1ec:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c1f0:	ldr	r3, [r3, #16]
   1c1f4:	str	r3, [fp, #-16]
   1c1f8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c1fc:	ldr	r2, [r3, #16]
   1c200:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c204:	rsb	r2, r3, r2
   1c208:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c20c:	add	r3, r2, r3
   1c210:	mov	r0, r3
   1c214:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c218:	bl	a05c <__aeabi_uidivmod@plt>
   1c21c:	mov	r3, r1
   1c220:	mov	r2, r3
   1c224:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c228:	str	r2, [r3, #16]
   1c22c:	mov	r3, #0
   1c230:	strh	r3, [fp, #-30]	; 0xffffffe2
   1c234:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c238:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c23c:	cmp	r2, r3
   1c240:	bne	1c260 <_RingIO_writerFlush+0x4b0>
   1c244:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c248:	ldr	r2, [r3, #16]
   1c24c:	ldr	r3, [fp, #-16]
   1c250:	cmp	r2, r3
   1c254:	bne	1c260 <_RingIO_writerFlush+0x4b0>
   1c258:	mov	r3, #1
   1c25c:	strh	r3, [fp, #-30]	; 0xffffffe2
   1c260:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c264:	ldr	r2, [r3, #20]
   1c268:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c26c:	ldr	r3, [r3, #24]
   1c270:	cmp	r2, r3
   1c274:	beq	1c2ec <_RingIO_writerFlush+0x53c>
   1c278:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c27c:	ldr	r2, [r3, #20]
   1c280:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c284:	ldr	r3, [r3, #16]
   1c288:	ldrsh	ip, [fp, #-30]	; 0xffffffe2
   1c28c:	mov	r0, r2
   1c290:	mov	r1, r3
   1c294:	ldr	r2, [fp, #-16]
   1c298:	mov	r3, ip
   1c29c:	bl	1da1c <_RingIO_isOffsetInBetween>
   1c2a0:	mov	r3, r0
   1c2a4:	lsl	r3, r3, #16
   1c2a8:	lsr	r3, r3, #16
   1c2ac:	cmp	r3, #0
   1c2b0:	beq	1c2ec <_RingIO_writerFlush+0x53c>
   1c2b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c2b8:	ldr	r1, [r3, #40]	; 0x28
   1c2bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c2c0:	ldr	r2, [r3, #24]
   1c2c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c2c8:	ldr	r3, [r3, #20]
   1c2cc:	rsb	r3, r3, r2
   1c2d0:	add	r2, r1, r3
   1c2d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c2d8:	str	r2, [r3, #40]	; 0x28
   1c2dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c2e0:	ldr	r2, [r3, #24]
   1c2e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c2e8:	str	r2, [r3, #20]
   1c2ec:	ldr	r3, [fp, #4]
   1c2f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c2f4:	str	r2, [r3]
   1c2f8:	ldrsh	r3, [fp, #-66]	; 0xffffffbe
   1c2fc:	cmp	r3, #0
   1c300:	bne	1c328 <_RingIO_writerFlush+0x578>
   1c304:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c308:	ldrh	r2, [r3, #8]
   1c30c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1c310:	strh	r2, [r3]
   1c314:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c318:	ldr	r2, [r3, #12]
   1c31c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1c320:	str	r2, [r3]
   1c324:	b	1c340 <_RingIO_writerFlush+0x590>
   1c328:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1c32c:	mvn	r3, #0
   1c330:	strh	r3, [r2]
   1c334:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1c338:	mov	r3, #0
   1c33c:	str	r3, [r2]
   1c340:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c344:	cmp	r3, #0
   1c348:	beq	1c3ac <_RingIO_writerFlush+0x5fc>
   1c34c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c350:	add	r3, r3, #256	; 0x100
   1c354:	str	r3, [fp, #-48]	; 0xffffffd0
   1c358:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c35c:	ldr	r3, [r3, #60]	; 0x3c
   1c360:	cmp	r3, #0
   1c364:	beq	1c3ac <_RingIO_writerFlush+0x5fc>
   1c368:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c36c:	ldr	r3, [r3, #32]
   1c370:	cmp	r3, #4
   1c374:	bne	1c3ac <_RingIO_writerFlush+0x5fc>
   1c378:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c37c:	ldr	r2, [r3, #36]	; 0x24
   1c380:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c384:	ldr	r3, [r3, #44]	; 0x2c
   1c388:	cmp	r2, r3
   1c38c:	bcs	1c3ac <_RingIO_writerFlush+0x5fc>
   1c390:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c394:	ldrh	r3, [r3, #68]	; 0x44
   1c398:	cmp	r3, #0
   1c39c:	bne	1c3ac <_RingIO_writerFlush+0x5fc>
   1c3a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c3a4:	mov	r2, #1
   1c3a8:	strh	r2, [r3, #68]	; 0x44
   1c3ac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c3b0:	ldr	r3, [r3, #32]
   1c3b4:	cmp	r3, #4
   1c3b8:	bne	1c3f0 <_RingIO_writerFlush+0x640>
   1c3bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c3c0:	ldr	r2, [r3, #40]	; 0x28
   1c3c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c3c8:	ldr	r3, [r3, #44]	; 0x2c
   1c3cc:	cmp	r2, r3
   1c3d0:	bcc	1c3f0 <_RingIO_writerFlush+0x640>
   1c3d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c3d8:	ldrh	r3, [r3, #68]	; 0x44
   1c3dc:	cmp	r3, #1
   1c3e0:	bne	1c3f0 <_RingIO_writerFlush+0x640>
   1c3e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c3e8:	mov	r2, #0
   1c3ec:	strh	r2, [r3, #68]	; 0x44
   1c3f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c3f4:	bl	1d1b0 <_RingIO_initInstance>
   1c3f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c3fc:	mov	r0, r3
   1c400:	sub	sp, fp, #4
   1c404:	pop	{fp, pc}
   1c408:	.word	0x0002d7ac
   1c40c:	.word	0x80008055

0001c410 <_RingIO_readerFlush>:
   1c410:	push	{fp, lr}
   1c414:	add	fp, sp, #4
   1c418:	sub	sp, sp, #56	; 0x38
   1c41c:	str	r0, [fp, #-48]	; 0xffffffd0
   1c420:	str	r2, [fp, #-56]	; 0xffffffc8
   1c424:	str	r3, [fp, #-60]	; 0xffffffc4
   1c428:	strh	r1, [fp, #-50]	; 0xffffffce
   1c42c:	mov	r3, #33024	; 0x8100
   1c430:	str	r3, [fp, #-44]	; 0xffffffd4
   1c434:	mov	r3, #0
   1c438:	str	r3, [fp, #-40]	; 0xffffffd8
   1c43c:	mov	r3, #0
   1c440:	str	r3, [fp, #-36]	; 0xffffffdc
   1c444:	mov	r3, #0
   1c448:	strh	r3, [fp, #-30]	; 0xffffffe2
   1c44c:	mov	r3, #0
   1c450:	str	r3, [fp, #-28]	; 0xffffffe4
   1c454:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c458:	ldr	r3, [r3, #52]	; 0x34
   1c45c:	str	r3, [fp, #-40]	; 0xffffffd8
   1c460:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c464:	ldr	r3, [r3, #20]
   1c468:	add	r3, r3, #1
   1c46c:	str	r3, [fp, #-20]	; 0xffffffec
   1c470:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c474:	ldr	r3, [r3, #52]	; 0x34
   1c478:	add	r3, r3, #1
   1c47c:	str	r3, [fp, #-16]
   1c480:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c484:	ldr	r3, [r3, #16]
   1c488:	str	r3, [fp, #-12]
   1c48c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c490:	ldr	r3, [r3, #24]
   1c494:	str	r3, [fp, #-8]
   1c498:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c49c:	ldr	r3, [r3, #56]	; 0x38
   1c4a0:	cmp	r3, #0
   1c4a4:	bne	1c5f4 <_RingIO_readerFlush+0x1e4>
   1c4a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c4ac:	ldr	r2, [r3, #16]
   1c4b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c4b4:	ldr	r3, [r3, #36]	; 0x24
   1c4b8:	add	r3, r2, r3
   1c4bc:	mov	r0, r3
   1c4c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c4c4:	bl	a05c <__aeabi_uidivmod@plt>
   1c4c8:	mov	r3, r1
   1c4cc:	mov	r2, r3
   1c4d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c4d4:	str	r2, [r3, #16]
   1c4d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c4dc:	ldr	r2, [r3, #36]	; 0x24
   1c4e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c4e4:	cmp	r2, r3
   1c4e8:	bne	1c508 <_RingIO_readerFlush+0xf8>
   1c4ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c4f0:	ldr	r2, [r3, #16]
   1c4f4:	ldr	r3, [fp, #-12]
   1c4f8:	cmp	r2, r3
   1c4fc:	bne	1c508 <_RingIO_readerFlush+0xf8>
   1c500:	mov	r3, #1
   1c504:	strh	r3, [fp, #-30]	; 0xffffffe2
   1c508:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c50c:	ldr	r2, [r3, #20]
   1c510:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c514:	ldr	r3, [r3, #24]
   1c518:	cmp	r2, r3
   1c51c:	beq	1c594 <_RingIO_readerFlush+0x184>
   1c520:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c524:	ldr	r2, [r3, #20]
   1c528:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c52c:	ldr	r3, [r3, #16]
   1c530:	ldrsh	ip, [fp, #-30]	; 0xffffffe2
   1c534:	mov	r0, r2
   1c538:	mov	r1, r3
   1c53c:	ldr	r2, [fp, #-12]
   1c540:	mov	r3, ip
   1c544:	bl	1da1c <_RingIO_isOffsetInBetween>
   1c548:	mov	r3, r0
   1c54c:	lsl	r3, r3, #16
   1c550:	lsr	r3, r3, #16
   1c554:	cmp	r3, #0
   1c558:	beq	1c594 <_RingIO_readerFlush+0x184>
   1c55c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c560:	ldr	r1, [r3, #40]	; 0x28
   1c564:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c568:	ldr	r2, [r3, #24]
   1c56c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c570:	ldr	r3, [r3, #20]
   1c574:	rsb	r3, r3, r2
   1c578:	add	r2, r1, r3
   1c57c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c580:	str	r2, [r3, #40]	; 0x28
   1c584:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c588:	ldr	r2, [r3, #24]
   1c58c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c590:	str	r2, [r3, #20]
   1c594:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c598:	ldr	r2, [r3, #40]	; 0x28
   1c59c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c5a0:	ldr	r3, [r3, #36]	; 0x24
   1c5a4:	add	r2, r2, r3
   1c5a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c5ac:	str	r2, [r3, #40]	; 0x28
   1c5b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c5b4:	ldr	r2, [r3, #36]	; 0x24
   1c5b8:	ldr	r3, [fp, #4]
   1c5bc:	str	r2, [r3]
   1c5c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c5c4:	ldr	r3, [r3, #36]	; 0x24
   1c5c8:	str	r3, [fp, #-28]	; 0xffffffe4
   1c5cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c5d0:	mov	r3, #0
   1c5d4:	str	r3, [r2, #36]	; 0x24
   1c5d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c5dc:	mvn	r3, #0
   1c5e0:	strh	r3, [r2]
   1c5e4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1c5e8:	mov	r3, #0
   1c5ec:	str	r3, [r2]
   1c5f0:	b	1c978 <_RingIO_readerFlush+0x568>
   1c5f4:	ldrsh	r3, [fp, #-50]	; 0xffffffce
   1c5f8:	cmp	r3, #1
   1c5fc:	bne	1c61c <_RingIO_readerFlush+0x20c>
   1c600:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c604:	ldr	r3, [r3, #36]	; 0x24
   1c608:	str	r3, [fp, #-28]	; 0xffffffe4
   1c60c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c610:	ldr	r3, [r3, #56]	; 0x38
   1c614:	str	r3, [fp, #-24]	; 0xffffffe8
   1c618:	b	1c6d8 <_RingIO_readerFlush+0x2c8>
   1c61c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c620:	bl	1d48c <_RingIO_getFirstAttr>
   1c624:	mov	r3, r0
   1c628:	str	r3, [fp, #-36]	; 0xffffffdc
   1c62c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c630:	ldr	r2, [r3, #16]
   1c634:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c638:	ldr	r3, [r3]
   1c63c:	cmp	r2, r3
   1c640:	bne	1c674 <_RingIO_readerFlush+0x264>
   1c644:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c648:	ldr	r2, [r3, #36]	; 0x24
   1c64c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c650:	cmp	r2, r3
   1c654:	bne	1c668 <_RingIO_readerFlush+0x258>
   1c658:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c65c:	ldr	r3, [r3, #36]	; 0x24
   1c660:	str	r3, [fp, #-28]	; 0xffffffe4
   1c664:	b	1c6d0 <_RingIO_readerFlush+0x2c0>
   1c668:	mov	r3, #0
   1c66c:	str	r3, [fp, #-28]	; 0xffffffe4
   1c670:	b	1c6d0 <_RingIO_readerFlush+0x2c0>
   1c674:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c678:	ldr	r2, [r3, #16]
   1c67c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c680:	ldr	r3, [r3]
   1c684:	cmp	r2, r3
   1c688:	bcs	1c6a8 <_RingIO_readerFlush+0x298>
   1c68c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c690:	ldr	r2, [r3]
   1c694:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c698:	ldr	r3, [r3, #16]
   1c69c:	rsb	r3, r3, r2
   1c6a0:	str	r3, [fp, #-28]	; 0xffffffe4
   1c6a4:	b	1c6d0 <_RingIO_readerFlush+0x2c0>
   1c6a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c6ac:	ldr	r2, [r3, #20]
   1c6b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c6b4:	ldr	r3, [r3, #16]
   1c6b8:	rsb	r2, r3, r2
   1c6bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c6c0:	ldr	r3, [r3]
   1c6c4:	add	r3, r2, r3
   1c6c8:	add	r3, r3, #1
   1c6cc:	str	r3, [fp, #-28]	; 0xffffffe4
   1c6d0:	mov	r3, #0
   1c6d4:	str	r3, [fp, #-24]	; 0xffffffe8
   1c6d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c6dc:	cmp	r3, #0
   1c6e0:	beq	1c740 <_RingIO_readerFlush+0x330>
   1c6e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c6e8:	ldr	r2, [r3, #16]
   1c6ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c6f0:	add	r3, r2, r3
   1c6f4:	mov	r0, r3
   1c6f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c6fc:	bl	a05c <__aeabi_uidivmod@plt>
   1c700:	mov	r3, r1
   1c704:	mov	r2, r3
   1c708:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c70c:	str	r2, [r3, #16]
   1c710:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c714:	ldr	r2, [r3, #36]	; 0x24
   1c718:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c71c:	rsb	r2, r3, r2
   1c720:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c724:	str	r2, [r3, #36]	; 0x24
   1c728:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c72c:	ldr	r2, [r3, #40]	; 0x28
   1c730:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c734:	add	r2, r2, r3
   1c738:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c73c:	str	r2, [r3, #40]	; 0x28
   1c740:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c744:	cmp	r3, #0
   1c748:	beq	1c7a8 <_RingIO_readerFlush+0x398>
   1c74c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c750:	ldr	r2, [r3, #24]
   1c754:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c758:	add	r3, r2, r3
   1c75c:	mov	r0, r3
   1c760:	ldr	r1, [fp, #-16]
   1c764:	bl	a05c <__aeabi_uidivmod@plt>
   1c768:	mov	r3, r1
   1c76c:	mov	r2, r3
   1c770:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c774:	str	r2, [r3, #24]
   1c778:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c77c:	ldr	r2, [r3, #56]	; 0x38
   1c780:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c784:	rsb	r2, r3, r2
   1c788:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c78c:	str	r2, [r3, #56]	; 0x38
   1c790:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c794:	ldr	r2, [r3, #60]	; 0x3c
   1c798:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c79c:	add	r2, r2, r3
   1c7a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c7a4:	str	r2, [r3, #60]	; 0x3c
   1c7a8:	ldrsh	r3, [fp, #-50]	; 0xffffffce
   1c7ac:	cmp	r3, #0
   1c7b0:	bne	1c7e4 <_RingIO_readerFlush+0x3d4>
   1c7b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c7b8:	ldrh	r2, [r3, #8]
   1c7bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c7c0:	strh	r2, [r3]
   1c7c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c7c8:	ldr	r2, [r3, #12]
   1c7cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c7d0:	str	r2, [r3]
   1c7d4:	ldr	r2, [fp, #4]
   1c7d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c7dc:	str	r3, [r2]
   1c7e0:	b	1c808 <_RingIO_readerFlush+0x3f8>
   1c7e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c7e8:	mvn	r3, #0
   1c7ec:	strh	r3, [r2]
   1c7f0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1c7f4:	mov	r3, #0
   1c7f8:	str	r3, [r2]
   1c7fc:	ldr	r2, [fp, #4]
   1c800:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c804:	str	r3, [r2]
   1c808:	mov	r3, #0
   1c80c:	strh	r3, [fp, #-30]	; 0xffffffe2
   1c810:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c814:	ldr	r2, [r3, #16]
   1c818:	ldr	r3, [fp, #-12]
   1c81c:	cmp	r2, r3
   1c820:	bne	1c83c <_RingIO_readerFlush+0x42c>
   1c824:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c828:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c82c:	cmp	r2, r3
   1c830:	bne	1c83c <_RingIO_readerFlush+0x42c>
   1c834:	mov	r3, #1
   1c838:	strh	r3, [fp, #-30]	; 0xffffffe2
   1c83c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c840:	ldr	r2, [r3, #20]
   1c844:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c848:	ldr	r3, [r3, #24]
   1c84c:	cmp	r2, r3
   1c850:	beq	1c8c8 <_RingIO_readerFlush+0x4b8>
   1c854:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c858:	ldr	r2, [r3, #20]
   1c85c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c860:	ldr	r3, [r3, #16]
   1c864:	ldrsh	ip, [fp, #-30]	; 0xffffffe2
   1c868:	mov	r0, r2
   1c86c:	mov	r1, r3
   1c870:	ldr	r2, [fp, #-12]
   1c874:	mov	r3, ip
   1c878:	bl	1da1c <_RingIO_isOffsetInBetween>
   1c87c:	mov	r3, r0
   1c880:	lsl	r3, r3, #16
   1c884:	lsr	r3, r3, #16
   1c888:	cmp	r3, #0
   1c88c:	beq	1c8c8 <_RingIO_readerFlush+0x4b8>
   1c890:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c894:	ldr	r1, [r3, #40]	; 0x28
   1c898:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c89c:	ldr	r2, [r3, #24]
   1c8a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c8a4:	ldr	r3, [r3, #20]
   1c8a8:	rsb	r3, r3, r2
   1c8ac:	add	r2, r1, r3
   1c8b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c8b4:	str	r2, [r3, #40]	; 0x28
   1c8b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c8bc:	ldr	r2, [r3, #24]
   1c8c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c8c4:	str	r2, [r3, #20]
   1c8c8:	mov	r3, #0
   1c8cc:	strh	r3, [fp, #-30]	; 0xffffffe2
   1c8d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c8d4:	ldr	r2, [r3, #24]
   1c8d8:	ldr	r3, [fp, #-8]
   1c8dc:	cmp	r2, r3
   1c8e0:	bne	1c8ec <_RingIO_readerFlush+0x4dc>
   1c8e4:	mov	r3, #1
   1c8e8:	strh	r3, [fp, #-30]	; 0xffffffe2
   1c8ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c8f0:	ldr	r2, [r3, #52]	; 0x34
   1c8f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c8f8:	ldr	r3, [r3, #48]	; 0x30
   1c8fc:	cmp	r2, r3
   1c900:	beq	1c978 <_RingIO_readerFlush+0x568>
   1c904:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c908:	ldr	r2, [r3, #52]	; 0x34
   1c90c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c910:	ldr	r3, [r3, #24]
   1c914:	ldrsh	ip, [fp, #-30]	; 0xffffffe2
   1c918:	mov	r0, r2
   1c91c:	mov	r1, r3
   1c920:	ldr	r2, [fp, #-8]
   1c924:	mov	r3, ip
   1c928:	bl	1da1c <_RingIO_isOffsetInBetween>
   1c92c:	mov	r3, r0
   1c930:	lsl	r3, r3, #16
   1c934:	lsr	r3, r3, #16
   1c938:	cmp	r3, #0
   1c93c:	beq	1c978 <_RingIO_readerFlush+0x568>
   1c940:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c944:	ldr	r1, [r3, #60]	; 0x3c
   1c948:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c94c:	ldr	r2, [r3, #48]	; 0x30
   1c950:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c954:	ldr	r3, [r3, #52]	; 0x34
   1c958:	rsb	r3, r3, r2
   1c95c:	add	r2, r1, r3
   1c960:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c964:	str	r2, [r3, #60]	; 0x3c
   1c968:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c96c:	ldr	r2, [r3, #48]	; 0x30
   1c970:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c974:	str	r2, [r3, #52]	; 0x34
   1c978:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c97c:	cmp	r3, #0
   1c980:	beq	1c9c8 <_RingIO_readerFlush+0x5b8>
   1c984:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c988:	ldr	r3, [r3, #32]
   1c98c:	cmp	r3, #4
   1c990:	bne	1c9c8 <_RingIO_readerFlush+0x5b8>
   1c994:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c998:	ldr	r2, [r3, #36]	; 0x24
   1c99c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c9a0:	ldr	r3, [r3, #44]	; 0x2c
   1c9a4:	cmp	r2, r3
   1c9a8:	bcs	1c9c8 <_RingIO_readerFlush+0x5b8>
   1c9ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c9b0:	ldrh	r3, [r3, #68]	; 0x44
   1c9b4:	cmp	r3, #0
   1c9b8:	bne	1c9c8 <_RingIO_readerFlush+0x5b8>
   1c9bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c9c0:	mov	r2, #1
   1c9c4:	strh	r2, [r3, #68]	; 0x44
   1c9c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c9cc:	bl	1d1b0 <_RingIO_initInstance>
   1c9d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c9d4:	mov	r0, r3
   1c9d8:	sub	sp, fp, #4
   1c9dc:	pop	{fp, pc}

0001c9e0 <_RingIO_writerCancel>:
   1c9e0:	push	{fp, lr}
   1c9e4:	add	fp, sp, #4
   1c9e8:	sub	sp, sp, #24
   1c9ec:	str	r0, [fp, #-24]	; 0xffffffe8
   1c9f0:	mov	r3, #33024	; 0x8100
   1c9f4:	str	r3, [fp, #-16]
   1c9f8:	mov	r3, #0
   1c9fc:	str	r3, [fp, #-12]
   1ca00:	mov	r3, #0
   1ca04:	str	r3, [fp, #-8]
   1ca08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ca0c:	ldr	r3, [r3, #52]	; 0x34
   1ca10:	str	r3, [fp, #-12]
   1ca14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ca18:	ldr	r3, [r3, #20]
   1ca1c:	cmp	r3, #0
   1ca20:	bne	1ca30 <_RingIO_writerCancel+0x50>
   1ca24:	ldr	r3, [pc, #648]	; 1ccb4 <_RingIO_writerCancel+0x2d4>
   1ca28:	str	r3, [fp, #-16]
   1ca2c:	b	1cca4 <_RingIO_writerCancel+0x2c4>
   1ca30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca34:	bl	1d48c <_RingIO_getFirstAttr>
   1ca38:	mov	r3, r0
   1ca3c:	str	r3, [fp, #-8]
   1ca40:	ldr	r3, [fp, #-8]
   1ca44:	cmp	r3, #0
   1ca48:	beq	1ca5c <_RingIO_writerCancel+0x7c>
   1ca4c:	ldr	r3, [fp, #-8]
   1ca50:	ldr	r2, [r3, #4]
   1ca54:	ldr	r3, [fp, #-12]
   1ca58:	str	r2, [r3, #64]	; 0x40
   1ca5c:	ldr	r3, [fp, #-12]
   1ca60:	ldr	r2, [r3, #20]
   1ca64:	ldr	r3, [fp, #-12]
   1ca68:	ldr	r3, [r3, #24]
   1ca6c:	cmp	r2, r3
   1ca70:	beq	1cb38 <_RingIO_writerCancel+0x158>
   1ca74:	ldr	r3, [fp, #-12]
   1ca78:	ldr	r1, [r3, #20]
   1ca7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ca80:	ldr	ip, [r3, #16]
   1ca84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ca88:	ldr	r2, [r3, #16]
   1ca8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ca90:	ldr	r3, [r3, #20]
   1ca94:	add	r3, r2, r3
   1ca98:	mov	r0, r1
   1ca9c:	mov	r1, ip
   1caa0:	mov	r2, r3
   1caa4:	mov	r3, #0
   1caa8:	bl	1da1c <_RingIO_isOffsetInBetween>
   1caac:	mov	r3, r0
   1cab0:	lsl	r3, r3, #16
   1cab4:	lsr	r3, r3, #16
   1cab8:	cmp	r3, #0
   1cabc:	bne	1cad0 <_RingIO_writerCancel+0xf0>
   1cac0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cac4:	ldr	r3, [r3, #16]
   1cac8:	cmp	r3, #0
   1cacc:	bne	1cb38 <_RingIO_writerCancel+0x158>
   1cad0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cad4:	ldr	r3, [r3, #16]
   1cad8:	cmp	r3, #0
   1cadc:	bne	1cb00 <_RingIO_writerCancel+0x120>
   1cae0:	ldr	r3, [fp, #-12]
   1cae4:	ldr	r3, [r3, #20]
   1cae8:	add	r2, r3, #1
   1caec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1caf0:	str	r2, [r3, #16]
   1caf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1caf8:	mov	r1, #0
   1cafc:	bl	1db98 <_RingIO_updateAttributes>
   1cb00:	ldr	r3, [fp, #-12]
   1cb04:	ldr	r1, [r3, #40]	; 0x28
   1cb08:	ldr	r3, [fp, #-12]
   1cb0c:	ldr	r2, [r3, #24]
   1cb10:	ldr	r3, [fp, #-12]
   1cb14:	ldr	r3, [r3, #20]
   1cb18:	rsb	r3, r3, r2
   1cb1c:	add	r2, r1, r3
   1cb20:	ldr	r3, [fp, #-12]
   1cb24:	str	r2, [r3, #40]	; 0x28
   1cb28:	ldr	r3, [fp, #-12]
   1cb2c:	ldr	r2, [r3, #24]
   1cb30:	ldr	r3, [fp, #-12]
   1cb34:	str	r2, [r3, #20]
   1cb38:	ldr	r3, [fp, #-12]
   1cb3c:	ldr	r2, [r3, #40]	; 0x28
   1cb40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cb44:	ldr	r3, [r3, #20]
   1cb48:	add	r2, r2, r3
   1cb4c:	ldr	r3, [fp, #-12]
   1cb50:	str	r2, [r3, #40]	; 0x28
   1cb54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cb58:	mov	r3, #0
   1cb5c:	str	r3, [r2, #20]
   1cb60:	ldr	r3, [fp, #-12]
   1cb64:	ldr	r2, [r3, #52]	; 0x34
   1cb68:	ldr	r3, [fp, #-12]
   1cb6c:	ldr	r3, [r3, #48]	; 0x30
   1cb70:	cmp	r2, r3
   1cb74:	beq	1cc30 <_RingIO_writerCancel+0x250>
   1cb78:	ldr	r3, [fp, #-12]
   1cb7c:	ldr	r1, [r3, #52]	; 0x34
   1cb80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cb84:	ldr	ip, [r3, #24]
   1cb88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cb8c:	ldr	r2, [r3, #24]
   1cb90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cb94:	ldr	r3, [r3, #28]
   1cb98:	add	r3, r2, r3
   1cb9c:	mov	r0, r1
   1cba0:	mov	r1, ip
   1cba4:	mov	r2, r3
   1cba8:	mov	r3, #0
   1cbac:	bl	1da1c <_RingIO_isOffsetInBetween>
   1cbb0:	mov	r3, r0
   1cbb4:	lsl	r3, r3, #16
   1cbb8:	lsr	r3, r3, #16
   1cbbc:	cmp	r3, #0
   1cbc0:	bne	1cbd4 <_RingIO_writerCancel+0x1f4>
   1cbc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cbc8:	ldr	r3, [r3, #24]
   1cbcc:	cmp	r3, #0
   1cbd0:	bne	1cc30 <_RingIO_writerCancel+0x250>
   1cbd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cbd8:	ldr	r3, [r3, #24]
   1cbdc:	cmp	r3, #0
   1cbe0:	bne	1cbf8 <_RingIO_writerCancel+0x218>
   1cbe4:	ldr	r3, [fp, #-12]
   1cbe8:	ldr	r3, [r3, #52]	; 0x34
   1cbec:	add	r2, r3, #1
   1cbf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cbf4:	str	r2, [r3, #24]
   1cbf8:	ldr	r3, [fp, #-12]
   1cbfc:	ldr	r1, [r3, #60]	; 0x3c
   1cc00:	ldr	r3, [fp, #-12]
   1cc04:	ldr	r2, [r3, #48]	; 0x30
   1cc08:	ldr	r3, [fp, #-12]
   1cc0c:	ldr	r3, [r3, #52]	; 0x34
   1cc10:	rsb	r3, r3, r2
   1cc14:	add	r2, r1, r3
   1cc18:	ldr	r3, [fp, #-12]
   1cc1c:	str	r2, [r3, #60]	; 0x3c
   1cc20:	ldr	r3, [fp, #-12]
   1cc24:	ldr	r2, [r3, #48]	; 0x30
   1cc28:	ldr	r3, [fp, #-12]
   1cc2c:	str	r2, [r3, #52]	; 0x34
   1cc30:	ldr	r3, [fp, #-12]
   1cc34:	ldr	r2, [r3, #60]	; 0x3c
   1cc38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cc3c:	ldr	r3, [r3, #28]
   1cc40:	add	r2, r2, r3
   1cc44:	ldr	r3, [fp, #-12]
   1cc48:	str	r2, [r3, #60]	; 0x3c
   1cc4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cc50:	mov	r3, #0
   1cc54:	str	r3, [r2, #28]
   1cc58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cc5c:	ldr	r3, [r3, #32]
   1cc60:	cmp	r3, #4
   1cc64:	bne	1cc9c <_RingIO_writerCancel+0x2bc>
   1cc68:	ldr	r3, [fp, #-12]
   1cc6c:	ldr	r2, [r3, #40]	; 0x28
   1cc70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cc74:	ldr	r3, [r3, #44]	; 0x2c
   1cc78:	cmp	r2, r3
   1cc7c:	bcc	1cc9c <_RingIO_writerCancel+0x2bc>
   1cc80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cc84:	ldrh	r3, [r3, #68]	; 0x44
   1cc88:	cmp	r3, #1
   1cc8c:	bne	1cc9c <_RingIO_writerCancel+0x2bc>
   1cc90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cc94:	mov	r2, #0
   1cc98:	strh	r2, [r3, #68]	; 0x44
   1cc9c:	ldr	r0, [fp, #-12]
   1cca0:	bl	1d1b0 <_RingIO_initInstance>
   1cca4:	ldr	r3, [fp, #-16]
   1cca8:	mov	r0, r3
   1ccac:	sub	sp, fp, #4
   1ccb0:	pop	{fp, pc}
   1ccb4:	.word	0x80008055

0001ccb8 <_RingIO_readerCancel>:
   1ccb8:	push	{fp, lr}
   1ccbc:	add	fp, sp, #4
   1ccc0:	sub	sp, sp, #16
   1ccc4:	str	r0, [fp, #-16]
   1ccc8:	mov	r3, #33024	; 0x8100
   1cccc:	str	r3, [fp, #-12]
   1ccd0:	mov	r3, #0
   1ccd4:	str	r3, [fp, #-8]
   1ccd8:	ldr	r3, [fp, #-16]
   1ccdc:	ldr	r3, [r3, #52]	; 0x34
   1cce0:	str	r3, [fp, #-8]
   1cce4:	ldr	r3, [fp, #-16]
   1cce8:	ldr	r3, [r3, #20]
   1ccec:	cmp	r3, #0
   1ccf0:	bne	1cd00 <_RingIO_readerCancel+0x48>
   1ccf4:	ldr	r3, [pc, #176]	; 1cdac <_RingIO_readerCancel+0xf4>
   1ccf8:	str	r3, [fp, #-12]
   1ccfc:	b	1cd9c <_RingIO_readerCancel+0xe4>
   1cd00:	ldr	r3, [fp, #-8]
   1cd04:	ldr	r2, [r3, #36]	; 0x24
   1cd08:	ldr	r3, [fp, #-16]
   1cd0c:	ldr	r3, [r3, #20]
   1cd10:	add	r2, r2, r3
   1cd14:	ldr	r3, [fp, #-8]
   1cd18:	str	r2, [r3, #36]	; 0x24
   1cd1c:	ldr	r3, [fp, #-8]
   1cd20:	ldr	r2, [r3, #56]	; 0x38
   1cd24:	ldr	r3, [fp, #-16]
   1cd28:	ldr	r3, [r3, #28]
   1cd2c:	add	r2, r2, r3
   1cd30:	ldr	r3, [fp, #-8]
   1cd34:	str	r2, [r3, #56]	; 0x38
   1cd38:	ldr	r2, [fp, #-16]
   1cd3c:	mov	r3, #0
   1cd40:	str	r3, [r2, #20]
   1cd44:	ldr	r2, [fp, #-16]
   1cd48:	mov	r3, #0
   1cd4c:	str	r3, [r2, #28]
   1cd50:	ldr	r3, [fp, #-16]
   1cd54:	ldr	r3, [r3, #32]
   1cd58:	cmp	r3, #4
   1cd5c:	bne	1cd94 <_RingIO_readerCancel+0xdc>
   1cd60:	ldr	r3, [fp, #-8]
   1cd64:	ldr	r2, [r3, #36]	; 0x24
   1cd68:	ldr	r3, [fp, #-16]
   1cd6c:	ldr	r3, [r3, #44]	; 0x2c
   1cd70:	cmp	r2, r3
   1cd74:	bcc	1cd94 <_RingIO_readerCancel+0xdc>
   1cd78:	ldr	r3, [fp, #-16]
   1cd7c:	ldrh	r3, [r3, #68]	; 0x44
   1cd80:	cmp	r3, #1
   1cd84:	bne	1cd94 <_RingIO_readerCancel+0xdc>
   1cd88:	ldr	r3, [fp, #-16]
   1cd8c:	mov	r2, #0
   1cd90:	strh	r2, [r3, #68]	; 0x44
   1cd94:	ldr	r0, [fp, #-8]
   1cd98:	bl	1d1b0 <_RingIO_initInstance>
   1cd9c:	ldr	r3, [fp, #-12]
   1cda0:	mov	r0, r3
   1cda4:	sub	sp, fp, #4
   1cda8:	pop	{fp, pc}
   1cdac:	.word	0x80008055

0001cdb0 <_RingIO_callNotifier>:
   1cdb0:	push	{fp, lr}
   1cdb4:	add	fp, sp, #4
   1cdb8:	sub	sp, sp, #32
   1cdbc:	str	r0, [fp, #-32]	; 0xffffffe0
   1cdc0:	mov	r3, r1
   1cdc4:	strh	r3, [fp, #-34]	; 0xffffffde
   1cdc8:	mov	r3, #33024	; 0x8100
   1cdcc:	str	r3, [fp, #-28]	; 0xffffffe4
   1cdd0:	mov	r3, #33024	; 0x8100
   1cdd4:	str	r3, [fp, #-24]	; 0xffffffe8
   1cdd8:	mov	r3, #0
   1cddc:	str	r3, [fp, #-20]	; 0xffffffec
   1cde0:	mov	r3, #0
   1cde4:	str	r3, [fp, #-16]
   1cde8:	mov	r3, #0
   1cdec:	str	r3, [fp, #-12]
   1cdf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cdf4:	ldr	r3, [r3, #52]	; 0x34
   1cdf8:	str	r3, [fp, #-12]
   1cdfc:	ldr	r3, [fp, #-12]
   1ce00:	ldr	r3, [r3]
   1ce04:	lsl	r2, r3, #5
   1ce08:	ldr	r3, [pc, #576]	; 1d050 <_RingIO_callNotifier+0x2a0>
   1ce0c:	add	r3, r2, r3
   1ce10:	str	r3, [fp, #-20]	; 0xffffffec
   1ce14:	ldr	r3, [fp, #-12]
   1ce18:	ldr	r3, [r3, #4]
   1ce1c:	str	r3, [fp, #-8]
   1ce20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ce24:	bl	1deb8 <_RingIO_acquireLock>
   1ce28:	mov	r3, r0
   1ce2c:	str	r3, [fp, #-28]	; 0xffffffe4
   1ce30:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ce34:	ldr	r3, [pc, #536]	; 1d054 <_RingIO_callNotifier+0x2a4>
   1ce38:	cmp	r2, r3
   1ce3c:	ble	1cf34 <_RingIO_callNotifier+0x184>
   1ce40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ce44:	cmp	r3, #34048	; 0x8500
   1ce48:	bgt	1cf34 <_RingIO_callNotifier+0x184>
   1ce4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ce50:	ldr	r2, [r3, #24]
   1ce54:	ldr	r3, [fp, #-8]
   1ce58:	lsl	r3, r3, #7
   1ce5c:	add	r3, r2, r3
   1ce60:	ldrh	r3, [r3, #42]	; 0x2a
   1ce64:	and	r2, r3, #255	; 0xff
   1ce68:	ldr	r3, [fp, #-12]
   1ce6c:	ldr	r3, [r3]
   1ce70:	lsl	r3, r3, #8
   1ce74:	lsl	r3, r3, #16
   1ce78:	lsr	r3, r3, #16
   1ce7c:	orr	r3, r2, r3
   1ce80:	and	r3, r3, #255	; 0xff
   1ce84:	cmp	r3, #32
   1ce88:	beq	1cee4 <_RingIO_callNotifier+0x134>
   1ce8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ce90:	ldr	r2, [r3, #24]
   1ce94:	ldr	r3, [fp, #-8]
   1ce98:	lsl	r3, r3, #7
   1ce9c:	add	r3, r2, r3
   1cea0:	ldrh	r3, [r3, #42]	; 0x2a
   1cea4:	mov	r2, r3
   1cea8:	and	r2, r2, #255	; 0xff
   1ceac:	ldr	r3, [fp, #-12]
   1ceb0:	ldr	r3, [r3]
   1ceb4:	lsl	r3, r3, #16
   1ceb8:	lsr	r3, r3, #16
   1cebc:	lsl	r3, r3, #8
   1cec0:	lsl	r3, r3, #16
   1cec4:	lsr	r3, r3, #16
   1cec8:	orr	r3, r2, r3
   1cecc:	lsl	r3, r3, #16
   1ced0:	lsr	r3, r3, #16
   1ced4:	mov	r0, r3
   1ced8:	ldr	r1, [fp, #-12]
   1cedc:	mov	r2, #384	; 0x180
   1cee0:	bl	17224 <POOL_invalidate>
   1cee4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cee8:	bl	1def8 <_RingIO_releaseLock>
   1ceec:	mov	r3, r0
   1cef0:	str	r3, [fp, #-24]	; 0xffffffe8
   1cef4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cef8:	ldr	r3, [pc, #340]	; 1d054 <_RingIO_callNotifier+0x2a4>
   1cefc:	cmp	r2, r3
   1cf00:	ble	1cf10 <_RingIO_callNotifier+0x160>
   1cf04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf08:	cmp	r3, #34048	; 0x8500
   1cf0c:	ble	1cf34 <_RingIO_callNotifier+0x184>
   1cf10:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cf14:	ldr	r3, [pc, #312]	; 1d054 <_RingIO_callNotifier+0x2a4>
   1cf18:	cmp	r2, r3
   1cf1c:	ble	1cf34 <_RingIO_callNotifier+0x184>
   1cf20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cf24:	cmp	r3, #34048	; 0x8500
   1cf28:	bgt	1cf34 <_RingIO_callNotifier+0x184>
   1cf2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf30:	str	r3, [fp, #-28]	; 0xffffffe4
   1cf34:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cf38:	ldr	r3, [pc, #276]	; 1d054 <_RingIO_callNotifier+0x2a4>
   1cf3c:	cmp	r2, r3
   1cf40:	ble	1d040 <_RingIO_callNotifier+0x290>
   1cf44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cf48:	cmp	r3, #34048	; 0x8500
   1cf4c:	bgt	1d040 <_RingIO_callNotifier+0x290>
   1cf50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cf54:	ldr	r3, [r3, #4]
   1cf58:	cmp	r3, #1
   1cf5c:	bne	1cf70 <_RingIO_callNotifier+0x1c0>
   1cf60:	ldr	r3, [fp, #-12]
   1cf64:	add	r3, r3, #256	; 0x100
   1cf68:	str	r3, [fp, #-16]
   1cf6c:	b	1cf7c <_RingIO_callNotifier+0x1cc>
   1cf70:	ldr	r3, [fp, #-12]
   1cf74:	add	r3, r3, #128	; 0x80
   1cf78:	str	r3, [fp, #-16]
   1cf7c:	ldrh	r3, [fp, #-34]	; 0xffffffde
   1cf80:	lsl	r3, r3, #16
   1cf84:	str	r3, [fp, #-8]
   1cf88:	ldr	r3, [fp, #-12]
   1cf8c:	ldr	r3, [r3, #4]
   1cf90:	lsl	r3, r3, #16
   1cf94:	lsr	r3, r3, #16
   1cf98:	ldr	r2, [fp, #-8]
   1cf9c:	orr	r3, r2, r3
   1cfa0:	str	r3, [fp, #-8]
   1cfa4:	ldr	r3, [fp, #-16]
   1cfa8:	ldr	r3, [r3, #60]	; 0x3c
   1cfac:	cmp	r3, #0
   1cfb0:	beq	1d038 <_RingIO_callNotifier+0x288>
   1cfb4:	ldr	r3, [fp, #-16]
   1cfb8:	ldr	r3, [r3, #36]	; 0x24
   1cfbc:	cmp	r3, #0
   1cfc0:	beq	1d038 <_RingIO_callNotifier+0x288>
   1cfc4:	ldr	r3, [fp, #-12]
   1cfc8:	ldr	r3, [r3, #8]
   1cfcc:	cmp	r3, #2
   1cfd0:	bne	1d014 <_RingIO_callNotifier+0x264>
   1cfd4:	ldr	r3, [fp, #-16]
   1cfd8:	ldr	r1, [r3]
   1cfdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cfe0:	ldr	r3, [r3, #20]
   1cfe4:	ldr	r2, [r3, #12]
   1cfe8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cfec:	ldr	r3, [r3, #20]
   1cff0:	ldr	r3, [r3, #16]
   1cff4:	mov	r0, r1
   1cff8:	mov	r1, r2
   1cffc:	mov	r2, r3
   1d000:	ldr	r3, [fp, #-8]
   1d004:	bl	16f14 <NOTIFY_notify>
   1d008:	mov	r3, r0
   1d00c:	str	r3, [fp, #-28]	; 0xffffffe4
   1d010:	b	1d040 <_RingIO_callNotifier+0x290>
   1d014:	ldr	r3, [fp, #-16]
   1d018:	ldr	ip, [r3, #36]	; 0x24
   1d01c:	ldr	r3, [fp, #-16]
   1d020:	ldr	r3, [r3, #40]	; 0x28
   1d024:	ldrh	r2, [fp, #-34]	; 0xffffffde
   1d028:	ldr	r0, [fp, #-16]
   1d02c:	mov	r1, r3
   1d030:	blx	ip
   1d034:	b	1d040 <_RingIO_callNotifier+0x290>
   1d038:	ldr	r3, [pc, #24]	; 1d058 <_RingIO_callNotifier+0x2a8>
   1d03c:	str	r3, [fp, #-28]	; 0xffffffe4
   1d040:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d044:	mov	r0, r3
   1d048:	sub	sp, fp, #4
   1d04c:	pop	{fp, pc}
   1d050:	.word	0x0002d7ac
   1d054:	.word	0x00007fff
   1d058:	.word	0x80008055

0001d05c <_RingIO_checkNotifier>:
   1d05c:	push	{fp}		; (str fp, [sp, #-4]!)
   1d060:	add	fp, sp, #0
   1d064:	sub	sp, sp, #28
   1d068:	str	r0, [fp, #-24]	; 0xffffffe8
   1d06c:	ldr	r3, [pc, #312]	; 1d1ac <_RingIO_checkNotifier+0x150>
   1d070:	str	r3, [fp, #-20]	; 0xffffffec
   1d074:	mov	r3, #0
   1d078:	str	r3, [fp, #-16]
   1d07c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d080:	ldr	r3, [r3, #52]	; 0x34
   1d084:	str	r3, [fp, #-16]
   1d088:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d08c:	ldr	r3, [r3, #4]
   1d090:	cmp	r3, #1
   1d094:	bne	1d0b4 <_RingIO_checkNotifier+0x58>
   1d098:	ldr	r3, [fp, #-16]
   1d09c:	add	r3, r3, #256	; 0x100
   1d0a0:	str	r3, [fp, #-12]
   1d0a4:	ldr	r3, [fp, #-16]
   1d0a8:	ldr	r3, [r3, #36]	; 0x24
   1d0ac:	str	r3, [fp, #-8]
   1d0b0:	b	1d0cc <_RingIO_checkNotifier+0x70>
   1d0b4:	ldr	r3, [fp, #-16]
   1d0b8:	add	r3, r3, #128	; 0x80
   1d0bc:	str	r3, [fp, #-12]
   1d0c0:	ldr	r3, [fp, #-16]
   1d0c4:	ldr	r3, [r3, #40]	; 0x28
   1d0c8:	str	r3, [fp, #-8]
   1d0cc:	ldr	r3, [fp, #-12]
   1d0d0:	ldr	r3, [r3, #60]	; 0x3c
   1d0d4:	cmp	r3, #0
   1d0d8:	beq	1d190 <_RingIO_checkNotifier+0x134>
   1d0dc:	ldr	r3, [fp, #-12]
   1d0e0:	ldr	r3, [r3, #32]
   1d0e4:	sub	r3, r3, #1
   1d0e8:	cmp	r3, #3
   1d0ec:	ldrls	pc, [pc, r3, lsl #2]
   1d0f0:	b	1d198 <_RingIO_checkNotifier+0x13c>
   1d0f4:	.word	0x0001d104
   1d0f8:	.word	0x0001d134
   1d0fc:	.word	0x0001d170
   1d100:	.word	0x0001d134
   1d104:	ldr	r3, [fp, #-12]
   1d108:	ldrh	r3, [r3, #68]	; 0x44
   1d10c:	cmp	r3, #0
   1d110:	beq	1d198 <_RingIO_checkNotifier+0x13c>
   1d114:	ldr	r3, [fp, #-12]
   1d118:	ldr	r2, [r3, #44]	; 0x2c
   1d11c:	ldr	r3, [fp, #-8]
   1d120:	cmp	r2, r3
   1d124:	bhi	1d198 <_RingIO_checkNotifier+0x13c>
   1d128:	mov	r3, #33024	; 0x8100
   1d12c:	str	r3, [fp, #-20]	; 0xffffffec
   1d130:	b	1d198 <_RingIO_checkNotifier+0x13c>
   1d134:	ldr	r3, [fp, #-12]
   1d138:	ldrh	r3, [r3, #68]	; 0x44
   1d13c:	cmp	r3, #0
   1d140:	beq	1d198 <_RingIO_checkNotifier+0x13c>
   1d144:	ldr	r3, [fp, #-12]
   1d148:	ldr	r2, [r3, #44]	; 0x2c
   1d14c:	ldr	r3, [fp, #-8]
   1d150:	cmp	r2, r3
   1d154:	bhi	1d198 <_RingIO_checkNotifier+0x13c>
   1d158:	mov	r3, #33024	; 0x8100
   1d15c:	str	r3, [fp, #-20]	; 0xffffffec
   1d160:	ldr	r2, [fp, #-12]
   1d164:	mov	r3, #0
   1d168:	strh	r3, [r2, #68]	; 0x44
   1d16c:	b	1d198 <_RingIO_checkNotifier+0x13c>
   1d170:	ldr	r3, [fp, #-12]
   1d174:	ldr	r2, [r3, #44]	; 0x2c
   1d178:	ldr	r3, [fp, #-8]
   1d17c:	cmp	r2, r3
   1d180:	bhi	1d198 <_RingIO_checkNotifier+0x13c>
   1d184:	mov	r3, #33024	; 0x8100
   1d188:	str	r3, [fp, #-20]	; 0xffffffec
   1d18c:	b	1d198 <_RingIO_checkNotifier+0x13c>
   1d190:	ldr	r3, [pc, #20]	; 1d1ac <_RingIO_checkNotifier+0x150>
   1d194:	str	r3, [fp, #-20]	; 0xffffffec
   1d198:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d19c:	mov	r0, r3
   1d1a0:	add	sp, fp, #0
   1d1a4:	ldmfd	sp!, {fp}
   1d1a8:	bx	lr
   1d1ac:	.word	0x80008055

0001d1b0 <_RingIO_initInstance>:
   1d1b0:	push	{fp}		; (str fp, [sp, #-4]!)
   1d1b4:	add	fp, sp, #0
   1d1b8:	sub	sp, sp, #12
   1d1bc:	str	r0, [fp, #-8]
   1d1c0:	ldr	r3, [fp, #-8]
   1d1c4:	ldr	r2, [r3, #40]	; 0x28
   1d1c8:	ldr	r3, [fp, #-8]
   1d1cc:	ldr	r3, [r3, #20]
   1d1d0:	add	r3, r3, #1
   1d1d4:	cmp	r2, r3
   1d1d8:	bne	1d304 <_RingIO_initInstance+0x154>
   1d1dc:	ldr	r3, [fp, #-8]
   1d1e0:	ldr	r3, [r3, #36]	; 0x24
   1d1e4:	cmp	r3, #0
   1d1e8:	bne	1d304 <_RingIO_initInstance+0x154>
   1d1ec:	ldr	r3, [fp, #-8]
   1d1f0:	ldr	r2, [r3, #60]	; 0x3c
   1d1f4:	ldr	r3, [fp, #-8]
   1d1f8:	ldr	r3, [r3, #52]	; 0x34
   1d1fc:	add	r3, r3, #1
   1d200:	cmp	r2, r3
   1d204:	bne	1d304 <_RingIO_initInstance+0x154>
   1d208:	ldr	r3, [fp, #-8]
   1d20c:	ldr	r3, [r3, #56]	; 0x38
   1d210:	cmp	r3, #0
   1d214:	bne	1d304 <_RingIO_initInstance+0x154>
   1d218:	ldr	r2, [fp, #-8]
   1d21c:	mov	r3, #0
   1d220:	str	r3, [r2, #36]	; 0x24
   1d224:	ldr	r3, [fp, #-8]
   1d228:	ldr	r3, [r3, #24]
   1d22c:	add	r2, r3, #1
   1d230:	ldr	r3, [fp, #-8]
   1d234:	str	r2, [r3, #40]	; 0x28
   1d238:	ldr	r3, [fp, #-8]
   1d23c:	ldr	r2, [r3, #24]
   1d240:	ldr	r3, [fp, #-8]
   1d244:	str	r2, [r3, #20]
   1d248:	ldr	r2, [fp, #-8]
   1d24c:	mov	r3, #0
   1d250:	str	r3, [r2, #56]	; 0x38
   1d254:	ldr	r3, [fp, #-8]
   1d258:	ldr	r3, [r3, #48]	; 0x30
   1d25c:	add	r2, r3, #1
   1d260:	ldr	r3, [fp, #-8]
   1d264:	str	r2, [r3, #60]	; 0x3c
   1d268:	ldr	r3, [fp, #-8]
   1d26c:	ldr	r2, [r3, #48]	; 0x30
   1d270:	ldr	r3, [fp, #-8]
   1d274:	str	r2, [r3, #52]	; 0x34
   1d278:	ldr	r2, [fp, #-8]
   1d27c:	mvn	r3, #0
   1d280:	str	r3, [r2, #64]	; 0x40
   1d284:	ldr	r3, [fp, #-8]
   1d288:	ldr	r3, [r3, #316]	; 0x13c
   1d28c:	cmp	r3, #1
   1d290:	bne	1d2c4 <_RingIO_initInstance+0x114>
   1d294:	ldr	r2, [fp, #-8]
   1d298:	mov	r3, #0
   1d29c:	str	r3, [r2, #272]	; 0x110
   1d2a0:	ldr	r2, [fp, #-8]
   1d2a4:	mov	r3, #0
   1d2a8:	str	r3, [r2, #276]	; 0x114
   1d2ac:	ldr	r2, [fp, #-8]
   1d2b0:	mov	r3, #0
   1d2b4:	str	r3, [r2, #280]	; 0x118
   1d2b8:	ldr	r2, [fp, #-8]
   1d2bc:	mov	r3, #0
   1d2c0:	str	r3, [r2, #284]	; 0x11c
   1d2c4:	ldr	r3, [fp, #-8]
   1d2c8:	ldr	r3, [r3, #188]	; 0xbc
   1d2cc:	cmp	r3, #1
   1d2d0:	bne	1d304 <_RingIO_initInstance+0x154>
   1d2d4:	ldr	r2, [fp, #-8]
   1d2d8:	mov	r3, #0
   1d2dc:	str	r3, [r2, #144]	; 0x90
   1d2e0:	ldr	r2, [fp, #-8]
   1d2e4:	mov	r3, #0
   1d2e8:	str	r3, [r2, #148]	; 0x94
   1d2ec:	ldr	r2, [fp, #-8]
   1d2f0:	mov	r3, #0
   1d2f4:	str	r3, [r2, #152]	; 0x98
   1d2f8:	ldr	r2, [fp, #-8]
   1d2fc:	mov	r3, #0
   1d300:	str	r3, [r2, #156]	; 0x9c
   1d304:	add	sp, fp, #0
   1d308:	ldmfd	sp!, {fp}
   1d30c:	bx	lr

0001d310 <_RingIO_getFirstAcquiredAttr>:
   1d310:	push	{r4, fp, lr}
   1d314:	add	fp, sp, #8
   1d318:	sub	sp, sp, #36	; 0x24
   1d31c:	str	r0, [fp, #-40]	; 0xffffffd8
   1d320:	mov	r3, #0
   1d324:	str	r3, [fp, #-32]	; 0xffffffe0
   1d328:	mov	r3, #0
   1d32c:	str	r3, [fp, #-28]	; 0xffffffe4
   1d330:	mov	r3, #0
   1d334:	str	r3, [fp, #-24]	; 0xffffffe8
   1d338:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d33c:	ldr	r3, [r3, #52]	; 0x34
   1d340:	str	r3, [fp, #-24]	; 0xffffffe8
   1d344:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d348:	ldr	r3, [r3]
   1d34c:	lsl	r2, r3, #5
   1d350:	ldr	r3, [pc, #304]	; 1d488 <_RingIO_getFirstAcquiredAttr+0x178>
   1d354:	add	r3, r2, r3
   1d358:	str	r3, [fp, #-28]	; 0xffffffe4
   1d35c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d360:	ldr	r3, [r3, #12]
   1d364:	cmp	r3, #0
   1d368:	beq	1d478 <_RingIO_getFirstAcquiredAttr+0x168>
   1d36c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d370:	ldr	r3, [r3, #28]
   1d374:	cmp	r3, #0
   1d378:	beq	1d478 <_RingIO_getFirstAcquiredAttr+0x168>
   1d37c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d380:	ldr	r3, [r3, #52]	; 0x34
   1d384:	add	r3, r3, #1
   1d388:	str	r3, [fp, #-16]
   1d38c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d390:	ldr	r3, [r3, #12]
   1d394:	mov	r4, r3
   1d398:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d39c:	ldr	r3, [r3, #24]
   1d3a0:	mov	r0, r3
   1d3a4:	ldr	r1, [fp, #-16]
   1d3a8:	bl	a05c <__aeabi_uidivmod@plt>
   1d3ac:	mov	r3, r1
   1d3b0:	add	r3, r4, r3
   1d3b4:	str	r3, [fp, #-32]	; 0xffffffe0
   1d3b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d3bc:	ldr	r3, [r3, #4]
   1d3c0:	cmp	r3, #0
   1d3c4:	bne	1d478 <_RingIO_getFirstAcquiredAttr+0x168>
   1d3c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d3cc:	ldr	r3, [r3, #52]	; 0x34
   1d3d0:	str	r3, [fp, #-24]	; 0xffffffe8
   1d3d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d3d8:	ldr	r3, [r3, #4]
   1d3dc:	str	r3, [fp, #-20]	; 0xffffffec
   1d3e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d3e4:	ldr	r2, [r3, #24]
   1d3e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d3ec:	lsl	r3, r3, #7
   1d3f0:	add	r3, r2, r3
   1d3f4:	ldrh	r3, [r3, #46]	; 0x2e
   1d3f8:	and	r2, r3, #255	; 0xff
   1d3fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d400:	ldr	r3, [r3]
   1d404:	lsl	r3, r3, #8
   1d408:	lsl	r3, r3, #16
   1d40c:	lsr	r3, r3, #16
   1d410:	orr	r3, r2, r3
   1d414:	and	r3, r3, #255	; 0xff
   1d418:	cmp	r3, #32
   1d41c:	beq	1d478 <_RingIO_getFirstAcquiredAttr+0x168>
   1d420:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d424:	ldr	r2, [r3, #24]
   1d428:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d42c:	lsl	r3, r3, #7
   1d430:	add	r3, r2, r3
   1d434:	ldrh	r3, [r3, #46]	; 0x2e
   1d438:	mov	r2, r3
   1d43c:	and	r2, r2, #255	; 0xff
   1d440:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d444:	ldr	r3, [r3]
   1d448:	lsl	r3, r3, #16
   1d44c:	lsr	r3, r3, #16
   1d450:	lsl	r3, r3, #8
   1d454:	lsl	r3, r3, #16
   1d458:	lsr	r3, r3, #16
   1d45c:	orr	r3, r2, r3
   1d460:	lsl	r3, r3, #16
   1d464:	lsr	r3, r3, #16
   1d468:	mov	r0, r3
   1d46c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d470:	mov	r2, #16
   1d474:	bl	17224 <POOL_invalidate>
   1d478:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d47c:	mov	r0, r3
   1d480:	sub	sp, fp, #8
   1d484:	pop	{r4, fp, pc}
   1d488:	.word	0x0002d7ac

0001d48c <_RingIO_getFirstAttr>:
   1d48c:	push	{r4, fp, lr}
   1d490:	add	fp, sp, #8
   1d494:	sub	sp, sp, #36	; 0x24
   1d498:	str	r0, [fp, #-40]	; 0xffffffd8
   1d49c:	mov	r3, #0
   1d4a0:	str	r3, [fp, #-32]	; 0xffffffe0
   1d4a4:	mov	r3, #0
   1d4a8:	str	r3, [fp, #-28]	; 0xffffffe4
   1d4ac:	mov	r3, #0
   1d4b0:	str	r3, [fp, #-24]	; 0xffffffe8
   1d4b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d4b8:	ldr	r3, [r3, #52]	; 0x34
   1d4bc:	str	r3, [fp, #-24]	; 0xffffffe8
   1d4c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d4c4:	ldr	r3, [r3]
   1d4c8:	lsl	r2, r3, #5
   1d4cc:	ldr	r3, [pc, #380]	; 1d650 <_RingIO_getFirstAttr+0x1c4>
   1d4d0:	add	r3, r2, r3
   1d4d4:	str	r3, [fp, #-28]	; 0xffffffe4
   1d4d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d4dc:	ldr	r3, [r3, #12]
   1d4e0:	cmp	r3, #0
   1d4e4:	beq	1d640 <_RingIO_getFirstAttr+0x1b4>
   1d4e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d4ec:	ldr	r3, [r3, #52]	; 0x34
   1d4f0:	str	r3, [fp, #-24]	; 0xffffffe8
   1d4f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d4f8:	ldr	r3, [r3, #52]	; 0x34
   1d4fc:	add	r3, r3, #1
   1d500:	str	r3, [fp, #-20]	; 0xffffffec
   1d504:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d508:	ldr	r3, [r3, #4]
   1d50c:	cmp	r3, #1
   1d510:	bne	1d554 <_RingIO_getFirstAttr+0xc8>
   1d514:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d518:	ldr	r3, [r3, #28]
   1d51c:	cmp	r3, #0
   1d520:	beq	1d640 <_RingIO_getFirstAttr+0x1b4>
   1d524:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d528:	ldr	r3, [r3, #12]
   1d52c:	mov	r4, r3
   1d530:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d534:	ldr	r3, [r3, #24]
   1d538:	mov	r0, r3
   1d53c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d540:	bl	a05c <__aeabi_uidivmod@plt>
   1d544:	mov	r3, r1
   1d548:	add	r3, r4, r3
   1d54c:	str	r3, [fp, #-32]	; 0xffffffe0
   1d550:	b	1d640 <_RingIO_getFirstAttr+0x1b4>
   1d554:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d558:	ldr	r3, [r3, #4]
   1d55c:	str	r3, [fp, #-16]
   1d560:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d564:	ldr	r3, [r3, #56]	; 0x38
   1d568:	cmp	r3, #0
   1d56c:	beq	1d640 <_RingIO_getFirstAttr+0x1b4>
   1d570:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d574:	ldr	r3, [r3, #12]
   1d578:	mov	r4, r3
   1d57c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d580:	ldr	r2, [r3, #24]
   1d584:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d588:	ldr	r3, [r3, #28]
   1d58c:	add	r3, r2, r3
   1d590:	mov	r0, r3
   1d594:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d598:	bl	a05c <__aeabi_uidivmod@plt>
   1d59c:	mov	r3, r1
   1d5a0:	add	r3, r4, r3
   1d5a4:	str	r3, [fp, #-32]	; 0xffffffe0
   1d5a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d5ac:	ldr	r2, [r3, #24]
   1d5b0:	ldr	r3, [fp, #-16]
   1d5b4:	lsl	r3, r3, #7
   1d5b8:	add	r3, r2, r3
   1d5bc:	ldrh	r3, [r3, #46]	; 0x2e
   1d5c0:	and	r2, r3, #255	; 0xff
   1d5c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d5c8:	ldr	r3, [r3]
   1d5cc:	lsl	r3, r3, #8
   1d5d0:	lsl	r3, r3, #16
   1d5d4:	lsr	r3, r3, #16
   1d5d8:	orr	r3, r2, r3
   1d5dc:	and	r3, r3, #255	; 0xff
   1d5e0:	cmp	r3, #32
   1d5e4:	beq	1d640 <_RingIO_getFirstAttr+0x1b4>
   1d5e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d5ec:	ldr	r2, [r3, #24]
   1d5f0:	ldr	r3, [fp, #-16]
   1d5f4:	lsl	r3, r3, #7
   1d5f8:	add	r3, r2, r3
   1d5fc:	ldrh	r3, [r3, #46]	; 0x2e
   1d600:	mov	r2, r3
   1d604:	and	r2, r2, #255	; 0xff
   1d608:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d60c:	ldr	r3, [r3]
   1d610:	lsl	r3, r3, #16
   1d614:	lsr	r3, r3, #16
   1d618:	lsl	r3, r3, #8
   1d61c:	lsl	r3, r3, #16
   1d620:	lsr	r3, r3, #16
   1d624:	orr	r3, r2, r3
   1d628:	lsl	r3, r3, #16
   1d62c:	lsr	r3, r3, #16
   1d630:	mov	r0, r3
   1d634:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d638:	mov	r2, #16
   1d63c:	bl	17224 <POOL_invalidate>
   1d640:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d644:	mov	r0, r3
   1d648:	sub	sp, fp, #8
   1d64c:	pop	{r4, fp, pc}
   1d650:	.word	0x0002d7ac

0001d654 <_RingIO_releaseAttribute>:
   1d654:	push	{fp, lr}
   1d658:	add	fp, sp, #4
   1d65c:	sub	sp, sp, #24
   1d660:	str	r0, [fp, #-24]	; 0xffffffe8
   1d664:	str	r1, [fp, #-28]	; 0xffffffe4
   1d668:	mov	r3, #33024	; 0x8100
   1d66c:	str	r3, [fp, #-20]	; 0xffffffec
   1d670:	mov	r3, #0
   1d674:	str	r3, [fp, #-16]
   1d678:	mov	r3, #0
   1d67c:	str	r3, [fp, #-12]
   1d680:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d684:	ldr	r3, [r3, #12]
   1d688:	cmp	r3, #0
   1d68c:	bne	1d69c <_RingIO_releaseAttribute+0x48>
   1d690:	ldr	r3, [pc, #440]	; 1d850 <_RingIO_releaseAttribute+0x1fc>
   1d694:	str	r3, [fp, #-20]	; 0xffffffec
   1d698:	b	1d840 <_RingIO_releaseAttribute+0x1ec>
   1d69c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d6a0:	ldr	r3, [r3, #52]	; 0x34
   1d6a4:	str	r3, [fp, #-12]
   1d6a8:	ldr	r3, [fp, #-12]
   1d6ac:	ldr	r3, [r3]
   1d6b0:	lsl	r2, r3, #5
   1d6b4:	ldr	r3, [pc, #408]	; 1d854 <_RingIO_releaseAttribute+0x200>
   1d6b8:	add	r3, r2, r3
   1d6bc:	str	r3, [fp, #-16]
   1d6c0:	ldr	r3, [fp, #-12]
   1d6c4:	ldr	r3, [r3, #4]
   1d6c8:	str	r3, [fp, #-8]
   1d6cc:	ldr	r3, [fp, #-12]
   1d6d0:	ldr	r3, [r3, #56]	; 0x38
   1d6d4:	cmp	r3, #0
   1d6d8:	bne	1d6e8 <_RingIO_releaseAttribute+0x94>
   1d6dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d6e0:	mvn	r3, #0
   1d6e4:	str	r3, [r2, #4]
   1d6e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d6ec:	ldr	r2, [r3, #24]
   1d6f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d6f4:	ldrh	r3, [r3, #10]
   1d6f8:	add	r3, r2, r3
   1d6fc:	add	r2, r3, #16
   1d700:	ldr	r3, [fp, #-12]
   1d704:	ldr	r3, [r3, #52]	; 0x34
   1d708:	add	r3, r3, #1
   1d70c:	mov	r0, r2
   1d710:	mov	r1, r3
   1d714:	bl	a05c <__aeabi_uidivmod@plt>
   1d718:	mov	r3, r1
   1d71c:	mov	r2, r3
   1d720:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d724:	str	r2, [r3, #24]
   1d728:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d72c:	ldr	r2, [r3, #28]
   1d730:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d734:	ldrh	r3, [r3, #10]
   1d738:	rsb	r3, r3, r2
   1d73c:	sub	r2, r3, #16
   1d740:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d744:	str	r2, [r3, #28]
   1d748:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d74c:	ldr	r3, [r3, #4]
   1d750:	cmp	r3, #1
   1d754:	bne	1d77c <_RingIO_releaseAttribute+0x128>
   1d758:	ldr	r3, [fp, #-12]
   1d75c:	ldr	r2, [r3, #56]	; 0x38
   1d760:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d764:	ldrh	r3, [r3, #10]
   1d768:	add	r3, r2, r3
   1d76c:	add	r2, r3, #16
   1d770:	ldr	r3, [fp, #-12]
   1d774:	str	r2, [r3, #56]	; 0x38
   1d778:	b	1d79c <_RingIO_releaseAttribute+0x148>
   1d77c:	ldr	r3, [fp, #-12]
   1d780:	ldr	r2, [r3, #60]	; 0x3c
   1d784:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d788:	ldrh	r3, [r3, #10]
   1d78c:	add	r3, r2, r3
   1d790:	add	r2, r3, #16
   1d794:	ldr	r3, [fp, #-12]
   1d798:	str	r2, [r3, #60]	; 0x3c
   1d79c:	ldr	r3, [fp, #-16]
   1d7a0:	ldr	r2, [r3, #24]
   1d7a4:	ldr	r3, [fp, #-8]
   1d7a8:	lsl	r3, r3, #7
   1d7ac:	add	r3, r2, r3
   1d7b0:	ldrh	r3, [r3, #46]	; 0x2e
   1d7b4:	and	r2, r3, #255	; 0xff
   1d7b8:	ldr	r3, [fp, #-12]
   1d7bc:	ldr	r3, [r3]
   1d7c0:	lsl	r3, r3, #8
   1d7c4:	lsl	r3, r3, #16
   1d7c8:	lsr	r3, r3, #16
   1d7cc:	orr	r3, r2, r3
   1d7d0:	and	r3, r3, #255	; 0xff
   1d7d4:	cmp	r3, #32
   1d7d8:	beq	1d840 <_RingIO_releaseAttribute+0x1ec>
   1d7dc:	ldr	r3, [fp, #-16]
   1d7e0:	ldr	r2, [r3, #24]
   1d7e4:	ldr	r3, [fp, #-8]
   1d7e8:	lsl	r3, r3, #7
   1d7ec:	add	r3, r2, r3
   1d7f0:	ldrh	r3, [r3, #46]	; 0x2e
   1d7f4:	mov	r2, r3
   1d7f8:	and	r2, r2, #255	; 0xff
   1d7fc:	ldr	r3, [fp, #-12]
   1d800:	ldr	r3, [r3]
   1d804:	lsl	r3, r3, #16
   1d808:	lsr	r3, r3, #16
   1d80c:	lsl	r3, r3, #8
   1d810:	lsl	r3, r3, #16
   1d814:	lsr	r3, r3, #16
   1d818:	orr	r3, r2, r3
   1d81c:	lsl	r3, r3, #16
   1d820:	lsr	r2, r3, #16
   1d824:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d828:	ldrh	r3, [r3, #10]
   1d82c:	add	r3, r3, #16
   1d830:	mov	r0, r2
   1d834:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d838:	mov	r2, r3
   1d83c:	bl	170a4 <POOL_writeback>
   1d840:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d844:	mov	r0, r3
   1d848:	sub	sp, fp, #4
   1d84c:	pop	{fp, pc}
   1d850:	.word	0x80008055
   1d854:	.word	0x0002d7ac

0001d858 <_RingIO_getContiguousDataSize>:
   1d858:	push	{fp, lr}
   1d85c:	add	fp, sp, #4
   1d860:	sub	sp, sp, #48	; 0x30
   1d864:	str	r0, [fp, #-48]	; 0xffffffd0
   1d868:	str	r1, [fp, #-52]	; 0xffffffcc
   1d86c:	mov	r3, #33024	; 0x8100
   1d870:	str	r3, [fp, #-40]	; 0xffffffd8
   1d874:	mov	r3, #0
   1d878:	str	r3, [fp, #-36]	; 0xffffffdc
   1d87c:	mov	r3, #0
   1d880:	str	r3, [fp, #-32]	; 0xffffffe0
   1d884:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d888:	ldr	r3, [r3, #52]	; 0x34
   1d88c:	str	r3, [fp, #-36]	; 0xffffffdc
   1d890:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d894:	ldr	r3, [r3, #20]
   1d898:	add	r3, r3, #1
   1d89c:	str	r3, [fp, #-32]	; 0xffffffe0
   1d8a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d8a4:	ldr	r2, [r3, #16]
   1d8a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d8ac:	ldr	r3, [r3, #20]
   1d8b0:	add	r3, r2, r3
   1d8b4:	mov	r0, r3
   1d8b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d8bc:	bl	a05c <__aeabi_uidivmod@plt>
   1d8c0:	mov	r3, r1
   1d8c4:	str	r3, [fp, #-24]	; 0xffffffe8
   1d8c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d8cc:	ldr	r2, [r3, #20]
   1d8d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d8d4:	rsb	r3, r3, r2
   1d8d8:	add	r3, r3, #1
   1d8dc:	str	r3, [fp, #-28]	; 0xffffffe4
   1d8e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d8e4:	str	r3, [fp, #-12]
   1d8e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d8ec:	ldr	r3, [r3, #32]
   1d8f0:	cmp	r3, #0
   1d8f4:	beq	1d928 <_RingIO_getContiguousDataSize+0xd0>
   1d8f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d8fc:	ldr	r2, [r3, #32]
   1d900:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d904:	ldr	r3, [r3, #28]
   1d908:	add	r2, r2, r3
   1d90c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d910:	ldr	r3, [r3, #20]
   1d914:	mvn	r3, r3
   1d918:	add	r2, r2, r3
   1d91c:	ldr	r3, [fp, #-12]
   1d920:	add	r3, r3, r2
   1d924:	str	r3, [fp, #-12]
   1d928:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d92c:	ldr	r2, [r3, #36]	; 0x24
   1d930:	ldr	r3, [fp, #-12]
   1d934:	cmp	r2, r3
   1d938:	movcc	r3, r2
   1d93c:	str	r3, [fp, #-20]	; 0xffffffec
   1d940:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d944:	bl	1d48c <_RingIO_getFirstAttr>
   1d948:	mov	r3, r0
   1d94c:	str	r3, [fp, #-8]
   1d950:	ldr	r3, [fp, #-8]
   1d954:	cmp	r3, #0
   1d958:	bne	1d96c <_RingIO_getContiguousDataSize+0x114>
   1d95c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d960:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d964:	str	r3, [r2]
   1d968:	b	1da08 <_RingIO_getContiguousDataSize+0x1b0>
   1d96c:	ldr	r3, [fp, #-8]
   1d970:	ldr	r2, [r3]
   1d974:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d978:	cmp	r2, r3
   1d97c:	bcs	1d998 <_RingIO_getContiguousDataSize+0x140>
   1d980:	ldr	r3, [fp, #-8]
   1d984:	ldr	r2, [r3]
   1d988:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d98c:	add	r3, r2, r3
   1d990:	str	r3, [fp, #-16]
   1d994:	b	1d9d8 <_RingIO_getContiguousDataSize+0x180>
   1d998:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d99c:	cmp	r3, #0
   1d9a0:	bne	1d9c4 <_RingIO_getContiguousDataSize+0x16c>
   1d9a4:	ldr	r3, [fp, #-8]
   1d9a8:	ldr	r2, [r3]
   1d9ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d9b0:	cmp	r2, r3
   1d9b4:	bne	1d9c4 <_RingIO_getContiguousDataSize+0x16c>
   1d9b8:	mov	r3, #0
   1d9bc:	str	r3, [fp, #-16]
   1d9c0:	b	1d9d8 <_RingIO_getContiguousDataSize+0x180>
   1d9c4:	ldr	r3, [fp, #-8]
   1d9c8:	ldr	r2, [r3]
   1d9cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d9d0:	rsb	r3, r3, r2
   1d9d4:	str	r3, [fp, #-16]
   1d9d8:	ldr	r2, [fp, #-16]
   1d9dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d9e0:	cmp	r2, r3
   1d9e4:	movcs	r2, r3
   1d9e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d9ec:	str	r2, [r3]
   1d9f0:	ldr	r2, [fp, #-16]
   1d9f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d9f8:	cmp	r2, r3
   1d9fc:	bhi	1da08 <_RingIO_getContiguousDataSize+0x1b0>
   1da00:	ldr	r3, [pc, #16]	; 1da18 <_RingIO_getContiguousDataSize+0x1c0>
   1da04:	str	r3, [fp, #-40]	; 0xffffffd8
   1da08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1da0c:	mov	r0, r3
   1da10:	sub	sp, fp, #4
   1da14:	pop	{fp, pc}
   1da18:	.word	0x00008101

0001da1c <_RingIO_isOffsetInBetween>:
   1da1c:	push	{fp}		; (str fp, [sp, #-4]!)
   1da20:	add	fp, sp, #0
   1da24:	sub	sp, sp, #28
   1da28:	str	r0, [fp, #-16]
   1da2c:	str	r1, [fp, #-20]	; 0xffffffec
   1da30:	str	r2, [fp, #-24]	; 0xffffffe8
   1da34:	strh	r3, [fp, #-26]	; 0xffffffe6
   1da38:	mov	r3, #0
   1da3c:	strh	r3, [fp, #-6]
   1da40:	ldr	r2, [fp, #-20]	; 0xffffffec
   1da44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1da48:	cmp	r2, r3
   1da4c:	bcs	1da7c <_RingIO_isOffsetInBetween+0x60>
   1da50:	ldr	r2, [fp, #-16]
   1da54:	ldr	r3, [fp, #-20]	; 0xffffffec
   1da58:	cmp	r2, r3
   1da5c:	bcc	1dadc <_RingIO_isOffsetInBetween+0xc0>
   1da60:	ldr	r2, [fp, #-16]
   1da64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1da68:	cmp	r2, r3
   1da6c:	bhi	1dadc <_RingIO_isOffsetInBetween+0xc0>
   1da70:	mov	r3, #1
   1da74:	strh	r3, [fp, #-6]
   1da78:	b	1dadc <_RingIO_isOffsetInBetween+0xc0>
   1da7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1da80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1da84:	cmp	r2, r3
   1da88:	bls	1dab8 <_RingIO_isOffsetInBetween+0x9c>
   1da8c:	ldr	r2, [fp, #-16]
   1da90:	ldr	r3, [fp, #-20]	; 0xffffffec
   1da94:	cmp	r2, r3
   1da98:	bcs	1daac <_RingIO_isOffsetInBetween+0x90>
   1da9c:	ldr	r2, [fp, #-16]
   1daa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1daa4:	cmp	r2, r3
   1daa8:	bhi	1dadc <_RingIO_isOffsetInBetween+0xc0>
   1daac:	mov	r3, #1
   1dab0:	strh	r3, [fp, #-6]
   1dab4:	b	1dadc <_RingIO_isOffsetInBetween+0xc0>
   1dab8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1dabc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dac0:	cmp	r2, r3
   1dac4:	bne	1dadc <_RingIO_isOffsetInBetween+0xc0>
   1dac8:	ldrsh	r3, [fp, #-26]	; 0xffffffe6
   1dacc:	cmp	r3, #1
   1dad0:	bne	1dadc <_RingIO_isOffsetInBetween+0xc0>
   1dad4:	mov	r3, #1
   1dad8:	strh	r3, [fp, #-6]
   1dadc:	ldrh	r3, [fp, #-6]
   1dae0:	lsl	r3, r3, #16
   1dae4:	asr	r3, r3, #16
   1dae8:	mov	r0, r3
   1daec:	add	sp, fp, #0
   1daf0:	ldmfd	sp!, {fp}
   1daf4:	bx	lr

0001daf8 <RingIO_notifyCallback>:
   1daf8:	push	{fp, lr}
   1dafc:	add	fp, sp, #4
   1db00:	sub	sp, sp, #32
   1db04:	str	r0, [fp, #-24]	; 0xffffffe8
   1db08:	str	r1, [fp, #-28]	; 0xffffffe4
   1db0c:	str	r2, [fp, #-32]	; 0xffffffe0
   1db10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1db14:	str	r3, [fp, #-16]
   1db18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1db1c:	lsl	r3, r3, #16
   1db20:	lsr	r3, r3, #16
   1db24:	str	r3, [fp, #-12]
   1db28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1db2c:	lsr	r3, r3, #16
   1db30:	strh	r3, [fp, #-6]
   1db34:	ldr	r3, [pc, #88]	; 1db94 <RingIO_notifyCallback+0x9c>
   1db38:	ldrh	r3, [r3]
   1db3c:	cmp	r3, #0
   1db40:	bne	1db8c <RingIO_notifyCallback+0x94>
   1db44:	ldr	r3, [fp, #-16]
   1db48:	ldr	r3, [r3, #52]	; 0x34
   1db4c:	ldr	r2, [r3, #4]
   1db50:	ldr	r3, [fp, #-12]
   1db54:	cmp	r2, r3
   1db58:	bne	1db8c <RingIO_notifyCallback+0x94>
   1db5c:	ldr	r3, [fp, #-16]
   1db60:	ldr	r3, [r3, #36]	; 0x24
   1db64:	cmp	r3, #0
   1db68:	beq	1db8c <RingIO_notifyCallback+0x94>
   1db6c:	ldr	r3, [fp, #-16]
   1db70:	ldr	ip, [r3, #36]	; 0x24
   1db74:	ldr	r3, [fp, #-16]
   1db78:	ldr	r3, [r3, #40]	; 0x28
   1db7c:	ldrh	r2, [fp, #-6]
   1db80:	ldr	r0, [fp, #-16]
   1db84:	mov	r1, r3
   1db88:	blx	ip
   1db8c:	sub	sp, fp, #4
   1db90:	pop	{fp, pc}
   1db94:	.word	0x0002d7cc

0001db98 <_RingIO_updateAttributes>:
   1db98:	push	{r4, fp, lr}
   1db9c:	add	fp, sp, #8
   1dba0:	sub	sp, sp, #44	; 0x2c
   1dba4:	str	r0, [fp, #-48]	; 0xffffffd0
   1dba8:	str	r1, [fp, #-52]	; 0xffffffcc
   1dbac:	mov	r3, #0
   1dbb0:	str	r3, [fp, #-40]	; 0xffffffd8
   1dbb4:	mov	r3, #0
   1dbb8:	str	r3, [fp, #-36]	; 0xffffffdc
   1dbbc:	mov	r3, #0
   1dbc0:	str	r3, [fp, #-32]	; 0xffffffe0
   1dbc4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1dbc8:	ldr	r3, [r3, #52]	; 0x34
   1dbcc:	str	r3, [fp, #-40]	; 0xffffffd8
   1dbd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dbd4:	ldr	r3, [r3]
   1dbd8:	lsl	r2, r3, #5
   1dbdc:	ldr	r3, [pc, #720]	; 1deb4 <_RingIO_updateAttributes+0x31c>
   1dbe0:	add	r3, r2, r3
   1dbe4:	str	r3, [fp, #-32]	; 0xffffffe0
   1dbe8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dbec:	ldr	r3, [r3, #4]
   1dbf0:	str	r3, [fp, #-16]
   1dbf4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dbf8:	ldr	r3, [r3, #56]	; 0x38
   1dbfc:	str	r3, [fp, #-24]	; 0xffffffe8
   1dc00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dc04:	ldr	r3, [r3, #52]	; 0x34
   1dc08:	add	r3, r3, #1
   1dc0c:	str	r3, [fp, #-20]	; 0xffffffec
   1dc10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dc14:	cmp	r3, #0
   1dc18:	beq	1dea0 <_RingIO_updateAttributes+0x308>
   1dc1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1dc20:	ldr	r3, [r3, #4]
   1dc24:	cmp	r3, #1
   1dc28:	bne	1dc74 <_RingIO_updateAttributes+0xdc>
   1dc2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dc30:	add	r3, r3, #256	; 0x100
   1dc34:	str	r3, [fp, #-36]	; 0xffffffdc
   1dc38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1dc3c:	ldr	r3, [r3, #12]
   1dc40:	mov	r4, r3
   1dc44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dc48:	ldr	r2, [r3, #24]
   1dc4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dc50:	ldr	r3, [r3, #28]
   1dc54:	add	r3, r2, r3
   1dc58:	mov	r0, r3
   1dc5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1dc60:	bl	a05c <__aeabi_uidivmod@plt>
   1dc64:	mov	r3, r1
   1dc68:	add	r3, r4, r3
   1dc6c:	str	r3, [fp, #-28]	; 0xffffffe4
   1dc70:	b	1dea0 <_RingIO_updateAttributes+0x308>
   1dc74:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1dc78:	ldr	r3, [r3, #12]
   1dc7c:	mov	r4, r3
   1dc80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1dc84:	ldr	r2, [r3, #24]
   1dc88:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1dc8c:	ldr	r3, [r3, #28]
   1dc90:	add	r3, r2, r3
   1dc94:	mov	r0, r3
   1dc98:	ldr	r1, [fp, #-20]	; 0xffffffec
   1dc9c:	bl	a05c <__aeabi_uidivmod@plt>
   1dca0:	mov	r3, r1
   1dca4:	add	r3, r4, r3
   1dca8:	str	r3, [fp, #-28]	; 0xffffffe4
   1dcac:	b	1dea0 <_RingIO_updateAttributes+0x308>
   1dcb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dcb4:	ldr	r2, [r3, #24]
   1dcb8:	ldr	r3, [fp, #-16]
   1dcbc:	lsl	r3, r3, #7
   1dcc0:	add	r3, r2, r3
   1dcc4:	ldrh	r3, [r3, #46]	; 0x2e
   1dcc8:	and	r2, r3, #255	; 0xff
   1dccc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dcd0:	ldr	r3, [r3]
   1dcd4:	lsl	r3, r3, #8
   1dcd8:	lsl	r3, r3, #16
   1dcdc:	lsr	r3, r3, #16
   1dce0:	orr	r3, r2, r3
   1dce4:	and	r3, r3, #255	; 0xff
   1dce8:	cmp	r3, #32
   1dcec:	beq	1dd48 <_RingIO_updateAttributes+0x1b0>
   1dcf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dcf4:	ldr	r2, [r3, #24]
   1dcf8:	ldr	r3, [fp, #-16]
   1dcfc:	lsl	r3, r3, #7
   1dd00:	add	r3, r2, r3
   1dd04:	ldrh	r3, [r3, #46]	; 0x2e
   1dd08:	mov	r2, r3
   1dd0c:	and	r2, r2, #255	; 0xff
   1dd10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dd14:	ldr	r3, [r3]
   1dd18:	lsl	r3, r3, #16
   1dd1c:	lsr	r3, r3, #16
   1dd20:	lsl	r3, r3, #8
   1dd24:	lsl	r3, r3, #16
   1dd28:	lsr	r3, r3, #16
   1dd2c:	orr	r3, r2, r3
   1dd30:	lsl	r3, r3, #16
   1dd34:	lsr	r3, r3, #16
   1dd38:	mov	r0, r3
   1dd3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1dd40:	mov	r2, #16
   1dd44:	bl	17224 <POOL_invalidate>
   1dd48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dd4c:	ldr	r2, [r3]
   1dd50:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1dd54:	cmp	r2, r3
   1dd58:	bne	1de40 <_RingIO_updateAttributes+0x2a8>
   1dd5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1dd60:	cmp	r3, #0
   1dd64:	bne	1dd80 <_RingIO_updateAttributes+0x1e8>
   1dd68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dd6c:	ldr	r3, [r3, #20]
   1dd70:	add	r2, r3, #1
   1dd74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dd78:	str	r2, [r3]
   1dd7c:	b	1dda8 <_RingIO_updateAttributes+0x210>
   1dd80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dd84:	ldr	r2, [r3]
   1dd88:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dd8c:	ldr	r3, [r3, #20]
   1dd90:	add	r3, r3, #1
   1dd94:	cmp	r2, r3
   1dd98:	bne	1dda8 <_RingIO_updateAttributes+0x210>
   1dd9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1dda0:	mov	r3, #0
   1dda4:	str	r3, [r2]
   1dda8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ddac:	ldr	r2, [r3, #24]
   1ddb0:	ldr	r3, [fp, #-16]
   1ddb4:	lsl	r3, r3, #7
   1ddb8:	add	r3, r2, r3
   1ddbc:	ldrh	r3, [r3, #46]	; 0x2e
   1ddc0:	and	r2, r3, #255	; 0xff
   1ddc4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ddc8:	ldr	r3, [r3]
   1ddcc:	lsl	r3, r3, #8
   1ddd0:	lsl	r3, r3, #16
   1ddd4:	lsr	r3, r3, #16
   1ddd8:	orr	r3, r2, r3
   1dddc:	and	r3, r3, #255	; 0xff
   1dde0:	cmp	r3, #32
   1dde4:	beq	1de40 <_RingIO_updateAttributes+0x2a8>
   1dde8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ddec:	ldr	r2, [r3, #24]
   1ddf0:	ldr	r3, [fp, #-16]
   1ddf4:	lsl	r3, r3, #7
   1ddf8:	add	r3, r2, r3
   1ddfc:	ldrh	r3, [r3, #46]	; 0x2e
   1de00:	mov	r2, r3
   1de04:	and	r2, r2, #255	; 0xff
   1de08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1de0c:	ldr	r3, [r3]
   1de10:	lsl	r3, r3, #16
   1de14:	lsr	r3, r3, #16
   1de18:	lsl	r3, r3, #8
   1de1c:	lsl	r3, r3, #16
   1de20:	lsr	r3, r3, #16
   1de24:	orr	r3, r2, r3
   1de28:	lsl	r3, r3, #16
   1de2c:	lsr	r3, r3, #16
   1de30:	mov	r0, r3
   1de34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1de38:	mov	r2, #16
   1de3c:	bl	170a4 <POOL_writeback>
   1de40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de44:	ldrh	r3, [r3, #10]
   1de48:	mov	r2, r3
   1de4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1de50:	rsb	r3, r2, r3
   1de54:	sub	r3, r3, #16
   1de58:	str	r3, [fp, #-24]	; 0xffffffe8
   1de5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1de60:	ldr	r3, [r3, #12]
   1de64:	mov	r4, r3
   1de68:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1de6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1de70:	ldr	r3, [r3, #12]
   1de74:	rsb	r2, r3, r2
   1de78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de7c:	ldrh	r3, [r3, #10]
   1de80:	add	r3, r2, r3
   1de84:	add	r3, r3, #16
   1de88:	mov	r0, r3
   1de8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1de90:	bl	a05c <__aeabi_uidivmod@plt>
   1de94:	mov	r3, r1
   1de98:	add	r3, r4, r3
   1de9c:	str	r3, [fp, #-28]	; 0xffffffe4
   1dea0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dea4:	cmp	r3, #0
   1dea8:	bne	1dcb0 <_RingIO_updateAttributes+0x118>
   1deac:	sub	sp, fp, #8
   1deb0:	pop	{r4, fp, pc}
   1deb4:	.word	0x0002d7ac

0001deb8 <_RingIO_acquireLock>:
   1deb8:	push	{fp, lr}
   1debc:	add	fp, sp, #4
   1dec0:	sub	sp, sp, #16
   1dec4:	str	r0, [fp, #-16]
   1dec8:	mov	r3, #32768	; 0x8000
   1decc:	str	r3, [fp, #-8]
   1ded0:	ldr	r3, [fp, #-16]
   1ded4:	ldr	r3, [r3, #56]	; 0x38
   1ded8:	mov	r0, r3
   1dedc:	bl	12c3c <MPCS_enter>
   1dee0:	mov	r3, r0
   1dee4:	str	r3, [fp, #-8]
   1dee8:	ldr	r3, [fp, #-8]
   1deec:	mov	r0, r3
   1def0:	sub	sp, fp, #4
   1def4:	pop	{fp, pc}

0001def8 <_RingIO_releaseLock>:
   1def8:	push	{fp, lr}
   1defc:	add	fp, sp, #4
   1df00:	sub	sp, sp, #16
   1df04:	str	r0, [fp, #-16]
   1df08:	mov	r3, #32768	; 0x8000
   1df0c:	str	r3, [fp, #-8]
   1df10:	ldr	r3, [fp, #-16]
   1df14:	ldr	r3, [r3, #56]	; 0x38
   1df18:	mov	r0, r3
   1df1c:	bl	12e98 <MPCS_leave>
   1df20:	mov	r3, r0
   1df24:	str	r3, [fp, #-8]
   1df28:	ldr	r3, [fp, #-8]
   1df2c:	mov	r0, r3
   1df30:	sub	sp, fp, #4
   1df34:	pop	{fp, pc}

0001df38 <RingIO_create>:
   1df38:	push	{fp, lr}
   1df3c:	add	fp, sp, #4
   1df40:	sub	sp, sp, #80	; 0x50
   1df44:	str	r0, [fp, #-64]	; 0xffffffc0
   1df48:	str	r1, [fp, #-68]	; 0xffffffbc
   1df4c:	str	r2, [fp, #-72]	; 0xffffffb8
   1df50:	mov	r3, #33024	; 0x8100
   1df54:	str	r3, [fp, #-24]	; 0xffffffe8
   1df58:	mov	r3, #33024	; 0x8100
   1df5c:	str	r3, [fp, #-20]	; 0xffffffec
   1df60:	mov	r3, #0
   1df64:	str	r3, [fp, #-28]	; 0xffffffe4
   1df68:	mov	r3, #0
   1df6c:	str	r3, [fp, #-32]	; 0xffffffe0
   1df70:	mov	r3, #0
   1df74:	str	r3, [fp, #-36]	; 0xffffffdc
   1df78:	mov	r3, #0
   1df7c:	str	r3, [fp, #-40]	; 0xffffffd8
   1df80:	mov	r3, #0
   1df84:	str	r3, [fp, #-44]	; 0xffffffd4
   1df88:	mov	r3, #0
   1df8c:	str	r3, [fp, #-48]	; 0xffffffd0
   1df90:	mov	r3, #0
   1df94:	str	r3, [fp, #-52]	; 0xffffffcc
   1df98:	mov	r3, #0
   1df9c:	str	r3, [fp, #-56]	; 0xffffffc8
   1dfa0:	mov	r3, #0
   1dfa4:	str	r3, [fp, #-16]
   1dfa8:	mvn	r3, #0
   1dfac:	str	r3, [fp, #-12]
   1dfb0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1dfb4:	cmp	r3, #0
   1dfb8:	beq	1dfc8 <RingIO_create+0x90>
   1dfbc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1dfc0:	cmp	r3, #0
   1dfc4:	bne	1dfd4 <RingIO_create+0x9c>
   1dfc8:	ldr	r3, [pc, #2532]	; 1e9b4 <RingIO_create+0xa7c>
   1dfcc:	str	r3, [fp, #-24]	; 0xffffffe8
   1dfd0:	b	1e02c <RingIO_create+0xf4>
   1dfd4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1dfd8:	ldr	r3, [r3]
   1dfdc:	cmp	r3, #2
   1dfe0:	bne	1dff4 <RingIO_create+0xbc>
   1dfe4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1dfe8:	ldr	r3, [r3, #12]
   1dfec:	cmp	r3, #0
   1dff0:	bne	1e000 <RingIO_create+0xc8>
   1dff4:	ldr	r3, [pc, #2488]	; 1e9b4 <RingIO_create+0xa7c>
   1dff8:	str	r3, [fp, #-24]	; 0xffffffe8
   1dffc:	b	1e02c <RingIO_create+0xf4>
   1e000:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1e004:	lsl	r2, r3, #5
   1e008:	ldr	r3, [pc, #2472]	; 1e9b8 <RingIO_create+0xa80>
   1e00c:	add	r3, r2, r3
   1e010:	str	r3, [fp, #-16]
   1e014:	ldr	r3, [fp, #-16]
   1e018:	ldr	r3, [r3, #20]
   1e01c:	cmp	r3, #0
   1e020:	bne	1e02c <RingIO_create+0xf4>
   1e024:	ldr	r3, [pc, #2448]	; 1e9bc <RingIO_create+0xa84>
   1e028:	str	r3, [fp, #-24]	; 0xffffffe8
   1e02c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e030:	ldr	r3, [pc, #2440]	; 1e9c0 <RingIO_create+0xa88>
   1e034:	cmp	r2, r3
   1e038:	ble	1e97c <RingIO_create+0xa44>
   1e03c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e040:	cmp	r3, #34048	; 0x8500
   1e044:	bgt	1e97c <RingIO_create+0xa44>
   1e048:	ldr	r3, [fp, #-16]
   1e04c:	ldr	r3, [r3, #28]
   1e050:	mov	r0, r3
   1e054:	bl	12c3c <MPCS_enter>
   1e058:	mov	r3, r0
   1e05c:	str	r3, [fp, #-24]	; 0xffffffe8
   1e060:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e064:	ldr	r3, [pc, #2388]	; 1e9c0 <RingIO_create+0xa88>
   1e068:	cmp	r2, r3
   1e06c:	ble	1e1dc <RingIO_create+0x2a4>
   1e070:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e074:	cmp	r3, #34048	; 0x8500
   1e078:	bgt	1e1dc <RingIO_create+0x2a4>
   1e07c:	mov	r3, #0
   1e080:	str	r3, [fp, #-8]
   1e084:	b	1e120 <RingIO_create+0x1e8>
   1e088:	ldr	r3, [fp, #-16]
   1e08c:	ldr	r2, [r3, #24]
   1e090:	ldr	r3, [fp, #-8]
   1e094:	lsl	r3, r3, #7
   1e098:	add	r3, r2, r3
   1e09c:	add	r3, r3, #8
   1e0a0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1e0a4:	mov	r1, r3
   1e0a8:	mov	r2, #32
   1e0ac:	bl	9cc0 <strncmp@plt>
   1e0b0:	mov	r3, r0
   1e0b4:	cmp	r3, #0
   1e0b8:	bne	1e0c4 <RingIO_create+0x18c>
   1e0bc:	ldr	r3, [pc, #2304]	; 1e9c4 <RingIO_create+0xa8c>
   1e0c0:	str	r3, [fp, #-24]	; 0xffffffe8
   1e0c4:	ldr	r3, [fp, #-12]
   1e0c8:	cmn	r3, #1
   1e0cc:	bne	1e114 <RingIO_create+0x1dc>
   1e0d0:	ldr	r3, [fp, #-16]
   1e0d4:	ldr	r2, [r3, #24]
   1e0d8:	ldr	r3, [fp, #-8]
   1e0dc:	lsl	r3, r3, #7
   1e0e0:	add	r3, r2, r3
   1e0e4:	ldr	r3, [r3]
   1e0e8:	cmp	r3, #0
   1e0ec:	bne	1e114 <RingIO_create+0x1dc>
   1e0f0:	ldr	r3, [fp, #-16]
   1e0f4:	ldr	r2, [r3, #24]
   1e0f8:	ldr	r3, [fp, #-8]
   1e0fc:	lsl	r3, r3, #7
   1e100:	add	r2, r2, r3
   1e104:	mov	r3, #1
   1e108:	str	r3, [r2]
   1e10c:	ldr	r3, [fp, #-8]
   1e110:	str	r3, [fp, #-12]
   1e114:	ldr	r3, [fp, #-8]
   1e118:	add	r3, r3, #1
   1e11c:	str	r3, [fp, #-8]
   1e120:	ldr	r3, [fp, #-16]
   1e124:	ldr	r3, [r3, #20]
   1e128:	ldr	r2, [r3, #8]
   1e12c:	ldr	r3, [fp, #-8]
   1e130:	cmp	r2, r3
   1e134:	bls	1e154 <RingIO_create+0x21c>
   1e138:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e13c:	ldr	r3, [pc, #2172]	; 1e9c0 <RingIO_create+0xa88>
   1e140:	cmp	r2, r3
   1e144:	ble	1e154 <RingIO_create+0x21c>
   1e148:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e14c:	cmp	r3, #34048	; 0x8500
   1e150:	ble	1e088 <RingIO_create+0x150>
   1e154:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e158:	ldr	r3, [pc, #2144]	; 1e9c0 <RingIO_create+0xa88>
   1e15c:	cmp	r2, r3
   1e160:	ble	1e184 <RingIO_create+0x24c>
   1e164:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e168:	cmp	r3, #34048	; 0x8500
   1e16c:	bgt	1e184 <RingIO_create+0x24c>
   1e170:	ldr	r3, [fp, #-12]
   1e174:	cmn	r3, #1
   1e178:	bne	1e184 <RingIO_create+0x24c>
   1e17c:	ldr	r3, [pc, #2116]	; 1e9c8 <RingIO_create+0xa90>
   1e180:	str	r3, [fp, #-24]	; 0xffffffe8
   1e184:	ldr	r3, [fp, #-16]
   1e188:	ldr	r3, [r3, #28]
   1e18c:	mov	r0, r3
   1e190:	bl	12e98 <MPCS_leave>
   1e194:	mov	r3, r0
   1e198:	str	r3, [fp, #-20]	; 0xffffffec
   1e19c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e1a0:	ldr	r3, [pc, #2072]	; 1e9c0 <RingIO_create+0xa88>
   1e1a4:	cmp	r2, r3
   1e1a8:	ble	1e1dc <RingIO_create+0x2a4>
   1e1ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e1b0:	cmp	r3, #34048	; 0x8500
   1e1b4:	bgt	1e1dc <RingIO_create+0x2a4>
   1e1b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e1bc:	ldr	r3, [pc, #2044]	; 1e9c0 <RingIO_create+0xa88>
   1e1c0:	cmp	r2, r3
   1e1c4:	ble	1e1d4 <RingIO_create+0x29c>
   1e1c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e1cc:	cmp	r3, #34048	; 0x8500
   1e1d0:	ble	1e1dc <RingIO_create+0x2a4>
   1e1d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e1d8:	str	r3, [fp, #-24]	; 0xffffffe8
   1e1dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e1e0:	ldr	r3, [pc, #2008]	; 1e9c0 <RingIO_create+0xa88>
   1e1e4:	cmp	r2, r3
   1e1e8:	ble	1e954 <RingIO_create+0xa1c>
   1e1ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e1f0:	cmp	r3, #34048	; 0x8500
   1e1f4:	bgt	1e954 <RingIO_create+0xa1c>
   1e1f8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e1fc:	ldrh	r3, [r3, #4]
   1e200:	sub	r2, fp, #28
   1e204:	mov	r0, r3
   1e208:	mov	r1, r2
   1e20c:	mov	r2, #384	; 0x180
   1e210:	bl	17bbc <POOL_alloc>
   1e214:	mov	r3, r0
   1e218:	str	r3, [fp, #-24]	; 0xffffffe8
   1e21c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e220:	ldr	r3, [pc, #1944]	; 1e9c0 <RingIO_create+0xa88>
   1e224:	cmp	r2, r3
   1e228:	ble	1e268 <RingIO_create+0x330>
   1e22c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e230:	cmp	r3, #34048	; 0x8500
   1e234:	bgt	1e268 <RingIO_create+0x330>
   1e238:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e23c:	ldrh	r2, [r3, #4]
   1e240:	sub	r1, fp, #32
   1e244:	ldr	ip, [fp, #-28]	; 0xffffffe4
   1e248:	mov	r3, #0
   1e24c:	str	r3, [sp]
   1e250:	mov	r0, r2
   1e254:	mov	r2, #3
   1e258:	mov	r3, ip
   1e25c:	bl	17d1c <POOL_translateAddr>
   1e260:	mov	r3, r0
   1e264:	str	r3, [fp, #-24]	; 0xffffffe8
   1e268:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e26c:	ldr	r3, [pc, #1868]	; 1e9c0 <RingIO_create+0xa88>
   1e270:	cmp	r2, r3
   1e274:	ble	1e304 <RingIO_create+0x3cc>
   1e278:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e27c:	cmp	r3, #34048	; 0x8500
   1e280:	bgt	1e304 <RingIO_create+0x3cc>
   1e284:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e288:	ldrh	r1, [r3, #6]
   1e28c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e290:	ldr	r2, [r3, #12]
   1e294:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e298:	ldr	r3, [r3, #16]
   1e29c:	add	r2, r2, r3
   1e2a0:	sub	r3, fp, #36	; 0x24
   1e2a4:	mov	r0, r1
   1e2a8:	mov	r1, r3
   1e2ac:	bl	17bbc <POOL_alloc>
   1e2b0:	mov	r3, r0
   1e2b4:	str	r3, [fp, #-24]	; 0xffffffe8
   1e2b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e2bc:	ldr	r3, [pc, #1788]	; 1e9c0 <RingIO_create+0xa88>
   1e2c0:	cmp	r2, r3
   1e2c4:	ble	1e304 <RingIO_create+0x3cc>
   1e2c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e2cc:	cmp	r3, #34048	; 0x8500
   1e2d0:	bgt	1e304 <RingIO_create+0x3cc>
   1e2d4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e2d8:	ldrh	r2, [r3, #6]
   1e2dc:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1e2e0:	sub	r1, fp, #40	; 0x28
   1e2e4:	mov	r3, #0
   1e2e8:	str	r3, [sp]
   1e2ec:	mov	r0, r2
   1e2f0:	mov	r2, #3
   1e2f4:	mov	r3, ip
   1e2f8:	bl	17d1c <POOL_translateAddr>
   1e2fc:	mov	r3, r0
   1e300:	str	r3, [fp, #-24]	; 0xffffffe8
   1e304:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e308:	ldr	r3, [pc, #1712]	; 1e9c0 <RingIO_create+0xa88>
   1e30c:	cmp	r2, r3
   1e310:	ble	1e3a8 <RingIO_create+0x470>
   1e314:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e318:	cmp	r3, #34048	; 0x8500
   1e31c:	bgt	1e3a8 <RingIO_create+0x470>
   1e320:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e324:	ldr	r3, [r3, #20]
   1e328:	cmp	r3, #0
   1e32c:	beq	1e3a8 <RingIO_create+0x470>
   1e330:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e334:	ldrh	r2, [r3, #8]
   1e338:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e33c:	ldr	ip, [r3, #20]
   1e340:	sub	r3, fp, #44	; 0x2c
   1e344:	mov	r0, r2
   1e348:	mov	r1, r3
   1e34c:	mov	r2, ip
   1e350:	bl	17bbc <POOL_alloc>
   1e354:	mov	r3, r0
   1e358:	str	r3, [fp, #-24]	; 0xffffffe8
   1e35c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e360:	ldr	r3, [pc, #1624]	; 1e9c0 <RingIO_create+0xa88>
   1e364:	cmp	r2, r3
   1e368:	ble	1e3a8 <RingIO_create+0x470>
   1e36c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e370:	cmp	r3, #34048	; 0x8500
   1e374:	bgt	1e3a8 <RingIO_create+0x470>
   1e378:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e37c:	ldrh	r2, [r3, #8]
   1e380:	ldr	ip, [fp, #-44]	; 0xffffffd4
   1e384:	sub	r1, fp, #48	; 0x30
   1e388:	mov	r3, #0
   1e38c:	str	r3, [sp]
   1e390:	mov	r0, r2
   1e394:	mov	r2, #3
   1e398:	mov	r3, ip
   1e39c:	bl	17d1c <POOL_translateAddr>
   1e3a0:	mov	r3, r0
   1e3a4:	str	r3, [fp, #-24]	; 0xffffffe8
   1e3a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e3ac:	ldr	r3, [pc, #1548]	; 1e9c0 <RingIO_create+0xa88>
   1e3b0:	cmp	r2, r3
   1e3b4:	ble	1e488 <RingIO_create+0x550>
   1e3b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e3bc:	cmp	r3, #34048	; 0x8500
   1e3c0:	bgt	1e488 <RingIO_create+0x550>
   1e3c4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e3c8:	ldrh	r3, [r3, #10]
   1e3cc:	sub	r2, fp, #52	; 0x34
   1e3d0:	mov	r0, r3
   1e3d4:	mov	r1, r2
   1e3d8:	mov	r2, #384	; 0x180
   1e3dc:	bl	17bbc <POOL_alloc>
   1e3e0:	mov	r3, r0
   1e3e4:	str	r3, [fp, #-24]	; 0xffffffe8
   1e3e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e3ec:	ldr	r3, [pc, #1484]	; 1e9c0 <RingIO_create+0xa88>
   1e3f0:	cmp	r2, r3
   1e3f4:	ble	1e488 <RingIO_create+0x550>
   1e3f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e3fc:	cmp	r3, #34048	; 0x8500
   1e400:	bgt	1e488 <RingIO_create+0x550>
   1e404:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e408:	ldrh	r2, [r3, #10]
   1e40c:	ldr	ip, [fp, #-52]	; 0xffffffcc
   1e410:	sub	r1, fp, #56	; 0x38
   1e414:	mov	r3, #0
   1e418:	str	r3, [sp]
   1e41c:	mov	r0, r2
   1e420:	mov	r2, #3
   1e424:	mov	r3, ip
   1e428:	bl	17d1c <POOL_translateAddr>
   1e42c:	mov	r3, r0
   1e430:	str	r3, [fp, #-24]	; 0xffffffe8
   1e434:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e438:	ldr	r3, [pc, #1408]	; 1e9c0 <RingIO_create+0xa88>
   1e43c:	cmp	r2, r3
   1e440:	ble	1e488 <RingIO_create+0x550>
   1e444:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e448:	cmp	r3, #34048	; 0x8500
   1e44c:	bgt	1e488 <RingIO_create+0x550>
   1e450:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e454:	ldrh	r3, [r3, #10]
   1e458:	strh	r3, [fp, #-58]	; 0xffffffc6
   1e45c:	ldr	r3, [fp, #-16]
   1e460:	ldr	r3, [r3, #20]
   1e464:	ldr	r3, [r3, #4]
   1e468:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1e46c:	sub	ip, fp, #58	; 0x3a
   1e470:	mov	r0, r3
   1e474:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1e478:	mov	r3, ip
   1e47c:	bl	1214c <MPCS_create>
   1e480:	mov	r3, r0
   1e484:	str	r3, [fp, #-24]	; 0xffffffe8
   1e488:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e48c:	ldr	r3, [pc, #1324]	; 1e9c0 <RingIO_create+0xa88>
   1e490:	cmp	r2, r3
   1e494:	ble	1e7dc <RingIO_create+0x8a4>
   1e498:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e49c:	cmp	r3, #34048	; 0x8500
   1e4a0:	bgt	1e7dc <RingIO_create+0x8a4>
   1e4a4:	ldr	r3, [fp, #-16]
   1e4a8:	ldr	r3, [r3, #28]
   1e4ac:	mov	r0, r3
   1e4b0:	bl	12c3c <MPCS_enter>
   1e4b4:	mov	r3, r0
   1e4b8:	str	r3, [fp, #-24]	; 0xffffffe8
   1e4bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e4c0:	ldr	r3, [pc, #1272]	; 1e9c0 <RingIO_create+0xa88>
   1e4c4:	cmp	r2, r3
   1e4c8:	ble	1e7dc <RingIO_create+0x8a4>
   1e4cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e4d0:	cmp	r3, #34048	; 0x8500
   1e4d4:	bgt	1e7dc <RingIO_create+0x8a4>
   1e4d8:	ldr	r3, [fp, #-16]
   1e4dc:	ldr	r2, [r3, #24]
   1e4e0:	ldr	r3, [fp, #-12]
   1e4e4:	lsl	r3, r3, #7
   1e4e8:	add	r2, r2, r3
   1e4ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e4f0:	str	r3, [r2]
   1e4f4:	ldr	r3, [fp, #-16]
   1e4f8:	ldr	r2, [r3, #24]
   1e4fc:	ldr	r3, [fp, #-12]
   1e500:	lsl	r3, r3, #7
   1e504:	add	r2, r2, r3
   1e508:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e50c:	str	r3, [r2, #4]
   1e510:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e514:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1e518:	str	r3, [r2]
   1e51c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e520:	ldr	r3, [fp, #-12]
   1e524:	str	r3, [r2, #4]
   1e528:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e52c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e530:	ldr	r3, [r3]
   1e534:	str	r3, [r2, #8]
   1e538:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e53c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e540:	str	r3, [r2, #68]	; 0x44
   1e544:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e548:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e54c:	str	r3, [r2, #12]
   1e550:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e554:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e558:	ldr	r2, [r3, #12]
   1e55c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e560:	ldr	r3, [r3, #16]
   1e564:	add	r3, r2, r3
   1e568:	sub	r3, r3, #1
   1e56c:	str	r3, [r1, #16]
   1e570:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e574:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e578:	ldr	r3, [r3, #12]
   1e57c:	sub	r3, r3, #1
   1e580:	str	r3, [r2, #20]
   1e584:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e588:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e58c:	ldr	r3, [r3, #12]
   1e590:	sub	r3, r3, #1
   1e594:	str	r3, [r2, #24]
   1e598:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e59c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e5a0:	ldr	r3, [r3, #12]
   1e5a4:	str	r3, [r2, #28]
   1e5a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e5ac:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e5b0:	ldr	r3, [r3, #16]
   1e5b4:	str	r3, [r2, #32]
   1e5b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e5bc:	mov	r3, #0
   1e5c0:	str	r3, [r2, #36]	; 0x24
   1e5c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e5c8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e5cc:	ldr	r3, [r3, #12]
   1e5d0:	str	r3, [r2, #40]	; 0x28
   1e5d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e5d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e5dc:	str	r3, [r2, #44]	; 0x2c
   1e5e0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e5e4:	ldr	r3, [r3, #20]
   1e5e8:	cmp	r3, #0
   1e5ec:	beq	1e608 <RingIO_create+0x6d0>
   1e5f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e5f4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e5f8:	ldr	r3, [r3, #20]
   1e5fc:	sub	r3, r3, #1
   1e600:	str	r3, [r2, #48]	; 0x30
   1e604:	b	1e614 <RingIO_create+0x6dc>
   1e608:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e60c:	mvn	r3, #0
   1e610:	str	r3, [r2, #48]	; 0x30
   1e614:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e618:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e61c:	ldr	r3, [r3, #48]	; 0x30
   1e620:	str	r3, [r2, #52]	; 0x34
   1e624:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e628:	mov	r3, #0
   1e62c:	str	r3, [r2, #56]	; 0x38
   1e630:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e634:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e638:	ldr	r3, [r3, #20]
   1e63c:	str	r3, [r2, #60]	; 0x3c
   1e640:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e644:	mvn	r3, #0
   1e648:	str	r3, [r2, #64]	; 0x40
   1e64c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e650:	mov	r3, #0
   1e654:	str	r3, [r2, #316]	; 0x13c
   1e658:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e65c:	mov	r3, #0
   1e660:	str	r3, [r2, #320]	; 0x140
   1e664:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e668:	mov	r3, #0
   1e66c:	str	r3, [r2, #188]	; 0xbc
   1e670:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e674:	mov	r3, #0
   1e678:	str	r3, [r2, #192]	; 0xc0
   1e67c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e680:	mov	r3, #0
   1e684:	str	r3, [r2, #260]	; 0x104
   1e688:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e68c:	mov	r3, #1
   1e690:	str	r3, [r2, #132]	; 0x84
   1e694:	ldr	r3, [fp, #-16]
   1e698:	ldr	r2, [r3, #24]
   1e69c:	ldr	r3, [fp, #-12]
   1e6a0:	lsl	r3, r3, #7
   1e6a4:	add	r2, r2, r3
   1e6a8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e6ac:	ldrh	r3, [r3, #4]
   1e6b0:	strh	r3, [r2, #42]	; 0x2a
   1e6b4:	ldr	r3, [fp, #-16]
   1e6b8:	ldr	r2, [r3, #24]
   1e6bc:	ldr	r3, [fp, #-12]
   1e6c0:	lsl	r3, r3, #7
   1e6c4:	add	r2, r2, r3
   1e6c8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e6cc:	ldrh	r3, [r3, #6]
   1e6d0:	strh	r3, [r2, #44]	; 0x2c
   1e6d4:	ldr	r3, [fp, #-16]
   1e6d8:	ldr	r2, [r3, #24]
   1e6dc:	ldr	r3, [fp, #-12]
   1e6e0:	lsl	r3, r3, #7
   1e6e4:	add	r2, r2, r3
   1e6e8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e6ec:	ldrh	r3, [r3, #8]
   1e6f0:	strh	r3, [r2, #46]	; 0x2e
   1e6f4:	ldr	r3, [fp, #-16]
   1e6f8:	ldr	r2, [r3, #24]
   1e6fc:	ldr	r3, [fp, #-12]
   1e700:	lsl	r3, r3, #7
   1e704:	add	r2, r2, r3
   1e708:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e70c:	ldrh	r3, [r3, #10]
   1e710:	strh	r3, [r2, #48]	; 0x30
   1e714:	ldr	r3, [fp, #-16]
   1e718:	ldr	r2, [r3, #24]
   1e71c:	ldr	r3, [fp, #-12]
   1e720:	lsl	r3, r3, #7
   1e724:	add	r2, r2, r3
   1e728:	mov	r3, #1
   1e72c:	strh	r3, [r2, #40]	; 0x28
   1e730:	ldr	r3, [fp, #-16]
   1e734:	ldr	r2, [r3, #24]
   1e738:	ldr	r3, [fp, #-12]
   1e73c:	lsl	r3, r3, #7
   1e740:	add	r3, r2, r3
   1e744:	add	r3, r3, #8
   1e748:	mov	r0, r3
   1e74c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1e750:	mov	r2, #32
   1e754:	bl	9e04 <strncpy@plt>
   1e758:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e75c:	ldrh	r3, [r3, #4]
   1e760:	cmp	r3, #32
   1e764:	beq	1e784 <RingIO_create+0x84c>
   1e768:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e76c:	ldrh	r3, [r3, #4]
   1e770:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e774:	mov	r0, r3
   1e778:	mov	r1, r2
   1e77c:	mov	r2, #384	; 0x180
   1e780:	bl	170a4 <POOL_writeback>
   1e784:	ldr	r3, [fp, #-16]
   1e788:	ldr	r3, [r3, #28]
   1e78c:	mov	r0, r3
   1e790:	bl	12e98 <MPCS_leave>
   1e794:	mov	r3, r0
   1e798:	str	r3, [fp, #-20]	; 0xffffffec
   1e79c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e7a0:	ldr	r3, [pc, #536]	; 1e9c0 <RingIO_create+0xa88>
   1e7a4:	cmp	r2, r3
   1e7a8:	ble	1e7dc <RingIO_create+0x8a4>
   1e7ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e7b0:	cmp	r3, #34048	; 0x8500
   1e7b4:	bgt	1e7dc <RingIO_create+0x8a4>
   1e7b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e7bc:	ldr	r3, [pc, #508]	; 1e9c0 <RingIO_create+0xa88>
   1e7c0:	cmp	r2, r3
   1e7c4:	ble	1e7d4 <RingIO_create+0x89c>
   1e7c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e7cc:	cmp	r3, #34048	; 0x8500
   1e7d0:	ble	1e7dc <RingIO_create+0x8a4>
   1e7d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e7d8:	str	r3, [fp, #-24]	; 0xffffffe8
   1e7dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e7e0:	ldr	r3, [pc, #472]	; 1e9c0 <RingIO_create+0xa88>
   1e7e4:	cmp	r2, r3
   1e7e8:	ble	1e7f8 <RingIO_create+0x8c0>
   1e7ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e7f0:	cmp	r3, #34048	; 0x8500
   1e7f4:	ble	1e97c <RingIO_create+0xa44>
   1e7f8:	ldr	r3, [fp, #-16]
   1e7fc:	ldr	r2, [r3, #24]
   1e800:	ldr	r3, [fp, #-12]
   1e804:	lsl	r3, r3, #7
   1e808:	add	r2, r2, r3
   1e80c:	mov	r3, #1
   1e810:	str	r3, [r2]
   1e814:	ldr	r3, [fp, #-16]
   1e818:	ldr	r3, [r3, #20]
   1e81c:	ldr	r3, [r3, #4]
   1e820:	mov	r0, r3
   1e824:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1e828:	bl	12620 <MPCS_delete>
   1e82c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e830:	cmp	r3, #0
   1e834:	beq	1e854 <RingIO_create+0x91c>
   1e838:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e83c:	ldrh	r3, [r3, #4]
   1e840:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e844:	mov	r0, r3
   1e848:	mov	r1, r2
   1e84c:	mov	r2, #384	; 0x180
   1e850:	bl	17c6c <POOL_free>
   1e854:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e858:	cmp	r3, #0
   1e85c:	beq	1e890 <RingIO_create+0x958>
   1e860:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e864:	ldrh	r1, [r3, #6]
   1e868:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1e86c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e870:	ldr	r2, [r3, #12]
   1e874:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e878:	ldr	r3, [r3, #16]
   1e87c:	add	r3, r2, r3
   1e880:	mov	r0, r1
   1e884:	mov	r1, ip
   1e888:	mov	r2, r3
   1e88c:	bl	17c6c <POOL_free>
   1e890:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e894:	cmp	r3, #0
   1e898:	beq	1e8bc <RingIO_create+0x984>
   1e89c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e8a0:	ldrh	r2, [r3, #8]
   1e8a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e8a8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e8ac:	ldr	r3, [r3, #20]
   1e8b0:	mov	r0, r2
   1e8b4:	mov	r2, r3
   1e8b8:	bl	17c6c <POOL_free>
   1e8bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e8c0:	cmp	r3, #0
   1e8c4:	beq	1e8e4 <RingIO_create+0x9ac>
   1e8c8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e8cc:	ldrh	r3, [r3, #10]
   1e8d0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1e8d4:	mov	r0, r3
   1e8d8:	mov	r1, r2
   1e8dc:	mov	r2, #384	; 0x180
   1e8e0:	bl	17c6c <POOL_free>
   1e8e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e8e8:	ldrh	r3, [r3, #4]
   1e8ec:	cmp	r3, #32
   1e8f0:	beq	1e910 <RingIO_create+0x9d8>
   1e8f4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e8f8:	ldrh	r3, [r3, #4]
   1e8fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e900:	mov	r0, r3
   1e904:	mov	r1, r2
   1e908:	mov	r2, #384	; 0x180
   1e90c:	bl	170a4 <POOL_writeback>
   1e910:	ldr	r3, [fp, #-16]
   1e914:	ldr	r2, [r3, #24]
   1e918:	ldr	r3, [fp, #-12]
   1e91c:	lsl	r3, r3, #7
   1e920:	add	r3, r2, r3
   1e924:	mov	r0, r3
   1e928:	mov	r1, #0
   1e92c:	mov	r2, #128	; 0x80
   1e930:	bl	9f6c <memset@plt>
   1e934:	ldr	r3, [fp, #-16]
   1e938:	ldr	r2, [r3, #24]
   1e93c:	ldr	r3, [fp, #-12]
   1e940:	lsl	r3, r3, #7
   1e944:	add	r2, r2, r3
   1e948:	mov	r3, #0
   1e94c:	str	r3, [r2]
   1e950:	b	1e97c <RingIO_create+0xa44>
   1e954:	ldr	r3, [fp, #-12]
   1e958:	cmn	r3, #1
   1e95c:	beq	1e97c <RingIO_create+0xa44>
   1e960:	ldr	r3, [fp, #-16]
   1e964:	ldr	r2, [r3, #24]
   1e968:	ldr	r3, [fp, #-12]
   1e96c:	lsl	r3, r3, #7
   1e970:	add	r2, r2, r3
   1e974:	mov	r3, #0
   1e978:	str	r3, [r2]
   1e97c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e980:	cmp	r3, #32768	; 0x8000
   1e984:	beq	1e994 <RingIO_create+0xa5c>
   1e988:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e98c:	str	r3, [fp, #-76]	; 0xffffffb4
   1e990:	b	1e99c <RingIO_create+0xa64>
   1e994:	mov	r3, #33024	; 0x8100
   1e998:	str	r3, [fp, #-76]	; 0xffffffb4
   1e99c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1e9a0:	str	r3, [fp, #-24]	; 0xffffffe8
   1e9a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e9a8:	mov	r0, r3
   1e9ac:	sub	sp, fp, #4
   1e9b0:	pop	{fp, pc}
   1e9b4:	.word	0x8000800b
   1e9b8:	.word	0x0002d7ac
   1e9bc:	.word	0x80008000
   1e9c0:	.word	0x00007fff
   1e9c4:	.word	0x8000805b
   1e9c8:	.word	0x80008055

0001e9cc <RingIO_delete>:
   1e9cc:	push	{fp, lr}
   1e9d0:	add	fp, sp, #4
   1e9d4:	sub	sp, sp, #56	; 0x38
   1e9d8:	str	r0, [fp, #-40]	; 0xffffffd8
   1e9dc:	str	r1, [fp, #-44]	; 0xffffffd4
   1e9e0:	mov	r3, #33024	; 0x8100
   1e9e4:	str	r3, [fp, #-24]	; 0xffffffe8
   1e9e8:	mov	r3, #33024	; 0x8100
   1e9ec:	str	r3, [fp, #-20]	; 0xffffffec
   1e9f0:	mov	r3, #0
   1e9f4:	str	r3, [fp, #-28]	; 0xffffffe4
   1e9f8:	mov	r3, #0
   1e9fc:	str	r3, [fp, #-32]	; 0xffffffe0
   1ea00:	mov	r3, #0
   1ea04:	str	r3, [fp, #-16]
   1ea08:	mov	r3, #0
   1ea0c:	str	r3, [fp, #-36]	; 0xffffffdc
   1ea10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ea14:	cmp	r3, #0
   1ea18:	bne	1ea28 <RingIO_delete+0x5c>
   1ea1c:	ldr	r3, [pc, #2028]	; 1f210 <RingIO_delete+0x844>
   1ea20:	str	r3, [fp, #-24]	; 0xffffffe8
   1ea24:	b	1ea54 <RingIO_delete+0x88>
   1ea28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ea2c:	lsl	r2, r3, #5
   1ea30:	ldr	r3, [pc, #2012]	; 1f214 <RingIO_delete+0x848>
   1ea34:	add	r3, r2, r3
   1ea38:	str	r3, [fp, #-16]
   1ea3c:	ldr	r3, [fp, #-16]
   1ea40:	ldr	r3, [r3, #20]
   1ea44:	cmp	r3, #0
   1ea48:	bne	1ea54 <RingIO_delete+0x88>
   1ea4c:	ldr	r3, [pc, #1988]	; 1f218 <RingIO_delete+0x84c>
   1ea50:	str	r3, [fp, #-24]	; 0xffffffe8
   1ea54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ea58:	ldr	r3, [pc, #1980]	; 1f21c <RingIO_delete+0x850>
   1ea5c:	cmp	r2, r3
   1ea60:	ble	1f1d8 <RingIO_delete+0x80c>
   1ea64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ea68:	cmp	r3, #34048	; 0x8500
   1ea6c:	bgt	1f1d8 <RingIO_delete+0x80c>
   1ea70:	ldr	r3, [fp, #-16]
   1ea74:	ldr	r3, [r3, #28]
   1ea78:	mov	r0, r3
   1ea7c:	bl	12c3c <MPCS_enter>
   1ea80:	mov	r3, r0
   1ea84:	str	r3, [fp, #-24]	; 0xffffffe8
   1ea88:	mov	r3, #0
   1ea8c:	str	r3, [fp, #-8]
   1ea90:	b	1eb14 <RingIO_delete+0x148>
   1ea94:	ldr	r3, [fp, #-16]
   1ea98:	ldr	r2, [r3, #24]
   1ea9c:	ldr	r3, [fp, #-8]
   1eaa0:	lsl	r3, r3, #7
   1eaa4:	add	r3, r2, r3
   1eaa8:	ldr	r3, [r3]
   1eaac:	cmp	r3, #0
   1eab0:	beq	1eb08 <RingIO_delete+0x13c>
   1eab4:	ldr	r3, [fp, #-16]
   1eab8:	ldr	r2, [r3, #24]
   1eabc:	ldr	r3, [fp, #-8]
   1eac0:	lsl	r3, r3, #7
   1eac4:	add	r3, r2, r3
   1eac8:	ldr	r3, [r3]
   1eacc:	cmp	r3, #1
   1ead0:	beq	1eb08 <RingIO_delete+0x13c>
   1ead4:	ldr	r3, [fp, #-16]
   1ead8:	ldr	r2, [r3, #24]
   1eadc:	ldr	r3, [fp, #-8]
   1eae0:	lsl	r3, r3, #7
   1eae4:	add	r3, r2, r3
   1eae8:	add	r3, r3, #8
   1eaec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1eaf0:	mov	r1, r3
   1eaf4:	mov	r2, #32
   1eaf8:	bl	9cc0 <strncmp@plt>
   1eafc:	mov	r3, r0
   1eb00:	cmp	r3, #0
   1eb04:	beq	1eb2c <RingIO_delete+0x160>
   1eb08:	ldr	r3, [fp, #-8]
   1eb0c:	add	r3, r3, #1
   1eb10:	str	r3, [fp, #-8]
   1eb14:	ldr	r3, [fp, #-16]
   1eb18:	ldr	r3, [r3, #20]
   1eb1c:	ldr	r2, [r3, #8]
   1eb20:	ldr	r3, [fp, #-8]
   1eb24:	cmp	r2, r3
   1eb28:	bhi	1ea94 <RingIO_delete+0xc8>
   1eb2c:	ldr	r3, [fp, #-16]
   1eb30:	ldr	r3, [r3, #20]
   1eb34:	ldr	r2, [r3, #8]
   1eb38:	ldr	r3, [fp, #-8]
   1eb3c:	cmp	r2, r3
   1eb40:	beq	1f178 <RingIO_delete+0x7ac>
   1eb44:	ldr	r3, [fp, #-16]
   1eb48:	ldr	r2, [r3, #24]
   1eb4c:	ldr	r3, [fp, #-8]
   1eb50:	lsl	r3, r3, #7
   1eb54:	add	r3, r2, r3
   1eb58:	ldr	r3, [r3, #4]
   1eb5c:	str	r3, [fp, #-12]
   1eb60:	ldr	r3, [fp, #-16]
   1eb64:	ldr	r2, [r3, #24]
   1eb68:	ldr	r3, [fp, #-8]
   1eb6c:	lsl	r3, r3, #7
   1eb70:	add	r3, r2, r3
   1eb74:	ldrh	r3, [r3, #42]	; 0x2a
   1eb78:	and	r2, r3, #255	; 0xff
   1eb7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1eb80:	lsl	r3, r3, #8
   1eb84:	lsl	r3, r3, #16
   1eb88:	lsr	r3, r3, #16
   1eb8c:	orr	r3, r2, r3
   1eb90:	and	r3, r3, #255	; 0xff
   1eb94:	cmp	r3, #32
   1eb98:	beq	1ec08 <RingIO_delete+0x23c>
   1eb9c:	ldr	r3, [fp, #-16]
   1eba0:	ldr	r2, [r3, #24]
   1eba4:	ldr	r3, [fp, #-8]
   1eba8:	lsl	r3, r3, #7
   1ebac:	add	r3, r2, r3
   1ebb0:	ldrh	r3, [r3, #42]	; 0x2a
   1ebb4:	mov	r2, r3
   1ebb8:	and	r2, r2, #255	; 0xff
   1ebbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ebc0:	lsl	r3, r3, #16
   1ebc4:	lsr	r3, r3, #16
   1ebc8:	lsl	r3, r3, #8
   1ebcc:	lsl	r3, r3, #16
   1ebd0:	lsr	r3, r3, #16
   1ebd4:	orr	r3, r2, r3
   1ebd8:	lsl	r3, r3, #16
   1ebdc:	lsr	r1, r3, #16
   1ebe0:	ldr	r3, [fp, #-16]
   1ebe4:	ldr	r2, [r3, #24]
   1ebe8:	ldr	r3, [fp, #-8]
   1ebec:	lsl	r3, r3, #7
   1ebf0:	add	r3, r2, r3
   1ebf4:	ldr	r3, [r3, #4]
   1ebf8:	mov	r0, r1
   1ebfc:	mov	r1, r3
   1ec00:	mov	r2, #384	; 0x180
   1ec04:	bl	17224 <POOL_invalidate>
   1ec08:	ldr	r3, [fp, #-12]
   1ec0c:	ldr	r3, [r3, #316]	; 0x13c
   1ec10:	cmp	r3, #0
   1ec14:	bne	1f16c <RingIO_delete+0x7a0>
   1ec18:	ldr	r3, [fp, #-12]
   1ec1c:	ldr	r3, [r3, #188]	; 0xbc
   1ec20:	cmp	r3, #0
   1ec24:	bne	1f16c <RingIO_delete+0x7a0>
   1ec28:	ldr	r3, [fp, #-16]
   1ec2c:	ldr	r2, [r3, #24]
   1ec30:	ldr	r3, [fp, #-8]
   1ec34:	lsl	r3, r3, #7
   1ec38:	add	r2, r2, r3
   1ec3c:	mov	r3, #1
   1ec40:	str	r3, [r2]
   1ec44:	ldr	r3, [fp, #-16]
   1ec48:	ldr	r3, [r3, #20]
   1ec4c:	ldr	r3, [r3, #4]
   1ec50:	mov	r0, r3
   1ec54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ec58:	bl	12620 <MPCS_delete>
   1ec5c:	mov	r3, r0
   1ec60:	str	r3, [fp, #-24]	; 0xffffffe8
   1ec64:	ldr	r3, [fp, #-12]
   1ec68:	ldr	r3, [r3, #68]	; 0x44
   1ec6c:	cmp	r3, #0
   1ec70:	beq	1edc8 <RingIO_delete+0x3fc>
   1ec74:	ldr	r3, [fp, #-16]
   1ec78:	ldr	r2, [r3, #24]
   1ec7c:	ldr	r3, [fp, #-8]
   1ec80:	lsl	r3, r3, #7
   1ec84:	add	r3, r2, r3
   1ec88:	ldrh	r3, [r3, #48]	; 0x30
   1ec8c:	mov	r2, r3
   1ec90:	and	r2, r2, #255	; 0xff
   1ec94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ec98:	lsl	r3, r3, #16
   1ec9c:	lsr	r3, r3, #16
   1eca0:	lsl	r3, r3, #8
   1eca4:	lsl	r3, r3, #16
   1eca8:	lsr	r3, r3, #16
   1ecac:	orr	r3, r2, r3
   1ecb0:	lsl	r3, r3, #16
   1ecb4:	lsr	r2, r3, #16
   1ecb8:	sub	r1, fp, #36	; 0x24
   1ecbc:	ldr	r3, [fp, #-12]
   1ecc0:	ldr	ip, [r3, #68]	; 0x44
   1ecc4:	mov	r3, #3
   1ecc8:	str	r3, [sp]
   1eccc:	mov	r0, r2
   1ecd0:	mov	r2, #0
   1ecd4:	mov	r3, ip
   1ecd8:	bl	17d1c <POOL_translateAddr>
   1ecdc:	mov	r3, r0
   1ece0:	str	r3, [fp, #-20]	; 0xffffffec
   1ece4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ece8:	ldr	r3, [pc, #1324]	; 1f21c <RingIO_delete+0x850>
   1ecec:	cmp	r2, r3
   1ecf0:	ble	1eda4 <RingIO_delete+0x3d8>
   1ecf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ecf8:	cmp	r3, #34048	; 0x8500
   1ecfc:	bgt	1eda4 <RingIO_delete+0x3d8>
   1ed00:	ldr	r3, [fp, #-16]
   1ed04:	ldr	r2, [r3, #24]
   1ed08:	ldr	r3, [fp, #-8]
   1ed0c:	lsl	r3, r3, #7
   1ed10:	add	r3, r2, r3
   1ed14:	ldrh	r3, [r3, #48]	; 0x30
   1ed18:	mov	r2, r3
   1ed1c:	and	r2, r2, #255	; 0xff
   1ed20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ed24:	lsl	r3, r3, #16
   1ed28:	lsr	r3, r3, #16
   1ed2c:	lsl	r3, r3, #8
   1ed30:	lsl	r3, r3, #16
   1ed34:	lsr	r3, r3, #16
   1ed38:	orr	r3, r2, r3
   1ed3c:	lsl	r3, r3, #16
   1ed40:	lsr	r3, r3, #16
   1ed44:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ed48:	mov	r0, r3
   1ed4c:	mov	r1, r2
   1ed50:	mov	r2, #384	; 0x180
   1ed54:	bl	17c6c <POOL_free>
   1ed58:	mov	r3, r0
   1ed5c:	str	r3, [fp, #-20]	; 0xffffffec
   1ed60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ed64:	ldr	r3, [pc, #1200]	; 1f21c <RingIO_delete+0x850>
   1ed68:	cmp	r2, r3
   1ed6c:	ble	1edc8 <RingIO_delete+0x3fc>
   1ed70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ed74:	cmp	r3, #34048	; 0x8500
   1ed78:	bgt	1edc8 <RingIO_delete+0x3fc>
   1ed7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ed80:	ldr	r3, [pc, #1172]	; 1f21c <RingIO_delete+0x850>
   1ed84:	cmp	r2, r3
   1ed88:	ble	1ed98 <RingIO_delete+0x3cc>
   1ed8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ed90:	cmp	r3, #34048	; 0x8500
   1ed94:	ble	1edc8 <RingIO_delete+0x3fc>
   1ed98:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ed9c:	str	r3, [fp, #-24]	; 0xffffffe8
   1eda0:	b	1edc8 <RingIO_delete+0x3fc>
   1eda4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1eda8:	ldr	r3, [pc, #1132]	; 1f21c <RingIO_delete+0x850>
   1edac:	cmp	r2, r3
   1edb0:	ble	1edc8 <RingIO_delete+0x3fc>
   1edb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1edb8:	cmp	r3, #34048	; 0x8500
   1edbc:	bgt	1edc8 <RingIO_delete+0x3fc>
   1edc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1edc4:	str	r3, [fp, #-24]	; 0xffffffe8
   1edc8:	ldr	r3, [fp, #-12]
   1edcc:	ldr	r3, [r3, #44]	; 0x2c
   1edd0:	cmp	r3, #0
   1edd4:	beq	1ef38 <RingIO_delete+0x56c>
   1edd8:	ldr	r3, [fp, #-16]
   1eddc:	ldr	r2, [r3, #24]
   1ede0:	ldr	r3, [fp, #-8]
   1ede4:	lsl	r3, r3, #7
   1ede8:	add	r3, r2, r3
   1edec:	ldrh	r3, [r3, #46]	; 0x2e
   1edf0:	mov	r2, r3
   1edf4:	and	r2, r2, #255	; 0xff
   1edf8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1edfc:	lsl	r3, r3, #16
   1ee00:	lsr	r3, r3, #16
   1ee04:	lsl	r3, r3, #8
   1ee08:	lsl	r3, r3, #16
   1ee0c:	lsr	r3, r3, #16
   1ee10:	orr	r3, r2, r3
   1ee14:	lsl	r3, r3, #16
   1ee18:	lsr	r1, r3, #16
   1ee1c:	ldr	r3, [fp, #-12]
   1ee20:	ldr	ip, [r3, #44]	; 0x2c
   1ee24:	sub	r2, fp, #32
   1ee28:	mov	r3, #3
   1ee2c:	str	r3, [sp]
   1ee30:	mov	r0, r1
   1ee34:	mov	r1, r2
   1ee38:	mov	r2, #0
   1ee3c:	mov	r3, ip
   1ee40:	bl	17d1c <POOL_translateAddr>
   1ee44:	mov	r3, r0
   1ee48:	str	r3, [fp, #-20]	; 0xffffffec
   1ee4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ee50:	ldr	r3, [pc, #964]	; 1f21c <RingIO_delete+0x850>
   1ee54:	cmp	r2, r3
   1ee58:	ble	1ef14 <RingIO_delete+0x548>
   1ee5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ee60:	cmp	r3, #34048	; 0x8500
   1ee64:	bgt	1ef14 <RingIO_delete+0x548>
   1ee68:	ldr	r3, [fp, #-16]
   1ee6c:	ldr	r2, [r3, #24]
   1ee70:	ldr	r3, [fp, #-8]
   1ee74:	lsl	r3, r3, #7
   1ee78:	add	r3, r2, r3
   1ee7c:	ldrh	r3, [r3, #46]	; 0x2e
   1ee80:	mov	r2, r3
   1ee84:	and	r2, r2, #255	; 0xff
   1ee88:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ee8c:	lsl	r3, r3, #16
   1ee90:	lsr	r3, r3, #16
   1ee94:	lsl	r3, r3, #8
   1ee98:	lsl	r3, r3, #16
   1ee9c:	lsr	r3, r3, #16
   1eea0:	orr	r3, r2, r3
   1eea4:	lsl	r3, r3, #16
   1eea8:	lsr	r2, r3, #16
   1eeac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1eeb0:	ldr	r3, [fp, #-12]
   1eeb4:	ldr	r3, [r3, #48]	; 0x30
   1eeb8:	add	r3, r3, #1
   1eebc:	mov	r0, r2
   1eec0:	mov	r2, r3
   1eec4:	bl	17c6c <POOL_free>
   1eec8:	mov	r3, r0
   1eecc:	str	r3, [fp, #-20]	; 0xffffffec
   1eed0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1eed4:	ldr	r3, [pc, #832]	; 1f21c <RingIO_delete+0x850>
   1eed8:	cmp	r2, r3
   1eedc:	ble	1ef38 <RingIO_delete+0x56c>
   1eee0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1eee4:	cmp	r3, #34048	; 0x8500
   1eee8:	bgt	1ef38 <RingIO_delete+0x56c>
   1eeec:	ldr	r2, [fp, #-20]	; 0xffffffec
   1eef0:	ldr	r3, [pc, #804]	; 1f21c <RingIO_delete+0x850>
   1eef4:	cmp	r2, r3
   1eef8:	ble	1ef08 <RingIO_delete+0x53c>
   1eefc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ef00:	cmp	r3, #34048	; 0x8500
   1ef04:	ble	1ef38 <RingIO_delete+0x56c>
   1ef08:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ef0c:	str	r3, [fp, #-24]	; 0xffffffe8
   1ef10:	b	1ef38 <RingIO_delete+0x56c>
   1ef14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ef18:	ldr	r3, [pc, #764]	; 1f21c <RingIO_delete+0x850>
   1ef1c:	cmp	r2, r3
   1ef20:	ble	1ef38 <RingIO_delete+0x56c>
   1ef24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ef28:	cmp	r3, #34048	; 0x8500
   1ef2c:	bgt	1ef38 <RingIO_delete+0x56c>
   1ef30:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ef34:	str	r3, [fp, #-24]	; 0xffffffe8
   1ef38:	ldr	r3, [fp, #-12]
   1ef3c:	ldr	r3, [r3, #12]
   1ef40:	cmp	r3, #0
   1ef44:	beq	1f0a8 <RingIO_delete+0x6dc>
   1ef48:	ldr	r3, [fp, #-16]
   1ef4c:	ldr	r2, [r3, #24]
   1ef50:	ldr	r3, [fp, #-8]
   1ef54:	lsl	r3, r3, #7
   1ef58:	add	r3, r2, r3
   1ef5c:	ldrh	r3, [r3, #44]	; 0x2c
   1ef60:	mov	r2, r3
   1ef64:	and	r2, r2, #255	; 0xff
   1ef68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ef6c:	lsl	r3, r3, #16
   1ef70:	lsr	r3, r3, #16
   1ef74:	lsl	r3, r3, #8
   1ef78:	lsl	r3, r3, #16
   1ef7c:	lsr	r3, r3, #16
   1ef80:	orr	r3, r2, r3
   1ef84:	lsl	r3, r3, #16
   1ef88:	lsr	r1, r3, #16
   1ef8c:	ldr	r3, [fp, #-12]
   1ef90:	ldr	ip, [r3, #12]
   1ef94:	sub	r2, fp, #28
   1ef98:	mov	r3, #3
   1ef9c:	str	r3, [sp]
   1efa0:	mov	r0, r1
   1efa4:	mov	r1, r2
   1efa8:	mov	r2, #0
   1efac:	mov	r3, ip
   1efb0:	bl	17d1c <POOL_translateAddr>
   1efb4:	mov	r3, r0
   1efb8:	str	r3, [fp, #-20]	; 0xffffffec
   1efbc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1efc0:	ldr	r3, [pc, #596]	; 1f21c <RingIO_delete+0x850>
   1efc4:	cmp	r2, r3
   1efc8:	ble	1f084 <RingIO_delete+0x6b8>
   1efcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1efd0:	cmp	r3, #34048	; 0x8500
   1efd4:	bgt	1f084 <RingIO_delete+0x6b8>
   1efd8:	ldr	r3, [fp, #-16]
   1efdc:	ldr	r2, [r3, #24]
   1efe0:	ldr	r3, [fp, #-8]
   1efe4:	lsl	r3, r3, #7
   1efe8:	add	r3, r2, r3
   1efec:	ldrh	r3, [r3, #44]	; 0x2c
   1eff0:	mov	r2, r3
   1eff4:	and	r2, r2, #255	; 0xff
   1eff8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1effc:	lsl	r3, r3, #16
   1f000:	lsr	r3, r3, #16
   1f004:	lsl	r3, r3, #8
   1f008:	lsl	r3, r3, #16
   1f00c:	lsr	r3, r3, #16
   1f010:	orr	r3, r2, r3
   1f014:	lsl	r3, r3, #16
   1f018:	lsr	r2, r3, #16
   1f01c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f020:	ldr	r3, [fp, #-12]
   1f024:	ldr	r3, [r3, #16]
   1f028:	add	r3, r3, #1
   1f02c:	mov	r0, r2
   1f030:	mov	r2, r3
   1f034:	bl	17c6c <POOL_free>
   1f038:	mov	r3, r0
   1f03c:	str	r3, [fp, #-20]	; 0xffffffec
   1f040:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f044:	ldr	r3, [pc, #464]	; 1f21c <RingIO_delete+0x850>
   1f048:	cmp	r2, r3
   1f04c:	ble	1f0a8 <RingIO_delete+0x6dc>
   1f050:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f054:	cmp	r3, #34048	; 0x8500
   1f058:	bgt	1f0a8 <RingIO_delete+0x6dc>
   1f05c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f060:	ldr	r3, [pc, #436]	; 1f21c <RingIO_delete+0x850>
   1f064:	cmp	r2, r3
   1f068:	ble	1f078 <RingIO_delete+0x6ac>
   1f06c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f070:	cmp	r3, #34048	; 0x8500
   1f074:	ble	1f0a8 <RingIO_delete+0x6dc>
   1f078:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f07c:	str	r3, [fp, #-24]	; 0xffffffe8
   1f080:	b	1f0a8 <RingIO_delete+0x6dc>
   1f084:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f088:	ldr	r3, [pc, #396]	; 1f21c <RingIO_delete+0x850>
   1f08c:	cmp	r2, r3
   1f090:	ble	1f0a8 <RingIO_delete+0x6dc>
   1f094:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f098:	cmp	r3, #34048	; 0x8500
   1f09c:	bgt	1f0a8 <RingIO_delete+0x6dc>
   1f0a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f0a4:	str	r3, [fp, #-24]	; 0xffffffe8
   1f0a8:	ldr	r3, [fp, #-16]
   1f0ac:	ldr	r2, [r3, #24]
   1f0b0:	ldr	r3, [fp, #-8]
   1f0b4:	lsl	r3, r3, #7
   1f0b8:	add	r3, r2, r3
   1f0bc:	ldrh	r3, [r3, #42]	; 0x2a
   1f0c0:	mov	r2, r3
   1f0c4:	and	r2, r2, #255	; 0xff
   1f0c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f0cc:	lsl	r3, r3, #16
   1f0d0:	lsr	r3, r3, #16
   1f0d4:	lsl	r3, r3, #8
   1f0d8:	lsl	r3, r3, #16
   1f0dc:	lsr	r3, r3, #16
   1f0e0:	orr	r3, r2, r3
   1f0e4:	lsl	r3, r3, #16
   1f0e8:	lsr	r3, r3, #16
   1f0ec:	mov	r0, r3
   1f0f0:	ldr	r1, [fp, #-12]
   1f0f4:	mov	r2, #384	; 0x180
   1f0f8:	bl	17c6c <POOL_free>
   1f0fc:	mov	r3, r0
   1f100:	str	r3, [fp, #-20]	; 0xffffffec
   1f104:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f108:	ldr	r3, [pc, #268]	; 1f21c <RingIO_delete+0x850>
   1f10c:	cmp	r2, r3
   1f110:	ble	1f144 <RingIO_delete+0x778>
   1f114:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f118:	cmp	r3, #34048	; 0x8500
   1f11c:	bgt	1f144 <RingIO_delete+0x778>
   1f120:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f124:	ldr	r3, [pc, #240]	; 1f21c <RingIO_delete+0x850>
   1f128:	cmp	r2, r3
   1f12c:	ble	1f13c <RingIO_delete+0x770>
   1f130:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f134:	cmp	r3, #34048	; 0x8500
   1f138:	ble	1f144 <RingIO_delete+0x778>
   1f13c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f140:	str	r3, [fp, #-24]	; 0xffffffe8
   1f144:	ldr	r3, [fp, #-16]
   1f148:	ldr	r2, [r3, #24]
   1f14c:	ldr	r3, [fp, #-8]
   1f150:	lsl	r3, r3, #7
   1f154:	add	r3, r2, r3
   1f158:	mov	r0, r3
   1f15c:	mov	r1, #0
   1f160:	mov	r2, #128	; 0x80
   1f164:	bl	9f6c <memset@plt>
   1f168:	b	1f180 <RingIO_delete+0x7b4>
   1f16c:	ldr	r3, [pc, #172]	; 1f220 <RingIO_delete+0x854>
   1f170:	str	r3, [fp, #-24]	; 0xffffffe8
   1f174:	b	1f180 <RingIO_delete+0x7b4>
   1f178:	ldr	r3, [pc, #160]	; 1f220 <RingIO_delete+0x854>
   1f17c:	str	r3, [fp, #-24]	; 0xffffffe8
   1f180:	ldr	r3, [fp, #-16]
   1f184:	ldr	r3, [r3, #28]
   1f188:	mov	r0, r3
   1f18c:	bl	12e98 <MPCS_leave>
   1f190:	mov	r3, r0
   1f194:	str	r3, [fp, #-20]	; 0xffffffec
   1f198:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f19c:	ldr	r3, [pc, #120]	; 1f21c <RingIO_delete+0x850>
   1f1a0:	cmp	r2, r3
   1f1a4:	ble	1f1d8 <RingIO_delete+0x80c>
   1f1a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f1ac:	cmp	r3, #34048	; 0x8500
   1f1b0:	bgt	1f1d8 <RingIO_delete+0x80c>
   1f1b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f1b8:	ldr	r3, [pc, #92]	; 1f21c <RingIO_delete+0x850>
   1f1bc:	cmp	r2, r3
   1f1c0:	ble	1f1d0 <RingIO_delete+0x804>
   1f1c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f1c8:	cmp	r3, #34048	; 0x8500
   1f1cc:	ble	1f1d8 <RingIO_delete+0x80c>
   1f1d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f1d4:	str	r3, [fp, #-24]	; 0xffffffe8
   1f1d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f1dc:	cmp	r3, #32768	; 0x8000
   1f1e0:	beq	1f1f0 <RingIO_delete+0x824>
   1f1e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f1e8:	str	r3, [fp, #-48]	; 0xffffffd0
   1f1ec:	b	1f1f8 <RingIO_delete+0x82c>
   1f1f0:	mov	r3, #33024	; 0x8100
   1f1f4:	str	r3, [fp, #-48]	; 0xffffffd0
   1f1f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f1fc:	str	r3, [fp, #-24]	; 0xffffffe8
   1f200:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f204:	mov	r0, r3
   1f208:	sub	sp, fp, #4
   1f20c:	pop	{fp, pc}
   1f210:	.word	0x8000800b
   1f214:	.word	0x0002d7ac
   1f218:	.word	0x80008000
   1f21c:	.word	0x00007fff
   1f220:	.word	0x80008055

0001f224 <RingIO_open>:
   1f224:	push	{fp, lr}
   1f228:	add	fp, sp, #4
   1f22c:	sub	sp, sp, #72	; 0x48
   1f230:	str	r0, [fp, #-56]	; 0xffffffc8
   1f234:	str	r1, [fp, #-60]	; 0xffffffc4
   1f238:	str	r2, [fp, #-64]	; 0xffffffc0
   1f23c:	mov	r3, #33024	; 0x8100
   1f240:	str	r3, [fp, #-36]	; 0xffffffdc
   1f244:	mov	r3, #33024	; 0x8100
   1f248:	str	r3, [fp, #-32]	; 0xffffffe0
   1f24c:	mov	r3, #0
   1f250:	str	r3, [fp, #-40]	; 0xffffffd8
   1f254:	mov	r3, #0
   1f258:	str	r3, [fp, #-44]	; 0xffffffd4
   1f25c:	mov	r3, #0
   1f260:	str	r3, [fp, #-48]	; 0xffffffd0
   1f264:	mov	r3, #0
   1f268:	str	r3, [fp, #-28]	; 0xffffffe4
   1f26c:	mov	r3, #0
   1f270:	str	r3, [fp, #-24]	; 0xffffffe8
   1f274:	mov	r3, #0
   1f278:	str	r3, [fp, #-20]	; 0xffffffec
   1f27c:	mov	r3, #0
   1f280:	str	r3, [fp, #-16]
   1f284:	mov	r3, #0
   1f288:	str	r3, [fp, #-12]
   1f28c:	mov	r3, #0
   1f290:	str	r3, [fp, #-8]
   1f294:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f298:	cmp	r3, #0
   1f29c:	beq	1f2b8 <RingIO_open+0x94>
   1f2a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f2a4:	cmp	r3, #0
   1f2a8:	beq	1f2c0 <RingIO_open+0x9c>
   1f2ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f2b0:	cmp	r3, #1
   1f2b4:	beq	1f2c0 <RingIO_open+0x9c>
   1f2b8:	ldr	r3, [pc, #2056]	; 1fac8 <RingIO_open+0x8a4>
   1f2bc:	str	r3, [fp, #-36]	; 0xffffffdc
   1f2c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f2c4:	ldr	r3, [pc, #2048]	; 1facc <RingIO_open+0x8a8>
   1f2c8:	cmp	r2, r3
   1f2cc:	ble	1f5a8 <RingIO_open+0x384>
   1f2d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f2d4:	cmp	r3, #34048	; 0x8500
   1f2d8:	bgt	1f5a8 <RingIO_open+0x384>
   1f2dc:	mov	r3, #0
   1f2e0:	str	r3, [fp, #-20]	; 0xffffffec
   1f2e4:	b	1f590 <RingIO_open+0x36c>
   1f2e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f2ec:	lsl	r2, r3, #5
   1f2f0:	ldr	r3, [pc, #2008]	; 1fad0 <RingIO_open+0x8ac>
   1f2f4:	add	r3, r2, r3
   1f2f8:	str	r3, [fp, #-8]
   1f2fc:	ldr	r3, [fp, #-8]
   1f300:	ldr	r3, [r3, #20]
   1f304:	cmp	r3, #0
   1f308:	beq	1f584 <RingIO_open+0x360>
   1f30c:	ldr	r3, [fp, #-8]
   1f310:	ldr	r3, [r3, #28]
   1f314:	mov	r0, r3
   1f318:	bl	12c3c <MPCS_enter>
   1f31c:	mov	r3, r0
   1f320:	str	r3, [fp, #-36]	; 0xffffffdc
   1f324:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f328:	ldr	r3, [pc, #1948]	; 1facc <RingIO_open+0x8a8>
   1f32c:	cmp	r2, r3
   1f330:	ble	1f584 <RingIO_open+0x360>
   1f334:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f338:	cmp	r3, #34048	; 0x8500
   1f33c:	bgt	1f584 <RingIO_open+0x360>
   1f340:	mov	r3, #0
   1f344:	str	r3, [fp, #-24]	; 0xffffffe8
   1f348:	b	1f3cc <RingIO_open+0x1a8>
   1f34c:	ldr	r3, [fp, #-8]
   1f350:	ldr	r2, [r3, #24]
   1f354:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f358:	lsl	r3, r3, #7
   1f35c:	add	r3, r2, r3
   1f360:	ldr	r3, [r3]
   1f364:	cmp	r3, #0
   1f368:	beq	1f3c0 <RingIO_open+0x19c>
   1f36c:	ldr	r3, [fp, #-8]
   1f370:	ldr	r2, [r3, #24]
   1f374:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f378:	lsl	r3, r3, #7
   1f37c:	add	r3, r2, r3
   1f380:	ldr	r3, [r3]
   1f384:	cmp	r3, #1
   1f388:	beq	1f3c0 <RingIO_open+0x19c>
   1f38c:	ldr	r3, [fp, #-8]
   1f390:	ldr	r2, [r3, #24]
   1f394:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f398:	lsl	r3, r3, #7
   1f39c:	add	r3, r2, r3
   1f3a0:	add	r3, r3, #8
   1f3a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f3a8:	mov	r1, r3
   1f3ac:	mov	r2, #32
   1f3b0:	bl	9cc0 <strncmp@plt>
   1f3b4:	mov	r3, r0
   1f3b8:	cmp	r3, #0
   1f3bc:	beq	1f3e4 <RingIO_open+0x1c0>
   1f3c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f3c4:	add	r3, r3, #1
   1f3c8:	str	r3, [fp, #-24]	; 0xffffffe8
   1f3cc:	ldr	r3, [fp, #-8]
   1f3d0:	ldr	r3, [r3, #20]
   1f3d4:	ldr	r2, [r3, #8]
   1f3d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f3dc:	cmp	r2, r3
   1f3e0:	bhi	1f34c <RingIO_open+0x128>
   1f3e4:	ldr	r3, [fp, #-8]
   1f3e8:	ldr	r3, [r3, #20]
   1f3ec:	ldr	r2, [r3, #8]
   1f3f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f3f4:	cmp	r2, r3
   1f3f8:	beq	1f524 <RingIO_open+0x300>
   1f3fc:	ldr	r3, [fp, #-8]
   1f400:	ldr	r2, [r3, #24]
   1f404:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f408:	lsl	r3, r3, #7
   1f40c:	add	r3, r2, r3
   1f410:	ldrh	r3, [r3, #42]	; 0x2a
   1f414:	mov	r2, r3
   1f418:	and	r2, r2, #255	; 0xff
   1f41c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f420:	lsl	r3, r3, #16
   1f424:	lsr	r3, r3, #16
   1f428:	lsl	r3, r3, #8
   1f42c:	lsl	r3, r3, #16
   1f430:	lsr	r3, r3, #16
   1f434:	orr	r3, r2, r3
   1f438:	lsl	r3, r3, #16
   1f43c:	lsr	r1, r3, #16
   1f440:	sub	ip, fp, #48	; 0x30
   1f444:	ldr	r3, [fp, #-8]
   1f448:	ldr	r2, [r3, #24]
   1f44c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f450:	lsl	r3, r3, #7
   1f454:	add	r3, r2, r3
   1f458:	ldr	lr, [r3]
   1f45c:	mov	r3, #3
   1f460:	str	r3, [sp]
   1f464:	mov	r0, r1
   1f468:	mov	r1, ip
   1f46c:	mov	r2, #0
   1f470:	mov	r3, lr
   1f474:	bl	17d1c <POOL_translateAddr>
   1f478:	mov	r3, r0
   1f47c:	str	r3, [fp, #-36]	; 0xffffffdc
   1f480:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f484:	cmp	r3, #0
   1f488:	beq	1f52c <RingIO_open+0x308>
   1f48c:	ldr	r3, [fp, #-8]
   1f490:	ldr	r2, [r3, #24]
   1f494:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f498:	lsl	r3, r3, #7
   1f49c:	add	r3, r2, r3
   1f4a0:	ldrh	r3, [r3, #42]	; 0x2a
   1f4a4:	and	r2, r3, #255	; 0xff
   1f4a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f4ac:	lsl	r3, r3, #8
   1f4b0:	lsl	r3, r3, #16
   1f4b4:	lsr	r3, r3, #16
   1f4b8:	orr	r3, r2, r3
   1f4bc:	and	r3, r3, #255	; 0xff
   1f4c0:	cmp	r3, #32
   1f4c4:	beq	1f52c <RingIO_open+0x308>
   1f4c8:	ldr	r3, [fp, #-8]
   1f4cc:	ldr	r2, [r3, #24]
   1f4d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f4d4:	lsl	r3, r3, #7
   1f4d8:	add	r3, r2, r3
   1f4dc:	ldrh	r3, [r3, #42]	; 0x2a
   1f4e0:	mov	r2, r3
   1f4e4:	and	r2, r2, #255	; 0xff
   1f4e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f4ec:	lsl	r3, r3, #16
   1f4f0:	lsr	r3, r3, #16
   1f4f4:	lsl	r3, r3, #8
   1f4f8:	lsl	r3, r3, #16
   1f4fc:	lsr	r3, r3, #16
   1f500:	orr	r3, r2, r3
   1f504:	lsl	r3, r3, #16
   1f508:	lsr	r3, r3, #16
   1f50c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f510:	mov	r0, r3
   1f514:	mov	r1, r2
   1f518:	mov	r2, #384	; 0x180
   1f51c:	bl	17224 <POOL_invalidate>
   1f520:	b	1f52c <RingIO_open+0x308>
   1f524:	mov	r3, #0
   1f528:	str	r3, [fp, #-48]	; 0xffffffd0
   1f52c:	ldr	r3, [fp, #-8]
   1f530:	ldr	r3, [r3, #28]
   1f534:	mov	r0, r3
   1f538:	bl	12e98 <MPCS_leave>
   1f53c:	mov	r3, r0
   1f540:	str	r3, [fp, #-32]	; 0xffffffe0
   1f544:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f548:	ldr	r3, [pc, #1404]	; 1facc <RingIO_open+0x8a8>
   1f54c:	cmp	r2, r3
   1f550:	ble	1f584 <RingIO_open+0x360>
   1f554:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f558:	cmp	r3, #34048	; 0x8500
   1f55c:	bgt	1f584 <RingIO_open+0x360>
   1f560:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f564:	ldr	r3, [pc, #1376]	; 1facc <RingIO_open+0x8a8>
   1f568:	cmp	r2, r3
   1f56c:	ble	1f57c <RingIO_open+0x358>
   1f570:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f574:	cmp	r3, #34048	; 0x8500
   1f578:	ble	1f584 <RingIO_open+0x360>
   1f57c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f580:	str	r3, [fp, #-36]	; 0xffffffdc
   1f584:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f588:	add	r3, r3, #1
   1f58c:	str	r3, [fp, #-20]	; 0xffffffec
   1f590:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f594:	cmp	r3, #1
   1f598:	bhi	1f5a8 <RingIO_open+0x384>
   1f59c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f5a0:	cmp	r3, #0
   1f5a4:	beq	1f2e8 <RingIO_open+0xc4>
   1f5a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f5ac:	cmp	r3, #0
   1f5b0:	bne	1f5c0 <RingIO_open+0x39c>
   1f5b4:	ldr	r3, [pc, #1304]	; 1fad4 <RingIO_open+0x8b0>
   1f5b8:	str	r3, [fp, #-36]	; 0xffffffdc
   1f5bc:	b	1fab8 <RingIO_open+0x894>
   1f5c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f5c4:	ldr	r3, [pc, #1280]	; 1facc <RingIO_open+0x8a8>
   1f5c8:	cmp	r2, r3
   1f5cc:	ble	1f5dc <RingIO_open+0x3b8>
   1f5d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f5d4:	cmp	r3, #34048	; 0x8500
   1f5d8:	ble	1f5e8 <RingIO_open+0x3c4>
   1f5dc:	ldr	r3, [pc, #1264]	; 1fad4 <RingIO_open+0x8b0>
   1f5e0:	str	r3, [fp, #-36]	; 0xffffffdc
   1f5e4:	b	1fab8 <RingIO_open+0x894>
   1f5e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f5ec:	cmp	r3, #1
   1f5f0:	bne	1f610 <RingIO_open+0x3ec>
   1f5f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f5f8:	add	r3, r3, #128	; 0x80
   1f5fc:	str	r3, [fp, #-16]
   1f600:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f604:	add	r3, r3, #256	; 0x100
   1f608:	str	r3, [fp, #-12]
   1f60c:	b	1f628 <RingIO_open+0x404>
   1f610:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f614:	add	r3, r3, #256	; 0x100
   1f618:	str	r3, [fp, #-16]
   1f61c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f620:	add	r3, r3, #128	; 0x80
   1f624:	str	r3, [fp, #-12]
   1f628:	ldr	r3, [fp, #-16]
   1f62c:	ldr	r3, [r3, #60]	; 0x3c
   1f630:	cmp	r3, #0
   1f634:	beq	1f644 <RingIO_open+0x420>
   1f638:	ldr	r3, [pc, #1172]	; 1fad4 <RingIO_open+0x8b0>
   1f63c:	str	r3, [fp, #-36]	; 0xffffffdc
   1f640:	b	1fab8 <RingIO_open+0x894>
   1f644:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f648:	ldr	r3, [r3, #8]
   1f64c:	cmp	r3, #1
   1f650:	beq	1f684 <RingIO_open+0x460>
   1f654:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f658:	ldr	r3, [r3, #8]
   1f65c:	cmp	r3, #2
   1f660:	bne	1f690 <RingIO_open+0x46c>
   1f664:	ldr	r3, [fp, #-12]
   1f668:	ldr	r3, [r3, #60]	; 0x3c
   1f66c:	cmp	r3, #0
   1f670:	beq	1f690 <RingIO_open+0x46c>
   1f674:	ldr	r3, [fp, #-12]
   1f678:	ldr	r3, [r3]
   1f67c:	cmp	r3, #1
   1f680:	bne	1f690 <RingIO_open+0x46c>
   1f684:	ldr	r3, [pc, #1084]	; 1fac8 <RingIO_open+0x8a4>
   1f688:	str	r3, [fp, #-36]	; 0xffffffdc
   1f68c:	b	1fab8 <RingIO_open+0x894>
   1f690:	ldr	r3, [fp, #-8]
   1f694:	ldr	r3, [r3, #28]
   1f698:	mov	r0, r3
   1f69c:	bl	12c3c <MPCS_enter>
   1f6a0:	mov	r3, r0
   1f6a4:	str	r3, [fp, #-36]	; 0xffffffdc
   1f6a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f6ac:	ldr	r3, [pc, #1048]	; 1facc <RingIO_open+0x8a8>
   1f6b0:	cmp	r2, r3
   1f6b4:	ble	1fab8 <RingIO_open+0x894>
   1f6b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f6bc:	cmp	r3, #34048	; 0x8500
   1f6c0:	bgt	1fab8 <RingIO_open+0x894>
   1f6c4:	ldr	r3, [fp, #-8]
   1f6c8:	ldr	r3, [r3, #20]
   1f6cc:	ldr	r2, [r3, #4]
   1f6d0:	ldr	r3, [fp, #-16]
   1f6d4:	add	r3, r3, #56	; 0x38
   1f6d8:	mov	r0, r2
   1f6dc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1f6e0:	mov	r2, r3
   1f6e4:	bl	129ac <MPCS_open>
   1f6e8:	mov	r3, r0
   1f6ec:	str	r3, [fp, #-36]	; 0xffffffdc
   1f6f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f6f4:	ldr	r3, [pc, #976]	; 1facc <RingIO_open+0x8a8>
   1f6f8:	cmp	r2, r3
   1f6fc:	ble	1fa60 <RingIO_open+0x83c>
   1f700:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f704:	cmp	r3, #34048	; 0x8500
   1f708:	bgt	1fa60 <RingIO_open+0x83c>
   1f70c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f710:	ldr	r3, [fp, #-16]
   1f714:	str	r2, [r3, #52]	; 0x34
   1f718:	ldr	r0, [fp, #-16]
   1f71c:	bl	1deb8 <_RingIO_acquireLock>
   1f720:	mov	r3, r0
   1f724:	str	r3, [fp, #-36]	; 0xffffffdc
   1f728:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f72c:	ldr	r3, [pc, #920]	; 1facc <RingIO_open+0x8a8>
   1f730:	cmp	r2, r3
   1f734:	ble	1f744 <RingIO_open+0x520>
   1f738:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f73c:	cmp	r3, #34048	; 0x8500
   1f740:	ble	1f770 <RingIO_open+0x54c>
   1f744:	ldr	r3, [fp, #-8]
   1f748:	ldr	r3, [r3, #20]
   1f74c:	ldr	r2, [r3, #4]
   1f750:	ldr	r3, [fp, #-16]
   1f754:	ldr	r3, [r3, #56]	; 0x38
   1f758:	mov	r0, r2
   1f75c:	mov	r1, r3
   1f760:	bl	12ac4 <MPCS_close>
   1f764:	mov	r3, r0
   1f768:	str	r3, [fp, #-32]	; 0xffffffe0
   1f76c:	b	1fa60 <RingIO_open+0x83c>
   1f770:	ldr	r3, [fp, #-8]
   1f774:	ldr	r2, [r3, #24]
   1f778:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f77c:	lsl	r3, r3, #7
   1f780:	add	r3, r2, r3
   1f784:	ldrh	r3, [r3, #40]	; 0x28
   1f788:	cmp	r3, #1
   1f78c:	beq	1f7ac <RingIO_open+0x588>
   1f790:	ldr	r3, [fp, #-8]
   1f794:	ldr	r2, [r3, #24]
   1f798:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f79c:	lsl	r3, r3, #7
   1f7a0:	add	r2, r2, r3
   1f7a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f7a8:	str	r3, [r2, #4]
   1f7ac:	ldr	r2, [fp, #-16]
   1f7b0:	mov	r3, #1
   1f7b4:	str	r3, [r2, #60]	; 0x3c
   1f7b8:	ldr	r2, [fp, #-16]
   1f7bc:	mov	r3, #1
   1f7c0:	str	r3, [r2]
   1f7c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f7c8:	ldr	r3, [r3, #44]	; 0x2c
   1f7cc:	cmp	r3, #0
   1f7d0:	beq	1f84c <RingIO_open+0x628>
   1f7d4:	ldr	r3, [fp, #-8]
   1f7d8:	ldr	r2, [r3, #24]
   1f7dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f7e0:	lsl	r3, r3, #7
   1f7e4:	add	r3, r2, r3
   1f7e8:	ldrh	r3, [r3, #46]	; 0x2e
   1f7ec:	mov	r2, r3
   1f7f0:	and	r2, r2, #255	; 0xff
   1f7f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f7f8:	ldr	r3, [r3]
   1f7fc:	lsl	r3, r3, #16
   1f800:	lsr	r3, r3, #16
   1f804:	lsl	r3, r3, #8
   1f808:	lsl	r3, r3, #16
   1f80c:	lsr	r3, r3, #16
   1f810:	orr	r3, r2, r3
   1f814:	lsl	r3, r3, #16
   1f818:	lsr	r1, r3, #16
   1f81c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f820:	ldr	ip, [r3, #44]	; 0x2c
   1f824:	sub	r2, fp, #44	; 0x2c
   1f828:	mov	r3, #3
   1f82c:	str	r3, [sp]
   1f830:	mov	r0, r1
   1f834:	mov	r1, r2
   1f838:	mov	r2, #0
   1f83c:	mov	r3, ip
   1f840:	bl	17d1c <POOL_translateAddr>
   1f844:	mov	r3, r0
   1f848:	str	r3, [fp, #-36]	; 0xffffffdc
   1f84c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1f850:	ldr	r3, [fp, #-16]
   1f854:	str	r2, [r3, #12]
   1f858:	ldr	r3, [fp, #-8]
   1f85c:	ldr	r2, [r3, #24]
   1f860:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f864:	lsl	r3, r3, #7
   1f868:	add	r3, r2, r3
   1f86c:	ldrh	r3, [r3, #44]	; 0x2c
   1f870:	mov	r2, r3
   1f874:	and	r2, r2, #255	; 0xff
   1f878:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f87c:	ldr	r3, [r3]
   1f880:	lsl	r3, r3, #16
   1f884:	lsr	r3, r3, #16
   1f888:	lsl	r3, r3, #8
   1f88c:	lsl	r3, r3, #16
   1f890:	lsr	r3, r3, #16
   1f894:	orr	r3, r2, r3
   1f898:	lsl	r3, r3, #16
   1f89c:	lsr	r1, r3, #16
   1f8a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f8a4:	ldr	ip, [r3, #12]
   1f8a8:	sub	r2, fp, #40	; 0x28
   1f8ac:	mov	r3, #3
   1f8b0:	str	r3, [sp]
   1f8b4:	mov	r0, r1
   1f8b8:	mov	r1, r2
   1f8bc:	mov	r2, #0
   1f8c0:	mov	r3, ip
   1f8c4:	bl	17d1c <POOL_translateAddr>
   1f8c8:	mov	r3, r0
   1f8cc:	str	r3, [fp, #-36]	; 0xffffffdc
   1f8d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f8d4:	ldr	r3, [fp, #-16]
   1f8d8:	str	r2, [r3, #8]
   1f8dc:	ldr	r3, [fp, #-16]
   1f8e0:	ldr	r3, [r3, #64]	; 0x40
   1f8e4:	cmp	r3, #0
   1f8e8:	bne	1f91c <RingIO_open+0x6f8>
   1f8ec:	ldr	r2, [fp, #-16]
   1f8f0:	mov	r3, #0
   1f8f4:	str	r3, [r2, #16]
   1f8f8:	ldr	r2, [fp, #-16]
   1f8fc:	mov	r3, #0
   1f900:	str	r3, [r2, #20]
   1f904:	ldr	r2, [fp, #-16]
   1f908:	mov	r3, #0
   1f90c:	str	r3, [r2, #24]
   1f910:	ldr	r2, [fp, #-16]
   1f914:	mov	r3, #0
   1f918:	str	r3, [r2, #28]
   1f91c:	ldr	r2, [fp, #-16]
   1f920:	mov	r3, #0
   1f924:	str	r3, [r2, #36]	; 0x24
   1f928:	ldr	r2, [fp, #-16]
   1f92c:	mov	r3, #0
   1f930:	str	r3, [r2, #40]	; 0x28
   1f934:	ldr	r2, [fp, #-16]
   1f938:	mov	r3, #0
   1f93c:	str	r3, [r2, #32]
   1f940:	ldr	r2, [fp, #-16]
   1f944:	mov	r3, #0
   1f948:	str	r3, [r2, #44]	; 0x2c
   1f94c:	ldr	r2, [fp, #-16]
   1f950:	mov	r3, #0
   1f954:	strh	r3, [r2, #68]	; 0x44
   1f958:	ldr	r2, [fp, #-16]
   1f95c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1f960:	str	r3, [r2, #48]	; 0x30
   1f964:	ldr	r2, [fp, #-16]
   1f968:	mov	r3, #1
   1f96c:	str	r3, [r2, #64]	; 0x40
   1f970:	ldr	r3, [fp, #-16]
   1f974:	str	r3, [fp, #-28]	; 0xffffffe4
   1f978:	ldr	r3, [fp, #-8]
   1f97c:	ldr	r2, [r3, #24]
   1f980:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f984:	lsl	r3, r3, #7
   1f988:	add	r3, r2, r3
   1f98c:	ldrh	r3, [r3, #42]	; 0x2a
   1f990:	and	r2, r3, #255	; 0xff
   1f994:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f998:	ldr	r3, [r3]
   1f99c:	lsl	r3, r3, #8
   1f9a0:	lsl	r3, r3, #16
   1f9a4:	lsr	r3, r3, #16
   1f9a8:	orr	r3, r2, r3
   1f9ac:	and	r3, r3, #255	; 0xff
   1f9b0:	cmp	r3, #32
   1f9b4:	beq	1fa10 <RingIO_open+0x7ec>
   1f9b8:	ldr	r3, [fp, #-8]
   1f9bc:	ldr	r2, [r3, #24]
   1f9c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f9c4:	lsl	r3, r3, #7
   1f9c8:	add	r3, r2, r3
   1f9cc:	ldrh	r3, [r3, #42]	; 0x2a
   1f9d0:	mov	r2, r3
   1f9d4:	and	r2, r2, #255	; 0xff
   1f9d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f9dc:	ldr	r3, [r3]
   1f9e0:	lsl	r3, r3, #16
   1f9e4:	lsr	r3, r3, #16
   1f9e8:	lsl	r3, r3, #8
   1f9ec:	lsl	r3, r3, #16
   1f9f0:	lsr	r3, r3, #16
   1f9f4:	orr	r3, r2, r3
   1f9f8:	lsl	r3, r3, #16
   1f9fc:	lsr	r3, r3, #16
   1fa00:	mov	r0, r3
   1fa04:	ldr	r1, [fp, #-16]
   1fa08:	mov	r2, #128	; 0x80
   1fa0c:	bl	170a4 <POOL_writeback>
   1fa10:	ldr	r0, [fp, #-16]
   1fa14:	bl	1def8 <_RingIO_releaseLock>
   1fa18:	mov	r3, r0
   1fa1c:	str	r3, [fp, #-32]	; 0xffffffe0
   1fa20:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fa24:	ldr	r3, [pc, #160]	; 1facc <RingIO_open+0x8a8>
   1fa28:	cmp	r2, r3
   1fa2c:	ble	1fa3c <RingIO_open+0x818>
   1fa30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fa34:	cmp	r3, #34048	; 0x8500
   1fa38:	ble	1fa60 <RingIO_open+0x83c>
   1fa3c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1fa40:	ldr	r3, [pc, #132]	; 1facc <RingIO_open+0x8a8>
   1fa44:	cmp	r2, r3
   1fa48:	ble	1fa60 <RingIO_open+0x83c>
   1fa4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fa50:	cmp	r3, #34048	; 0x8500
   1fa54:	bgt	1fa60 <RingIO_open+0x83c>
   1fa58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fa5c:	str	r3, [fp, #-36]	; 0xffffffdc
   1fa60:	ldr	r3, [fp, #-8]
   1fa64:	ldr	r3, [r3, #28]
   1fa68:	mov	r0, r3
   1fa6c:	bl	12e98 <MPCS_leave>
   1fa70:	mov	r3, r0
   1fa74:	str	r3, [fp, #-32]	; 0xffffffe0
   1fa78:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1fa7c:	ldr	r3, [pc, #72]	; 1facc <RingIO_open+0x8a8>
   1fa80:	cmp	r2, r3
   1fa84:	ble	1fab8 <RingIO_open+0x894>
   1fa88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fa8c:	cmp	r3, #34048	; 0x8500
   1fa90:	bgt	1fab8 <RingIO_open+0x894>
   1fa94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fa98:	ldr	r3, [pc, #44]	; 1facc <RingIO_open+0x8a8>
   1fa9c:	cmp	r2, r3
   1faa0:	ble	1fab0 <RingIO_open+0x88c>
   1faa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1faa8:	cmp	r3, #34048	; 0x8500
   1faac:	ble	1fab8 <RingIO_open+0x894>
   1fab0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fab4:	str	r3, [fp, #-36]	; 0xffffffdc
   1fab8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fabc:	mov	r0, r3
   1fac0:	sub	sp, fp, #4
   1fac4:	pop	{fp, pc}
   1fac8:	.word	0x8000800b
   1facc:	.word	0x00007fff
   1fad0:	.word	0x0002d7ac
   1fad4:	.word	0x80008055

0001fad8 <RingIO_close>:
   1fad8:	push	{fp, lr}
   1fadc:	add	fp, sp, #4
   1fae0:	sub	sp, sp, #56	; 0x38
   1fae4:	str	r0, [fp, #-48]	; 0xffffffd0
   1fae8:	mov	r3, #33024	; 0x8100
   1faec:	str	r3, [fp, #-40]	; 0xffffffd8
   1faf0:	mov	r3, #33024	; 0x8100
   1faf4:	str	r3, [fp, #-36]	; 0xffffffdc
   1faf8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fafc:	str	r3, [fp, #-32]	; 0xffffffe0
   1fb00:	mov	r3, #0
   1fb04:	str	r3, [fp, #-28]	; 0xffffffe4
   1fb08:	mov	r3, #0
   1fb0c:	str	r3, [fp, #-24]	; 0xffffffe8
   1fb10:	mov	r3, #0
   1fb14:	str	r3, [fp, #-20]	; 0xffffffec
   1fb18:	mov	r3, #0
   1fb1c:	str	r3, [fp, #-12]
   1fb20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fb24:	cmp	r3, #0
   1fb28:	bne	1fb38 <RingIO_close+0x60>
   1fb2c:	ldr	r3, [pc, #1428]	; 200c8 <RingIO_close+0x5f0>
   1fb30:	str	r3, [fp, #-40]	; 0xffffffd8
   1fb34:	b	1fb74 <RingIO_close+0x9c>
   1fb38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fb3c:	ldr	r3, [r3, #52]	; 0x34
   1fb40:	str	r3, [fp, #-12]
   1fb44:	ldr	r3, [fp, #-12]
   1fb48:	ldr	r3, [r3]
   1fb4c:	lsl	r2, r3, #5
   1fb50:	ldr	r3, [pc, #1396]	; 200cc <RingIO_close+0x5f4>
   1fb54:	add	r3, r2, r3
   1fb58:	str	r3, [fp, #-20]	; 0xffffffec
   1fb5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fb60:	ldr	r3, [r3, #20]
   1fb64:	cmp	r3, #0
   1fb68:	bne	1fb74 <RingIO_close+0x9c>
   1fb6c:	ldr	r3, [pc, #1372]	; 200d0 <RingIO_close+0x5f8>
   1fb70:	str	r3, [fp, #-40]	; 0xffffffd8
   1fb74:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fb78:	ldr	r3, [pc, #1364]	; 200d4 <RingIO_close+0x5fc>
   1fb7c:	cmp	r2, r3
   1fb80:	ble	20090 <RingIO_close+0x5b8>
   1fb84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fb88:	cmp	r3, #34048	; 0x8500
   1fb8c:	bgt	20090 <RingIO_close+0x5b8>
   1fb90:	ldr	r3, [fp, #-12]
   1fb94:	ldr	r3, [r3, #4]
   1fb98:	str	r3, [fp, #-8]
   1fb9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fba0:	ldr	r2, [r3, #24]
   1fba4:	ldr	r3, [fp, #-8]
   1fba8:	lsl	r3, r3, #7
   1fbac:	add	r3, r2, r3
   1fbb0:	ldrh	r3, [r3, #42]	; 0x2a
   1fbb4:	and	r2, r3, #255	; 0xff
   1fbb8:	ldr	r3, [fp, #-12]
   1fbbc:	ldr	r3, [r3]
   1fbc0:	lsl	r3, r3, #8
   1fbc4:	lsl	r3, r3, #16
   1fbc8:	lsr	r3, r3, #16
   1fbcc:	orr	r3, r2, r3
   1fbd0:	and	r3, r3, #255	; 0xff
   1fbd4:	cmp	r3, #32
   1fbd8:	beq	1fc34 <RingIO_close+0x15c>
   1fbdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fbe0:	ldr	r2, [r3, #24]
   1fbe4:	ldr	r3, [fp, #-8]
   1fbe8:	lsl	r3, r3, #7
   1fbec:	add	r3, r2, r3
   1fbf0:	ldrh	r3, [r3, #42]	; 0x2a
   1fbf4:	mov	r2, r3
   1fbf8:	and	r2, r2, #255	; 0xff
   1fbfc:	ldr	r3, [fp, #-12]
   1fc00:	ldr	r3, [r3]
   1fc04:	lsl	r3, r3, #16
   1fc08:	lsr	r3, r3, #16
   1fc0c:	lsl	r3, r3, #8
   1fc10:	lsl	r3, r3, #16
   1fc14:	lsr	r3, r3, #16
   1fc18:	orr	r3, r2, r3
   1fc1c:	lsl	r3, r3, #16
   1fc20:	lsr	r3, r3, #16
   1fc24:	mov	r0, r3
   1fc28:	ldr	r1, [fp, #-12]
   1fc2c:	mov	r2, #384	; 0x180
   1fc30:	bl	17224 <POOL_invalidate>
   1fc34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fc38:	ldr	r3, [r3, #60]	; 0x3c
   1fc3c:	cmp	r3, #0
   1fc40:	beq	1fc64 <RingIO_close+0x18c>
   1fc44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fc48:	ldr	r3, [r3, #20]
   1fc4c:	cmp	r3, #0
   1fc50:	bne	1fc64 <RingIO_close+0x18c>
   1fc54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fc58:	ldr	r3, [r3, #28]
   1fc5c:	cmp	r3, #0
   1fc60:	beq	1fc70 <RingIO_close+0x198>
   1fc64:	ldr	r3, [pc, #1132]	; 200d8 <RingIO_close+0x600>
   1fc68:	str	r3, [fp, #-40]	; 0xffffffd8
   1fc6c:	b	20090 <RingIO_close+0x5b8>
   1fc70:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fc74:	ldr	r3, [r3, #28]
   1fc78:	mov	r0, r3
   1fc7c:	bl	12c3c <MPCS_enter>
   1fc80:	mov	r3, r0
   1fc84:	str	r3, [fp, #-40]	; 0xffffffd8
   1fc88:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fc8c:	ldr	r3, [pc, #1088]	; 200d4 <RingIO_close+0x5fc>
   1fc90:	cmp	r2, r3
   1fc94:	ble	20090 <RingIO_close+0x5b8>
   1fc98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fc9c:	cmp	r3, #34048	; 0x8500
   1fca0:	bgt	20090 <RingIO_close+0x5b8>
   1fca4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fca8:	bl	1deb8 <_RingIO_acquireLock>
   1fcac:	mov	r3, r0
   1fcb0:	str	r3, [fp, #-40]	; 0xffffffd8
   1fcb4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fcb8:	ldr	r3, [pc, #1044]	; 200d4 <RingIO_close+0x5fc>
   1fcbc:	cmp	r2, r3
   1fcc0:	ble	20038 <RingIO_close+0x560>
   1fcc4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fcc8:	cmp	r3, #34048	; 0x8500
   1fccc:	bgt	20038 <RingIO_close+0x560>
   1fcd0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fcd4:	mov	r3, #0
   1fcd8:	str	r3, [r2, #60]	; 0x3c
   1fcdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fce0:	ldr	r3, [r3, #56]	; 0x38
   1fce4:	str	r3, [fp, #-24]	; 0xffffffe8
   1fce8:	ldr	r3, [fp, #-12]
   1fcec:	ldr	r3, [r3, #8]
   1fcf0:	cmp	r3, #2
   1fcf4:	bne	1fea4 <RingIO_close+0x3cc>
   1fcf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fcfc:	ldr	r3, [r3, #4]
   1fd00:	cmp	r3, #0
   1fd04:	bne	1fd18 <RingIO_close+0x240>
   1fd08:	ldr	r3, [fp, #-12]
   1fd0c:	add	r3, r3, #128	; 0x80
   1fd10:	str	r3, [fp, #-16]
   1fd14:	b	1fd24 <RingIO_close+0x24c>
   1fd18:	ldr	r3, [fp, #-12]
   1fd1c:	add	r3, r3, #256	; 0x100
   1fd20:	str	r3, [fp, #-16]
   1fd24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fd28:	ldr	r3, [r3, #36]	; 0x24
   1fd2c:	str	r3, [fp, #-28]	; 0xffffffe4
   1fd30:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fd34:	mov	r3, #0
   1fd38:	str	r3, [r2, #36]	; 0x24
   1fd3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fd40:	mov	r3, #0
   1fd44:	str	r3, [r2, #40]	; 0x28
   1fd48:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fd4c:	mov	r3, #0
   1fd50:	str	r3, [r2, #32]
   1fd54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fd58:	mov	r3, #0
   1fd5c:	str	r3, [r2, #44]	; 0x2c
   1fd60:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fd64:	mov	r3, #0
   1fd68:	strh	r3, [r2, #68]	; 0x44
   1fd6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fd70:	ldr	r2, [r3, #24]
   1fd74:	ldr	r3, [fp, #-8]
   1fd78:	lsl	r3, r3, #7
   1fd7c:	add	r3, r2, r3
   1fd80:	ldrh	r3, [r3, #42]	; 0x2a
   1fd84:	and	r2, r3, #255	; 0xff
   1fd88:	ldr	r3, [fp, #-12]
   1fd8c:	ldr	r3, [r3]
   1fd90:	lsl	r3, r3, #8
   1fd94:	lsl	r3, r3, #16
   1fd98:	lsr	r3, r3, #16
   1fd9c:	orr	r3, r2, r3
   1fda0:	and	r3, r3, #255	; 0xff
   1fda4:	cmp	r3, #32
   1fda8:	beq	1fe04 <RingIO_close+0x32c>
   1fdac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fdb0:	ldr	r2, [r3, #24]
   1fdb4:	ldr	r3, [fp, #-8]
   1fdb8:	lsl	r3, r3, #7
   1fdbc:	add	r3, r2, r3
   1fdc0:	ldrh	r3, [r3, #42]	; 0x2a
   1fdc4:	mov	r2, r3
   1fdc8:	and	r2, r2, #255	; 0xff
   1fdcc:	ldr	r3, [fp, #-12]
   1fdd0:	ldr	r3, [r3]
   1fdd4:	lsl	r3, r3, #16
   1fdd8:	lsr	r3, r3, #16
   1fddc:	lsl	r3, r3, #8
   1fde0:	lsl	r3, r3, #16
   1fde4:	lsr	r3, r3, #16
   1fde8:	orr	r3, r2, r3
   1fdec:	lsl	r3, r3, #16
   1fdf0:	lsr	r3, r3, #16
   1fdf4:	mov	r0, r3
   1fdf8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1fdfc:	mov	r2, #128	; 0x80
   1fe00:	bl	170a4 <POOL_writeback>
   1fe04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fe08:	bl	1def8 <_RingIO_releaseLock>
   1fe0c:	mov	r3, r0
   1fe10:	str	r3, [fp, #-36]	; 0xffffffdc
   1fe14:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1fe18:	ldr	r3, [pc, #692]	; 200d4 <RingIO_close+0x5fc>
   1fe1c:	cmp	r2, r3
   1fe20:	ble	1fe30 <RingIO_close+0x358>
   1fe24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fe28:	cmp	r3, #34048	; 0x8500
   1fe2c:	ble	1fe54 <RingIO_close+0x37c>
   1fe30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fe34:	ldr	r3, [pc, #664]	; 200d4 <RingIO_close+0x5fc>
   1fe38:	cmp	r2, r3
   1fe3c:	ble	1fe54 <RingIO_close+0x37c>
   1fe40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fe44:	cmp	r3, #34048	; 0x8500
   1fe48:	bgt	1fe54 <RingIO_close+0x37c>
   1fe4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fe50:	str	r3, [fp, #-40]	; 0xffffffd8
   1fe54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fe58:	cmp	r3, #0
   1fe5c:	beq	1ffc8 <RingIO_close+0x4f0>
   1fe60:	ldr	r3, [fp, #-16]
   1fe64:	ldr	r1, [r3]
   1fe68:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fe6c:	ldr	r3, [r3, #20]
   1fe70:	ldr	ip, [r3, #12]
   1fe74:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fe78:	ldr	r3, [r3, #20]
   1fe7c:	ldr	r2, [r3, #16]
   1fe80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fe84:	str	r3, [sp]
   1fe88:	mov	r0, r1
   1fe8c:	mov	r1, ip
   1fe90:	ldr	r3, [pc, #580]	; 200dc <RingIO_close+0x604>
   1fe94:	bl	16d70 <NOTIFY_unregister>
   1fe98:	mov	r3, r0
   1fe9c:	str	r3, [fp, #-40]	; 0xffffffd8
   1fea0:	b	1ffc8 <RingIO_close+0x4f0>
   1fea4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fea8:	mov	r3, #0
   1feac:	str	r3, [r2, #36]	; 0x24
   1feb0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1feb4:	mov	r3, #0
   1feb8:	str	r3, [r2, #40]	; 0x28
   1febc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fec0:	mov	r3, #0
   1fec4:	str	r3, [r2, #32]
   1fec8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fecc:	mov	r3, #0
   1fed0:	str	r3, [r2, #44]	; 0x2c
   1fed4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fed8:	mov	r3, #0
   1fedc:	strh	r3, [r2, #68]	; 0x44
   1fee0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fee4:	ldr	r2, [r3, #24]
   1fee8:	ldr	r3, [fp, #-8]
   1feec:	lsl	r3, r3, #7
   1fef0:	add	r3, r2, r3
   1fef4:	ldrh	r3, [r3, #42]	; 0x2a
   1fef8:	and	r2, r3, #255	; 0xff
   1fefc:	ldr	r3, [fp, #-12]
   1ff00:	ldr	r3, [r3]
   1ff04:	lsl	r3, r3, #8
   1ff08:	lsl	r3, r3, #16
   1ff0c:	lsr	r3, r3, #16
   1ff10:	orr	r3, r2, r3
   1ff14:	and	r3, r3, #255	; 0xff
   1ff18:	cmp	r3, #32
   1ff1c:	beq	1ff78 <RingIO_close+0x4a0>
   1ff20:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ff24:	ldr	r2, [r3, #24]
   1ff28:	ldr	r3, [fp, #-8]
   1ff2c:	lsl	r3, r3, #7
   1ff30:	add	r3, r2, r3
   1ff34:	ldrh	r3, [r3, #42]	; 0x2a
   1ff38:	mov	r2, r3
   1ff3c:	and	r2, r2, #255	; 0xff
   1ff40:	ldr	r3, [fp, #-12]
   1ff44:	ldr	r3, [r3]
   1ff48:	lsl	r3, r3, #16
   1ff4c:	lsr	r3, r3, #16
   1ff50:	lsl	r3, r3, #8
   1ff54:	lsl	r3, r3, #16
   1ff58:	lsr	r3, r3, #16
   1ff5c:	orr	r3, r2, r3
   1ff60:	lsl	r3, r3, #16
   1ff64:	lsr	r3, r3, #16
   1ff68:	mov	r0, r3
   1ff6c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ff70:	mov	r2, #128	; 0x80
   1ff74:	bl	170a4 <POOL_writeback>
   1ff78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ff7c:	bl	1def8 <_RingIO_releaseLock>
   1ff80:	mov	r3, r0
   1ff84:	str	r3, [fp, #-36]	; 0xffffffdc
   1ff88:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ff8c:	ldr	r3, [pc, #320]	; 200d4 <RingIO_close+0x5fc>
   1ff90:	cmp	r2, r3
   1ff94:	ble	1ffa4 <RingIO_close+0x4cc>
   1ff98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ff9c:	cmp	r3, #34048	; 0x8500
   1ffa0:	ble	1ffc8 <RingIO_close+0x4f0>
   1ffa4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ffa8:	ldr	r3, [pc, #292]	; 200d4 <RingIO_close+0x5fc>
   1ffac:	cmp	r2, r3
   1ffb0:	ble	1ffc8 <RingIO_close+0x4f0>
   1ffb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ffb8:	cmp	r3, #34048	; 0x8500
   1ffbc:	bgt	1ffc8 <RingIO_close+0x4f0>
   1ffc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ffc4:	str	r3, [fp, #-40]	; 0xffffffd8
   1ffc8:	ldr	r3, [fp, #-12]
   1ffcc:	ldr	r3, [r3, #8]
   1ffd0:	cmp	r3, #2
   1ffd4:	bne	20038 <RingIO_close+0x560>
   1ffd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ffdc:	ldr	r3, [r3, #20]
   1ffe0:	ldr	r3, [r3, #4]
   1ffe4:	mov	r0, r3
   1ffe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ffec:	bl	12ac4 <MPCS_close>
   1fff0:	mov	r3, r0
   1fff4:	str	r3, [fp, #-36]	; 0xffffffdc
   1fff8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1fffc:	ldr	r3, [pc, #208]	; 200d4 <RingIO_close+0x5fc>
   20000:	cmp	r2, r3
   20004:	ble	20014 <RingIO_close+0x53c>
   20008:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2000c:	cmp	r3, #34048	; 0x8500
   20010:	ble	20038 <RingIO_close+0x560>
   20014:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20018:	ldr	r3, [pc, #180]	; 200d4 <RingIO_close+0x5fc>
   2001c:	cmp	r2, r3
   20020:	ble	20038 <RingIO_close+0x560>
   20024:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20028:	cmp	r3, #34048	; 0x8500
   2002c:	bgt	20038 <RingIO_close+0x560>
   20030:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20034:	str	r3, [fp, #-40]	; 0xffffffd8
   20038:	ldr	r3, [fp, #-20]	; 0xffffffec
   2003c:	ldr	r3, [r3, #28]
   20040:	mov	r0, r3
   20044:	bl	12e98 <MPCS_leave>
   20048:	mov	r3, r0
   2004c:	str	r3, [fp, #-36]	; 0xffffffdc
   20050:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20054:	ldr	r3, [pc, #120]	; 200d4 <RingIO_close+0x5fc>
   20058:	cmp	r2, r3
   2005c:	ble	20090 <RingIO_close+0x5b8>
   20060:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20064:	cmp	r3, #34048	; 0x8500
   20068:	bgt	20090 <RingIO_close+0x5b8>
   2006c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   20070:	ldr	r3, [pc, #92]	; 200d4 <RingIO_close+0x5fc>
   20074:	cmp	r2, r3
   20078:	ble	20088 <RingIO_close+0x5b0>
   2007c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20080:	cmp	r3, #34048	; 0x8500
   20084:	ble	20090 <RingIO_close+0x5b8>
   20088:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2008c:	str	r3, [fp, #-40]	; 0xffffffd8
   20090:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20094:	cmp	r3, #32768	; 0x8000
   20098:	beq	200a8 <RingIO_close+0x5d0>
   2009c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   200a0:	str	r3, [fp, #-52]	; 0xffffffcc
   200a4:	b	200b0 <RingIO_close+0x5d8>
   200a8:	mov	r3, #33024	; 0x8100
   200ac:	str	r3, [fp, #-52]	; 0xffffffcc
   200b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   200b4:	str	r3, [fp, #-40]	; 0xffffffd8
   200b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   200bc:	mov	r0, r3
   200c0:	sub	sp, fp, #4
   200c4:	pop	{fp, pc}
   200c8:	.word	0x8000800b
   200cc:	.word	0x0002d7ac
   200d0:	.word	0x80008000
   200d4:	.word	0x00007fff
   200d8:	.word	0x80008055
   200dc:	.word	0x0001daf8

000200e0 <RingIO_acquire>:
   200e0:	push	{fp, lr}
   200e4:	add	fp, sp, #4
   200e8:	sub	sp, sp, #40	; 0x28
   200ec:	str	r0, [fp, #-32]	; 0xffffffe0
   200f0:	str	r1, [fp, #-36]	; 0xffffffdc
   200f4:	str	r2, [fp, #-40]	; 0xffffffd8
   200f8:	mov	r3, #33024	; 0x8100
   200fc:	str	r3, [fp, #-28]	; 0xffffffe4
   20100:	mov	r3, #33024	; 0x8100
   20104:	str	r3, [fp, #-24]	; 0xffffffe8
   20108:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2010c:	str	r3, [fp, #-20]	; 0xffffffec
   20110:	mov	r3, #0
   20114:	str	r3, [fp, #-16]
   20118:	mov	r3, #0
   2011c:	str	r3, [fp, #-12]
   20120:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20124:	cmp	r3, #0
   20128:	beq	20144 <RingIO_acquire+0x64>
   2012c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20130:	cmp	r3, #0
   20134:	beq	20144 <RingIO_acquire+0x64>
   20138:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2013c:	cmp	r3, #0
   20140:	bne	20150 <RingIO_acquire+0x70>
   20144:	ldr	r3, [pc, #700]	; 20408 <RingIO_acquire+0x328>
   20148:	str	r3, [fp, #-28]	; 0xffffffe4
   2014c:	b	2018c <RingIO_acquire+0xac>
   20150:	ldr	r3, [fp, #-20]	; 0xffffffec
   20154:	ldr	r3, [r3, #52]	; 0x34
   20158:	str	r3, [fp, #-12]
   2015c:	ldr	r3, [fp, #-12]
   20160:	ldr	r3, [r3]
   20164:	lsl	r2, r3, #5
   20168:	ldr	r3, [pc, #668]	; 2040c <RingIO_acquire+0x32c>
   2016c:	add	r3, r2, r3
   20170:	str	r3, [fp, #-16]
   20174:	ldr	r3, [fp, #-16]
   20178:	ldr	r3, [r3, #20]
   2017c:	cmp	r3, #0
   20180:	bne	2018c <RingIO_acquire+0xac>
   20184:	ldr	r3, [pc, #644]	; 20410 <RingIO_acquire+0x330>
   20188:	str	r3, [fp, #-28]	; 0xffffffe4
   2018c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20190:	ldr	r3, [pc, #636]	; 20414 <RingIO_acquire+0x334>
   20194:	cmp	r2, r3
   20198:	ble	203d0 <RingIO_acquire+0x2f0>
   2019c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   201a0:	cmp	r3, #34048	; 0x8500
   201a4:	bgt	203d0 <RingIO_acquire+0x2f0>
   201a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   201ac:	ldr	r3, [r3]
   201b0:	cmp	r3, #0
   201b4:	beq	203d0 <RingIO_acquire+0x2f0>
   201b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   201bc:	bl	1deb8 <_RingIO_acquireLock>
   201c0:	mov	r3, r0
   201c4:	str	r3, [fp, #-28]	; 0xffffffe4
   201c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   201cc:	ldr	r3, [pc, #576]	; 20414 <RingIO_acquire+0x334>
   201d0:	cmp	r2, r3
   201d4:	ble	203d0 <RingIO_acquire+0x2f0>
   201d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   201dc:	cmp	r3, #34048	; 0x8500
   201e0:	bgt	203d0 <RingIO_acquire+0x2f0>
   201e4:	ldr	r3, [fp, #-12]
   201e8:	ldr	r3, [r3, #4]
   201ec:	str	r3, [fp, #-8]
   201f0:	ldr	r3, [fp, #-16]
   201f4:	ldr	r2, [r3, #24]
   201f8:	ldr	r3, [fp, #-8]
   201fc:	lsl	r3, r3, #7
   20200:	add	r3, r2, r3
   20204:	ldrh	r3, [r3, #42]	; 0x2a
   20208:	and	r2, r3, #255	; 0xff
   2020c:	ldr	r3, [fp, #-12]
   20210:	ldr	r3, [r3]
   20214:	lsl	r3, r3, #8
   20218:	lsl	r3, r3, #16
   2021c:	lsr	r3, r3, #16
   20220:	orr	r3, r2, r3
   20224:	and	r3, r3, #255	; 0xff
   20228:	cmp	r3, #32
   2022c:	beq	20288 <RingIO_acquire+0x1a8>
   20230:	ldr	r3, [fp, #-16]
   20234:	ldr	r2, [r3, #24]
   20238:	ldr	r3, [fp, #-8]
   2023c:	lsl	r3, r3, #7
   20240:	add	r3, r2, r3
   20244:	ldrh	r3, [r3, #42]	; 0x2a
   20248:	mov	r2, r3
   2024c:	and	r2, r2, #255	; 0xff
   20250:	ldr	r3, [fp, #-12]
   20254:	ldr	r3, [r3]
   20258:	lsl	r3, r3, #16
   2025c:	lsr	r3, r3, #16
   20260:	lsl	r3, r3, #8
   20264:	lsl	r3, r3, #16
   20268:	lsr	r3, r3, #16
   2026c:	orr	r3, r2, r3
   20270:	lsl	r3, r3, #16
   20274:	lsr	r3, r3, #16
   20278:	mov	r0, r3
   2027c:	ldr	r1, [fp, #-12]
   20280:	mov	r2, #384	; 0x180
   20284:	bl	17224 <POOL_invalidate>
   20288:	ldr	r3, [fp, #-20]	; 0xffffffec
   2028c:	ldr	r3, [r3, #60]	; 0x3c
   20290:	cmp	r3, #0
   20294:	bne	202a4 <RingIO_acquire+0x1c4>
   20298:	ldr	r3, [pc, #376]	; 20418 <RingIO_acquire+0x338>
   2029c:	str	r3, [fp, #-28]	; 0xffffffe4
   202a0:	b	202e8 <RingIO_acquire+0x208>
   202a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   202a8:	ldr	r3, [r3, #4]
   202ac:	cmp	r3, #1
   202b0:	bne	202d0 <RingIO_acquire+0x1f0>
   202b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   202b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   202bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   202c0:	bl	1a5a8 <_RingIO_writerAcquire>
   202c4:	mov	r3, r0
   202c8:	str	r3, [fp, #-28]	; 0xffffffe4
   202cc:	b	202e8 <RingIO_acquire+0x208>
   202d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   202d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   202d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   202dc:	bl	1a918 <_RingIO_readerAcquire>
   202e0:	mov	r3, r0
   202e4:	str	r3, [fp, #-28]	; 0xffffffe4
   202e8:	ldr	r3, [fp, #-16]
   202ec:	ldr	r2, [r3, #24]
   202f0:	ldr	r3, [fp, #-8]
   202f4:	lsl	r3, r3, #7
   202f8:	add	r3, r2, r3
   202fc:	ldrh	r3, [r3, #42]	; 0x2a
   20300:	and	r2, r3, #255	; 0xff
   20304:	ldr	r3, [fp, #-12]
   20308:	ldr	r3, [r3]
   2030c:	lsl	r3, r3, #8
   20310:	lsl	r3, r3, #16
   20314:	lsr	r3, r3, #16
   20318:	orr	r3, r2, r3
   2031c:	and	r3, r3, #255	; 0xff
   20320:	cmp	r3, #32
   20324:	beq	20380 <RingIO_acquire+0x2a0>
   20328:	ldr	r3, [fp, #-16]
   2032c:	ldr	r2, [r3, #24]
   20330:	ldr	r3, [fp, #-8]
   20334:	lsl	r3, r3, #7
   20338:	add	r3, r2, r3
   2033c:	ldrh	r3, [r3, #42]	; 0x2a
   20340:	mov	r2, r3
   20344:	and	r2, r2, #255	; 0xff
   20348:	ldr	r3, [fp, #-12]
   2034c:	ldr	r3, [r3]
   20350:	lsl	r3, r3, #16
   20354:	lsr	r3, r3, #16
   20358:	lsl	r3, r3, #8
   2035c:	lsl	r3, r3, #16
   20360:	lsr	r3, r3, #16
   20364:	orr	r3, r2, r3
   20368:	lsl	r3, r3, #16
   2036c:	lsr	r3, r3, #16
   20370:	mov	r0, r3
   20374:	ldr	r1, [fp, #-12]
   20378:	mov	r2, #384	; 0x180
   2037c:	bl	170a4 <POOL_writeback>
   20380:	ldr	r0, [fp, #-20]	; 0xffffffec
   20384:	bl	1def8 <_RingIO_releaseLock>
   20388:	mov	r3, r0
   2038c:	str	r3, [fp, #-24]	; 0xffffffe8
   20390:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20394:	ldr	r3, [pc, #120]	; 20414 <RingIO_acquire+0x334>
   20398:	cmp	r2, r3
   2039c:	ble	203ac <RingIO_acquire+0x2cc>
   203a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   203a4:	cmp	r3, #34048	; 0x8500
   203a8:	ble	203d0 <RingIO_acquire+0x2f0>
   203ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   203b0:	ldr	r3, [pc, #92]	; 20414 <RingIO_acquire+0x334>
   203b4:	cmp	r2, r3
   203b8:	ble	203d0 <RingIO_acquire+0x2f0>
   203bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   203c0:	cmp	r3, #34048	; 0x8500
   203c4:	bgt	203d0 <RingIO_acquire+0x2f0>
   203c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   203cc:	str	r3, [fp, #-28]	; 0xffffffe4
   203d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   203d4:	cmp	r3, #32768	; 0x8000
   203d8:	beq	203e8 <RingIO_acquire+0x308>
   203dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   203e0:	str	r3, [fp, #-44]	; 0xffffffd4
   203e4:	b	203f0 <RingIO_acquire+0x310>
   203e8:	mov	r3, #33024	; 0x8100
   203ec:	str	r3, [fp, #-44]	; 0xffffffd4
   203f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   203f4:	str	r3, [fp, #-28]	; 0xffffffe4
   203f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   203fc:	mov	r0, r3
   20400:	sub	sp, fp, #4
   20404:	pop	{fp, pc}
   20408:	.word	0x8000800b
   2040c:	.word	0x0002d7ac
   20410:	.word	0x80008000
   20414:	.word	0x00007fff
   20418:	.word	0x80008055

0002041c <RingIO_release>:
   2041c:	push	{fp, lr}
   20420:	add	fp, sp, #4
   20424:	sub	sp, sp, #48	; 0x30
   20428:	str	r0, [fp, #-40]	; 0xffffffd8
   2042c:	str	r1, [fp, #-44]	; 0xffffffd4
   20430:	mov	r3, #33024	; 0x8100
   20434:	str	r3, [fp, #-32]	; 0xffffffe0
   20438:	mov	r3, #33024	; 0x8100
   2043c:	str	r3, [fp, #-28]	; 0xffffffe4
   20440:	mov	r3, #33024	; 0x8100
   20444:	str	r3, [fp, #-24]	; 0xffffffe8
   20448:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2044c:	str	r3, [fp, #-20]	; 0xffffffec
   20450:	mov	r3, #0
   20454:	str	r3, [fp, #-16]
   20458:	mov	r3, #0
   2045c:	str	r3, [fp, #-12]
   20460:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20464:	cmp	r3, #0
   20468:	bne	20478 <RingIO_release+0x5c>
   2046c:	ldr	r3, [pc, #848]	; 207c4 <RingIO_release+0x3a8>
   20470:	str	r3, [fp, #-32]	; 0xffffffe0
   20474:	b	204b4 <RingIO_release+0x98>
   20478:	ldr	r3, [fp, #-20]	; 0xffffffec
   2047c:	ldr	r3, [r3, #52]	; 0x34
   20480:	str	r3, [fp, #-12]
   20484:	ldr	r3, [fp, #-12]
   20488:	ldr	r3, [r3]
   2048c:	lsl	r2, r3, #5
   20490:	ldr	r3, [pc, #816]	; 207c8 <RingIO_release+0x3ac>
   20494:	add	r3, r2, r3
   20498:	str	r3, [fp, #-16]
   2049c:	ldr	r3, [fp, #-16]
   204a0:	ldr	r3, [r3, #20]
   204a4:	cmp	r3, #0
   204a8:	bne	204b4 <RingIO_release+0x98>
   204ac:	ldr	r3, [pc, #792]	; 207cc <RingIO_release+0x3b0>
   204b0:	str	r3, [fp, #-32]	; 0xffffffe0
   204b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   204b8:	ldr	r3, [pc, #784]	; 207d0 <RingIO_release+0x3b4>
   204bc:	cmp	r2, r3
   204c0:	ble	2078c <RingIO_release+0x370>
   204c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   204c8:	cmp	r3, #34048	; 0x8500
   204cc:	bgt	2078c <RingIO_release+0x370>
   204d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   204d4:	cmp	r3, #0
   204d8:	beq	2078c <RingIO_release+0x370>
   204dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   204e0:	bl	1deb8 <_RingIO_acquireLock>
   204e4:	mov	r3, r0
   204e8:	str	r3, [fp, #-32]	; 0xffffffe0
   204ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   204f0:	ldr	r3, [pc, #728]	; 207d0 <RingIO_release+0x3b4>
   204f4:	cmp	r2, r3
   204f8:	ble	2078c <RingIO_release+0x370>
   204fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20500:	cmp	r3, #34048	; 0x8500
   20504:	bgt	2078c <RingIO_release+0x370>
   20508:	ldr	r3, [fp, #-12]
   2050c:	ldr	r3, [r3, #4]
   20510:	str	r3, [fp, #-8]
   20514:	ldr	r3, [fp, #-16]
   20518:	ldr	r2, [r3, #24]
   2051c:	ldr	r3, [fp, #-8]
   20520:	lsl	r3, r3, #7
   20524:	add	r3, r2, r3
   20528:	ldrh	r3, [r3, #42]	; 0x2a
   2052c:	and	r2, r3, #255	; 0xff
   20530:	ldr	r3, [fp, #-12]
   20534:	ldr	r3, [r3]
   20538:	lsl	r3, r3, #8
   2053c:	lsl	r3, r3, #16
   20540:	lsr	r3, r3, #16
   20544:	orr	r3, r2, r3
   20548:	and	r3, r3, #255	; 0xff
   2054c:	cmp	r3, #32
   20550:	beq	205ac <RingIO_release+0x190>
   20554:	ldr	r3, [fp, #-16]
   20558:	ldr	r2, [r3, #24]
   2055c:	ldr	r3, [fp, #-8]
   20560:	lsl	r3, r3, #7
   20564:	add	r3, r2, r3
   20568:	ldrh	r3, [r3, #42]	; 0x2a
   2056c:	mov	r2, r3
   20570:	and	r2, r2, #255	; 0xff
   20574:	ldr	r3, [fp, #-12]
   20578:	ldr	r3, [r3]
   2057c:	lsl	r3, r3, #16
   20580:	lsr	r3, r3, #16
   20584:	lsl	r3, r3, #8
   20588:	lsl	r3, r3, #16
   2058c:	lsr	r3, r3, #16
   20590:	orr	r3, r2, r3
   20594:	lsl	r3, r3, #16
   20598:	lsr	r3, r3, #16
   2059c:	mov	r0, r3
   205a0:	ldr	r1, [fp, #-12]
   205a4:	mov	r2, #384	; 0x180
   205a8:	bl	17224 <POOL_invalidate>
   205ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   205b0:	ldr	r3, [r3, #60]	; 0x3c
   205b4:	cmp	r3, #0
   205b8:	bne	205d8 <RingIO_release+0x1bc>
   205bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   205c0:	bl	1def8 <_RingIO_releaseLock>
   205c4:	mov	r3, r0
   205c8:	str	r3, [fp, #-24]	; 0xffffffe8
   205cc:	ldr	r3, [pc, #512]	; 207d4 <RingIO_release+0x3b8>
   205d0:	str	r3, [fp, #-32]	; 0xffffffe0
   205d4:	b	20728 <RingIO_release+0x30c>
   205d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   205dc:	ldr	r3, [r3, #4]
   205e0:	cmp	r3, #1
   205e4:	bne	20600 <RingIO_release+0x1e4>
   205e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   205ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   205f0:	bl	1af54 <_RingIO_writerRelease>
   205f4:	mov	r3, r0
   205f8:	str	r3, [fp, #-32]	; 0xffffffe0
   205fc:	b	20614 <RingIO_release+0x1f8>
   20600:	ldr	r0, [fp, #-20]	; 0xffffffec
   20604:	ldr	r1, [fp, #-44]	; 0xffffffd4
   20608:	bl	1b1c8 <_RingIO_readerRelease>
   2060c:	mov	r3, r0
   20610:	str	r3, [fp, #-32]	; 0xffffffe0
   20614:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20618:	ldr	r3, [pc, #432]	; 207d0 <RingIO_release+0x3b4>
   2061c:	cmp	r2, r3
   20620:	ble	20640 <RingIO_release+0x224>
   20624:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20628:	cmp	r3, #34048	; 0x8500
   2062c:	bgt	20640 <RingIO_release+0x224>
   20630:	ldr	r0, [fp, #-20]	; 0xffffffec
   20634:	bl	1d05c <_RingIO_checkNotifier>
   20638:	mov	r3, r0
   2063c:	str	r3, [fp, #-28]	; 0xffffffe4
   20640:	ldr	r3, [fp, #-16]
   20644:	ldr	r2, [r3, #24]
   20648:	ldr	r3, [fp, #-8]
   2064c:	lsl	r3, r3, #7
   20650:	add	r3, r2, r3
   20654:	ldrh	r3, [r3, #42]	; 0x2a
   20658:	and	r2, r3, #255	; 0xff
   2065c:	ldr	r3, [fp, #-12]
   20660:	ldr	r3, [r3]
   20664:	lsl	r3, r3, #8
   20668:	lsl	r3, r3, #16
   2066c:	lsr	r3, r3, #16
   20670:	orr	r3, r2, r3
   20674:	and	r3, r3, #255	; 0xff
   20678:	cmp	r3, #32
   2067c:	beq	206d8 <RingIO_release+0x2bc>
   20680:	ldr	r3, [fp, #-16]
   20684:	ldr	r2, [r3, #24]
   20688:	ldr	r3, [fp, #-8]
   2068c:	lsl	r3, r3, #7
   20690:	add	r3, r2, r3
   20694:	ldrh	r3, [r3, #42]	; 0x2a
   20698:	mov	r2, r3
   2069c:	and	r2, r2, #255	; 0xff
   206a0:	ldr	r3, [fp, #-12]
   206a4:	ldr	r3, [r3]
   206a8:	lsl	r3, r3, #16
   206ac:	lsr	r3, r3, #16
   206b0:	lsl	r3, r3, #8
   206b4:	lsl	r3, r3, #16
   206b8:	lsr	r3, r3, #16
   206bc:	orr	r3, r2, r3
   206c0:	lsl	r3, r3, #16
   206c4:	lsr	r3, r3, #16
   206c8:	mov	r0, r3
   206cc:	ldr	r1, [fp, #-12]
   206d0:	mov	r2, #384	; 0x180
   206d4:	bl	170a4 <POOL_writeback>
   206d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   206dc:	bl	1def8 <_RingIO_releaseLock>
   206e0:	mov	r3, r0
   206e4:	str	r3, [fp, #-24]	; 0xffffffe8
   206e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   206ec:	ldr	r3, [pc, #220]	; 207d0 <RingIO_release+0x3b4>
   206f0:	cmp	r2, r3
   206f4:	ble	20704 <RingIO_release+0x2e8>
   206f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   206fc:	cmp	r3, #34048	; 0x8500
   20700:	ble	20728 <RingIO_release+0x30c>
   20704:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20708:	ldr	r3, [pc, #192]	; 207d0 <RingIO_release+0x3b4>
   2070c:	cmp	r2, r3
   20710:	ble	20728 <RingIO_release+0x30c>
   20714:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20718:	cmp	r3, #34048	; 0x8500
   2071c:	bgt	20728 <RingIO_release+0x30c>
   20720:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20724:	str	r3, [fp, #-32]	; 0xffffffe0
   20728:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2072c:	ldr	r3, [pc, #156]	; 207d0 <RingIO_release+0x3b4>
   20730:	cmp	r2, r3
   20734:	ble	2078c <RingIO_release+0x370>
   20738:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2073c:	cmp	r3, #34048	; 0x8500
   20740:	bgt	2078c <RingIO_release+0x370>
   20744:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20748:	ldr	r3, [pc, #132]	; 207d4 <RingIO_release+0x3b8>
   2074c:	cmp	r2, r3
   20750:	beq	2078c <RingIO_release+0x370>
   20754:	ldr	r0, [fp, #-20]	; 0xffffffec
   20758:	mov	r1, #0
   2075c:	bl	1cdb0 <_RingIO_callNotifier>
   20760:	mov	r3, r0
   20764:	str	r3, [fp, #-28]	; 0xffffffe4
   20768:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2076c:	ldr	r3, [pc, #92]	; 207d0 <RingIO_release+0x3b4>
   20770:	cmp	r2, r3
   20774:	ble	20784 <RingIO_release+0x368>
   20778:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2077c:	cmp	r3, #34048	; 0x8500
   20780:	ble	2078c <RingIO_release+0x370>
   20784:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20788:	str	r3, [fp, #-32]	; 0xffffffe0
   2078c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20790:	cmp	r3, #32768	; 0x8000
   20794:	beq	207a4 <RingIO_release+0x388>
   20798:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2079c:	str	r3, [fp, #-48]	; 0xffffffd0
   207a0:	b	207ac <RingIO_release+0x390>
   207a4:	mov	r3, #33024	; 0x8100
   207a8:	str	r3, [fp, #-48]	; 0xffffffd0
   207ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   207b0:	str	r3, [fp, #-32]	; 0xffffffe0
   207b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   207b8:	mov	r0, r3
   207bc:	sub	sp, fp, #4
   207c0:	pop	{fp, pc}
   207c4:	.word	0x8000800b
   207c8:	.word	0x0002d7ac
   207cc:	.word	0x80008000
   207d0:	.word	0x00007fff
   207d4:	.word	0x80008055

000207d8 <RingIO_cancel>:
   207d8:	push	{fp, lr}
   207dc:	add	fp, sp, #4
   207e0:	sub	sp, sp, #32
   207e4:	str	r0, [fp, #-32]	; 0xffffffe0
   207e8:	mov	r3, #33024	; 0x8100
   207ec:	str	r3, [fp, #-28]	; 0xffffffe4
   207f0:	mov	r3, #33024	; 0x8100
   207f4:	str	r3, [fp, #-24]	; 0xffffffe8
   207f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   207fc:	str	r3, [fp, #-20]	; 0xffffffec
   20800:	mov	r3, #0
   20804:	str	r3, [fp, #-16]
   20808:	mov	r3, #0
   2080c:	str	r3, [fp, #-12]
   20810:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20814:	cmp	r3, #0
   20818:	bne	20828 <RingIO_cancel+0x50>
   2081c:	ldr	r3, [pc, #668]	; 20ac0 <RingIO_cancel+0x2e8>
   20820:	str	r3, [fp, #-28]	; 0xffffffe4
   20824:	b	20864 <RingIO_cancel+0x8c>
   20828:	ldr	r3, [fp, #-20]	; 0xffffffec
   2082c:	ldr	r3, [r3, #52]	; 0x34
   20830:	str	r3, [fp, #-12]
   20834:	ldr	r3, [fp, #-12]
   20838:	ldr	r3, [r3]
   2083c:	lsl	r2, r3, #5
   20840:	ldr	r3, [pc, #636]	; 20ac4 <RingIO_cancel+0x2ec>
   20844:	add	r3, r2, r3
   20848:	str	r3, [fp, #-16]
   2084c:	ldr	r3, [fp, #-16]
   20850:	ldr	r3, [r3, #20]
   20854:	cmp	r3, #0
   20858:	bne	20864 <RingIO_cancel+0x8c>
   2085c:	ldr	r3, [pc, #612]	; 20ac8 <RingIO_cancel+0x2f0>
   20860:	str	r3, [fp, #-28]	; 0xffffffe4
   20864:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20868:	ldr	r3, [pc, #604]	; 20acc <RingIO_cancel+0x2f4>
   2086c:	cmp	r2, r3
   20870:	ble	20a88 <RingIO_cancel+0x2b0>
   20874:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20878:	cmp	r3, #34048	; 0x8500
   2087c:	bgt	20a88 <RingIO_cancel+0x2b0>
   20880:	ldr	r0, [fp, #-20]	; 0xffffffec
   20884:	bl	1deb8 <_RingIO_acquireLock>
   20888:	mov	r3, r0
   2088c:	str	r3, [fp, #-28]	; 0xffffffe4
   20890:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20894:	ldr	r3, [pc, #560]	; 20acc <RingIO_cancel+0x2f4>
   20898:	cmp	r2, r3
   2089c:	ble	20a88 <RingIO_cancel+0x2b0>
   208a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   208a4:	cmp	r3, #34048	; 0x8500
   208a8:	bgt	20a88 <RingIO_cancel+0x2b0>
   208ac:	ldr	r3, [fp, #-12]
   208b0:	ldr	r3, [r3, #4]
   208b4:	str	r3, [fp, #-8]
   208b8:	ldr	r3, [fp, #-16]
   208bc:	ldr	r2, [r3, #24]
   208c0:	ldr	r3, [fp, #-8]
   208c4:	lsl	r3, r3, #7
   208c8:	add	r3, r2, r3
   208cc:	ldrh	r3, [r3, #42]	; 0x2a
   208d0:	and	r2, r3, #255	; 0xff
   208d4:	ldr	r3, [fp, #-12]
   208d8:	ldr	r3, [r3]
   208dc:	lsl	r3, r3, #8
   208e0:	lsl	r3, r3, #16
   208e4:	lsr	r3, r3, #16
   208e8:	orr	r3, r2, r3
   208ec:	and	r3, r3, #255	; 0xff
   208f0:	cmp	r3, #32
   208f4:	beq	20950 <RingIO_cancel+0x178>
   208f8:	ldr	r3, [fp, #-16]
   208fc:	ldr	r2, [r3, #24]
   20900:	ldr	r3, [fp, #-8]
   20904:	lsl	r3, r3, #7
   20908:	add	r3, r2, r3
   2090c:	ldrh	r3, [r3, #42]	; 0x2a
   20910:	mov	r2, r3
   20914:	and	r2, r2, #255	; 0xff
   20918:	ldr	r3, [fp, #-12]
   2091c:	ldr	r3, [r3]
   20920:	lsl	r3, r3, #16
   20924:	lsr	r3, r3, #16
   20928:	lsl	r3, r3, #8
   2092c:	lsl	r3, r3, #16
   20930:	lsr	r3, r3, #16
   20934:	orr	r3, r2, r3
   20938:	lsl	r3, r3, #16
   2093c:	lsr	r3, r3, #16
   20940:	mov	r0, r3
   20944:	ldr	r1, [fp, #-12]
   20948:	mov	r2, #384	; 0x180
   2094c:	bl	17224 <POOL_invalidate>
   20950:	ldr	r3, [fp, #-20]	; 0xffffffec
   20954:	ldr	r3, [r3, #60]	; 0x3c
   20958:	cmp	r3, #0
   2095c:	bne	2096c <RingIO_cancel+0x194>
   20960:	ldr	r3, [pc, #360]	; 20ad0 <RingIO_cancel+0x2f8>
   20964:	str	r3, [fp, #-28]	; 0xffffffe4
   20968:	b	209a0 <RingIO_cancel+0x1c8>
   2096c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20970:	ldr	r3, [r3, #4]
   20974:	cmp	r3, #1
   20978:	bne	20990 <RingIO_cancel+0x1b8>
   2097c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20980:	bl	1c9e0 <_RingIO_writerCancel>
   20984:	mov	r3, r0
   20988:	str	r3, [fp, #-28]	; 0xffffffe4
   2098c:	b	209a0 <RingIO_cancel+0x1c8>
   20990:	ldr	r0, [fp, #-20]	; 0xffffffec
   20994:	bl	1ccb8 <_RingIO_readerCancel>
   20998:	mov	r3, r0
   2099c:	str	r3, [fp, #-28]	; 0xffffffe4
   209a0:	ldr	r3, [fp, #-16]
   209a4:	ldr	r2, [r3, #24]
   209a8:	ldr	r3, [fp, #-8]
   209ac:	lsl	r3, r3, #7
   209b0:	add	r3, r2, r3
   209b4:	ldrh	r3, [r3, #42]	; 0x2a
   209b8:	and	r2, r3, #255	; 0xff
   209bc:	ldr	r3, [fp, #-12]
   209c0:	ldr	r3, [r3]
   209c4:	lsl	r3, r3, #8
   209c8:	lsl	r3, r3, #16
   209cc:	lsr	r3, r3, #16
   209d0:	orr	r3, r2, r3
   209d4:	and	r3, r3, #255	; 0xff
   209d8:	cmp	r3, #32
   209dc:	beq	20a38 <RingIO_cancel+0x260>
   209e0:	ldr	r3, [fp, #-16]
   209e4:	ldr	r2, [r3, #24]
   209e8:	ldr	r3, [fp, #-8]
   209ec:	lsl	r3, r3, #7
   209f0:	add	r3, r2, r3
   209f4:	ldrh	r3, [r3, #42]	; 0x2a
   209f8:	mov	r2, r3
   209fc:	and	r2, r2, #255	; 0xff
   20a00:	ldr	r3, [fp, #-12]
   20a04:	ldr	r3, [r3]
   20a08:	lsl	r3, r3, #16
   20a0c:	lsr	r3, r3, #16
   20a10:	lsl	r3, r3, #8
   20a14:	lsl	r3, r3, #16
   20a18:	lsr	r3, r3, #16
   20a1c:	orr	r3, r2, r3
   20a20:	lsl	r3, r3, #16
   20a24:	lsr	r3, r3, #16
   20a28:	mov	r0, r3
   20a2c:	ldr	r1, [fp, #-12]
   20a30:	mov	r2, #384	; 0x180
   20a34:	bl	170a4 <POOL_writeback>
   20a38:	ldr	r0, [fp, #-20]	; 0xffffffec
   20a3c:	bl	1def8 <_RingIO_releaseLock>
   20a40:	mov	r3, r0
   20a44:	str	r3, [fp, #-24]	; 0xffffffe8
   20a48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20a4c:	ldr	r3, [pc, #120]	; 20acc <RingIO_cancel+0x2f4>
   20a50:	cmp	r2, r3
   20a54:	ble	20a64 <RingIO_cancel+0x28c>
   20a58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20a5c:	cmp	r3, #34048	; 0x8500
   20a60:	ble	20a88 <RingIO_cancel+0x2b0>
   20a64:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20a68:	ldr	r3, [pc, #92]	; 20acc <RingIO_cancel+0x2f4>
   20a6c:	cmp	r2, r3
   20a70:	ble	20a88 <RingIO_cancel+0x2b0>
   20a74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20a78:	cmp	r3, #34048	; 0x8500
   20a7c:	bgt	20a88 <RingIO_cancel+0x2b0>
   20a80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20a84:	str	r3, [fp, #-28]	; 0xffffffe4
   20a88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20a8c:	cmp	r3, #32768	; 0x8000
   20a90:	beq	20aa0 <RingIO_cancel+0x2c8>
   20a94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20a98:	str	r3, [fp, #-36]	; 0xffffffdc
   20a9c:	b	20aa8 <RingIO_cancel+0x2d0>
   20aa0:	mov	r3, #33024	; 0x8100
   20aa4:	str	r3, [fp, #-36]	; 0xffffffdc
   20aa8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20aac:	str	r3, [fp, #-28]	; 0xffffffe4
   20ab0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20ab4:	mov	r0, r3
   20ab8:	sub	sp, fp, #4
   20abc:	pop	{fp, pc}
   20ac0:	.word	0x8000800b
   20ac4:	.word	0x0002d7ac
   20ac8:	.word	0x80008000
   20acc:	.word	0x00007fff
   20ad0:	.word	0x80008055

00020ad4 <RingIO_getAttribute>:
   20ad4:	push	{fp, lr}
   20ad8:	add	fp, sp, #4
   20adc:	sub	sp, sp, #32
   20ae0:	str	r0, [fp, #-16]
   20ae4:	str	r1, [fp, #-20]	; 0xffffffec
   20ae8:	str	r2, [fp, #-24]	; 0xffffffe8
   20aec:	mov	r3, #33024	; 0x8100
   20af0:	str	r3, [fp, #-8]
   20af4:	mov	r3, #0
   20af8:	str	r3, [sp]
   20afc:	ldr	r0, [fp, #-16]
   20b00:	ldr	r1, [fp, #-20]	; 0xffffffec
   20b04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20b08:	mov	r3, #0
   20b0c:	bl	20bd8 <RingIO_getvAttribute>
   20b10:	mov	r3, r0
   20b14:	str	r3, [fp, #-8]
   20b18:	ldr	r3, [fp, #-8]
   20b1c:	cmp	r3, #32768	; 0x8000
   20b20:	beq	20b30 <RingIO_getAttribute+0x5c>
   20b24:	ldr	r3, [fp, #-8]
   20b28:	str	r3, [fp, #-28]	; 0xffffffe4
   20b2c:	b	20b38 <RingIO_getAttribute+0x64>
   20b30:	mov	r3, #33024	; 0x8100
   20b34:	str	r3, [fp, #-28]	; 0xffffffe4
   20b38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20b3c:	str	r3, [fp, #-8]
   20b40:	ldr	r3, [fp, #-8]
   20b44:	mov	r0, r3
   20b48:	sub	sp, fp, #4
   20b4c:	pop	{fp, pc}

00020b50 <RingIO_setAttribute>:
   20b50:	push	{fp, lr}
   20b54:	add	fp, sp, #4
   20b58:	sub	sp, sp, #40	; 0x28
   20b5c:	str	r0, [fp, #-16]
   20b60:	str	r1, [fp, #-20]	; 0xffffffec
   20b64:	str	r3, [fp, #-28]	; 0xffffffe4
   20b68:	strh	r2, [fp, #-22]	; 0xffffffea
   20b6c:	mov	r3, #33024	; 0x8100
   20b70:	str	r3, [fp, #-8]
   20b74:	ldrh	r2, [fp, #-22]	; 0xffffffea
   20b78:	mov	r3, #0
   20b7c:	str	r3, [sp]
   20b80:	mov	r3, #0
   20b84:	str	r3, [sp, #4]
   20b88:	ldr	r0, [fp, #-16]
   20b8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20b90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20b94:	bl	20ee4 <RingIO_setvAttribute>
   20b98:	mov	r3, r0
   20b9c:	str	r3, [fp, #-8]
   20ba0:	ldr	r3, [fp, #-8]
   20ba4:	cmp	r3, #32768	; 0x8000
   20ba8:	beq	20bb8 <RingIO_setAttribute+0x68>
   20bac:	ldr	r3, [fp, #-8]
   20bb0:	str	r3, [fp, #-32]	; 0xffffffe0
   20bb4:	b	20bc0 <RingIO_setAttribute+0x70>
   20bb8:	mov	r3, #33024	; 0x8100
   20bbc:	str	r3, [fp, #-32]	; 0xffffffe0
   20bc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20bc4:	str	r3, [fp, #-8]
   20bc8:	ldr	r3, [fp, #-8]
   20bcc:	mov	r0, r3
   20bd0:	sub	sp, fp, #4
   20bd4:	pop	{fp, pc}

00020bd8 <RingIO_getvAttribute>:
   20bd8:	push	{fp, lr}
   20bdc:	add	fp, sp, #4
   20be0:	sub	sp, sp, #56	; 0x38
   20be4:	str	r0, [fp, #-32]	; 0xffffffe0
   20be8:	str	r1, [fp, #-36]	; 0xffffffdc
   20bec:	str	r2, [fp, #-40]	; 0xffffffd8
   20bf0:	str	r3, [fp, #-44]	; 0xffffffd4
   20bf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20bf8:	str	r3, [fp, #-28]	; 0xffffffe4
   20bfc:	mov	r3, #33024	; 0x8100
   20c00:	str	r3, [fp, #-24]	; 0xffffffe8
   20c04:	mov	r3, #33024	; 0x8100
   20c08:	str	r3, [fp, #-20]	; 0xffffffec
   20c0c:	mov	r3, #0
   20c10:	str	r3, [fp, #-16]
   20c14:	mov	r3, #0
   20c18:	str	r3, [fp, #-12]
   20c1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20c20:	cmp	r3, #0
   20c24:	beq	20c40 <RingIO_getvAttribute+0x68>
   20c28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20c2c:	cmp	r3, #0
   20c30:	beq	20c40 <RingIO_getvAttribute+0x68>
   20c34:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20c38:	cmp	r3, #0
   20c3c:	bne	20c4c <RingIO_getvAttribute+0x74>
   20c40:	ldr	r3, [pc, #652]	; 20ed4 <RingIO_getvAttribute+0x2fc>
   20c44:	str	r3, [fp, #-24]	; 0xffffffe8
   20c48:	b	20c88 <RingIO_getvAttribute+0xb0>
   20c4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20c50:	ldr	r3, [r3, #52]	; 0x34
   20c54:	str	r3, [fp, #-12]
   20c58:	ldr	r3, [fp, #-12]
   20c5c:	ldr	r3, [r3]
   20c60:	lsl	r2, r3, #5
   20c64:	ldr	r3, [pc, #620]	; 20ed8 <RingIO_getvAttribute+0x300>
   20c68:	add	r3, r2, r3
   20c6c:	str	r3, [fp, #-16]
   20c70:	ldr	r3, [fp, #-16]
   20c74:	ldr	r3, [r3, #20]
   20c78:	cmp	r3, #0
   20c7c:	bne	20c88 <RingIO_getvAttribute+0xb0>
   20c80:	ldr	r3, [pc, #596]	; 20edc <RingIO_getvAttribute+0x304>
   20c84:	str	r3, [fp, #-24]	; 0xffffffe8
   20c88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20c8c:	ldr	r3, [pc, #588]	; 20ee0 <RingIO_getvAttribute+0x308>
   20c90:	cmp	r2, r3
   20c94:	ble	20e9c <RingIO_getvAttribute+0x2c4>
   20c98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20c9c:	cmp	r3, #34048	; 0x8500
   20ca0:	bgt	20e9c <RingIO_getvAttribute+0x2c4>
   20ca4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20ca8:	bl	1deb8 <_RingIO_acquireLock>
   20cac:	mov	r3, r0
   20cb0:	str	r3, [fp, #-24]	; 0xffffffe8
   20cb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20cb8:	ldr	r3, [pc, #544]	; 20ee0 <RingIO_getvAttribute+0x308>
   20cbc:	cmp	r2, r3
   20cc0:	ble	20e9c <RingIO_getvAttribute+0x2c4>
   20cc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20cc8:	cmp	r3, #34048	; 0x8500
   20ccc:	bgt	20e9c <RingIO_getvAttribute+0x2c4>
   20cd0:	ldr	r3, [fp, #-12]
   20cd4:	ldr	r3, [r3, #4]
   20cd8:	str	r3, [fp, #-8]
   20cdc:	ldr	r3, [fp, #-16]
   20ce0:	ldr	r2, [r3, #24]
   20ce4:	ldr	r3, [fp, #-8]
   20ce8:	lsl	r3, r3, #7
   20cec:	add	r3, r2, r3
   20cf0:	ldrh	r3, [r3, #42]	; 0x2a
   20cf4:	and	r2, r3, #255	; 0xff
   20cf8:	ldr	r3, [fp, #-12]
   20cfc:	ldr	r3, [r3]
   20d00:	lsl	r3, r3, #8
   20d04:	lsl	r3, r3, #16
   20d08:	lsr	r3, r3, #16
   20d0c:	orr	r3, r2, r3
   20d10:	and	r3, r3, #255	; 0xff
   20d14:	cmp	r3, #32
   20d18:	beq	20d74 <RingIO_getvAttribute+0x19c>
   20d1c:	ldr	r3, [fp, #-16]
   20d20:	ldr	r2, [r3, #24]
   20d24:	ldr	r3, [fp, #-8]
   20d28:	lsl	r3, r3, #7
   20d2c:	add	r3, r2, r3
   20d30:	ldrh	r3, [r3, #42]	; 0x2a
   20d34:	mov	r2, r3
   20d38:	and	r2, r2, #255	; 0xff
   20d3c:	ldr	r3, [fp, #-12]
   20d40:	ldr	r3, [r3]
   20d44:	lsl	r3, r3, #16
   20d48:	lsr	r3, r3, #16
   20d4c:	lsl	r3, r3, #8
   20d50:	lsl	r3, r3, #16
   20d54:	lsr	r3, r3, #16
   20d58:	orr	r3, r2, r3
   20d5c:	lsl	r3, r3, #16
   20d60:	lsr	r3, r3, #16
   20d64:	mov	r0, r3
   20d68:	ldr	r1, [fp, #-12]
   20d6c:	mov	r2, #384	; 0x180
   20d70:	bl	17224 <POOL_invalidate>
   20d74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20d78:	ldr	r3, [r3, #4]
   20d7c:	cmp	r3, #1
   20d80:	bne	20d90 <RingIO_getvAttribute+0x1b8>
   20d84:	ldr	r3, [pc, #328]	; 20ed4 <RingIO_getvAttribute+0x2fc>
   20d88:	str	r3, [fp, #-24]	; 0xffffffe8
   20d8c:	b	20db4 <RingIO_getvAttribute+0x1dc>
   20d90:	ldr	r3, [fp, #4]
   20d94:	str	r3, [sp]
   20d98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20d9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   20da0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20da4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20da8:	bl	1b8d4 <_RingIO_readerGetvAttribute>
   20dac:	mov	r3, r0
   20db0:	str	r3, [fp, #-24]	; 0xffffffe8
   20db4:	ldr	r3, [fp, #-16]
   20db8:	ldr	r2, [r3, #24]
   20dbc:	ldr	r3, [fp, #-8]
   20dc0:	lsl	r3, r3, #7
   20dc4:	add	r3, r2, r3
   20dc8:	ldrh	r3, [r3, #42]	; 0x2a
   20dcc:	and	r2, r3, #255	; 0xff
   20dd0:	ldr	r3, [fp, #-12]
   20dd4:	ldr	r3, [r3]
   20dd8:	lsl	r3, r3, #8
   20ddc:	lsl	r3, r3, #16
   20de0:	lsr	r3, r3, #16
   20de4:	orr	r3, r2, r3
   20de8:	and	r3, r3, #255	; 0xff
   20dec:	cmp	r3, #32
   20df0:	beq	20e4c <RingIO_getvAttribute+0x274>
   20df4:	ldr	r3, [fp, #-16]
   20df8:	ldr	r2, [r3, #24]
   20dfc:	ldr	r3, [fp, #-8]
   20e00:	lsl	r3, r3, #7
   20e04:	add	r3, r2, r3
   20e08:	ldrh	r3, [r3, #42]	; 0x2a
   20e0c:	mov	r2, r3
   20e10:	and	r2, r2, #255	; 0xff
   20e14:	ldr	r3, [fp, #-12]
   20e18:	ldr	r3, [r3]
   20e1c:	lsl	r3, r3, #16
   20e20:	lsr	r3, r3, #16
   20e24:	lsl	r3, r3, #8
   20e28:	lsl	r3, r3, #16
   20e2c:	lsr	r3, r3, #16
   20e30:	orr	r3, r2, r3
   20e34:	lsl	r3, r3, #16
   20e38:	lsr	r3, r3, #16
   20e3c:	mov	r0, r3
   20e40:	ldr	r1, [fp, #-12]
   20e44:	mov	r2, #384	; 0x180
   20e48:	bl	170a4 <POOL_writeback>
   20e4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20e50:	bl	1def8 <_RingIO_releaseLock>
   20e54:	mov	r3, r0
   20e58:	str	r3, [fp, #-20]	; 0xffffffec
   20e5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   20e60:	ldr	r3, [pc, #120]	; 20ee0 <RingIO_getvAttribute+0x308>
   20e64:	cmp	r2, r3
   20e68:	ble	20e78 <RingIO_getvAttribute+0x2a0>
   20e6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20e70:	cmp	r3, #34048	; 0x8500
   20e74:	ble	20e9c <RingIO_getvAttribute+0x2c4>
   20e78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20e7c:	ldr	r3, [pc, #92]	; 20ee0 <RingIO_getvAttribute+0x308>
   20e80:	cmp	r2, r3
   20e84:	ble	20e9c <RingIO_getvAttribute+0x2c4>
   20e88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20e8c:	cmp	r3, #34048	; 0x8500
   20e90:	bgt	20e9c <RingIO_getvAttribute+0x2c4>
   20e94:	ldr	r3, [fp, #-20]	; 0xffffffec
   20e98:	str	r3, [fp, #-24]	; 0xffffffe8
   20e9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20ea0:	cmp	r3, #32768	; 0x8000
   20ea4:	beq	20eb4 <RingIO_getvAttribute+0x2dc>
   20ea8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20eac:	str	r3, [fp, #-48]	; 0xffffffd0
   20eb0:	b	20ebc <RingIO_getvAttribute+0x2e4>
   20eb4:	mov	r3, #33024	; 0x8100
   20eb8:	str	r3, [fp, #-48]	; 0xffffffd0
   20ebc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20ec0:	str	r3, [fp, #-24]	; 0xffffffe8
   20ec4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20ec8:	mov	r0, r3
   20ecc:	sub	sp, fp, #4
   20ed0:	pop	{fp, pc}
   20ed4:	.word	0x8000800b
   20ed8:	.word	0x0002d7ac
   20edc:	.word	0x80008000
   20ee0:	.word	0x00007fff

00020ee4 <RingIO_setvAttribute>:
   20ee4:	push	{fp, lr}
   20ee8:	add	fp, sp, #4
   20eec:	sub	sp, sp, #56	; 0x38
   20ef0:	str	r0, [fp, #-32]	; 0xffffffe0
   20ef4:	str	r1, [fp, #-36]	; 0xffffffdc
   20ef8:	str	r3, [fp, #-44]	; 0xffffffd4
   20efc:	strh	r2, [fp, #-38]	; 0xffffffda
   20f00:	mov	r3, #33024	; 0x8100
   20f04:	str	r3, [fp, #-28]	; 0xffffffe4
   20f08:	mov	r3, #33024	; 0x8100
   20f0c:	str	r3, [fp, #-24]	; 0xffffffe8
   20f10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20f14:	str	r3, [fp, #-20]	; 0xffffffec
   20f18:	mov	r3, #0
   20f1c:	str	r3, [fp, #-16]
   20f20:	mov	r3, #0
   20f24:	str	r3, [fp, #-12]
   20f28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20f2c:	cmp	r3, #0
   20f30:	bne	20f40 <RingIO_setvAttribute+0x5c>
   20f34:	ldr	r3, [pc, #660]	; 211d0 <RingIO_setvAttribute+0x2ec>
   20f38:	str	r3, [fp, #-28]	; 0xffffffe4
   20f3c:	b	20f7c <RingIO_setvAttribute+0x98>
   20f40:	ldr	r3, [fp, #-20]	; 0xffffffec
   20f44:	ldr	r3, [r3, #52]	; 0x34
   20f48:	str	r3, [fp, #-12]
   20f4c:	ldr	r3, [fp, #-12]
   20f50:	ldr	r3, [r3]
   20f54:	lsl	r2, r3, #5
   20f58:	ldr	r3, [pc, #628]	; 211d4 <RingIO_setvAttribute+0x2f0>
   20f5c:	add	r3, r2, r3
   20f60:	str	r3, [fp, #-16]
   20f64:	ldr	r3, [fp, #-16]
   20f68:	ldr	r3, [r3, #20]
   20f6c:	cmp	r3, #0
   20f70:	bne	20f7c <RingIO_setvAttribute+0x98>
   20f74:	ldr	r3, [pc, #604]	; 211d8 <RingIO_setvAttribute+0x2f4>
   20f78:	str	r3, [fp, #-28]	; 0xffffffe4
   20f7c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20f80:	ldr	r3, [pc, #596]	; 211dc <RingIO_setvAttribute+0x2f8>
   20f84:	cmp	r2, r3
   20f88:	ble	21198 <RingIO_setvAttribute+0x2b4>
   20f8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20f90:	cmp	r3, #34048	; 0x8500
   20f94:	bgt	21198 <RingIO_setvAttribute+0x2b4>
   20f98:	ldr	r0, [fp, #-20]	; 0xffffffec
   20f9c:	bl	1deb8 <_RingIO_acquireLock>
   20fa0:	mov	r3, r0
   20fa4:	str	r3, [fp, #-28]	; 0xffffffe4
   20fa8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20fac:	ldr	r3, [pc, #552]	; 211dc <RingIO_setvAttribute+0x2f8>
   20fb0:	cmp	r2, r3
   20fb4:	ble	21198 <RingIO_setvAttribute+0x2b4>
   20fb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20fbc:	cmp	r3, #34048	; 0x8500
   20fc0:	bgt	21198 <RingIO_setvAttribute+0x2b4>
   20fc4:	ldr	r3, [fp, #-12]
   20fc8:	ldr	r3, [r3, #4]
   20fcc:	str	r3, [fp, #-8]
   20fd0:	ldr	r3, [fp, #-16]
   20fd4:	ldr	r2, [r3, #24]
   20fd8:	ldr	r3, [fp, #-8]
   20fdc:	lsl	r3, r3, #7
   20fe0:	add	r3, r2, r3
   20fe4:	ldrh	r3, [r3, #42]	; 0x2a
   20fe8:	and	r2, r3, #255	; 0xff
   20fec:	ldr	r3, [fp, #-12]
   20ff0:	ldr	r3, [r3]
   20ff4:	lsl	r3, r3, #8
   20ff8:	lsl	r3, r3, #16
   20ffc:	lsr	r3, r3, #16
   21000:	orr	r3, r2, r3
   21004:	and	r3, r3, #255	; 0xff
   21008:	cmp	r3, #32
   2100c:	beq	21068 <RingIO_setvAttribute+0x184>
   21010:	ldr	r3, [fp, #-16]
   21014:	ldr	r2, [r3, #24]
   21018:	ldr	r3, [fp, #-8]
   2101c:	lsl	r3, r3, #7
   21020:	add	r3, r2, r3
   21024:	ldrh	r3, [r3, #42]	; 0x2a
   21028:	mov	r2, r3
   2102c:	and	r2, r2, #255	; 0xff
   21030:	ldr	r3, [fp, #-12]
   21034:	ldr	r3, [r3]
   21038:	lsl	r3, r3, #16
   2103c:	lsr	r3, r3, #16
   21040:	lsl	r3, r3, #8
   21044:	lsl	r3, r3, #16
   21048:	lsr	r3, r3, #16
   2104c:	orr	r3, r2, r3
   21050:	lsl	r3, r3, #16
   21054:	lsr	r3, r3, #16
   21058:	mov	r0, r3
   2105c:	ldr	r1, [fp, #-12]
   21060:	mov	r2, #384	; 0x180
   21064:	bl	17224 <POOL_invalidate>
   21068:	ldr	r3, [fp, #-20]	; 0xffffffec
   2106c:	ldr	r3, [r3, #4]
   21070:	cmp	r3, #0
   21074:	bne	21084 <RingIO_setvAttribute+0x1a0>
   21078:	ldr	r3, [pc, #336]	; 211d0 <RingIO_setvAttribute+0x2ec>
   2107c:	str	r3, [fp, #-28]	; 0xffffffe4
   21080:	b	210b0 <RingIO_setvAttribute+0x1cc>
   21084:	ldrh	r2, [fp, #-38]	; 0xffffffda
   21088:	ldr	r3, [fp, #4]
   2108c:	str	r3, [sp]
   21090:	ldr	r3, [fp, #8]
   21094:	str	r3, [sp, #4]
   21098:	ldr	r0, [fp, #-20]	; 0xffffffec
   2109c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   210a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   210a4:	bl	1b450 <_RingIO_writerSetvAttribute>
   210a8:	mov	r3, r0
   210ac:	str	r3, [fp, #-28]	; 0xffffffe4
   210b0:	ldr	r3, [fp, #-16]
   210b4:	ldr	r2, [r3, #24]
   210b8:	ldr	r3, [fp, #-8]
   210bc:	lsl	r3, r3, #7
   210c0:	add	r3, r2, r3
   210c4:	ldrh	r3, [r3, #42]	; 0x2a
   210c8:	and	r2, r3, #255	; 0xff
   210cc:	ldr	r3, [fp, #-12]
   210d0:	ldr	r3, [r3]
   210d4:	lsl	r3, r3, #8
   210d8:	lsl	r3, r3, #16
   210dc:	lsr	r3, r3, #16
   210e0:	orr	r3, r2, r3
   210e4:	and	r3, r3, #255	; 0xff
   210e8:	cmp	r3, #32
   210ec:	beq	21148 <RingIO_setvAttribute+0x264>
   210f0:	ldr	r3, [fp, #-16]
   210f4:	ldr	r2, [r3, #24]
   210f8:	ldr	r3, [fp, #-8]
   210fc:	lsl	r3, r3, #7
   21100:	add	r3, r2, r3
   21104:	ldrh	r3, [r3, #42]	; 0x2a
   21108:	mov	r2, r3
   2110c:	and	r2, r2, #255	; 0xff
   21110:	ldr	r3, [fp, #-12]
   21114:	ldr	r3, [r3]
   21118:	lsl	r3, r3, #16
   2111c:	lsr	r3, r3, #16
   21120:	lsl	r3, r3, #8
   21124:	lsl	r3, r3, #16
   21128:	lsr	r3, r3, #16
   2112c:	orr	r3, r2, r3
   21130:	lsl	r3, r3, #16
   21134:	lsr	r3, r3, #16
   21138:	mov	r0, r3
   2113c:	ldr	r1, [fp, #-12]
   21140:	mov	r2, #384	; 0x180
   21144:	bl	170a4 <POOL_writeback>
   21148:	ldr	r0, [fp, #-20]	; 0xffffffec
   2114c:	bl	1def8 <_RingIO_releaseLock>
   21150:	mov	r3, r0
   21154:	str	r3, [fp, #-24]	; 0xffffffe8
   21158:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2115c:	ldr	r3, [pc, #120]	; 211dc <RingIO_setvAttribute+0x2f8>
   21160:	cmp	r2, r3
   21164:	ble	21174 <RingIO_setvAttribute+0x290>
   21168:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2116c:	cmp	r3, #34048	; 0x8500
   21170:	ble	21198 <RingIO_setvAttribute+0x2b4>
   21174:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21178:	ldr	r3, [pc, #92]	; 211dc <RingIO_setvAttribute+0x2f8>
   2117c:	cmp	r2, r3
   21180:	ble	21198 <RingIO_setvAttribute+0x2b4>
   21184:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21188:	cmp	r3, #34048	; 0x8500
   2118c:	bgt	21198 <RingIO_setvAttribute+0x2b4>
   21190:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21194:	str	r3, [fp, #-28]	; 0xffffffe4
   21198:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2119c:	cmp	r3, #32768	; 0x8000
   211a0:	beq	211b0 <RingIO_setvAttribute+0x2cc>
   211a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   211a8:	str	r3, [fp, #-48]	; 0xffffffd0
   211ac:	b	211b8 <RingIO_setvAttribute+0x2d4>
   211b0:	mov	r3, #33024	; 0x8100
   211b4:	str	r3, [fp, #-48]	; 0xffffffd0
   211b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   211bc:	str	r3, [fp, #-28]	; 0xffffffe4
   211c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   211c4:	mov	r0, r3
   211c8:	sub	sp, fp, #4
   211cc:	pop	{fp, pc}
   211d0:	.word	0x8000800b
   211d4:	.word	0x0002d7ac
   211d8:	.word	0x80008000
   211dc:	.word	0x00007fff

000211e0 <RingIO_flush>:
   211e0:	push	{fp, lr}
   211e4:	add	fp, sp, #4
   211e8:	sub	sp, sp, #64	; 0x40
   211ec:	str	r0, [fp, #-40]	; 0xffffffd8
   211f0:	str	r2, [fp, #-48]	; 0xffffffd0
   211f4:	str	r3, [fp, #-52]	; 0xffffffcc
   211f8:	strh	r1, [fp, #-42]	; 0xffffffd6
   211fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21200:	str	r3, [fp, #-32]	; 0xffffffe0
   21204:	mov	r3, #33024	; 0x8100
   21208:	str	r3, [fp, #-28]	; 0xffffffe4
   2120c:	mov	r3, #33024	; 0x8100
   21210:	str	r3, [fp, #-24]	; 0xffffffe8
   21214:	mov	r3, #33024	; 0x8100
   21218:	str	r3, [fp, #-20]	; 0xffffffec
   2121c:	mov	r3, #0
   21220:	str	r3, [fp, #-16]
   21224:	mov	r3, #0
   21228:	str	r3, [fp, #-12]
   2122c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21230:	cmp	r3, #0
   21234:	beq	2125c <RingIO_flush+0x7c>
   21238:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2123c:	cmp	r3, #0
   21240:	beq	2125c <RingIO_flush+0x7c>
   21244:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21248:	cmp	r3, #0
   2124c:	beq	2125c <RingIO_flush+0x7c>
   21250:	ldr	r3, [fp, #4]
   21254:	cmp	r3, #0
   21258:	bne	21268 <RingIO_flush+0x88>
   2125c:	ldr	r3, [pc, #920]	; 215fc <RingIO_flush+0x41c>
   21260:	str	r3, [fp, #-28]	; 0xffffffe4
   21264:	b	212a4 <RingIO_flush+0xc4>
   21268:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2126c:	ldr	r3, [r3, #52]	; 0x34
   21270:	str	r3, [fp, #-12]
   21274:	ldr	r3, [fp, #-12]
   21278:	ldr	r3, [r3]
   2127c:	lsl	r2, r3, #5
   21280:	ldr	r3, [pc, #888]	; 21600 <RingIO_flush+0x420>
   21284:	add	r3, r2, r3
   21288:	str	r3, [fp, #-16]
   2128c:	ldr	r3, [fp, #-16]
   21290:	ldr	r3, [r3, #20]
   21294:	cmp	r3, #0
   21298:	bne	212a4 <RingIO_flush+0xc4>
   2129c:	ldr	r3, [pc, #864]	; 21604 <RingIO_flush+0x424>
   212a0:	str	r3, [fp, #-28]	; 0xffffffe4
   212a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   212a8:	ldr	r3, [pc, #856]	; 21608 <RingIO_flush+0x428>
   212ac:	cmp	r2, r3
   212b0:	ble	215c4 <RingIO_flush+0x3e4>
   212b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   212b8:	cmp	r3, #34048	; 0x8500
   212bc:	bgt	215c4 <RingIO_flush+0x3e4>
   212c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   212c4:	bl	1deb8 <_RingIO_acquireLock>
   212c8:	mov	r3, r0
   212cc:	str	r3, [fp, #-28]	; 0xffffffe4
   212d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   212d4:	ldr	r3, [pc, #812]	; 21608 <RingIO_flush+0x428>
   212d8:	cmp	r2, r3
   212dc:	ble	215c4 <RingIO_flush+0x3e4>
   212e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   212e4:	cmp	r3, #34048	; 0x8500
   212e8:	bgt	215c4 <RingIO_flush+0x3e4>
   212ec:	ldr	r3, [fp, #-12]
   212f0:	ldr	r3, [r3, #4]
   212f4:	str	r3, [fp, #-8]
   212f8:	ldr	r3, [fp, #-16]
   212fc:	ldr	r2, [r3, #24]
   21300:	ldr	r3, [fp, #-8]
   21304:	lsl	r3, r3, #7
   21308:	add	r3, r2, r3
   2130c:	ldrh	r3, [r3, #42]	; 0x2a
   21310:	and	r2, r3, #255	; 0xff
   21314:	ldr	r3, [fp, #-12]
   21318:	ldr	r3, [r3]
   2131c:	lsl	r3, r3, #8
   21320:	lsl	r3, r3, #16
   21324:	lsr	r3, r3, #16
   21328:	orr	r3, r2, r3
   2132c:	and	r3, r3, #255	; 0xff
   21330:	cmp	r3, #32
   21334:	beq	21390 <RingIO_flush+0x1b0>
   21338:	ldr	r3, [fp, #-16]
   2133c:	ldr	r2, [r3, #24]
   21340:	ldr	r3, [fp, #-8]
   21344:	lsl	r3, r3, #7
   21348:	add	r3, r2, r3
   2134c:	ldrh	r3, [r3, #42]	; 0x2a
   21350:	mov	r2, r3
   21354:	and	r2, r2, #255	; 0xff
   21358:	ldr	r3, [fp, #-12]
   2135c:	ldr	r3, [r3]
   21360:	lsl	r3, r3, #16
   21364:	lsr	r3, r3, #16
   21368:	lsl	r3, r3, #8
   2136c:	lsl	r3, r3, #16
   21370:	lsr	r3, r3, #16
   21374:	orr	r3, r2, r3
   21378:	lsl	r3, r3, #16
   2137c:	lsr	r3, r3, #16
   21380:	mov	r0, r3
   21384:	ldr	r1, [fp, #-12]
   21388:	mov	r2, #384	; 0x180
   2138c:	bl	17224 <POOL_invalidate>
   21390:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21394:	ldr	r3, [r3, #20]
   21398:	cmp	r3, #0
   2139c:	beq	213b8 <RingIO_flush+0x1d8>
   213a0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   213a4:	mvn	r3, #0
   213a8:	strh	r3, [r2]
   213ac:	ldr	r3, [pc, #600]	; 2160c <RingIO_flush+0x42c>
   213b0:	str	r3, [fp, #-28]	; 0xffffffe4
   213b4:	b	21448 <RingIO_flush+0x268>
   213b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   213bc:	ldr	r3, [r3, #4]
   213c0:	cmp	r3, #1
   213c4:	bne	213f4 <RingIO_flush+0x214>
   213c8:	ldrsh	r3, [fp, #-42]	; 0xffffffd6
   213cc:	ldr	r2, [fp, #4]
   213d0:	str	r2, [sp]
   213d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   213d8:	mov	r1, r3
   213dc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   213e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   213e4:	bl	1bdb0 <_RingIO_writerFlush>
   213e8:	mov	r3, r0
   213ec:	str	r3, [fp, #-28]	; 0xffffffe4
   213f0:	b	21448 <RingIO_flush+0x268>
   213f4:	ldrsh	r2, [fp, #-42]	; 0xffffffd6
   213f8:	ldr	r3, [fp, #4]
   213fc:	str	r3, [sp]
   21400:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21404:	mov	r1, r2
   21408:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2140c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21410:	bl	1c410 <_RingIO_readerFlush>
   21414:	mov	r3, r0
   21418:	str	r3, [fp, #-28]	; 0xffffffe4
   2141c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21420:	ldr	r3, [pc, #480]	; 21608 <RingIO_flush+0x428>
   21424:	cmp	r2, r3
   21428:	ble	21448 <RingIO_flush+0x268>
   2142c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21430:	cmp	r3, #34048	; 0x8500
   21434:	bgt	21448 <RingIO_flush+0x268>
   21438:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2143c:	bl	1d05c <_RingIO_checkNotifier>
   21440:	mov	r3, r0
   21444:	str	r3, [fp, #-24]	; 0xffffffe8
   21448:	ldr	r3, [fp, #-16]
   2144c:	ldr	r2, [r3, #24]
   21450:	ldr	r3, [fp, #-8]
   21454:	lsl	r3, r3, #7
   21458:	add	r3, r2, r3
   2145c:	ldrh	r3, [r3, #42]	; 0x2a
   21460:	and	r2, r3, #255	; 0xff
   21464:	ldr	r3, [fp, #-12]
   21468:	ldr	r3, [r3]
   2146c:	lsl	r3, r3, #8
   21470:	lsl	r3, r3, #16
   21474:	lsr	r3, r3, #16
   21478:	orr	r3, r2, r3
   2147c:	and	r3, r3, #255	; 0xff
   21480:	cmp	r3, #32
   21484:	beq	214e0 <RingIO_flush+0x300>
   21488:	ldr	r3, [fp, #-16]
   2148c:	ldr	r2, [r3, #24]
   21490:	ldr	r3, [fp, #-8]
   21494:	lsl	r3, r3, #7
   21498:	add	r3, r2, r3
   2149c:	ldrh	r3, [r3, #42]	; 0x2a
   214a0:	mov	r2, r3
   214a4:	and	r2, r2, #255	; 0xff
   214a8:	ldr	r3, [fp, #-12]
   214ac:	ldr	r3, [r3]
   214b0:	lsl	r3, r3, #16
   214b4:	lsr	r3, r3, #16
   214b8:	lsl	r3, r3, #8
   214bc:	lsl	r3, r3, #16
   214c0:	lsr	r3, r3, #16
   214c4:	orr	r3, r2, r3
   214c8:	lsl	r3, r3, #16
   214cc:	lsr	r3, r3, #16
   214d0:	mov	r0, r3
   214d4:	ldr	r1, [fp, #-12]
   214d8:	mov	r2, #384	; 0x180
   214dc:	bl	170a4 <POOL_writeback>
   214e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   214e4:	bl	1def8 <_RingIO_releaseLock>
   214e8:	mov	r3, r0
   214ec:	str	r3, [fp, #-20]	; 0xffffffec
   214f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   214f4:	ldr	r3, [pc, #268]	; 21608 <RingIO_flush+0x428>
   214f8:	cmp	r2, r3
   214fc:	ble	2150c <RingIO_flush+0x32c>
   21500:	ldr	r3, [fp, #-20]	; 0xffffffec
   21504:	cmp	r3, #34048	; 0x8500
   21508:	ble	21530 <RingIO_flush+0x350>
   2150c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21510:	ldr	r3, [pc, #240]	; 21608 <RingIO_flush+0x428>
   21514:	cmp	r2, r3
   21518:	ble	21530 <RingIO_flush+0x350>
   2151c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21520:	cmp	r3, #34048	; 0x8500
   21524:	bgt	21530 <RingIO_flush+0x350>
   21528:	ldr	r3, [fp, #-20]	; 0xffffffec
   2152c:	str	r3, [fp, #-28]	; 0xffffffe4
   21530:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21534:	ldr	r3, [pc, #204]	; 21608 <RingIO_flush+0x428>
   21538:	cmp	r2, r3
   2153c:	ble	215c4 <RingIO_flush+0x3e4>
   21540:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21544:	cmp	r3, #34048	; 0x8500
   21548:	bgt	215c4 <RingIO_flush+0x3e4>
   2154c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21550:	ldr	r3, [pc, #180]	; 2160c <RingIO_flush+0x42c>
   21554:	cmp	r2, r3
   21558:	beq	215c4 <RingIO_flush+0x3e4>
   2155c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21560:	ldr	r3, [r3, #4]
   21564:	cmp	r3, #0
   21568:	bne	21578 <RingIO_flush+0x398>
   2156c:	mov	r3, #1
   21570:	str	r3, [fp, #-60]	; 0xffffffc4
   21574:	b	21580 <RingIO_flush+0x3a0>
   21578:	mov	r3, #0
   2157c:	str	r3, [fp, #-60]	; 0xffffffc4
   21580:	ldr	r3, [fp, #-60]	; 0xffffffc4
   21584:	cmp	r3, #0
   21588:	beq	215c4 <RingIO_flush+0x3e4>
   2158c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21590:	mov	r1, #0
   21594:	bl	1cdb0 <_RingIO_callNotifier>
   21598:	mov	r3, r0
   2159c:	str	r3, [fp, #-24]	; 0xffffffe8
   215a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   215a4:	ldr	r3, [pc, #92]	; 21608 <RingIO_flush+0x428>
   215a8:	cmp	r2, r3
   215ac:	ble	215bc <RingIO_flush+0x3dc>
   215b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   215b4:	cmp	r3, #34048	; 0x8500
   215b8:	ble	215c4 <RingIO_flush+0x3e4>
   215bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   215c0:	str	r3, [fp, #-28]	; 0xffffffe4
   215c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   215c8:	cmp	r3, #32768	; 0x8000
   215cc:	beq	215dc <RingIO_flush+0x3fc>
   215d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   215d4:	str	r3, [fp, #-56]	; 0xffffffc8
   215d8:	b	215e4 <RingIO_flush+0x404>
   215dc:	mov	r3, #33024	; 0x8100
   215e0:	str	r3, [fp, #-56]	; 0xffffffc8
   215e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   215e8:	str	r3, [fp, #-28]	; 0xffffffe4
   215ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   215f0:	mov	r0, r3
   215f4:	sub	sp, fp, #4
   215f8:	pop	{fp, pc}
   215fc:	.word	0x8000800b
   21600:	.word	0x0002d7ac
   21604:	.word	0x80008000
   21608:	.word	0x00007fff
   2160c:	.word	0x80008055

00021610 <RingIO_setNotifier>:
   21610:	push	{fp, lr}
   21614:	add	fp, sp, #4
   21618:	sub	sp, sp, #64	; 0x40
   2161c:	str	r0, [fp, #-40]	; 0xffffffd8
   21620:	str	r1, [fp, #-44]	; 0xffffffd4
   21624:	str	r2, [fp, #-48]	; 0xffffffd0
   21628:	str	r3, [fp, #-52]	; 0xffffffcc
   2162c:	mov	r3, #33024	; 0x8100
   21630:	str	r3, [fp, #-36]	; 0xffffffdc
   21634:	mov	r3, #33024	; 0x8100
   21638:	str	r3, [fp, #-32]	; 0xffffffe0
   2163c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21640:	str	r3, [fp, #-28]	; 0xffffffe4
   21644:	mov	r3, #0
   21648:	str	r3, [fp, #-24]	; 0xffffffe8
   2164c:	mov	r3, #0
   21650:	str	r3, [fp, #-20]	; 0xffffffec
   21654:	mov	r3, #0
   21658:	strh	r3, [fp, #-14]
   2165c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21660:	cmp	r3, #0
   21664:	beq	216b0 <RingIO_setNotifier+0xa0>
   21668:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2166c:	cmp	r3, #0
   21670:	beq	216b0 <RingIO_setNotifier+0xa0>
   21674:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21678:	cmp	r3, #0
   2167c:	beq	216bc <RingIO_setNotifier+0xac>
   21680:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21684:	cmp	r3, #1
   21688:	beq	216bc <RingIO_setNotifier+0xac>
   2168c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21690:	cmp	r3, #2
   21694:	beq	216bc <RingIO_setNotifier+0xac>
   21698:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2169c:	cmp	r3, #3
   216a0:	beq	216bc <RingIO_setNotifier+0xac>
   216a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   216a8:	cmp	r3, #4
   216ac:	beq	216bc <RingIO_setNotifier+0xac>
   216b0:	ldr	r3, [pc, #1316]	; 21bdc <RingIO_setNotifier+0x5cc>
   216b4:	str	r3, [fp, #-36]	; 0xffffffdc
   216b8:	b	216f8 <RingIO_setNotifier+0xe8>
   216bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   216c0:	ldr	r3, [r3, #52]	; 0x34
   216c4:	str	r3, [fp, #-20]	; 0xffffffec
   216c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   216cc:	ldr	r3, [r3]
   216d0:	lsl	r2, r3, #5
   216d4:	ldr	r3, [pc, #1284]	; 21be0 <RingIO_setNotifier+0x5d0>
   216d8:	add	r3, r2, r3
   216dc:	str	r3, [fp, #-24]	; 0xffffffe8
   216e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   216e4:	ldr	r3, [r3, #20]
   216e8:	cmp	r3, #0
   216ec:	bne	216f8 <RingIO_setNotifier+0xe8>
   216f0:	ldr	r3, [pc, #1260]	; 21be4 <RingIO_setNotifier+0x5d4>
   216f4:	str	r3, [fp, #-36]	; 0xffffffdc
   216f8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   216fc:	ldr	r3, [pc, #1252]	; 21be8 <RingIO_setNotifier+0x5d8>
   21700:	cmp	r2, r3
   21704:	ble	21ba4 <RingIO_setNotifier+0x594>
   21708:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2170c:	cmp	r3, #34048	; 0x8500
   21710:	bgt	21ba4 <RingIO_setNotifier+0x594>
   21714:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21718:	bl	1deb8 <_RingIO_acquireLock>
   2171c:	mov	r3, r0
   21720:	str	r3, [fp, #-36]	; 0xffffffdc
   21724:	ldr	r2, [fp, #-36]	; 0xffffffdc
   21728:	ldr	r3, [pc, #1208]	; 21be8 <RingIO_setNotifier+0x5d8>
   2172c:	cmp	r2, r3
   21730:	ble	21ba4 <RingIO_setNotifier+0x594>
   21734:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21738:	cmp	r3, #34048	; 0x8500
   2173c:	bgt	21ba4 <RingIO_setNotifier+0x594>
   21740:	ldr	r3, [fp, #-20]	; 0xffffffec
   21744:	ldr	r2, [r3, #28]
   21748:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2174c:	cmp	r2, r3
   21750:	bcs	21770 <RingIO_setNotifier+0x160>
   21754:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21758:	bl	1def8 <_RingIO_releaseLock>
   2175c:	mov	r3, r0
   21760:	str	r3, [fp, #-32]	; 0xffffffe0
   21764:	ldr	r3, [pc, #1136]	; 21bdc <RingIO_setNotifier+0x5cc>
   21768:	str	r3, [fp, #-36]	; 0xffffffdc
   2176c:	b	21ba4 <RingIO_setNotifier+0x594>
   21770:	ldr	r3, [fp, #-20]	; 0xffffffec
   21774:	ldr	r3, [r3, #4]
   21778:	str	r3, [fp, #-8]
   2177c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21780:	ldr	r2, [r3, #24]
   21784:	ldr	r3, [fp, #-8]
   21788:	lsl	r3, r3, #7
   2178c:	add	r3, r2, r3
   21790:	ldrh	r3, [r3, #42]	; 0x2a
   21794:	and	r2, r3, #255	; 0xff
   21798:	ldr	r3, [fp, #-20]	; 0xffffffec
   2179c:	ldr	r3, [r3]
   217a0:	lsl	r3, r3, #8
   217a4:	lsl	r3, r3, #16
   217a8:	lsr	r3, r3, #16
   217ac:	orr	r3, r2, r3
   217b0:	and	r3, r3, #255	; 0xff
   217b4:	cmp	r3, #32
   217b8:	beq	21814 <RingIO_setNotifier+0x204>
   217bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   217c0:	ldr	r2, [r3, #24]
   217c4:	ldr	r3, [fp, #-8]
   217c8:	lsl	r3, r3, #7
   217cc:	add	r3, r2, r3
   217d0:	ldrh	r3, [r3, #42]	; 0x2a
   217d4:	mov	r2, r3
   217d8:	and	r2, r2, #255	; 0xff
   217dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   217e0:	ldr	r3, [r3]
   217e4:	lsl	r3, r3, #16
   217e8:	lsr	r3, r3, #16
   217ec:	lsl	r3, r3, #8
   217f0:	lsl	r3, r3, #16
   217f4:	lsr	r3, r3, #16
   217f8:	orr	r3, r2, r3
   217fc:	lsl	r3, r3, #16
   21800:	lsr	r3, r3, #16
   21804:	mov	r0, r3
   21808:	ldr	r1, [fp, #-20]	; 0xffffffec
   2180c:	mov	r2, #384	; 0x180
   21810:	bl	17224 <POOL_invalidate>
   21814:	ldr	r3, [fp, #-20]	; 0xffffffec
   21818:	ldr	r3, [r3, #8]
   2181c:	cmp	r3, #2
   21820:	bne	21b24 <RingIO_setNotifier+0x514>
   21824:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21828:	ldr	r3, [r3, #4]
   2182c:	cmp	r3, #0
   21830:	bne	21844 <RingIO_setNotifier+0x234>
   21834:	ldr	r3, [fp, #-20]	; 0xffffffec
   21838:	add	r3, r3, #128	; 0x80
   2183c:	str	r3, [fp, #-12]
   21840:	b	21850 <RingIO_setNotifier+0x240>
   21844:	ldr	r3, [fp, #-20]	; 0xffffffec
   21848:	add	r3, r3, #256	; 0x100
   2184c:	str	r3, [fp, #-12]
   21850:	ldr	r3, [fp, #-12]
   21854:	ldr	r3, [r3, #60]	; 0x3c
   21858:	cmp	r3, #0
   2185c:	beq	21990 <RingIO_setNotifier+0x380>
   21860:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21864:	ldr	r3, [r3, #36]	; 0x24
   21868:	cmp	r3, #0
   2186c:	beq	21878 <RingIO_setNotifier+0x268>
   21870:	mov	r3, #1
   21874:	strh	r3, [fp, #-14]
   21878:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2187c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21880:	str	r3, [r2, #32]
   21884:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21888:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2188c:	str	r3, [r2, #44]	; 0x2c
   21890:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21894:	mov	r3, #0
   21898:	str	r3, [r2, #36]	; 0x24
   2189c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   218a0:	ldr	r3, [fp, #4]
   218a4:	str	r3, [r2, #40]	; 0x28
   218a8:	ldrsh	r3, [fp, #-14]
   218ac:	cmp	r3, #1
   218b0:	bne	218f4 <RingIO_setNotifier+0x2e4>
   218b4:	ldr	r3, [fp, #-12]
   218b8:	ldr	r1, [r3]
   218bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   218c0:	ldr	r3, [r3, #20]
   218c4:	ldr	ip, [r3, #12]
   218c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   218cc:	ldr	r3, [r3, #20]
   218d0:	ldr	r2, [r3, #16]
   218d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   218d8:	str	r3, [sp]
   218dc:	mov	r0, r1
   218e0:	mov	r1, ip
   218e4:	ldr	r3, [pc, #768]	; 21bec <RingIO_setNotifier+0x5dc>
   218e8:	bl	16d70 <NOTIFY_unregister>
   218ec:	mov	r3, r0
   218f0:	str	r3, [fp, #-36]	; 0xffffffdc
   218f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   218f8:	ldr	r2, [r3, #24]
   218fc:	ldr	r3, [fp, #-8]
   21900:	lsl	r3, r3, #7
   21904:	add	r3, r2, r3
   21908:	ldrh	r3, [r3, #42]	; 0x2a
   2190c:	and	r2, r3, #255	; 0xff
   21910:	ldr	r3, [fp, #-20]	; 0xffffffec
   21914:	ldr	r3, [r3]
   21918:	lsl	r3, r3, #8
   2191c:	lsl	r3, r3, #16
   21920:	lsr	r3, r3, #16
   21924:	orr	r3, r2, r3
   21928:	and	r3, r3, #255	; 0xff
   2192c:	cmp	r3, #32
   21930:	beq	21998 <RingIO_setNotifier+0x388>
   21934:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21938:	ldr	r2, [r3, #24]
   2193c:	ldr	r3, [fp, #-8]
   21940:	lsl	r3, r3, #7
   21944:	add	r3, r2, r3
   21948:	ldrh	r3, [r3, #42]	; 0x2a
   2194c:	mov	r2, r3
   21950:	and	r2, r2, #255	; 0xff
   21954:	ldr	r3, [fp, #-20]	; 0xffffffec
   21958:	ldr	r3, [r3]
   2195c:	lsl	r3, r3, #16
   21960:	lsr	r3, r3, #16
   21964:	lsl	r3, r3, #8
   21968:	lsl	r3, r3, #16
   2196c:	lsr	r3, r3, #16
   21970:	orr	r3, r2, r3
   21974:	lsl	r3, r3, #16
   21978:	lsr	r3, r3, #16
   2197c:	mov	r0, r3
   21980:	ldr	r1, [fp, #-20]	; 0xffffffec
   21984:	mov	r2, #384	; 0x180
   21988:	bl	170a4 <POOL_writeback>
   2198c:	b	21998 <RingIO_setNotifier+0x388>
   21990:	ldr	r3, [pc, #600]	; 21bf0 <RingIO_setNotifier+0x5e0>
   21994:	str	r3, [fp, #-36]	; 0xffffffdc
   21998:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2199c:	bl	1def8 <_RingIO_releaseLock>
   219a0:	mov	r3, r0
   219a4:	str	r3, [fp, #-32]	; 0xffffffe0
   219a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   219ac:	ldr	r3, [pc, #564]	; 21be8 <RingIO_setNotifier+0x5d8>
   219b0:	cmp	r2, r3
   219b4:	ble	219c4 <RingIO_setNotifier+0x3b4>
   219b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   219bc:	cmp	r3, #34048	; 0x8500
   219c0:	ble	219e8 <RingIO_setNotifier+0x3d8>
   219c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   219c8:	ldr	r3, [pc, #536]	; 21be8 <RingIO_setNotifier+0x5d8>
   219cc:	cmp	r2, r3
   219d0:	ble	219e8 <RingIO_setNotifier+0x3d8>
   219d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   219d8:	cmp	r3, #34048	; 0x8500
   219dc:	bgt	219e8 <RingIO_setNotifier+0x3d8>
   219e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   219e4:	str	r3, [fp, #-36]	; 0xffffffdc
   219e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   219ec:	ldr	r3, [pc, #500]	; 21be8 <RingIO_setNotifier+0x5d8>
   219f0:	cmp	r2, r3
   219f4:	ble	21ba4 <RingIO_setNotifier+0x594>
   219f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   219fc:	cmp	r3, #34048	; 0x8500
   21a00:	bgt	21ba4 <RingIO_setNotifier+0x594>
   21a04:	ldr	r3, [fp, #-12]
   21a08:	ldr	r3, [r3, #60]	; 0x3c
   21a0c:	cmp	r3, #0
   21a10:	beq	21b18 <RingIO_setNotifier+0x508>
   21a14:	ldr	r3, [fp, #-12]
   21a18:	ldr	r1, [r3]
   21a1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21a20:	ldr	r3, [r3, #20]
   21a24:	ldr	ip, [r3, #12]
   21a28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21a2c:	ldr	r3, [r3, #20]
   21a30:	ldr	r2, [r3, #16]
   21a34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21a38:	str	r3, [sp]
   21a3c:	mov	r0, r1
   21a40:	mov	r1, ip
   21a44:	ldr	r3, [pc, #416]	; 21bec <RingIO_setNotifier+0x5dc>
   21a48:	bl	16acc <NOTIFY_register>
   21a4c:	mov	r3, r0
   21a50:	str	r3, [fp, #-36]	; 0xffffffdc
   21a54:	ldr	r2, [fp, #-36]	; 0xffffffdc
   21a58:	ldr	r3, [pc, #392]	; 21be8 <RingIO_setNotifier+0x5d8>
   21a5c:	cmp	r2, r3
   21a60:	ble	21ba4 <RingIO_setNotifier+0x594>
   21a64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21a68:	cmp	r3, #34048	; 0x8500
   21a6c:	bgt	21ba4 <RingIO_setNotifier+0x594>
   21a70:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21a74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21a78:	str	r3, [r2, #36]	; 0x24
   21a7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21a80:	ldr	r2, [r3, #24]
   21a84:	ldr	r3, [fp, #-8]
   21a88:	lsl	r3, r3, #7
   21a8c:	add	r3, r2, r3
   21a90:	ldrh	r3, [r3, #42]	; 0x2a
   21a94:	and	r2, r3, #255	; 0xff
   21a98:	ldr	r3, [fp, #-20]	; 0xffffffec
   21a9c:	ldr	r3, [r3]
   21aa0:	lsl	r3, r3, #8
   21aa4:	lsl	r3, r3, #16
   21aa8:	lsr	r3, r3, #16
   21aac:	orr	r3, r2, r3
   21ab0:	and	r3, r3, #255	; 0xff
   21ab4:	cmp	r3, #32
   21ab8:	beq	21ba4 <RingIO_setNotifier+0x594>
   21abc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21ac0:	ldr	r2, [r3, #24]
   21ac4:	ldr	r3, [fp, #-8]
   21ac8:	lsl	r3, r3, #7
   21acc:	add	r3, r2, r3
   21ad0:	ldrh	r3, [r3, #42]	; 0x2a
   21ad4:	mov	r2, r3
   21ad8:	and	r2, r2, #255	; 0xff
   21adc:	ldr	r3, [fp, #-20]	; 0xffffffec
   21ae0:	ldr	r3, [r3]
   21ae4:	lsl	r3, r3, #16
   21ae8:	lsr	r3, r3, #16
   21aec:	lsl	r3, r3, #8
   21af0:	lsl	r3, r3, #16
   21af4:	lsr	r3, r3, #16
   21af8:	orr	r3, r2, r3
   21afc:	lsl	r3, r3, #16
   21b00:	lsr	r3, r3, #16
   21b04:	mov	r0, r3
   21b08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21b0c:	mov	r2, #128	; 0x80
   21b10:	bl	170a4 <POOL_writeback>
   21b14:	b	21ba4 <RingIO_setNotifier+0x594>
   21b18:	ldr	r3, [pc, #208]	; 21bf0 <RingIO_setNotifier+0x5e0>
   21b1c:	str	r3, [fp, #-36]	; 0xffffffdc
   21b20:	b	21ba4 <RingIO_setNotifier+0x594>
   21b24:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21b28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21b2c:	str	r3, [r2, #32]
   21b30:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21b34:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21b38:	str	r3, [r2, #44]	; 0x2c
   21b3c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21b40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21b44:	str	r3, [r2, #36]	; 0x24
   21b48:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21b4c:	ldr	r3, [fp, #4]
   21b50:	str	r3, [r2, #40]	; 0x28
   21b54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21b58:	bl	1def8 <_RingIO_releaseLock>
   21b5c:	mov	r3, r0
   21b60:	str	r3, [fp, #-32]	; 0xffffffe0
   21b64:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21b68:	ldr	r3, [pc, #120]	; 21be8 <RingIO_setNotifier+0x5d8>
   21b6c:	cmp	r2, r3
   21b70:	ble	21b80 <RingIO_setNotifier+0x570>
   21b74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21b78:	cmp	r3, #34048	; 0x8500
   21b7c:	ble	21ba4 <RingIO_setNotifier+0x594>
   21b80:	ldr	r2, [fp, #-36]	; 0xffffffdc
   21b84:	ldr	r3, [pc, #92]	; 21be8 <RingIO_setNotifier+0x5d8>
   21b88:	cmp	r2, r3
   21b8c:	ble	21ba4 <RingIO_setNotifier+0x594>
   21b90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21b94:	cmp	r3, #34048	; 0x8500
   21b98:	bgt	21ba4 <RingIO_setNotifier+0x594>
   21b9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21ba0:	str	r3, [fp, #-36]	; 0xffffffdc
   21ba4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21ba8:	cmp	r3, #32768	; 0x8000
   21bac:	beq	21bbc <RingIO_setNotifier+0x5ac>
   21bb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21bb4:	str	r3, [fp, #-56]	; 0xffffffc8
   21bb8:	b	21bc4 <RingIO_setNotifier+0x5b4>
   21bbc:	mov	r3, #33024	; 0x8100
   21bc0:	str	r3, [fp, #-56]	; 0xffffffc8
   21bc4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   21bc8:	str	r3, [fp, #-36]	; 0xffffffdc
   21bcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21bd0:	mov	r0, r3
   21bd4:	sub	sp, fp, #4
   21bd8:	pop	{fp, pc}
   21bdc:	.word	0x8000800b
   21be0:	.word	0x0002d7ac
   21be4:	.word	0x80008000
   21be8:	.word	0x00007fff
   21bec:	.word	0x0001daf8
   21bf0:	.word	0x80008055

00021bf4 <RingIO_sendNotify>:
   21bf4:	push	{fp, lr}
   21bf8:	add	fp, sp, #4
   21bfc:	sub	sp, sp, #24
   21c00:	str	r0, [fp, #-16]
   21c04:	mov	r3, r1
   21c08:	strh	r3, [fp, #-18]	; 0xffffffee
   21c0c:	mov	r3, #33024	; 0x8100
   21c10:	str	r3, [fp, #-12]
   21c14:	ldr	r3, [fp, #-16]
   21c18:	str	r3, [fp, #-8]
   21c1c:	ldr	r3, [fp, #-16]
   21c20:	cmp	r3, #0
   21c24:	bne	21c34 <RingIO_sendNotify+0x40>
   21c28:	ldr	r3, [pc, #84]	; 21c84 <RingIO_sendNotify+0x90>
   21c2c:	str	r3, [fp, #-12]
   21c30:	b	21c4c <RingIO_sendNotify+0x58>
   21c34:	ldrh	r3, [fp, #-18]	; 0xffffffee
   21c38:	ldr	r0, [fp, #-8]
   21c3c:	mov	r1, r3
   21c40:	bl	1cdb0 <_RingIO_callNotifier>
   21c44:	mov	r3, r0
   21c48:	str	r3, [fp, #-12]
   21c4c:	ldr	r3, [fp, #-12]
   21c50:	cmp	r3, #32768	; 0x8000
   21c54:	beq	21c64 <RingIO_sendNotify+0x70>
   21c58:	ldr	r3, [fp, #-12]
   21c5c:	str	r3, [fp, #-24]	; 0xffffffe8
   21c60:	b	21c6c <RingIO_sendNotify+0x78>
   21c64:	mov	r3, #33024	; 0x8100
   21c68:	str	r3, [fp, #-24]	; 0xffffffe8
   21c6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21c70:	str	r3, [fp, #-12]
   21c74:	ldr	r3, [fp, #-12]
   21c78:	mov	r0, r3
   21c7c:	sub	sp, fp, #4
   21c80:	pop	{fp, pc}
   21c84:	.word	0x8000800b

00021c88 <RingIO_getValidSize>:
   21c88:	push	{fp, lr}
   21c8c:	add	fp, sp, #4
   21c90:	sub	sp, sp, #40	; 0x28
   21c94:	str	r0, [fp, #-40]	; 0xffffffd8
   21c98:	mov	r3, #33024	; 0x8100
   21c9c:	str	r3, [fp, #-32]	; 0xffffffe0
   21ca0:	mov	r3, #33024	; 0x8100
   21ca4:	str	r3, [fp, #-28]	; 0xffffffe4
   21ca8:	mov	r3, #0
   21cac:	str	r3, [fp, #-24]	; 0xffffffe8
   21cb0:	mov	r3, #0
   21cb4:	str	r3, [fp, #-20]	; 0xffffffec
   21cb8:	mov	r3, #0
   21cbc:	str	r3, [fp, #-16]
   21cc0:	mov	r3, #0
   21cc4:	str	r3, [fp, #-12]
   21cc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21ccc:	cmp	r3, #0
   21cd0:	beq	21d18 <RingIO_getValidSize+0x90>
   21cd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21cd8:	str	r3, [fp, #-24]	; 0xffffffe8
   21cdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21ce0:	ldr	r3, [r3, #52]	; 0x34
   21ce4:	str	r3, [fp, #-12]
   21ce8:	ldr	r3, [fp, #-12]
   21cec:	ldr	r3, [r3]
   21cf0:	lsl	r2, r3, #5
   21cf4:	ldr	r3, [pc, #400]	; 21e8c <RingIO_getValidSize+0x204>
   21cf8:	add	r3, r2, r3
   21cfc:	str	r3, [fp, #-20]	; 0xffffffec
   21d00:	ldr	r3, [fp, #-20]	; 0xffffffec
   21d04:	ldr	r3, [r3, #20]
   21d08:	cmp	r3, #0
   21d0c:	bne	21d18 <RingIO_getValidSize+0x90>
   21d10:	ldr	r3, [pc, #376]	; 21e90 <RingIO_getValidSize+0x208>
   21d14:	str	r3, [fp, #-32]	; 0xffffffe0
   21d18:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21d1c:	ldr	r3, [pc, #368]	; 21e94 <RingIO_getValidSize+0x20c>
   21d20:	cmp	r2, r3
   21d24:	ble	21e7c <RingIO_getValidSize+0x1f4>
   21d28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21d2c:	cmp	r3, #34048	; 0x8500
   21d30:	bgt	21e7c <RingIO_getValidSize+0x1f4>
   21d34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21d38:	bl	1deb8 <_RingIO_acquireLock>
   21d3c:	mov	r3, r0
   21d40:	str	r3, [fp, #-32]	; 0xffffffe0
   21d44:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21d48:	ldr	r3, [pc, #324]	; 21e94 <RingIO_getValidSize+0x20c>
   21d4c:	cmp	r2, r3
   21d50:	ble	21e7c <RingIO_getValidSize+0x1f4>
   21d54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21d58:	cmp	r3, #34048	; 0x8500
   21d5c:	bgt	21e7c <RingIO_getValidSize+0x1f4>
   21d60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21d64:	ldr	r3, [r3, #60]	; 0x3c
   21d68:	cmp	r3, #0
   21d6c:	bne	21d7c <RingIO_getValidSize+0xf4>
   21d70:	ldr	r3, [pc, #288]	; 21e98 <RingIO_getValidSize+0x210>
   21d74:	str	r3, [fp, #-32]	; 0xffffffe0
   21d78:	b	21e2c <RingIO_getValidSize+0x1a4>
   21d7c:	ldr	r3, [fp, #-12]
   21d80:	ldr	r3, [r3, #4]
   21d84:	str	r3, [fp, #-8]
   21d88:	ldr	r3, [fp, #-20]	; 0xffffffec
   21d8c:	ldr	r2, [r3, #24]
   21d90:	ldr	r3, [fp, #-8]
   21d94:	lsl	r3, r3, #7
   21d98:	add	r3, r2, r3
   21d9c:	ldrh	r3, [r3, #42]	; 0x2a
   21da0:	and	r2, r3, #255	; 0xff
   21da4:	ldr	r3, [fp, #-12]
   21da8:	ldr	r3, [r3]
   21dac:	lsl	r3, r3, #8
   21db0:	lsl	r3, r3, #16
   21db4:	lsr	r3, r3, #16
   21db8:	orr	r3, r2, r3
   21dbc:	and	r3, r3, #255	; 0xff
   21dc0:	cmp	r3, #32
   21dc4:	beq	21e20 <RingIO_getValidSize+0x198>
   21dc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   21dcc:	ldr	r2, [r3, #24]
   21dd0:	ldr	r3, [fp, #-8]
   21dd4:	lsl	r3, r3, #7
   21dd8:	add	r3, r2, r3
   21ddc:	ldrh	r3, [r3, #42]	; 0x2a
   21de0:	mov	r2, r3
   21de4:	and	r2, r2, #255	; 0xff
   21de8:	ldr	r3, [fp, #-12]
   21dec:	ldr	r3, [r3]
   21df0:	lsl	r3, r3, #16
   21df4:	lsr	r3, r3, #16
   21df8:	lsl	r3, r3, #8
   21dfc:	lsl	r3, r3, #16
   21e00:	lsr	r3, r3, #16
   21e04:	orr	r3, r2, r3
   21e08:	lsl	r3, r3, #16
   21e0c:	lsr	r3, r3, #16
   21e10:	mov	r0, r3
   21e14:	ldr	r1, [fp, #-12]
   21e18:	mov	r2, #384	; 0x180
   21e1c:	bl	17224 <POOL_invalidate>
   21e20:	ldr	r3, [fp, #-12]
   21e24:	ldr	r3, [r3, #36]	; 0x24
   21e28:	str	r3, [fp, #-16]
   21e2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21e30:	bl	1def8 <_RingIO_releaseLock>
   21e34:	mov	r3, r0
   21e38:	str	r3, [fp, #-28]	; 0xffffffe4
   21e3c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21e40:	ldr	r3, [pc, #76]	; 21e94 <RingIO_getValidSize+0x20c>
   21e44:	cmp	r2, r3
   21e48:	ble	21e58 <RingIO_getValidSize+0x1d0>
   21e4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21e50:	cmp	r3, #34048	; 0x8500
   21e54:	ble	21e7c <RingIO_getValidSize+0x1f4>
   21e58:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21e5c:	ldr	r3, [pc, #48]	; 21e94 <RingIO_getValidSize+0x20c>
   21e60:	cmp	r2, r3
   21e64:	ble	21e7c <RingIO_getValidSize+0x1f4>
   21e68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21e6c:	cmp	r3, #34048	; 0x8500
   21e70:	bgt	21e7c <RingIO_getValidSize+0x1f4>
   21e74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21e78:	str	r3, [fp, #-32]	; 0xffffffe0
   21e7c:	ldr	r3, [fp, #-16]
   21e80:	mov	r0, r3
   21e84:	sub	sp, fp, #4
   21e88:	pop	{fp, pc}
   21e8c:	.word	0x0002d7ac
   21e90:	.word	0x80008000
   21e94:	.word	0x00007fff
   21e98:	.word	0x80008055

00021e9c <RingIO_getEmptySize>:
   21e9c:	push	{fp, lr}
   21ea0:	add	fp, sp, #4
   21ea4:	sub	sp, sp, #40	; 0x28
   21ea8:	str	r0, [fp, #-40]	; 0xffffffd8
   21eac:	mov	r3, #33024	; 0x8100
   21eb0:	str	r3, [fp, #-32]	; 0xffffffe0
   21eb4:	mov	r3, #33024	; 0x8100
   21eb8:	str	r3, [fp, #-28]	; 0xffffffe4
   21ebc:	mov	r3, #0
   21ec0:	str	r3, [fp, #-24]	; 0xffffffe8
   21ec4:	mov	r3, #0
   21ec8:	str	r3, [fp, #-20]	; 0xffffffec
   21ecc:	mov	r3, #0
   21ed0:	str	r3, [fp, #-16]
   21ed4:	mov	r3, #0
   21ed8:	str	r3, [fp, #-12]
   21edc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21ee0:	cmp	r3, #0
   21ee4:	beq	21f2c <RingIO_getEmptySize+0x90>
   21ee8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21eec:	str	r3, [fp, #-24]	; 0xffffffe8
   21ef0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21ef4:	ldr	r3, [r3, #52]	; 0x34
   21ef8:	str	r3, [fp, #-12]
   21efc:	ldr	r3, [fp, #-12]
   21f00:	ldr	r3, [r3]
   21f04:	lsl	r2, r3, #5
   21f08:	ldr	r3, [pc, #400]	; 220a0 <RingIO_getEmptySize+0x204>
   21f0c:	add	r3, r2, r3
   21f10:	str	r3, [fp, #-20]	; 0xffffffec
   21f14:	ldr	r3, [fp, #-20]	; 0xffffffec
   21f18:	ldr	r3, [r3, #20]
   21f1c:	cmp	r3, #0
   21f20:	bne	21f2c <RingIO_getEmptySize+0x90>
   21f24:	ldr	r3, [pc, #376]	; 220a4 <RingIO_getEmptySize+0x208>
   21f28:	str	r3, [fp, #-32]	; 0xffffffe0
   21f2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21f30:	ldr	r3, [pc, #368]	; 220a8 <RingIO_getEmptySize+0x20c>
   21f34:	cmp	r2, r3
   21f38:	ble	22090 <RingIO_getEmptySize+0x1f4>
   21f3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21f40:	cmp	r3, #34048	; 0x8500
   21f44:	bgt	22090 <RingIO_getEmptySize+0x1f4>
   21f48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21f4c:	bl	1deb8 <_RingIO_acquireLock>
   21f50:	mov	r3, r0
   21f54:	str	r3, [fp, #-32]	; 0xffffffe0
   21f58:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21f5c:	ldr	r3, [pc, #324]	; 220a8 <RingIO_getEmptySize+0x20c>
   21f60:	cmp	r2, r3
   21f64:	ble	22090 <RingIO_getEmptySize+0x1f4>
   21f68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21f6c:	cmp	r3, #34048	; 0x8500
   21f70:	bgt	22090 <RingIO_getEmptySize+0x1f4>
   21f74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21f78:	ldr	r3, [r3, #60]	; 0x3c
   21f7c:	cmp	r3, #0
   21f80:	bne	21f90 <RingIO_getEmptySize+0xf4>
   21f84:	ldr	r3, [pc, #288]	; 220ac <RingIO_getEmptySize+0x210>
   21f88:	str	r3, [fp, #-32]	; 0xffffffe0
   21f8c:	b	22040 <RingIO_getEmptySize+0x1a4>
   21f90:	ldr	r3, [fp, #-12]
   21f94:	ldr	r3, [r3, #4]
   21f98:	str	r3, [fp, #-8]
   21f9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21fa0:	ldr	r2, [r3, #24]
   21fa4:	ldr	r3, [fp, #-8]
   21fa8:	lsl	r3, r3, #7
   21fac:	add	r3, r2, r3
   21fb0:	ldrh	r3, [r3, #42]	; 0x2a
   21fb4:	and	r2, r3, #255	; 0xff
   21fb8:	ldr	r3, [fp, #-12]
   21fbc:	ldr	r3, [r3]
   21fc0:	lsl	r3, r3, #8
   21fc4:	lsl	r3, r3, #16
   21fc8:	lsr	r3, r3, #16
   21fcc:	orr	r3, r2, r3
   21fd0:	and	r3, r3, #255	; 0xff
   21fd4:	cmp	r3, #32
   21fd8:	beq	22034 <RingIO_getEmptySize+0x198>
   21fdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   21fe0:	ldr	r2, [r3, #24]
   21fe4:	ldr	r3, [fp, #-8]
   21fe8:	lsl	r3, r3, #7
   21fec:	add	r3, r2, r3
   21ff0:	ldrh	r3, [r3, #42]	; 0x2a
   21ff4:	mov	r2, r3
   21ff8:	and	r2, r2, #255	; 0xff
   21ffc:	ldr	r3, [fp, #-12]
   22000:	ldr	r3, [r3]
   22004:	lsl	r3, r3, #16
   22008:	lsr	r3, r3, #16
   2200c:	lsl	r3, r3, #8
   22010:	lsl	r3, r3, #16
   22014:	lsr	r3, r3, #16
   22018:	orr	r3, r2, r3
   2201c:	lsl	r3, r3, #16
   22020:	lsr	r3, r3, #16
   22024:	mov	r0, r3
   22028:	ldr	r1, [fp, #-12]
   2202c:	mov	r2, #384	; 0x180
   22030:	bl	17224 <POOL_invalidate>
   22034:	ldr	r3, [fp, #-12]
   22038:	ldr	r3, [r3, #40]	; 0x28
   2203c:	str	r3, [fp, #-16]
   22040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22044:	bl	1def8 <_RingIO_releaseLock>
   22048:	mov	r3, r0
   2204c:	str	r3, [fp, #-28]	; 0xffffffe4
   22050:	ldr	r2, [fp, #-28]	; 0xffffffe4
   22054:	ldr	r3, [pc, #76]	; 220a8 <RingIO_getEmptySize+0x20c>
   22058:	cmp	r2, r3
   2205c:	ble	2206c <RingIO_getEmptySize+0x1d0>
   22060:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22064:	cmp	r3, #34048	; 0x8500
   22068:	ble	22090 <RingIO_getEmptySize+0x1f4>
   2206c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22070:	ldr	r3, [pc, #48]	; 220a8 <RingIO_getEmptySize+0x20c>
   22074:	cmp	r2, r3
   22078:	ble	22090 <RingIO_getEmptySize+0x1f4>
   2207c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22080:	cmp	r3, #34048	; 0x8500
   22084:	bgt	22090 <RingIO_getEmptySize+0x1f4>
   22088:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2208c:	str	r3, [fp, #-32]	; 0xffffffe0
   22090:	ldr	r3, [fp, #-16]
   22094:	mov	r0, r3
   22098:	sub	sp, fp, #4
   2209c:	pop	{fp, pc}
   220a0:	.word	0x0002d7ac
   220a4:	.word	0x80008000
   220a8:	.word	0x00007fff
   220ac:	.word	0x80008055

000220b0 <RingIO_getValidAttrSize>:
   220b0:	push	{fp, lr}
   220b4:	add	fp, sp, #4
   220b8:	sub	sp, sp, #40	; 0x28
   220bc:	str	r0, [fp, #-40]	; 0xffffffd8
   220c0:	mov	r3, #33024	; 0x8100
   220c4:	str	r3, [fp, #-32]	; 0xffffffe0
   220c8:	mov	r3, #33024	; 0x8100
   220cc:	str	r3, [fp, #-28]	; 0xffffffe4
   220d0:	mov	r3, #0
   220d4:	str	r3, [fp, #-24]	; 0xffffffe8
   220d8:	mov	r3, #0
   220dc:	str	r3, [fp, #-20]	; 0xffffffec
   220e0:	mov	r3, #0
   220e4:	str	r3, [fp, #-16]
   220e8:	mov	r3, #0
   220ec:	str	r3, [fp, #-12]
   220f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   220f4:	cmp	r3, #0
   220f8:	beq	22140 <RingIO_getValidAttrSize+0x90>
   220fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22100:	str	r3, [fp, #-24]	; 0xffffffe8
   22104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22108:	ldr	r3, [r3, #52]	; 0x34
   2210c:	str	r3, [fp, #-12]
   22110:	ldr	r3, [fp, #-12]
   22114:	ldr	r3, [r3]
   22118:	lsl	r2, r3, #5
   2211c:	ldr	r3, [pc, #400]	; 222b4 <RingIO_getValidAttrSize+0x204>
   22120:	add	r3, r2, r3
   22124:	str	r3, [fp, #-16]
   22128:	ldr	r3, [fp, #-16]
   2212c:	ldr	r3, [r3, #20]
   22130:	cmp	r3, #0
   22134:	bne	22140 <RingIO_getValidAttrSize+0x90>
   22138:	ldr	r3, [pc, #376]	; 222b8 <RingIO_getValidAttrSize+0x208>
   2213c:	str	r3, [fp, #-32]	; 0xffffffe0
   22140:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22144:	ldr	r3, [pc, #368]	; 222bc <RingIO_getValidAttrSize+0x20c>
   22148:	cmp	r2, r3
   2214c:	ble	222a4 <RingIO_getValidAttrSize+0x1f4>
   22150:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22154:	cmp	r3, #34048	; 0x8500
   22158:	bgt	222a4 <RingIO_getValidAttrSize+0x1f4>
   2215c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22160:	bl	1deb8 <_RingIO_acquireLock>
   22164:	mov	r3, r0
   22168:	str	r3, [fp, #-32]	; 0xffffffe0
   2216c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22170:	ldr	r3, [pc, #324]	; 222bc <RingIO_getValidAttrSize+0x20c>
   22174:	cmp	r2, r3
   22178:	ble	222a4 <RingIO_getValidAttrSize+0x1f4>
   2217c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22180:	cmp	r3, #34048	; 0x8500
   22184:	bgt	222a4 <RingIO_getValidAttrSize+0x1f4>
   22188:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2218c:	ldr	r3, [r3, #60]	; 0x3c
   22190:	cmp	r3, #0
   22194:	bne	221a4 <RingIO_getValidAttrSize+0xf4>
   22198:	ldr	r3, [pc, #288]	; 222c0 <RingIO_getValidAttrSize+0x210>
   2219c:	str	r3, [fp, #-32]	; 0xffffffe0
   221a0:	b	22254 <RingIO_getValidAttrSize+0x1a4>
   221a4:	ldr	r3, [fp, #-12]
   221a8:	ldr	r3, [r3, #4]
   221ac:	str	r3, [fp, #-8]
   221b0:	ldr	r3, [fp, #-16]
   221b4:	ldr	r2, [r3, #24]
   221b8:	ldr	r3, [fp, #-8]
   221bc:	lsl	r3, r3, #7
   221c0:	add	r3, r2, r3
   221c4:	ldrh	r3, [r3, #42]	; 0x2a
   221c8:	and	r2, r3, #255	; 0xff
   221cc:	ldr	r3, [fp, #-12]
   221d0:	ldr	r3, [r3]
   221d4:	lsl	r3, r3, #8
   221d8:	lsl	r3, r3, #16
   221dc:	lsr	r3, r3, #16
   221e0:	orr	r3, r2, r3
   221e4:	and	r3, r3, #255	; 0xff
   221e8:	cmp	r3, #32
   221ec:	beq	22248 <RingIO_getValidAttrSize+0x198>
   221f0:	ldr	r3, [fp, #-16]
   221f4:	ldr	r2, [r3, #24]
   221f8:	ldr	r3, [fp, #-8]
   221fc:	lsl	r3, r3, #7
   22200:	add	r3, r2, r3
   22204:	ldrh	r3, [r3, #42]	; 0x2a
   22208:	mov	r2, r3
   2220c:	and	r2, r2, #255	; 0xff
   22210:	ldr	r3, [fp, #-12]
   22214:	ldr	r3, [r3]
   22218:	lsl	r3, r3, #16
   2221c:	lsr	r3, r3, #16
   22220:	lsl	r3, r3, #8
   22224:	lsl	r3, r3, #16
   22228:	lsr	r3, r3, #16
   2222c:	orr	r3, r2, r3
   22230:	lsl	r3, r3, #16
   22234:	lsr	r3, r3, #16
   22238:	mov	r0, r3
   2223c:	ldr	r1, [fp, #-12]
   22240:	mov	r2, #384	; 0x180
   22244:	bl	17224 <POOL_invalidate>
   22248:	ldr	r3, [fp, #-12]
   2224c:	ldr	r3, [r3, #56]	; 0x38
   22250:	str	r3, [fp, #-20]	; 0xffffffec
   22254:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22258:	bl	1def8 <_RingIO_releaseLock>
   2225c:	mov	r3, r0
   22260:	str	r3, [fp, #-28]	; 0xffffffe4
   22264:	ldr	r2, [fp, #-28]	; 0xffffffe4
   22268:	ldr	r3, [pc, #76]	; 222bc <RingIO_getValidAttrSize+0x20c>
   2226c:	cmp	r2, r3
   22270:	ble	22280 <RingIO_getValidAttrSize+0x1d0>
   22274:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22278:	cmp	r3, #34048	; 0x8500
   2227c:	ble	222a4 <RingIO_getValidAttrSize+0x1f4>
   22280:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22284:	ldr	r3, [pc, #48]	; 222bc <RingIO_getValidAttrSize+0x20c>
   22288:	cmp	r2, r3
   2228c:	ble	222a4 <RingIO_getValidAttrSize+0x1f4>
   22290:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22294:	cmp	r3, #34048	; 0x8500
   22298:	bgt	222a4 <RingIO_getValidAttrSize+0x1f4>
   2229c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   222a0:	str	r3, [fp, #-32]	; 0xffffffe0
   222a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   222a8:	mov	r0, r3
   222ac:	sub	sp, fp, #4
   222b0:	pop	{fp, pc}
   222b4:	.word	0x0002d7ac
   222b8:	.word	0x80008000
   222bc:	.word	0x00007fff
   222c0:	.word	0x80008055

000222c4 <RingIO_getEmptyAttrSize>:
   222c4:	push	{fp, lr}
   222c8:	add	fp, sp, #4
   222cc:	sub	sp, sp, #40	; 0x28
   222d0:	str	r0, [fp, #-40]	; 0xffffffd8
   222d4:	mov	r3, #33024	; 0x8100
   222d8:	str	r3, [fp, #-32]	; 0xffffffe0
   222dc:	mov	r3, #33024	; 0x8100
   222e0:	str	r3, [fp, #-28]	; 0xffffffe4
   222e4:	mov	r3, #0
   222e8:	str	r3, [fp, #-24]	; 0xffffffe8
   222ec:	mov	r3, #0
   222f0:	str	r3, [fp, #-20]	; 0xffffffec
   222f4:	mov	r3, #0
   222f8:	str	r3, [fp, #-16]
   222fc:	mov	r3, #0
   22300:	str	r3, [fp, #-12]
   22304:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22308:	cmp	r3, #0
   2230c:	beq	22354 <RingIO_getEmptyAttrSize+0x90>
   22310:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22314:	str	r3, [fp, #-24]	; 0xffffffe8
   22318:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2231c:	ldr	r3, [r3, #52]	; 0x34
   22320:	str	r3, [fp, #-12]
   22324:	ldr	r3, [fp, #-12]
   22328:	ldr	r3, [r3]
   2232c:	lsl	r2, r3, #5
   22330:	ldr	r3, [pc, #400]	; 224c8 <RingIO_getEmptyAttrSize+0x204>
   22334:	add	r3, r2, r3
   22338:	str	r3, [fp, #-16]
   2233c:	ldr	r3, [fp, #-16]
   22340:	ldr	r3, [r3, #20]
   22344:	cmp	r3, #0
   22348:	bne	22354 <RingIO_getEmptyAttrSize+0x90>
   2234c:	ldr	r3, [pc, #376]	; 224cc <RingIO_getEmptyAttrSize+0x208>
   22350:	str	r3, [fp, #-32]	; 0xffffffe0
   22354:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22358:	ldr	r3, [pc, #368]	; 224d0 <RingIO_getEmptyAttrSize+0x20c>
   2235c:	cmp	r2, r3
   22360:	ble	224b8 <RingIO_getEmptyAttrSize+0x1f4>
   22364:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22368:	cmp	r3, #34048	; 0x8500
   2236c:	bgt	224b8 <RingIO_getEmptyAttrSize+0x1f4>
   22370:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22374:	bl	1deb8 <_RingIO_acquireLock>
   22378:	mov	r3, r0
   2237c:	str	r3, [fp, #-32]	; 0xffffffe0
   22380:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22384:	ldr	r3, [pc, #324]	; 224d0 <RingIO_getEmptyAttrSize+0x20c>
   22388:	cmp	r2, r3
   2238c:	ble	224b8 <RingIO_getEmptyAttrSize+0x1f4>
   22390:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22394:	cmp	r3, #34048	; 0x8500
   22398:	bgt	224b8 <RingIO_getEmptyAttrSize+0x1f4>
   2239c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   223a0:	ldr	r3, [r3, #60]	; 0x3c
   223a4:	cmp	r3, #0
   223a8:	bne	223b8 <RingIO_getEmptyAttrSize+0xf4>
   223ac:	ldr	r3, [pc, #288]	; 224d4 <RingIO_getEmptyAttrSize+0x210>
   223b0:	str	r3, [fp, #-32]	; 0xffffffe0
   223b4:	b	22468 <RingIO_getEmptyAttrSize+0x1a4>
   223b8:	ldr	r3, [fp, #-12]
   223bc:	ldr	r3, [r3, #4]
   223c0:	str	r3, [fp, #-8]
   223c4:	ldr	r3, [fp, #-16]
   223c8:	ldr	r2, [r3, #24]
   223cc:	ldr	r3, [fp, #-8]
   223d0:	lsl	r3, r3, #7
   223d4:	add	r3, r2, r3
   223d8:	ldrh	r3, [r3, #42]	; 0x2a
   223dc:	and	r2, r3, #255	; 0xff
   223e0:	ldr	r3, [fp, #-12]
   223e4:	ldr	r3, [r3]
   223e8:	lsl	r3, r3, #8
   223ec:	lsl	r3, r3, #16
   223f0:	lsr	r3, r3, #16
   223f4:	orr	r3, r2, r3
   223f8:	and	r3, r3, #255	; 0xff
   223fc:	cmp	r3, #32
   22400:	beq	2245c <RingIO_getEmptyAttrSize+0x198>
   22404:	ldr	r3, [fp, #-16]
   22408:	ldr	r2, [r3, #24]
   2240c:	ldr	r3, [fp, #-8]
   22410:	lsl	r3, r3, #7
   22414:	add	r3, r2, r3
   22418:	ldrh	r3, [r3, #42]	; 0x2a
   2241c:	mov	r2, r3
   22420:	and	r2, r2, #255	; 0xff
   22424:	ldr	r3, [fp, #-12]
   22428:	ldr	r3, [r3]
   2242c:	lsl	r3, r3, #16
   22430:	lsr	r3, r3, #16
   22434:	lsl	r3, r3, #8
   22438:	lsl	r3, r3, #16
   2243c:	lsr	r3, r3, #16
   22440:	orr	r3, r2, r3
   22444:	lsl	r3, r3, #16
   22448:	lsr	r3, r3, #16
   2244c:	mov	r0, r3
   22450:	ldr	r1, [fp, #-12]
   22454:	mov	r2, #384	; 0x180
   22458:	bl	17224 <POOL_invalidate>
   2245c:	ldr	r3, [fp, #-12]
   22460:	ldr	r3, [r3, #60]	; 0x3c
   22464:	str	r3, [fp, #-20]	; 0xffffffec
   22468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2246c:	bl	1def8 <_RingIO_releaseLock>
   22470:	mov	r3, r0
   22474:	str	r3, [fp, #-28]	; 0xffffffe4
   22478:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2247c:	ldr	r3, [pc, #76]	; 224d0 <RingIO_getEmptyAttrSize+0x20c>
   22480:	cmp	r2, r3
   22484:	ble	22494 <RingIO_getEmptyAttrSize+0x1d0>
   22488:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2248c:	cmp	r3, #34048	; 0x8500
   22490:	ble	224b8 <RingIO_getEmptyAttrSize+0x1f4>
   22494:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22498:	ldr	r3, [pc, #48]	; 224d0 <RingIO_getEmptyAttrSize+0x20c>
   2249c:	cmp	r2, r3
   224a0:	ble	224b8 <RingIO_getEmptyAttrSize+0x1f4>
   224a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   224a8:	cmp	r3, #34048	; 0x8500
   224ac:	bgt	224b8 <RingIO_getEmptyAttrSize+0x1f4>
   224b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   224b4:	str	r3, [fp, #-32]	; 0xffffffe0
   224b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   224bc:	mov	r0, r3
   224c0:	sub	sp, fp, #4
   224c4:	pop	{fp, pc}
   224c8:	.word	0x0002d7ac
   224cc:	.word	0x80008000
   224d0:	.word	0x00007fff
   224d4:	.word	0x80008055

000224d8 <_SYNC_USR_init>:
   224d8:	push	{fp, lr}
   224dc:	add	fp, sp, #4
   224e0:	sub	sp, sp, #24
   224e4:	mov	r3, #32768	; 0x8000
   224e8:	str	r3, [fp, #-20]	; 0xffffffec
   224ec:	mov	r3, #0
   224f0:	str	r3, [fp, #-8]
   224f4:	b	22524 <_SYNC_USR_init+0x4c>
   224f8:	ldr	r3, [fp, #-8]
   224fc:	ldr	r2, [pc, #344]	; 2265c <_SYNC_USR_init+0x184>
   22500:	mov	r1, #4
   22504:	lsl	r3, r3, #2
   22508:	add	r3, r2, r3
   2250c:	add	r2, r3, r1
   22510:	mov	r3, #0
   22514:	str	r3, [r2]
   22518:	ldr	r3, [fp, #-8]
   2251c:	add	r3, r3, #1
   22520:	str	r3, [fp, #-8]
   22524:	ldr	r3, [fp, #-8]
   22528:	cmp	r3, #199	; 0xc7
   2252c:	bls	224f8 <_SYNC_USR_init+0x20>
   22530:	ldr	r0, [pc, #296]	; 22660 <_SYNC_USR_init+0x188>
   22534:	mov	r1, #99	; 0x63
   22538:	bl	a050 <ftok@plt>
   2253c:	mov	r3, r0
   22540:	str	r3, [fp, #-16]
   22544:	ldr	r3, [fp, #-16]
   22548:	cmn	r3, #1
   2254c:	bne	2255c <_SYNC_USR_init+0x84>
   22550:	ldr	r3, [pc, #268]	; 22664 <_SYNC_USR_init+0x18c>
   22554:	str	r3, [fp, #-20]	; 0xffffffec
   22558:	b	2262c <_SYNC_USR_init+0x154>
   2255c:	ldr	r0, [fp, #-16]
   22560:	mov	r1, #200	; 0xc8
   22564:	ldr	r2, [pc, #252]	; 22668 <_SYNC_USR_init+0x190>
   22568:	bl	a0a4 <semget@plt>
   2256c:	mov	r3, r0
   22570:	str	r3, [fp, #-12]
   22574:	ldr	r3, [fp, #-12]
   22578:	cmn	r3, #1
   2257c:	bne	2258c <_SYNC_USR_init+0xb4>
   22580:	ldr	r3, [pc, #220]	; 22664 <_SYNC_USR_init+0x18c>
   22584:	str	r3, [fp, #-20]	; 0xffffffec
   22588:	b	2262c <_SYNC_USR_init+0x154>
   2258c:	mov	r3, #0
   22590:	strh	r3, [fp, #-24]	; 0xffffffe8
   22594:	mov	r3, #200	; 0xc8
   22598:	strh	r3, [fp, #-22]	; 0xffffffea
   2259c:	sub	r3, fp, #24
   225a0:	ldr	r0, [pc, #196]	; 2266c <_SYNC_USR_init+0x194>
   225a4:	mov	r1, r3
   225a8:	bl	11714 <_IDM_USR_create>
   225ac:	mov	r3, r0
   225b0:	str	r3, [fp, #-20]	; 0xffffffec
   225b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   225b8:	ldr	r3, [pc, #176]	; 22670 <_SYNC_USR_init+0x198>
   225bc:	cmp	r2, r3
   225c0:	ble	2262c <_SYNC_USR_init+0x154>
   225c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   225c8:	cmp	r3, #34048	; 0x8500
   225cc:	bgt	2262c <_SYNC_USR_init+0x154>
   225d0:	mov	r3, #0
   225d4:	str	r3, [fp, #-8]
   225d8:	b	22614 <_SYNC_USR_init+0x13c>
   225dc:	ldr	r3, [fp, #-8]
   225e0:	ldr	r0, [fp, #-12]
   225e4:	mov	r1, r3
   225e8:	mov	r2, #16
   225ec:	mov	r3, #1
   225f0:	bl	9d74 <semctl@plt>
   225f4:	mov	r3, r0
   225f8:	cmn	r3, #1
   225fc:	bne	22608 <_SYNC_USR_init+0x130>
   22600:	ldr	r3, [pc, #92]	; 22664 <_SYNC_USR_init+0x18c>
   22604:	str	r3, [fp, #-20]	; 0xffffffec
   22608:	ldr	r3, [fp, #-8]
   2260c:	add	r3, r3, #1
   22610:	str	r3, [fp, #-8]
   22614:	ldr	r3, [fp, #-8]
   22618:	cmp	r3, #199	; 0xc7
   2261c:	bls	225dc <_SYNC_USR_init+0x104>
   22620:	ldr	r3, [pc, #52]	; 2265c <_SYNC_USR_init+0x184>
   22624:	mov	r2, #1
   22628:	strh	r2, [r3]
   2262c:	ldr	r2, [fp, #-20]	; 0xffffffec
   22630:	ldr	r3, [pc, #56]	; 22670 <_SYNC_USR_init+0x198>
   22634:	cmp	r2, r3
   22638:	ble	22648 <_SYNC_USR_init+0x170>
   2263c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22640:	cmp	r3, #34048	; 0x8500
   22644:	ble	2264c <_SYNC_USR_init+0x174>
   22648:	bl	22674 <_SYNC_USR_exit>
   2264c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22650:	mov	r0, r3
   22654:	sub	sp, fp, #4
   22658:	pop	{fp, pc}
   2265c:	.word	0x0002d488
   22660:	.word	0x00023900
   22664:	.word	0x80008008
   22668:	.word	0x000003b6
   2266c:	.word	0x00010080
   22670:	.word	0x00007fff

00022674 <_SYNC_USR_exit>:
   22674:	push	{fp, lr}
   22678:	add	fp, sp, #4
   2267c:	sub	sp, sp, #16
   22680:	mov	r3, #32768	; 0x8000
   22684:	str	r3, [fp, #-20]	; 0xffffffec
   22688:	ldr	r0, [pc, #320]	; 227d0 <_SYNC_USR_exit+0x15c>
   2268c:	bl	11798 <_IDM_USR_delete>
   22690:	mov	r3, r0
   22694:	str	r3, [fp, #-20]	; 0xffffffec
   22698:	ldr	r0, [pc, #308]	; 227d4 <_SYNC_USR_exit+0x160>
   2269c:	mov	r1, #99	; 0x63
   226a0:	bl	a050 <ftok@plt>
   226a4:	mov	r3, r0
   226a8:	str	r3, [fp, #-16]
   226ac:	ldr	r3, [fp, #-16]
   226b0:	cmn	r3, #1
   226b4:	bne	226e0 <_SYNC_USR_exit+0x6c>
   226b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   226bc:	ldr	r3, [pc, #276]	; 227d8 <_SYNC_USR_exit+0x164>
   226c0:	cmp	r2, r3
   226c4:	ble	22770 <_SYNC_USR_exit+0xfc>
   226c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   226cc:	cmp	r3, #34048	; 0x8500
   226d0:	bgt	22770 <_SYNC_USR_exit+0xfc>
   226d4:	ldr	r3, [pc, #256]	; 227dc <_SYNC_USR_exit+0x168>
   226d8:	str	r3, [fp, #-20]	; 0xffffffec
   226dc:	b	22770 <_SYNC_USR_exit+0xfc>
   226e0:	ldr	r0, [fp, #-16]
   226e4:	mov	r1, #0
   226e8:	mov	r2, #0
   226ec:	bl	a0a4 <semget@plt>
   226f0:	mov	r3, r0
   226f4:	str	r3, [fp, #-12]
   226f8:	ldr	r3, [fp, #-12]
   226fc:	cmn	r3, #1
   22700:	bne	2272c <_SYNC_USR_exit+0xb8>
   22704:	ldr	r2, [fp, #-20]	; 0xffffffec
   22708:	ldr	r3, [pc, #200]	; 227d8 <_SYNC_USR_exit+0x164>
   2270c:	cmp	r2, r3
   22710:	ble	22770 <_SYNC_USR_exit+0xfc>
   22714:	ldr	r3, [fp, #-20]	; 0xffffffec
   22718:	cmp	r3, #34048	; 0x8500
   2271c:	bgt	22770 <_SYNC_USR_exit+0xfc>
   22720:	ldr	r3, [pc, #180]	; 227dc <_SYNC_USR_exit+0x168>
   22724:	str	r3, [fp, #-20]	; 0xffffffec
   22728:	b	22770 <_SYNC_USR_exit+0xfc>
   2272c:	ldr	r0, [fp, #-12]
   22730:	mov	r1, #0
   22734:	mov	r2, #0
   22738:	mov	r3, #0
   2273c:	bl	9d74 <semctl@plt>
   22740:	mov	r3, r0
   22744:	cmn	r3, #1
   22748:	bne	22770 <_SYNC_USR_exit+0xfc>
   2274c:	ldr	r2, [fp, #-20]	; 0xffffffec
   22750:	ldr	r3, [pc, #128]	; 227d8 <_SYNC_USR_exit+0x164>
   22754:	cmp	r2, r3
   22758:	ble	22770 <_SYNC_USR_exit+0xfc>
   2275c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22760:	cmp	r3, #34048	; 0x8500
   22764:	bgt	22770 <_SYNC_USR_exit+0xfc>
   22768:	ldr	r3, [pc, #108]	; 227dc <_SYNC_USR_exit+0x168>
   2276c:	str	r3, [fp, #-20]	; 0xffffffec
   22770:	mov	r3, #0
   22774:	str	r3, [fp, #-8]
   22778:	b	227a8 <_SYNC_USR_exit+0x134>
   2277c:	ldr	r3, [fp, #-8]
   22780:	ldr	r2, [pc, #88]	; 227e0 <_SYNC_USR_exit+0x16c>
   22784:	mov	r1, #4
   22788:	lsl	r3, r3, #2
   2278c:	add	r3, r2, r3
   22790:	add	r2, r3, r1
   22794:	mov	r3, #0
   22798:	str	r3, [r2]
   2279c:	ldr	r3, [fp, #-8]
   227a0:	add	r3, r3, #1
   227a4:	str	r3, [fp, #-8]
   227a8:	ldr	r3, [fp, #-8]
   227ac:	cmp	r3, #199	; 0xc7
   227b0:	bls	2277c <_SYNC_USR_exit+0x108>
   227b4:	ldr	r2, [pc, #36]	; 227e0 <_SYNC_USR_exit+0x16c>
   227b8:	mov	r3, #0
   227bc:	strh	r3, [r2]
   227c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   227c4:	mov	r0, r3
   227c8:	sub	sp, fp, #4
   227cc:	pop	{fp, pc}
   227d0:	.word	0x00010080
   227d4:	.word	0x00023900
   227d8:	.word	0x00007fff
   227dc:	.word	0x80008008
   227e0:	.word	0x0002d488

000227e4 <_SYNC_USR_createCS>:
   227e4:	push	{fp, lr}
   227e8:	add	fp, sp, #4
   227ec:	sub	sp, sp, #24
   227f0:	str	r0, [fp, #-24]	; 0xffffffe8
   227f4:	str	r1, [fp, #-28]	; 0xffffffe4
   227f8:	mov	r3, #32768	; 0x8000
   227fc:	str	r3, [fp, #-16]
   22800:	mvn	r3, #0
   22804:	str	r3, [fp, #-12]
   22808:	ldr	r3, [pc, #576]	; 22a50 <_SYNC_USR_createCS+0x26c>
   2280c:	ldrh	r3, [r3]
   22810:	cmp	r3, #0
   22814:	bne	22824 <_SYNC_USR_createCS+0x40>
   22818:	ldr	r3, [pc, #564]	; 22a54 <_SYNC_USR_createCS+0x270>
   2281c:	str	r3, [fp, #-16]
   22820:	b	22a40 <_SYNC_USR_createCS+0x25c>
   22824:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22828:	cmp	r3, #0
   2282c:	beq	2283c <_SYNC_USR_createCS+0x58>
   22830:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22834:	cmp	r3, #0
   22838:	bne	22848 <_SYNC_USR_createCS+0x64>
   2283c:	ldr	r3, [pc, #532]	; 22a58 <_SYNC_USR_createCS+0x274>
   22840:	str	r3, [fp, #-16]
   22844:	b	22a40 <_SYNC_USR_createCS+0x25c>
   22848:	sub	r3, fp, #20
   2284c:	ldr	r0, [pc, #520]	; 22a5c <_SYNC_USR_createCS+0x278>
   22850:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22854:	mov	r2, r3
   22858:	bl	117f4 <_IDM_USR_acquireId>
   2285c:	mov	r3, r0
   22860:	str	r3, [fp, #-16]
   22864:	ldr	r2, [fp, #-16]
   22868:	ldr	r3, [pc, #496]	; 22a60 <_SYNC_USR_createCS+0x27c>
   2286c:	cmp	r2, r3
   22870:	ble	22a40 <_SYNC_USR_createCS+0x25c>
   22874:	ldr	r3, [fp, #-16]
   22878:	cmp	r3, #34048	; 0x8500
   2287c:	bgt	22a40 <_SYNC_USR_createCS+0x25c>
   22880:	ldr	r0, [pc, #476]	; 22a64 <_SYNC_USR_createCS+0x280>
   22884:	mov	r1, #99	; 0x63
   22888:	bl	a050 <ftok@plt>
   2288c:	mov	r3, r0
   22890:	str	r3, [fp, #-8]
   22894:	ldr	r3, [fp, #-8]
   22898:	cmn	r3, #1
   2289c:	bne	228ac <_SYNC_USR_createCS+0xc8>
   228a0:	ldr	r3, [pc, #448]	; 22a68 <_SYNC_USR_createCS+0x284>
   228a4:	str	r3, [fp, #-16]
   228a8:	b	228f8 <_SYNC_USR_createCS+0x114>
   228ac:	ldr	r0, [fp, #-8]
   228b0:	mov	r1, #0
   228b4:	mov	r2, #0
   228b8:	bl	a0a4 <semget@plt>
   228bc:	mov	r3, r0
   228c0:	str	r3, [fp, #-12]
   228c4:	ldr	r3, [fp, #-12]
   228c8:	cmn	r3, #1
   228cc:	bne	228f8 <_SYNC_USR_createCS+0x114>
   228d0:	bl	9d38 <__errno_location@plt>
   228d4:	mov	r3, r0
   228d8:	ldr	r3, [r3]
   228dc:	cmp	r3, #2
   228e0:	bne	228f0 <_SYNC_USR_createCS+0x10c>
   228e4:	ldr	r3, [pc, #360]	; 22a54 <_SYNC_USR_createCS+0x270>
   228e8:	str	r3, [fp, #-16]
   228ec:	b	228f8 <_SYNC_USR_createCS+0x114>
   228f0:	ldr	r3, [pc, #368]	; 22a68 <_SYNC_USR_createCS+0x284>
   228f4:	str	r3, [fp, #-16]
   228f8:	ldr	r2, [fp, #-16]
   228fc:	ldr	r3, [pc, #348]	; 22a60 <_SYNC_USR_createCS+0x27c>
   22900:	cmp	r2, r3
   22904:	ble	22a14 <_SYNC_USR_createCS+0x230>
   22908:	ldr	r3, [fp, #-16]
   2290c:	cmp	r3, #34048	; 0x8500
   22910:	bgt	22a14 <_SYNC_USR_createCS+0x230>
   22914:	ldr	r3, [fp, #-20]	; 0xffffffec
   22918:	ldr	r2, [pc, #304]	; 22a50 <_SYNC_USR_createCS+0x26c>
   2291c:	mov	r1, #4
   22920:	lsl	r3, r3, #2
   22924:	add	r3, r2, r3
   22928:	add	r3, r3, r1
   2292c:	ldr	r3, [r3]
   22930:	cmp	r3, #0
   22934:	beq	2297c <_SYNC_USR_createCS+0x198>
   22938:	ldr	r3, [fp, #-20]	; 0xffffffec
   2293c:	ldr	r2, [pc, #268]	; 22a50 <_SYNC_USR_createCS+0x26c>
   22940:	mov	r1, #4
   22944:	lsl	r3, r3, #2
   22948:	add	r3, r2, r3
   2294c:	add	r3, r3, r1
   22950:	ldr	r2, [r3]
   22954:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22958:	str	r2, [r3]
   2295c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22960:	ldr	r2, [r3]
   22964:	ldr	r3, [r2, #8]
   22968:	add	r3, r3, #1
   2296c:	str	r3, [r2, #8]
   22970:	ldr	r3, [pc, #244]	; 22a6c <_SYNC_USR_createCS+0x288>
   22974:	str	r3, [fp, #-16]
   22978:	b	22a14 <_SYNC_USR_createCS+0x230>
   2297c:	mov	r0, #16
   22980:	bl	9e7c <malloc@plt>
   22984:	mov	r3, r0
   22988:	mov	r2, r3
   2298c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22990:	str	r2, [r3]
   22994:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22998:	ldr	r3, [r3]
   2299c:	cmp	r3, #0
   229a0:	bne	229b0 <_SYNC_USR_createCS+0x1cc>
   229a4:	ldr	r3, [pc, #196]	; 22a70 <_SYNC_USR_createCS+0x28c>
   229a8:	str	r3, [fp, #-16]
   229ac:	b	22a14 <_SYNC_USR_createCS+0x230>
   229b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   229b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   229b8:	ldr	ip, [r3]
   229bc:	ldr	r2, [pc, #140]	; 22a50 <_SYNC_USR_createCS+0x26c>
   229c0:	mov	r1, #4
   229c4:	lsl	r3, r0, #2
   229c8:	add	r3, r2, r3
   229cc:	add	r3, r3, r1
   229d0:	str	ip, [r3]
   229d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   229d8:	ldr	r2, [r3]
   229dc:	ldr	r3, [fp, #-12]
   229e0:	str	r3, [r2]
   229e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   229e8:	ldr	r2, [r3]
   229ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   229f0:	str	r3, [r2, #4]
   229f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   229f8:	ldr	r2, [r3]
   229fc:	mov	r3, #1
   22a00:	str	r3, [r2, #8]
   22a04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22a08:	ldr	r2, [r3]
   22a0c:	mov	r3, #0
   22a10:	strh	r3, [r2, #12]
   22a14:	ldr	r2, [fp, #-16]
   22a18:	ldr	r3, [pc, #64]	; 22a60 <_SYNC_USR_createCS+0x27c>
   22a1c:	cmp	r2, r3
   22a20:	ble	22a30 <_SYNC_USR_createCS+0x24c>
   22a24:	ldr	r3, [fp, #-16]
   22a28:	cmp	r3, #34048	; 0x8500
   22a2c:	ble	22a40 <_SYNC_USR_createCS+0x25c>
   22a30:	ldr	r3, [fp, #-20]	; 0xffffffec
   22a34:	ldr	r0, [pc, #32]	; 22a5c <_SYNC_USR_createCS+0x278>
   22a38:	mov	r1, r3
   22a3c:	bl	11890 <_IDM_USR_releaseId>
   22a40:	ldr	r3, [fp, #-16]
   22a44:	mov	r0, r3
   22a48:	sub	sp, fp, #4
   22a4c:	pop	{fp, pc}
   22a50:	.word	0x0002d488
   22a54:	.word	0x8000800f
   22a58:	.word	0x80008012
   22a5c:	.word	0x00010080
   22a60:	.word	0x00007fff
   22a64:	.word	0x00023900
   22a68:	.word	0x80008008
   22a6c:	.word	0x00008005
   22a70:	.word	0x8000800c

00022a74 <_SYNC_USR_deleteCS>:
   22a74:	push	{fp, lr}
   22a78:	add	fp, sp, #4
   22a7c:	sub	sp, sp, #16
   22a80:	str	r0, [fp, #-16]
   22a84:	mov	r3, #32768	; 0x8000
   22a88:	str	r3, [fp, #-8]
   22a8c:	ldr	r3, [fp, #-16]
   22a90:	cmp	r3, #0
   22a94:	bne	22aa4 <_SYNC_USR_deleteCS+0x30>
   22a98:	ldr	r3, [pc, #188]	; 22b5c <_SYNC_USR_deleteCS+0xe8>
   22a9c:	str	r3, [fp, #-8]
   22aa0:	b	22b4c <_SYNC_USR_deleteCS+0xd8>
   22aa4:	ldr	r3, [fp, #-16]
   22aa8:	ldr	r3, [r3]
   22aac:	cmp	r3, #0
   22ab0:	bne	22ac0 <_SYNC_USR_deleteCS+0x4c>
   22ab4:	ldr	r3, [pc, #160]	; 22b5c <_SYNC_USR_deleteCS+0xe8>
   22ab8:	str	r3, [fp, #-8]
   22abc:	b	22b4c <_SYNC_USR_deleteCS+0xd8>
   22ac0:	ldr	r3, [fp, #-16]
   22ac4:	ldr	r3, [r3]
   22ac8:	ldr	r3, [r3, #4]
   22acc:	ldr	r0, [pc, #140]	; 22b60 <_SYNC_USR_deleteCS+0xec>
   22ad0:	mov	r1, r3
   22ad4:	bl	11890 <_IDM_USR_releaseId>
   22ad8:	mov	r3, r0
   22adc:	str	r3, [fp, #-8]
   22ae0:	ldr	r3, [fp, #-16]
   22ae4:	ldr	r2, [r3]
   22ae8:	ldr	r3, [r2, #8]
   22aec:	sub	r3, r3, #1
   22af0:	str	r3, [r2, #8]
   22af4:	ldr	r3, [fp, #-16]
   22af8:	ldr	r3, [r3]
   22afc:	ldr	r3, [r3, #8]
   22b00:	cmp	r3, #0
   22b04:	bne	22b4c <_SYNC_USR_deleteCS+0xd8>
   22b08:	ldr	r3, [fp, #-16]
   22b0c:	ldr	r3, [r3]
   22b10:	ldr	r3, [r3, #4]
   22b14:	ldr	r2, [pc, #72]	; 22b64 <_SYNC_USR_deleteCS+0xf0>
   22b18:	mov	r1, #4
   22b1c:	lsl	r3, r3, #2
   22b20:	add	r3, r2, r3
   22b24:	add	r2, r3, r1
   22b28:	mov	r3, #0
   22b2c:	str	r3, [r2]
   22b30:	ldr	r3, [fp, #-16]
   22b34:	ldr	r3, [r3]
   22b38:	mov	r0, r3
   22b3c:	bl	9dc8 <free@plt>
   22b40:	ldr	r2, [fp, #-16]
   22b44:	mov	r3, #0
   22b48:	str	r3, [r2]
   22b4c:	ldr	r3, [fp, #-8]
   22b50:	mov	r0, r3
   22b54:	sub	sp, fp, #4
   22b58:	pop	{fp, pc}
   22b5c:	.word	0x8000800b
   22b60:	.word	0x00010080
   22b64:	.word	0x0002d488

00022b68 <_SYNC_USR_enterCS>:
   22b68:	push	{fp, lr}
   22b6c:	add	fp, sp, #4
   22b70:	sub	sp, sp, #24
   22b74:	str	r0, [fp, #-24]	; 0xffffffe8
   22b78:	mov	r3, #32768	; 0x8000
   22b7c:	str	r3, [fp, #-8]
   22b80:	ldr	r3, [pc, #224]	; 22c68 <_SYNC_USR_enterCS+0x100>
   22b84:	sub	r2, fp, #14
   22b88:	mov	ip, #6
   22b8c:	mov	r0, r2
   22b90:	mov	r1, r3
   22b94:	mov	r2, ip
   22b98:	bl	9dec <memcpy@plt>
   22b9c:	ldr	r3, [pc, #200]	; 22c6c <_SYNC_USR_enterCS+0x104>
   22ba0:	ldrh	r3, [r3]
   22ba4:	cmp	r3, #0
   22ba8:	bne	22c50 <_SYNC_USR_enterCS+0xe8>
   22bac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22bb0:	cmp	r3, #0
   22bb4:	bne	22bc4 <_SYNC_USR_enterCS+0x5c>
   22bb8:	ldr	r3, [pc, #176]	; 22c70 <_SYNC_USR_enterCS+0x108>
   22bbc:	str	r3, [fp, #-8]
   22bc0:	b	22c58 <_SYNC_USR_enterCS+0xf0>
   22bc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22bc8:	ldr	r3, [r3, #4]
   22bcc:	lsl	r3, r3, #16
   22bd0:	lsr	r3, r3, #16
   22bd4:	strh	r3, [fp, #-14]
   22bd8:	mov	r3, #32768	; 0x8000
   22bdc:	str	r3, [fp, #-8]
   22be0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22be4:	ldr	r3, [r3]
   22be8:	sub	r2, fp, #14
   22bec:	mov	r0, r3
   22bf0:	mov	r1, r2
   22bf4:	mov	r2, #1
   22bf8:	bl	9d08 <semop@plt>
   22bfc:	mov	r3, r0
   22c00:	cmn	r3, #1
   22c04:	bne	22c30 <_SYNC_USR_enterCS+0xc8>
   22c08:	bl	9d38 <__errno_location@plt>
   22c0c:	mov	r3, r0
   22c10:	ldr	r3, [r3]
   22c14:	cmp	r3, #4
   22c18:	bne	22c28 <_SYNC_USR_enterCS+0xc0>
   22c1c:	ldr	r3, [pc, #80]	; 22c74 <_SYNC_USR_enterCS+0x10c>
   22c20:	str	r3, [fp, #-8]
   22c24:	b	22c30 <_SYNC_USR_enterCS+0xc8>
   22c28:	ldr	r3, [pc, #72]	; 22c78 <_SYNC_USR_enterCS+0x110>
   22c2c:	str	r3, [fp, #-8]
   22c30:	ldr	r2, [fp, #-8]
   22c34:	ldr	r3, [pc, #56]	; 22c74 <_SYNC_USR_enterCS+0x10c>
   22c38:	cmp	r2, r3
   22c3c:	beq	22bd8 <_SYNC_USR_enterCS+0x70>
   22c40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22c44:	mov	r2, #1
   22c48:	strh	r2, [r3, #12]
   22c4c:	b	22c58 <_SYNC_USR_enterCS+0xf0>
   22c50:	mov	r3, #32768	; 0x8000
   22c54:	str	r3, [fp, #-8]
   22c58:	ldr	r3, [fp, #-8]
   22c5c:	mov	r0, r3
   22c60:	sub	sp, fp, #4
   22c64:	pop	{fp, pc}
   22c68:	.word	0x0002390e
   22c6c:	.word	0x0002d7cc
   22c70:	.word	0x8000800b
   22c74:	.word	0x8000801d
   22c78:	.word	0x80008008

00022c7c <_SYNC_USR_leaveCS>:
   22c7c:	push	{fp, lr}
   22c80:	add	fp, sp, #4
   22c84:	sub	sp, sp, #24
   22c88:	str	r0, [fp, #-24]	; 0xffffffe8
   22c8c:	mov	r3, #32768	; 0x8000
   22c90:	str	r3, [fp, #-12]
   22c94:	ldr	r3, [pc, #208]	; 22d6c <_SYNC_USR_leaveCS+0xf0>
   22c98:	sub	r2, fp, #18
   22c9c:	mov	ip, #6
   22ca0:	mov	r0, r2
   22ca4:	mov	r1, r3
   22ca8:	mov	r2, ip
   22cac:	bl	9dec <memcpy@plt>
   22cb0:	mov	r3, #1
   22cb4:	strh	r3, [fp, #-6]
   22cb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22cbc:	cmp	r3, #0
   22cc0:	bne	22cd0 <_SYNC_USR_leaveCS+0x54>
   22cc4:	ldr	r3, [pc, #164]	; 22d70 <_SYNC_USR_leaveCS+0xf4>
   22cc8:	str	r3, [fp, #-12]
   22ccc:	b	22d5c <_SYNC_USR_leaveCS+0xe0>
   22cd0:	ldr	r3, [pc, #156]	; 22d74 <_SYNC_USR_leaveCS+0xf8>
   22cd4:	ldrh	r3, [r3]
   22cd8:	lsl	r3, r3, #16
   22cdc:	asr	r3, r3, #16
   22ce0:	cmp	r3, #1
   22ce4:	bne	22d00 <_SYNC_USR_leaveCS+0x84>
   22ce8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22cec:	ldrh	r3, [r3, #12]
   22cf0:	cmp	r3, #0
   22cf4:	bne	22d00 <_SYNC_USR_leaveCS+0x84>
   22cf8:	mov	r3, #0
   22cfc:	strh	r3, [fp, #-6]
   22d00:	ldrsh	r3, [fp, #-6]
   22d04:	cmp	r3, #1
   22d08:	bne	22d5c <_SYNC_USR_leaveCS+0xe0>
   22d0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22d10:	ldr	r3, [r3, #4]
   22d14:	lsl	r3, r3, #16
   22d18:	lsr	r3, r3, #16
   22d1c:	strh	r3, [fp, #-18]	; 0xffffffee
   22d20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22d24:	ldr	r3, [r3]
   22d28:	sub	r2, fp, #18
   22d2c:	mov	r0, r3
   22d30:	mov	r1, r2
   22d34:	mov	r2, #1
   22d38:	bl	9d08 <semop@plt>
   22d3c:	mov	r3, r0
   22d40:	cmn	r3, #1
   22d44:	bne	22d50 <_SYNC_USR_leaveCS+0xd4>
   22d48:	ldr	r3, [pc, #40]	; 22d78 <_SYNC_USR_leaveCS+0xfc>
   22d4c:	str	r3, [fp, #-12]
   22d50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22d54:	mov	r2, #0
   22d58:	strh	r2, [r3, #12]
   22d5c:	ldr	r3, [fp, #-12]
   22d60:	mov	r0, r3
   22d64:	sub	sp, fp, #4
   22d68:	pop	{fp, pc}
   22d6c:	.word	0x00023914
   22d70:	.word	0x8000800b
   22d74:	.word	0x0002d7cc
   22d78:	.word	0x80008008

00022d7c <_SYNC_USR_sleep>:
   22d7c:	push	{fp, lr}
   22d80:	add	fp, sp, #4
   22d84:	sub	sp, sp, #16
   22d88:	str	r0, [fp, #-16]
   22d8c:	ldr	r3, [fp, #-16]
   22d90:	cmp	r3, #0
   22d94:	bne	22da0 <_SYNC_USR_sleep+0x24>
   22d98:	bl	9e64 <sched_yield@plt>
   22d9c:	b	22e2c <_SYNC_USR_sleep+0xb0>
   22da0:	ldr	r2, [fp, #-16]
   22da4:	ldr	r3, [pc, #144]	; 22e3c <_SYNC_USR_sleep+0xc0>
   22da8:	umull	r1, r3, r2, r3
   22dac:	lsr	r3, r3, #6
   22db0:	str	r3, [fp, #-12]
   22db4:	ldr	r2, [fp, #-16]
   22db8:	ldr	r3, [pc, #124]	; 22e3c <_SYNC_USR_sleep+0xc0>
   22dbc:	umull	r1, r3, r2, r3
   22dc0:	lsr	r3, r3, #6
   22dc4:	str	r3, [fp, #-20]	; 0xffffffec
   22dc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   22dcc:	lsl	r3, r3, #5
   22dd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   22dd4:	rsb	r3, r1, r3
   22dd8:	lsl	r3, r3, #2
   22ddc:	ldr	r1, [fp, #-20]	; 0xffffffec
   22de0:	add	r3, r3, r1
   22de4:	lsl	r3, r3, #3
   22de8:	rsb	r3, r3, r2
   22dec:	str	r3, [fp, #-20]	; 0xffffffec
   22df0:	ldr	r2, [fp, #-20]	; 0xffffffec
   22df4:	lsl	r2, r2, #5
   22df8:	ldr	r3, [fp, #-20]	; 0xffffffec
   22dfc:	rsb	r2, r3, r2
   22e00:	lsl	r3, r2, #6
   22e04:	rsb	r3, r2, r3
   22e08:	lsl	r3, r3, #3
   22e0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   22e10:	add	r3, r3, r1
   22e14:	lsl	r3, r3, #6
   22e18:	str	r3, [fp, #-8]
   22e1c:	sub	r3, fp, #12
   22e20:	mov	r0, r3
   22e24:	mov	r1, #0
   22e28:	bl	a0c8 <nanosleep@plt>
   22e2c:	mov	r3, #32768	; 0x8000
   22e30:	mov	r0, r3
   22e34:	sub	sp, fp, #4
   22e38:	pop	{fp, pc}
   22e3c:	.word	0x10624dd3

00022e40 <_SYNC_USR_stateObjInit>:
   22e40:	push	{fp}		; (str fp, [sp, #-4]!)
   22e44:	add	fp, sp, #0
   22e48:	sub	sp, sp, #12
   22e4c:	mov	r3, #32768	; 0x8000
   22e50:	str	r3, [fp, #-12]
   22e54:	mov	r3, #0
   22e58:	str	r3, [fp, #-8]
   22e5c:	b	22e8c <_SYNC_USR_stateObjInit+0x4c>
   22e60:	ldr	r3, [fp, #-8]
   22e64:	ldr	r2, [pc, #76]	; 22eb8 <_SYNC_USR_stateObjInit+0x78>
   22e68:	mov	r1, #4
   22e6c:	lsl	r3, r3, #2
   22e70:	add	r3, r2, r3
   22e74:	add	r2, r3, r1
   22e78:	mov	r3, #0
   22e7c:	str	r3, [r2]
   22e80:	ldr	r3, [fp, #-8]
   22e84:	add	r3, r3, #1
   22e88:	str	r3, [fp, #-8]
   22e8c:	ldr	r3, [fp, #-8]
   22e90:	cmp	r3, #199	; 0xc7
   22e94:	bls	22e60 <_SYNC_USR_stateObjInit+0x20>
   22e98:	ldr	r2, [pc, #24]	; 22eb8 <_SYNC_USR_stateObjInit+0x78>
   22e9c:	mov	r3, #1
   22ea0:	strh	r3, [r2]
   22ea4:	ldr	r3, [fp, #-12]
   22ea8:	mov	r0, r3
   22eac:	add	sp, fp, #0
   22eb0:	ldmfd	sp!, {fp}
   22eb4:	bx	lr
   22eb8:	.word	0x0002d488

00022ebc <_SYNC_USR_setPriority>:
   22ebc:	push	{fp}		; (str fp, [sp, #-4]!)
   22ec0:	add	fp, sp, #0
   22ec4:	sub	sp, sp, #20
   22ec8:	str	r0, [fp, #-16]
   22ecc:	ldr	r3, [pc, #20]	; 22ee8 <_SYNC_USR_setPriority+0x2c>
   22ed0:	str	r3, [fp, #-8]
   22ed4:	ldr	r3, [fp, #-8]
   22ed8:	mov	r0, r3
   22edc:	add	sp, fp, #0
   22ee0:	ldmfd	sp!, {fp}
   22ee4:	bx	lr
   22ee8:	.word	0x80008010

00022eec <_SYNC_USR_getPriority>:
   22eec:	push	{fp}		; (str fp, [sp, #-4]!)
   22ef0:	add	fp, sp, #0
   22ef4:	sub	sp, sp, #20
   22ef8:	str	r0, [fp, #-16]
   22efc:	ldr	r3, [pc, #20]	; 22f18 <_SYNC_USR_getPriority+0x2c>
   22f00:	str	r3, [fp, #-8]
   22f04:	ldr	r3, [fp, #-8]
   22f08:	mov	r0, r3
   22f0c:	add	sp, fp, #0
   22f10:	ldmfd	sp!, {fp}
   22f14:	bx	lr
   22f18:	.word	0x80008010

00022f1c <__libc_csu_fini>:
   22f1c:	bx	lr

00022f20 <__libc_csu_init>:
   22f20:	push	{r4, r5, r6, r7, r8, sl, lr}
   22f24:	sub	sp, sp, #4
   22f28:	mov	r8, r1
   22f2c:	mov	r7, r2
   22f30:	mov	sl, r0
   22f34:	bl	9c38 <_init>
   22f38:	ldr	r1, [pc, #72]	; 22f88 <__libc_csu_init+0x68>
   22f3c:	ldr	r3, [pc, #72]	; 22f8c <__libc_csu_init+0x6c>
   22f40:	ldr	r2, [pc, #72]	; 22f90 <__libc_csu_init+0x70>
   22f44:	rsb	r3, r1, r3
   22f48:	add	r2, pc, r2
   22f4c:	asrs	r5, r3, #2
   22f50:	add	r2, r2, r1
   22f54:	beq	22f80 <__libc_csu_init+0x60>
   22f58:	mov	r6, r2
   22f5c:	mov	r4, #0
   22f60:	mov	r0, sl
   22f64:	mov	r1, r8
   22f68:	mov	r2, r7
   22f6c:	mov	lr, pc
   22f70:	ldr	pc, [r6, r4, lsl #2]
   22f74:	add	r4, r4, #1
   22f78:	cmp	r4, r5
   22f7c:	bcc	22f60 <__libc_csu_init+0x40>
   22f80:	add	sp, sp, #4
   22f84:	pop	{r4, r5, r6, r7, r8, sl, pc}
   22f88:	.word	0xfffffe80
   22f8c:	.word	0xfffffe90
   22f90:	.word	0x00009bb8

00022f94 <atexit>:
   22f94:	ldr	r3, [pc, #24]	; 22fb4 <atexit+0x20>
   22f98:	ldr	r2, [pc, #24]	; 22fb8 <atexit+0x24>
   22f9c:	add	r3, pc, r3
   22fa0:	mov	r1, #0
   22fa4:	ldr	r2, [r3, r2]
   22fa8:	cmp	r2, #0
   22fac:	ldrne	r2, [r2]
   22fb0:	b	9ff0 <__cxa_atexit@plt>
   22fb4:	.word	0x00009b64
   22fb8:	.word	0x0000018c

Disassembly of section .fini:

00022fbc <_fini>:
   22fbc:	push	{lr}		; (str lr, [sp, #-4]!)
   22fc0:	sub	sp, sp, #4
   22fc4:	add	sp, sp, #4
   22fc8:	ldmfd	sp!, {pc}
